DC-Build-Header: libcrypto++ 5.6.1-6 / 2015-03-26 13:14:38 +0000
DC-Task: source:libcrypto++ version:5.6.1-6 architecture:any chroot:unstable esttime:2446 logfile:/tmp/libcrypto++_5.6.1-6_unstable_clang.log modes:binary-only:parallel:clang
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/clang libcrypto++_5.6.1-6'
sbuild (Debian sbuild) 0.63.2 (18 Aug 2012) on ip-172-31-1-5.us-west-2.compute.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ libcrypto++ 5.6.1-6 (amd64)                                26 Mar 2015 13:14 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: libcrypto++
Version: 5.6.1-6
Source Version: 5.6.1-6
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64

I: NOTICE: Log filtering will replace 'build/libcrypto++-YmgfFI/libcrypto++-5.6.1' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/libcrypto++-YmgfFI' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-0b1b2c52-f7ef-4da5-9ecc-9975cdbaa4e9' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Get:1 http://localhost:9999 unstable InRelease [257 kB]
Get:2 http://localhost:9999 unstable/main Sources/DiffIndex [7876 B]
Get:3 http://localhost:9999 unstable/main amd64 Packages/DiffIndex [7876 B]
Get:4 http://localhost:9999 unstable/main Translation-en/DiffIndex [7876 B]
Get:5 http://localhost:9999 unstable/main 2015-03-25-1448.37.pdiff [3021 B]
Get:6 http://localhost:9999 unstable/main 2015-03-25-2049.47.pdiff [5545 B]
Get:7 http://localhost:9999 unstable/main 2015-03-26-0248.39.pdiff [3389 B]
Get:8 http://localhost:9999 unstable/main 2015-03-26-0844.35.pdiff [2242 B]
Get:9 http://localhost:9999 unstable/main 2015-03-26-0844.35.pdiff [2242 B]
Get:10 http://localhost:9999 unstable/main amd64 2015-03-25-1448.37.pdiff [4095 B]
Get:11 http://localhost:9999 unstable/main amd64 2015-03-25-2049.47.pdiff [4595 B]
Get:12 http://localhost:9999 unstable/main amd64 2015-03-26-0248.39.pdiff [3173 B]
Get:13 http://localhost:9999 unstable/main amd64 2015-03-26-0844.35.pdiff [1129 B]
Get:14 http://localhost:9999 unstable/main 2015-03-25-2049.47.pdiff [2032 B]
Get:15 http://localhost:9999 unstable/main 2015-03-26-0844.35.pdiff [464 B]
Get:16 http://localhost:9999 unstable/main amd64 2015-03-26-0844.35.pdiff [1129 B]
Get:17 http://localhost:9999 unstable/main 2015-03-26-0844.35.pdiff [464 B]
Fetched 310 kB in 4s (62.2 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 999 kB of source archives.
Get:1 http://localhost:9999/debian/ unstable/main libcrypto++ 5.6.1-6 (dsc) [1390 B]
Get:2 http://localhost:9999/debian/ unstable/main libcrypto++ 5.6.1-6 (tar) [970 kB]
Get:3 http://localhost:9999/debian/ unstable/main libcrypto++ 5.6.1-6 (diff) [27.7 kB]
Fetched 999 kB in 1s (620 kB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/clang
──────────

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=3.6
+ echo 'Install of clang-3.6'
Install of clang-3.6
+ apt-get update
Hit http://localhost:9999 unstable InRelease
Get:1 http://localhost:9999 unstable/main Sources/DiffIndex [7876 B]
Get:2 http://localhost:9999 unstable/main amd64 Packages/DiffIndex [7876 B]
Get:3 http://localhost:9999 unstable/main Translation-en/DiffIndex [7876 B]
Fetched 23.6 kB in 1s (12.0 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-3.6
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libbsd0 libclang-common-3.6-dev libclang1-3.6 libedit2 libffi6 libllvm3.6
  libobjc-4.9-dev libobjc4
Suggested packages:
  gnustep gnustep-devel clang-3.6-doc
Recommended packages:
  llvm-3.6-dev python
The following NEW packages will be installed:
  clang-3.6 libbsd0 libclang-common-3.6-dev libclang1-3.6 libedit2 libffi6
  libllvm3.6 libobjc-4.9-dev libobjc4
0 upgraded, 9 newly installed, 0 to remove and 0 not upgraded.
Need to get 39.2 MB of archives.
After this operation, 153 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libbsd0 amd64 0.7.0-2 [67.9 kB]
Get:2 http://localhost:9999/debian/ unstable/main libedit2 amd64 3.1-20140620-2 [85.1 kB]
Get:3 http://localhost:9999/debian/ unstable/main libffi6 amd64 3.1-2+b2 [20.1 kB]
Get:4 http://localhost:9999/debian/ unstable/main libllvm3.6 amd64 1:3.6-2 [8137 kB]
Get:5 http://localhost:9999/debian/ unstable/main libobjc4 amd64 4.9.2-10 [112 kB]
Get:6 http://localhost:9999/debian/ unstable/main libobjc-4.9-dev amd64 4.9.2-10 [372 kB]
Get:7 http://localhost:9999/debian/ unstable/main libclang1-3.6 amd64 1:3.6-2 [3839 kB]
Get:8 http://localhost:9999/debian/ unstable/main libclang-common-3.6-dev amd64 1:3.6-2 [706 kB]
Get:9 http://localhost:9999/debian/ unstable/main clang-3.6 amd64 1:3.6-2 [25.8 MB]
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Fetched 39.2 MB in 1s (36.7 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 11980 files and directories currently installed.)
Preparing to unpack .../libbsd0_0.7.0-2_amd64.deb ...
Unpacking libbsd0:amd64 (0.7.0-2) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../libedit2_3.1-20140620-2_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20140620-2) ...
Selecting previously unselected package libffi6:amd64.
Preparing to unpack .../libffi6_3.1-2+b2_amd64.deb ...
Unpacking libffi6:amd64 (3.1-2+b2) ...
Selecting previously unselected package libllvm3.6:amd64.
Preparing to unpack .../libllvm3.6_1%3a3.6-2_amd64.deb ...
Unpacking libllvm3.6:amd64 (1:3.6-2) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../libobjc4_4.9.2-10_amd64.deb ...
Unpacking libobjc4:amd64 (4.9.2-10) ...
Selecting previously unselected package libobjc-4.9-dev:amd64.
Preparing to unpack .../libobjc-4.9-dev_4.9.2-10_amd64.deb ...
Unpacking libobjc-4.9-dev:amd64 (4.9.2-10) ...
Selecting previously unselected package libclang1-3.6:amd64.
Preparing to unpack .../libclang1-3.6_1%3a3.6-2_amd64.deb ...
Unpacking libclang1-3.6:amd64 (1:3.6-2) ...
Selecting previously unselected package libclang-common-3.6-dev.
Preparing to unpack .../libclang-common-3.6-dev_1%3a3.6-2_amd64.deb ...
Unpacking libclang-common-3.6-dev (1:3.6-2) ...
Selecting previously unselected package clang-3.6.
Preparing to unpack .../clang-3.6_1%3a3.6-2_amd64.deb ...
Unpacking clang-3.6 (1:3.6-2) ...
Setting up libbsd0:amd64 (0.7.0-2) ...
Setting up libedit2:amd64 (3.1-20140620-2) ...
Setting up libffi6:amd64 (3.1-2+b2) ...
Setting up libllvm3.6:amd64 (1:3.6-2) ...
Setting up libobjc4:amd64 (4.9.2-10) ...
Setting up libobjc-4.9-dev:amd64 (4.9.2-10) ...
Setting up libclang1-3.6:amd64 (1:3.6-2) ...
Setting up libclang-common-3.6-dev (1:3.6-2) ...
Setting up clang-3.6 (1:3.6-2) ...
Processing triggers for libc-bin (2.19-17) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5'
+ cd /usr/bin
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-3.6 g++-4.6
+ ln -s clang-3.6 gcc-4.6
+ ln -s clang-3.6 cpp-4.6
+ ln -s clang-3.6 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-3.6 g++-4.7
+ ln -s clang-3.6 gcc-4.7
+ ln -s clang-3.6 cpp-4.7
+ ln -s clang-3.6 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-3.6 g++-4.8
+ ln -s clang-3.6 gcc-4.8
+ ln -s clang-3.6 cpp-4.8
+ ln -s clang-3.6 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-3.6 g++-4.9
+ ln -s clang-3.6 gcc-4.9
+ ln -s clang-3.6 cpp-4.9
+ ln -s clang-3.6 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
+ for VERSION in '$VERSIONS'
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-3.6 g++-5
+ ln -s clang-3.6 gcc-5
+ ln -s clang-3.6 cpp-5
+ ln -s clang-3.6 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method
+ cd -
/build/libcrypto++-YmgfFI
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/build/libcrypto++-YmgfFI/resolver-Gvc9eI/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/816 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12200 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, init, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit-utils, tar, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.9.1), g++ (>= 4:4.9.1), make, dpkg-dev (>= 1.17.11), debhelper (>= 8), dpkg (>= 1.15.5.6), automake, autoconf, libtool
Filtered Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, init, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit-utils, tar, util-linux, libc6-dev, gcc (>= 4:4.9.1), g++ (>= 4:4.9.1), make, dpkg-dev (>= 1.17.11), debhelper (>= 8), dpkg (>= 1.15.5.6), automake, autoconf, libtool
dpkg-deb: building package `sbuild-build-depends-libcrypto++-dummy' in `/build/libcrypto++-YmgfFI/resolver-wFGaDq/apt_archive/sbuild-build-depends-libcrypto++-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install libcrypto++ build dependencies (apt-based resolver)                  │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  autoconf automake autotools-dev bsdmainutils debhelper file gettext
  gettext-base groff-base intltool-debian libasprintf0c2 libcroco3
  libglib2.0-0 libicu52 libmagic1 libpipeline1 libsigsegv2 libtool
  libunistring0 libxml2 m4 man-db po-debconf
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican wordlist whois
  vacation dh-make gettext-doc groff libtool-doc automaken gfortran
  fortran95-compiler gcj-jdk www-browser libmail-box-perl
Recommended packages:
  curl wget lynx-cur autopoint libasprintf-dev libgettextpo-dev
  libglib2.0-data shared-mime-info xdg-user-dirs libltdl-dev xml-core
  libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autotools-dev bsdmainutils debhelper file gettext
  gettext-base groff-base intltool-debian libasprintf0c2 libcroco3
  libglib2.0-0 libicu52 libmagic1 libpipeline1 libsigsegv2 libtool
  libunistring0 libxml2 m4 man-db po-debconf
  sbuild-build-depends-libcrypto++-dummy
0 upgraded, 24 newly installed, 0 to remove and 0 not upgraded.
Need to get 17.3 MB/17.3 MB of archives.
After this operation, 60.8 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libpipeline1 amd64 1.4.0-1 [27.9 kB]
Get:2 http://localhost:9999/debian/ unstable/main groff-base amd64 1.22.3-1 [1205 kB]
Get:3 http://localhost:9999/debian/ unstable/main bsdmainutils amd64 9.0.6 [183 kB]
Get:4 http://localhost:9999/debian/ unstable/main man-db amd64 2.7.0.2-5 [1000 kB]
Get:5 http://localhost:9999/debian/ unstable/main libasprintf0c2 amd64 0.19.3-2 [31.3 kB]
Get:6 http://localhost:9999/debian/ unstable/main libmagic1 amd64 1:5.22+15-2 [249 kB]
Get:7 http://localhost:9999/debian/ unstable/main libicu52 amd64 52.1-8 [6780 kB]
Get:8 http://localhost:9999/debian/ unstable/main libxml2 amd64 2.9.2+dfsg1-3 [934 kB]
Get:9 http://localhost:9999/debian/ unstable/main libglib2.0-0 amd64 2.42.1-1 [2401 kB]
Get:10 http://localhost:9999/debian/ unstable/main libcroco3 amd64 0.6.8-3+b1 [135 kB]
Get:11 http://localhost:9999/debian/ unstable/main libsigsegv2 amd64 2.10-4+b1 [29.2 kB]
Get:12 http://localhost:9999/debian/ unstable/main libunistring0 amd64 0.9.3-5.2+b1 [288 kB]
Get:13 http://localhost:9999/debian/ unstable/main file amd64 1:5.22+15-2 [60.1 kB]
Get:14 http://localhost:9999/debian/ unstable/main gettext-base amd64 0.19.3-2 [121 kB]
Get:15 http://localhost:9999/debian/ unstable/main m4 amd64 1.4.17-4 [254 kB]
Get:16 http://localhost:9999/debian/ unstable/main autoconf all 2.69-8 [340 kB]
Get:17 http://localhost:9999/debian/ unstable/main autotools-dev all 20140911.1 [70.5 kB]
Get:18 http://localhost:9999/debian/ unstable/main automake all 1:1.14.1-4 [725 kB]
Get:19 http://localhost:9999/debian/ unstable/main gettext amd64 0.19.3-2 [1240 kB]
Get:20 http://localhost:9999/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:21 http://localhost:9999/debian/ unstable/main po-debconf all 1.0.16+nmu3 [220 kB]
Get:22 http://localhost:9999/debian/ unstable/main debhelper all 9.20150101 [813 kB]
Get:23 http://localhost:9999/debian/ unstable/main libtool all 2.4.2-1.11 [190 kB]
Preconfiguring packages ...
Fetched 17.3 MB in 0s (27.6 MB/s)
Selecting previously unselected package libpipeline1:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12200 files and directories currently installed.)
Preparing to unpack .../libpipeline1_1.4.0-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.4.0-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../groff-base_1.22.3-1_amd64.deb ...
Unpacking groff-base (1.22.3-1) ...
Selecting previously unselected package bsdmainutils.
Preparing to unpack .../bsdmainutils_9.0.6_amd64.deb ...
Unpacking bsdmainutils (9.0.6) ...
Selecting previously unselected package man-db.
Preparing to unpack .../man-db_2.7.0.2-5_amd64.deb ...
Unpacking man-db (2.7.0.2-5) ...
Selecting previously unselected package libasprintf0c2:amd64.
Preparing to unpack .../libasprintf0c2_0.19.3-2_amd64.deb ...
Unpacking libasprintf0c2:amd64 (0.19.3-2) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../libmagic1_1%3a5.22+15-2_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.22+15-2) ...
Selecting previously unselected package libicu52:amd64.
Preparing to unpack .../libicu52_52.1-8_amd64.deb ...
Unpacking libicu52:amd64 (52.1-8) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../libxml2_2.9.2+dfsg1-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.2+dfsg1-3) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../libglib2.0-0_2.42.1-1_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.42.1-1) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../libcroco3_0.6.8-3+b1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.8-3+b1) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../libsigsegv2_2.10-4+b1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.10-4+b1) ...
Selecting previously unselected package libunistring0:amd64.
Preparing to unpack .../libunistring0_0.9.3-5.2+b1_amd64.deb ...
Unpacking libunistring0:amd64 (0.9.3-5.2+b1) ...
Selecting previously unselected package file.
Preparing to unpack .../file_1%3a5.22+15-2_amd64.deb ...
Unpacking file (1:5.22+15-2) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../gettext-base_0.19.3-2_amd64.deb ...
Unpacking gettext-base (0.19.3-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../archives/m4_1.4.17-4_amd64.deb ...
Unpacking m4 (1.4.17-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../autoconf_2.69-8_all.deb ...
Unpacking autoconf (2.69-8) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../autotools-dev_20140911.1_all.deb ...
Unpacking autotools-dev (20140911.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../automake_1%3a1.14.1-4_all.deb ...
Unpacking automake (1:1.14.1-4) ...
Selecting previously unselected package gettext.
Preparing to unpack .../gettext_0.19.3-2_amd64.deb ...
Unpacking gettext (0.19.3-2) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../intltool-debian_0.35.0+20060710.1_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.1) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../po-debconf_1.0.16+nmu3_all.deb ...
Unpacking po-debconf (1.0.16+nmu3) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../debhelper_9.20150101_all.deb ...
Unpacking debhelper (9.20150101) ...
Selecting previously unselected package libtool.
Preparing to unpack .../libtool_2.4.2-1.11_all.deb ...
Unpacking libtool (2.4.2-1.11) ...
Selecting previously unselected package sbuild-build-depends-libcrypto++-dummy.
Preparing to unpack .../sbuild-build-depends-libcrypto++-dummy.deb ...
Unpacking sbuild-build-depends-libcrypto++-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.4.0-1) ...
Setting up groff-base (1.22.3-1) ...
Setting up bsdmainutils (9.0.6) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up man-db (2.7.0.2-5) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libasprintf0c2:amd64 (0.19.3-2) ...
Setting up libmagic1:amd64 (1:5.22+15-2) ...
Setting up libicu52:amd64 (52.1-8) ...
Setting up libxml2:amd64 (2.9.2+dfsg1-3) ...
Setting up libglib2.0-0:amd64 (2.42.1-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.8-3+b1) ...
Setting up libsigsegv2:amd64 (2.10-4+b1) ...
Setting up libunistring0:amd64 (0.9.3-5.2+b1) ...
Setting up file (1:5.22+15-2) ...
Setting up gettext-base (0.19.3-2) ...
Setting up m4 (1.4.17-4) ...
Setting up autoconf (2.69-8) ...
Setting up autotools-dev (20140911.1) ...
Setting up automake (1:1.14.1-4) ...
update-alternatives: using /usr/bin/automake-1.14 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.19.3-2) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu3) ...
Setting up debhelper (9.20150101) ...
Setting up libtool (2.4.2-1.11) ...
Setting up sbuild-build-depends-libcrypto++-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.19-17) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 3.2.0-4-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.25-5 dpkg-dev_1.17.24 g++-4.9_4.9.2-10 gcc-4.9_4.9.2-10 libc6-dev_2.19-17 libstdc++-4.9-dev_4.9.2-10 libstdc++6_4.9.2-10 linux-libc-dev_3.16.7-ckt7-1
Package versions: acl_2.2.52-2 adduser_3.113+nmu3 apt_1.0.9.7 apt-utils_1.0.9.7 autoconf_2.69-8 automake_1:1.14.1-4 autotools-dev_20140911.1 base-files_8 base-passwd_3.5.37 bash_4.3-12 binutils_2.25-5 bsdmainutils_9.0.6 bsdutils_1:2.25.2-5 build-essential_11.7 bzip2_1.0.6-7+b2 clang-3.6_1:3.6-2 coreutils_8.23-4 cpp_4:4.9.2-2 cpp-4.9_4.9.2-10 dash_0.5.7-4+b1 debconf_1.5.56 debfoster_2.7-2 debhelper_9.20150101 debian-archive-keyring_2014.3 debianutils_4.4+b1 diffutils_1:3.3-1+b1 dmsetup_2:1.02.90-2.1 dpkg_1.17.24 dpkg-dev_1.17.24 e2fslibs_1.42.12-1.1 e2fsprogs_1.42.12-1.1 fakeroot_1.20.2-1 file_1:5.22+15-2 findutils_4.4.2-9+b1 g++_4:4.9.2-2 g++-4.9_4.9.2-10 gcc_4:4.9.2-2 gcc-4.9_4.9.2-10 gcc-4.9-base_4.9.2-10 gettext_0.19.3-2 gettext-base_0.19.3-2 gnupg_1.4.18-7 gpgv_1.4.18-7 grep_2.20-4.1 groff-base_1.22.3-1 gzip_1.6-4 hostname_3.15 init_1.22 initscripts_2.88dsf-58 insserv_1.14.0-5 intltool-debian_0.35.0+20060710.1 less_458-3 libacl1_2.2.52-2 libapt-inst1.5_1.0.9.7 libapt-pkg4.12_1.0.9.7 libasan1_4.9.2-10 libasprintf0c2_0.19.3-2 libatomic1_4.9.2-10 libattr1_1:2.4.47-2 libaudit-common_1:2.4-1 libaudit1_1:2.4-1+b1 libblkid1_2.25.2-5 libbsd0_0.7.0-2 libbz2-1.0_1.0.6-7+b2 libc-bin_2.19-17 libc-dev-bin_2.19-17 libc6_2.19-17 libc6-dev_2.19-17 libcap2_1:2.24-7 libcap2-bin_1:2.24-7 libcilkrts5_4.9.2-10 libclang-common-3.6-dev_1:3.6-2 libclang1-3.6_1:3.6-2 libcloog-isl4_0.18.2-1+b2 libcomerr2_1.42.12-1.1 libcroco3_0.6.8-3+b1 libcryptsetup4_2:1.6.6-5 libdb5.3_5.3.28-9 libdebconfclient0_0.192 libdevmapper1.02.1_2:1.02.90-2.1 libdpkg-perl_1.17.24 libedit2_3.1-20140620-2 libfakeroot_1.20.2-1 libffi6_3.1-2+b2 libgc1c2_1:7.2d-6.4 libgcc-4.9-dev_4.9.2-10 libgcc1_1:4.9.2-10 libgcrypt20_1.6.3-2 libgdbm3_1.8.3-13.1 libglib2.0-0_2.42.1-1 libgmp10_2:6.0.0+dfsg-6 libgomp1_4.9.2-10 libgpg-error0_1.17-3 libicu52_52.1-8 libisl10_0.12.2-2 libitm1_4.9.2-10 libkmod2_20-1 libllvm3.6_1:3.6-2 liblsan0_4.9.2-10 liblzma5_5.1.1alpha+20120614-2+b3 libmagic1_1:5.22+15-2 libmount1_2.25.2-5 libmpc3_1.0.3-1 libmpfr4_3.1.2-3 libncurses5_5.9+20140913-1+b1 libncursesw5_5.9+20140913-1+b1 libobjc-4.9-dev_4.9.2-10 libobjc4_4.9.2-10 libpam-modules_1.1.8-3.1 libpam-modules-bin_1.1.8-3.1 libpam-runtime_1.1.8-3.1 libpam0g_1.1.8-3.1 libpcre3_2:8.35-3.3 libpipeline1_1.4.0-1 libprocps3_2:3.3.9-9 libquadmath0_4.9.2-10 libreadline6_6.3-8+b3 libselinux1_2.3-2 libsemanage-common_2.3-1 libsemanage1_2.3-1+b1 libsepol1_2.3-2 libsigsegv2_2.10-4+b1 libslang2_2.3.0-2 libsmartcols1_2.25.2-5 libss2_1.42.12-1.1 libstdc++-4.9-dev_4.9.2-10 libstdc++6_4.9.2-10 libsystemd0_215-12 libtimedate-perl_2.3000-2 libtinfo5_5.9+20140913-1+b1 libtool_2.4.2-1.11 libtsan0_4.9.2-10 libubsan0_4.9.2-10 libudev1_215-12 libunistring0_0.9.3-5.2+b1 libusb-0.1-4_2:0.1.12-25 libustr-1.0-1_1.0.4-3+b2 libuuid1_2.25.2-5 libxml2_2.9.2+dfsg1-3 linux-libc-dev_3.16.7-ckt7-1 login_1:4.2-3 lsb-base_4.1+Debian13+nmu1 m4_1.4.17-4 make_4.0-8.1 man-db_2.7.0.2-5 mawk_1.3.3-17 mount_2.25.2-5 multiarch-support_2.19-17 ncurses-base_5.9+20140913-1 ncurses-bin_5.9+20140913-1+b1 nvi_1.81.6-11+b1 passwd_1:4.2-3 patch_2.7.5-1 perl_5.20.2-2 perl-base_5.20.2-2 perl-modules_5.20.2-2 po-debconf_1.0.16+nmu3 procps_2:3.3.9-9 readline-common_6.3-8 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-libcrypto++-dummy_0.invalid.0 sed_4.2.2-4+b1 sensible-utils_0.0.9 startpar_0.59-3 sudo_1.8.12-1 systemd_215-12 systemd-sysv_215-12 sysv-rc_2.88dsf-58 sysvinit-utils_2.88dsf-58 tar_1.27.1-2+b1 tzdata_2015b-1 udev_215-12 util-linux_2.25.2-5 xz-utils_5.1.1alpha+20120614-2+b3 zlib1g_1:1.2.8.dfsg-2+b1

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Sat Apr 14 19:40:25 2012 UTC using DSA key ID A51A4FDD
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./libcrypto++_5.6.1-6.dsc
dpkg-source: info: extracting libcrypto++ in libcrypto++-5.6.1
dpkg-source: info: unpacking libcrypto++_5.6.1.orig.tar.gz
dpkg-source: info: unpacking libcrypto++_5.6.1-6.debian.tar.gz
dpkg-source: info: applying strict-gcc43-include.diff
dpkg-source: info: applying doxygen-setup.diff
dpkg-source: info: applying doxygen-main-link.diff
dpkg-source: info: applying cryptest-data-files-location.diff
dpkg-source: info: applying debian-config.diff
dpkg-source: info: applying panama-armel.diff
dpkg-source: info: applying salsa.patch
dpkg-source: info: applying gcc-4.7-ftbfs.diff

Check disc space
────────────────

Sufficient free space for build

User Environment
────────────────

DEB_BUILD_OPTIONS=parallel=10
HOME=/sbuild-nonexistent
LOGNAME=user
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user
SCHROOT_SESSION_ID=unstable-amd64-sbuild-0b1b2c52-f7ef-4da5-9ecc-9975cdbaa4e9
SCHROOT_UID=1001
SCHROOT_USER=user
SHELL=/bin/sh
USER=user

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package libcrypto++
dpkg-buildpackage: source version 5.6.1-6
dpkg-buildpackage: source distribution unstable
dpkg-buildpackage: source changed by Laszlo Boszormenyi (GCS) <gcs@debian.hu>
 dpkg-source --before-build libcrypto++-5.6.1
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
rm -f a.out aclocal.m4 config.log config.sub config.guess	\
configure cryptopp_config.h.in depcomp install-sh ltmain.sh	\
Makefile.in missing libcrypto++.pc configure.ac Makefile.am config.h.in libcrypto++.pc.in		\
m4/libtool.m4 m4/ltoptions.m4 m4/ltsugar.m4 m4/ltversion.m4	\
m4/lt~obsolete.m4	
dh_testdir
dh_testroot
rm -f /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/*-stamp
rm -rf /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/doc /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/.deps /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/.libs /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/*.cache
rm -f /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/Makefile* /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/stamp-* /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/libtool
rm -f /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/*.in /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/config.sub /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/config.guess /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/config.status
rm -f /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/configure.ac /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/cryptopp_config.h
rm -f /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/*.lo /build/libcrypto++-YmgfFI/libcrypto++-5.6.1/*.o cryptest* *.la
dh_clean
 debian/rules build-arch
dh_testdir
ln -sf /usr/share/misc/config.sub /usr/share/misc/config.guess .
rm -f config.cache GNUmakefile
cp -f debian/configure.ac debian/Makefile.am debian/config.h.in debian/libcrypto++.pc.in .
autoreconf --force --install
aclocal: warning: couldn't open directory 'm4': No such file or directory
libtoolize: putting auxiliary files in `.'.
libtoolize: copying file `./ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4'.
libtoolize: copying file `m4/libtool.m4'
libtoolize: copying file `m4/ltoptions.m4'
libtoolize: copying file `m4/ltsugar.m4'
libtoolize: copying file `m4/ltversion.m4'
libtoolize: copying file `m4/lt~obsolete.m4'
libtoolize: Consider adding `-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
configure.ac:14: installing './compile'
configure.ac:9: installing './install-sh'
configure.ac:9: installing './missing'
Makefile.am: installing './depcomp'
/bin/sh ./configure --config-cache --prefix=/usr --sysconfdir=/etc --mandir=/usr/share/man --infodir=/usr/share/info --libexecdir=/usr/lib --build x86_64-linux-gnu CFLAGS="-g -fno-strict-aliasing -pipe -DNDEBUG -O2" CXXFLAGS="-g -fno-strict-aliasing -pipe -DNDEBUG -O2"
configure: creating cache config.cache
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether to enable maintainer-specific portions of Makefiles... no
checking for g++... g++
checking whether the C++ compiler works... yes
checking for C++ compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking for style of include used by make... GNU
checking dependency style of g++... gcc3
checking for gcc... gcc
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... gcc3
checking whether ln -s works... yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking how to print strings... printf
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for fgrep... /bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 1572864
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for mt... no
checking if : is a manifest tool... no
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... (cached) GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for ANSI C header files... (cached) yes
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking netdb.h usability... yes
checking netdb.h presence... yes
checking for netdb.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking stddef.h usability... yes
checking stddef.h presence... yes
checking for stddef.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking for unistd.h... (cached) yes
checking for stdbool.h that conforms to C99... yes
checking for _Bool... yes
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for size_t... yes
checking whether time.h and sys/time.h may both be included... yes
checking for ptrdiff_t... yes
checking whether byte ordering is bigendian... no
checking whether gcc needs -traditional... no
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking for working memcmp... yes
checking sys/select.h usability... yes
checking sys/select.h presence... yes
checking for sys/select.h... yes
checking for sys/socket.h... (cached) yes
checking types of arguments for select... int,fd_set *,struct timeval *
checking return type of signal handlers... void
checking for gethostbyname... yes
checking for gettimeofday... yes
checking for memmove... yes
checking for memset... yes
checking for pow... no
checking for select... yes
checking for socket... yes
configure: updating cache config.cache
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating libcrypto++.pc
config.status: creating cryptopp_config.h
config.status: creating config.h
config.status: config.h is unchanged
config.status: executing depfiles commands
config.status: executing libtool commands
touch config-stamp
/usr/bin/make
make[1]: Entering directory '/build/libcrypto++-YmgfFI/libcrypto++-5.6.1'
/usr/bin/make  all-am
make[2]: Entering directory '/build/libcrypto++-YmgfFI/libcrypto++-5.6.1'
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT 3way.lo -MD -MP -MF .deps/3way.Tpo -c -o 3way.lo 3way.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT 3way.lo -MD -MP -MF .deps/3way.Tpo -c 3way.cpp  -fPIC -DPIC -o .libs/3way.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT 3way.lo -MD -MP -MF .deps/3way.Tpo -c 3way.cpp -o 3way.o >/dev/null 2>&1
mv -f .deps/3way.Tpo .deps/3way.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT adler32.lo -MD -MP -MF .deps/adler32.Tpo -c -o adler32.lo adler32.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT adler32.lo -MD -MP -MF .deps/adler32.Tpo -c adler32.cpp  -fPIC -DPIC -o .libs/adler32.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT adler32.lo -MD -MP -MF .deps/adler32.Tpo -c adler32.cpp -o adler32.o >/dev/null 2>&1
mv -f .deps/adler32.Tpo .deps/adler32.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algebra.lo -MD -MP -MF .deps/algebra.Tpo -c -o algebra.lo algebra.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algebra.lo -MD -MP -MF .deps/algebra.Tpo -c algebra.cpp  -fPIC -DPIC -o .libs/algebra.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algebra.lo -MD -MP -MF .deps/algebra.Tpo -c algebra.cpp -o algebra.o >/dev/null 2>&1
mv -f .deps/algebra.Tpo .deps/algebra.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algparam.lo -MD -MP -MF .deps/algparam.Tpo -c -o algparam.lo algparam.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algparam.lo -MD -MP -MF .deps/algparam.Tpo -c algparam.cpp  -fPIC -DPIC -o .libs/algparam.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT algparam.lo -MD -MP -MF .deps/algparam.Tpo -c algparam.cpp -o algparam.o >/dev/null 2>&1
mv -f .deps/algparam.Tpo .deps/algparam.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT arc4.lo -MD -MP -MF .deps/arc4.Tpo -c -o arc4.lo arc4.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT arc4.lo -MD -MP -MF .deps/arc4.Tpo -c arc4.cpp  -fPIC -DPIC -o .libs/arc4.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT arc4.lo -MD -MP -MF .deps/arc4.Tpo -c arc4.cpp -o arc4.o >/dev/null 2>&1
mv -f .deps/arc4.Tpo .deps/arc4.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT asn.lo -MD -MP -MF .deps/asn.Tpo -c -o asn.lo asn.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT asn.lo -MD -MP -MF .deps/asn.Tpo -c asn.cpp  -fPIC -DPIC -o .libs/asn.o
asn.cpp:312:11: warning: enumeration values 'TAIL' and 'ALL_DONE' not handled in switch [-Wswitch]
                switch (m_state)
                        ^
1 warning generated.
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT asn.lo -MD -MP -MF .deps/asn.Tpo -c asn.cpp -o asn.o >/dev/null 2>&1
mv -f .deps/asn.Tpo .deps/asn.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT authenc.lo -MD -MP -MF .deps/authenc.Tpo -c -o authenc.lo authenc.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT authenc.lo -MD -MP -MF .deps/authenc.Tpo -c authenc.cpp  -fPIC -DPIC -o .libs/authenc.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT authenc.lo -MD -MP -MF .deps/authenc.Tpo -c authenc.cpp -o authenc.o >/dev/null 2>&1
mv -f .deps/authenc.Tpo .deps/authenc.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base32.lo -MD -MP -MF .deps/base32.Tpo -c -o base32.lo base32.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base32.lo -MD -MP -MF .deps/base32.Tpo -c base32.cpp  -fPIC -DPIC -o .libs/base32.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base32.lo -MD -MP -MF .deps/base32.Tpo -c base32.cpp -o base32.o >/dev/null 2>&1
mv -f .deps/base32.Tpo .deps/base32.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base64.lo -MD -MP -MF .deps/base64.Tpo -c -o base64.lo base64.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base64.lo -MD -MP -MF .deps/base64.Tpo -c base64.cpp  -fPIC -DPIC -o .libs/base64.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT base64.lo -MD -MP -MF .deps/base64.Tpo -c base64.cpp -o base64.o >/dev/null 2>&1
mv -f .deps/base64.Tpo .deps/base64.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT basecode.lo -MD -MP -MF .deps/basecode.Tpo -c -o basecode.lo basecode.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT basecode.lo -MD -MP -MF .deps/basecode.Tpo -c basecode.cpp  -fPIC -DPIC -o .libs/basecode.o
basecode.cpp:81:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT(1, m_outBuf, m_outputBlockSize, 0);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:100:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(2, m_outBuf, m_bytePos, messageEnd);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:157:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT(1, m_outBuf, m_outputBlockSize, 0);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:163:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(2, m_outBuf, m_bytePos, messageEnd);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:214:5: warning: expression result unused [-Wunused-value]
                                FILTER_OUTPUT(1, m_separator, m_separator.size(), 0);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:226:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(3, begin, length, 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
basecode.cpp:230:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(4, m_terminator, m_terminator.size(), messageEnd);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
7 warnings generated.
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT basecode.lo -MD -MP -MF .deps/basecode.Tpo -c basecode.cpp -o basecode.o >/dev/null 2>&1
mv -f .deps/basecode.Tpo .deps/basecode.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT bfinit.lo -MD -MP -MF .deps/bfinit.Tpo -c -o bfinit.lo bfinit.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT bfinit.lo -MD -MP -MF .deps/bfinit.Tpo -c bfinit.cpp  -fPIC -DPIC -o .libs/bfinit.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT bfinit.lo -MD -MP -MF .deps/bfinit.Tpo -c bfinit.cpp -o bfinit.o >/dev/null 2>&1
mv -f .deps/bfinit.Tpo .deps/bfinit.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blowfish.lo -MD -MP -MF .deps/blowfish.Tpo -c -o blowfish.lo blowfish.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blowfish.lo -MD -MP -MF .deps/blowfish.Tpo -c blowfish.cpp  -fPIC -DPIC -o .libs/blowfish.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blowfish.lo -MD -MP -MF .deps/blowfish.Tpo -c blowfish.cpp -o blowfish.o >/dev/null 2>&1
mv -f .deps/blowfish.Tpo .deps/blowfish.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blumshub.lo -MD -MP -MF .deps/blumshub.Tpo -c -o blumshub.lo blumshub.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blumshub.lo -MD -MP -MF .deps/blumshub.Tpo -c blumshub.cpp  -fPIC -DPIC -o .libs/blumshub.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT blumshub.lo -MD -MP -MF .deps/blumshub.Tpo -c blumshub.cpp -o blumshub.o >/dev/null 2>&1
mv -f .deps/blumshub.Tpo .deps/blumshub.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT camellia.lo -MD -MP -MF .deps/camellia.Tpo -c -o camellia.lo camellia.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT camellia.lo -MD -MP -MF .deps/camellia.Tpo -c camellia.cpp  -fPIC -DPIC -o .libs/camellia.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT camellia.lo -MD -MP -MF .deps/camellia.Tpo -c camellia.cpp -o camellia.o >/dev/null 2>&1
mv -f .deps/camellia.Tpo .deps/camellia.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cast.lo -MD -MP -MF .deps/cast.Tpo -c -o cast.lo cast.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cast.lo -MD -MP -MF .deps/cast.Tpo -c cast.cpp  -fPIC -DPIC -o .libs/cast.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cast.lo -MD -MP -MF .deps/cast.Tpo -c cast.cpp -o cast.o >/dev/null 2>&1
mv -f .deps/cast.Tpo .deps/cast.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT casts.lo -MD -MP -MF .deps/casts.Tpo -c -o casts.lo casts.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT casts.lo -MD -MP -MF .deps/casts.Tpo -c casts.cpp  -fPIC -DPIC -o .libs/casts.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT casts.lo -MD -MP -MF .deps/casts.Tpo -c casts.cpp -o casts.o >/dev/null 2>&1
mv -f .deps/casts.Tpo .deps/casts.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cbcmac.lo -MD -MP -MF .deps/cbcmac.Tpo -c -o cbcmac.lo cbcmac.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cbcmac.lo -MD -MP -MF .deps/cbcmac.Tpo -c cbcmac.cpp  -fPIC -DPIC -o .libs/cbcmac.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cbcmac.lo -MD -MP -MF .deps/cbcmac.Tpo -c cbcmac.cpp -o cbcmac.o >/dev/null 2>&1
mv -f .deps/cbcmac.Tpo .deps/cbcmac.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ccm.lo -MD -MP -MF .deps/ccm.Tpo -c -o ccm.lo ccm.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ccm.lo -MD -MP -MF .deps/ccm.Tpo -c ccm.cpp  -fPIC -DPIC -o .libs/ccm.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ccm.lo -MD -MP -MF .deps/ccm.Tpo -c ccm.cpp -o ccm.o >/dev/null 2>&1
mv -f .deps/ccm.Tpo .deps/ccm.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT channels.lo -MD -MP -MF .deps/channels.Tpo -c -o channels.lo channels.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT channels.lo -MD -MP -MF .deps/channels.Tpo -c channels.cpp  -fPIC -DPIC -o .libs/channels.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT channels.lo -MD -MP -MF .deps/channels.Tpo -c channels.cpp -o channels.o >/dev/null 2>&1
mv -f .deps/channels.Tpo .deps/channels.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cmac.lo -MD -MP -MF .deps/cmac.Tpo -c -o cmac.lo cmac.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cmac.lo -MD -MP -MF .deps/cmac.Tpo -c cmac.cpp  -fPIC -DPIC -o .libs/cmac.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cmac.lo -MD -MP -MF .deps/cmac.Tpo -c cmac.cpp -o cmac.o >/dev/null 2>&1
mv -f .deps/cmac.Tpo .deps/cmac.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cpu.lo -MD -MP -MF .deps/cpu.Tpo -c -o cpu.lo cpu.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cpu.lo -MD -MP -MF .deps/cpu.Tpo -c cpu.cpp  -fPIC -DPIC -o .libs/cpu.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cpu.lo -MD -MP -MF .deps/cpu.Tpo -c cpu.cpp -o cpu.o >/dev/null 2>&1
mv -f .deps/cpu.Tpo .deps/cpu.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT crc.lo -MD -MP -MF .deps/crc.Tpo -c -o crc.lo crc.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT crc.lo -MD -MP -MF .deps/crc.Tpo -c crc.cpp  -fPIC -DPIC -o .libs/crc.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT crc.lo -MD -MP -MF .deps/crc.Tpo -c crc.cpp -o crc.o >/dev/null 2>&1
mv -f .deps/crc.Tpo .deps/crc.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cryptlib.lo -MD -MP -MF .deps/cryptlib.Tpo -c -o cryptlib.lo cryptlib.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cryptlib.lo -MD -MP -MF .deps/cryptlib.Tpo -c cryptlib.cpp  -fPIC -DPIC -o .libs/cryptlib.o
cryptlib.cpp:691:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT(1, m_ciphertext, m_ciphertext.size(), messageEnd);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
cryptlib.cpp:738:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT(1, m_plaintext, m_result.messageLength, messageEnd);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
2 warnings generated.
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT cryptlib.lo -MD -MP -MF .deps/cryptlib.Tpo -c cryptlib.cpp -o cryptlib.o >/dev/null 2>&1
mv -f .deps/cryptlib.Tpo .deps/cryptlib.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT default.lo -MD -MP -MF .deps/default.Tpo -c -o default.lo default.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT default.lo -MD -MP -MF .deps/default.Tpo -c default.cpp  -fPIC -DPIC -o .libs/default.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT default.lo -MD -MP -MF .deps/default.Tpo -c default.cpp -o default.o >/dev/null 2>&1
mv -f .deps/default.Tpo .deps/default.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT des.lo -MD -MP -MF .deps/des.Tpo -c -o des.lo des.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT des.lo -MD -MP -MF .deps/des.Tpo -c des.cpp  -fPIC -DPIC -o .libs/des.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT des.lo -MD -MP -MF .deps/des.Tpo -c des.cpp -o des.o >/dev/null 2>&1
mv -f .deps/des.Tpo .deps/des.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dessp.lo -MD -MP -MF .deps/dessp.Tpo -c -o dessp.lo dessp.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dessp.lo -MD -MP -MF .deps/dessp.Tpo -c dessp.cpp  -fPIC -DPIC -o .libs/dessp.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dessp.lo -MD -MP -MF .deps/dessp.Tpo -c dessp.cpp -o dessp.o >/dev/null 2>&1
mv -f .deps/dessp.Tpo .deps/dessp.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh2.lo -MD -MP -MF .deps/dh2.Tpo -c -o dh2.lo dh2.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh2.lo -MD -MP -MF .deps/dh2.Tpo -c dh2.cpp  -fPIC -DPIC -o .libs/dh2.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh2.lo -MD -MP -MF .deps/dh2.Tpo -c dh2.cpp -o dh2.o >/dev/null 2>&1
mv -f .deps/dh2.Tpo .deps/dh2.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh.lo -MD -MP -MF .deps/dh.Tpo -c -o dh.lo dh.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh.lo -MD -MP -MF .deps/dh.Tpo -c dh.cpp  -fPIC -DPIC -o .libs/dh.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dh.lo -MD -MP -MF .deps/dh.Tpo -c dh.cpp -o dh.o >/dev/null 2>&1
mv -f .deps/dh.Tpo .deps/dh.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dll.lo -MD -MP -MF .deps/dll.Tpo -c -o dll.lo dll.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dll.lo -MD -MP -MF .deps/dll.Tpo -c dll.cpp  -fPIC -DPIC -o .libs/dll.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dll.lo -MD -MP -MF .deps/dll.Tpo -c dll.cpp -o dll.o >/dev/null 2>&1
mv -f .deps/dll.Tpo .deps/dll.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dsa.lo -MD -MP -MF .deps/dsa.Tpo -c -o dsa.lo dsa.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dsa.lo -MD -MP -MF .deps/dsa.Tpo -c dsa.cpp  -fPIC -DPIC -o .libs/dsa.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT dsa.lo -MD -MP -MF .deps/dsa.Tpo -c dsa.cpp -o dsa.o >/dev/null 2>&1
mv -f .deps/dsa.Tpo .deps/dsa.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eax.lo -MD -MP -MF .deps/eax.Tpo -c -o eax.lo eax.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eax.lo -MD -MP -MF .deps/eax.Tpo -c eax.cpp  -fPIC -DPIC -o .libs/eax.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eax.lo -MD -MP -MF .deps/eax.Tpo -c eax.cpp -o eax.o >/dev/null 2>&1
mv -f .deps/eax.Tpo .deps/eax.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ec2n.lo -MD -MP -MF .deps/ec2n.Tpo -c -o ec2n.lo ec2n.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ec2n.lo -MD -MP -MF .deps/ec2n.Tpo -c ec2n.cpp  -fPIC -DPIC -o .libs/ec2n.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ec2n.lo -MD -MP -MF .deps/ec2n.Tpo -c ec2n.cpp -o ec2n.o >/dev/null 2>&1
mv -f .deps/ec2n.Tpo .deps/ec2n.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eccrypto.lo -MD -MP -MF .deps/eccrypto.Tpo -c -o eccrypto.lo eccrypto.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eccrypto.lo -MD -MP -MF .deps/eccrypto.Tpo -c eccrypto.cpp  -fPIC -DPIC -o .libs/eccrypto.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eccrypto.lo -MD -MP -MF .deps/eccrypto.Tpo -c eccrypto.cpp -o eccrypto.o >/dev/null 2>&1
mv -f .deps/eccrypto.Tpo .deps/eccrypto.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ecp.lo -MD -MP -MF .deps/ecp.Tpo -c -o ecp.lo ecp.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ecp.lo -MD -MP -MF .deps/ecp.Tpo -c ecp.cpp  -fPIC -DPIC -o .libs/ecp.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT ecp.lo -MD -MP -MF .deps/ecp.Tpo -c ecp.cpp -o ecp.o >/dev/null 2>&1
mv -f .deps/ecp.Tpo .deps/ecp.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT elgamal.lo -MD -MP -MF .deps/elgamal.Tpo -c -o elgamal.lo elgamal.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT elgamal.lo -MD -MP -MF .deps/elgamal.Tpo -c elgamal.cpp  -fPIC -DPIC -o .libs/elgamal.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT elgamal.lo -MD -MP -MF .deps/elgamal.Tpo -c elgamal.cpp -o elgamal.o >/dev/null 2>&1
mv -f .deps/elgamal.Tpo .deps/elgamal.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT emsa2.lo -MD -MP -MF .deps/emsa2.Tpo -c -o emsa2.lo emsa2.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT emsa2.lo -MD -MP -MF .deps/emsa2.Tpo -c emsa2.cpp  -fPIC -DPIC -o .libs/emsa2.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT emsa2.lo -MD -MP -MF .deps/emsa2.Tpo -c emsa2.cpp -o emsa2.o >/dev/null 2>&1
mv -f .deps/emsa2.Tpo .deps/emsa2.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eprecomp.lo -MD -MP -MF .deps/eprecomp.Tpo -c -o eprecomp.lo eprecomp.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eprecomp.lo -MD -MP -MF .deps/eprecomp.Tpo -c eprecomp.cpp  -fPIC -DPIC -o .libs/eprecomp.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT eprecomp.lo -MD -MP -MF .deps/eprecomp.Tpo -c eprecomp.cpp -o eprecomp.o >/dev/null 2>&1
mv -f .deps/eprecomp.Tpo .deps/eprecomp.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT esign.lo -MD -MP -MF .deps/esign.Tpo -c -o esign.lo esign.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT esign.lo -MD -MP -MF .deps/esign.Tpo -c esign.cpp  -fPIC -DPIC -o .libs/esign.o
esign.cpp:161:24: warning: operator '>>' has lower precedence than '+'; '+' will be evaluated first [-Wshift-op-parentheses]
        while ((w1 >> 2*GetK()+1).IsPositive());
                   ~~ ~~~~~~~~^~
esign.cpp:161:24: note: place parentheses around the '+' expression to silence this warning
        while ((w1 >> 2*GetK()+1).IsPositive());
                              ^
                      (         )
1 warning generated.
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT esign.lo -MD -MP -MF .deps/esign.Tpo -c esign.cpp -o esign.o >/dev/null 2>&1
mv -f .deps/esign.Tpo .deps/esign.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT files.lo -MD -MP -MF .deps/files.Tpo -c -o files.lo files.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT files.lo -MD -MP -MF .deps/files.Tpo -c files.cpp  -fPIC -DPIC -o .libs/files.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT files.lo -MD -MP -MF .deps/files.Tpo -c files.cpp -o files.o >/dev/null 2>&1
mv -f .deps/files.Tpo .deps/files.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT filters.lo -MD -MP -MF .deps/filters.Tpo -c -o filters.lo filters.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT filters.lo -MD -MP -MF .deps/filters.Tpo -c filters.cpp  -fPIC -DPIC -o .libs/filters.o
filters.cpp:173:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT_MAYBE_MODIFIABLE(1, m_begin, t = (size_t)SaturatingSubtract(m_rangesToSkip.front().position, m_currentMessageBytes), false, modifiable);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:65:40: note: expanded from macro 'FILTER_OUTPUT_MAYBE_MODIFIABLE'
        FILTER_OUTPUT2_MAYBE_MODIFIABLE(site, 0, output, length, messageEnd, modifiable)
                                              ^
./fltrimpl.h:59:2: note: expanded from macro 'FILTER_OUTPUT2_MAYBE_MODIFIABLE'
        statement;      \
        ^
filters.cpp:197:4: warning: expression result unused [-Wunused-value]
                        FILTER_OUTPUT_MAYBE_MODIFIABLE(2, m_begin, m_length, messageEnd, modifiable);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:65:40: note: expanded from macro 'FILTER_OUTPUT_MAYBE_MODIFIABLE'
        FILTER_OUTPUT2_MAYBE_MODIFIABLE(site, 0, output, length, messageEnd, modifiable)
                                              ^
./fltrimpl.h:59:2: note: expanded from macro 'FILTER_OUTPUT2_MAYBE_MODIFIABLE'
        statement;      \
        ^
filters.cpp:301:18: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
        if (m_firstSize < 0 || m_blockSize < 1 || m_lastSize < 0)
            ~~~~~~~~~~~ ^ ~
filters.cpp:301:55: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
        if (m_firstSize < 0 || m_blockSize < 1 || m_lastSize < 0)
                                                  ~~~~~~~~~~ ^ ~
filters.cpp:310:18: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
        if (m_firstSize < 0 || m_blockSize < 1 || m_lastSize < 0)
            ~~~~~~~~~~~ ^ ~
filters.cpp:310:55: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
        if (m_firstSize < 0 || m_blockSize < 1 || m_lastSize < 0)
                                                  ~~~~~~~~~~ ^ ~
filters.cpp:734:21: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT3(1, 0, inString, length, 0, m_messagePutChannel);
                                  ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
filters.cpp:743:21: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT3(2, 0, m_space, m_digestSize, messageEnd, m_hashPutChannel);
                                  ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
filters.cpp:929:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(1, inString, length, 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
filters.cpp:934:3: warning: expression result unused [-Wunused-value]
                FILTER_OUTPUT(2, m_buf, m_buf.size(), messageEnd);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./fltrimpl.h:40:23: note: expanded from macro 'FILTER_OUTPUT'
        FILTER_OUTPUT2(site, 0, output, length, messageEnd)
                             ^
./fltrimpl.h:37:23: note: expanded from macro 'FILTER_OUTPUT2'
        FILTER_OUTPUT3(site, statement, output, length, messageEnd, DEFAULT_CHANNEL)
                             ^
./fltrimpl.h:31:2: note: expanded from macro 'FILTER_OUTPUT3'
        statement;      \
        ^
10 warnings generated.
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT filters.lo -MD -MP -MF .deps/filters.Tpo -c filters.cpp -o filters.o >/dev/null 2>&1
mv -f .deps/filters.Tpo .deps/filters.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fips140.lo -MD -MP -MF .deps/fips140.Tpo -c -o fips140.lo fips140.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fips140.lo -MD -MP -MF .deps/fips140.Tpo -c fips140.cpp  -fPIC -DPIC -o .libs/fips140.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fips140.lo -MD -MP -MF .deps/fips140.Tpo -c fips140.cpp -o fips140.o >/dev/null 2>&1
mv -f .deps/fips140.Tpo .deps/fips140.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fipstest.lo -MD -MP -MF .deps/fipstest.Tpo -c -o fipstest.lo fipstest.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fipstest.lo -MD -MP -MF .deps/fipstest.Tpo -c fipstest.cpp  -fPIC -DPIC -o .libs/fipstest.o
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT fipstest.lo -MD -MP -MF .deps/fipstest.Tpo -c fipstest.cpp -o fipstest.o >/dev/null 2>&1
mv -f .deps/fipstest.Tpo .deps/fipstest.Plo
/bin/bash ./libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I.     -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT gcm.lo -MD -MP -MF .deps/gcm.Tpo -c -o gcm.lo gcm.cpp
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -g -fno-strict-aliasing -pipe -DNDEBUG -O2 -MT gcm.lo -MD -MP -MF .deps/gcm.Tpo -c gcm.cpp  -fPIC -DPIC -o .libs/gcm.o
gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^
gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^
gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^
gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2476: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2549: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

gcm.cpp:607:3: error: invalid operand for instruction
                ASL(0)
                ^
./cpu.h:224:17: note: expanded from macro 'ASL'
        #define ASL(x) GNU_ASL(x)
                       ^
./cpu.h:218:26: note: expanded from macro 'GNU_ASL'
        #define GNU_ASL(x) "\n" #x ":"
                                ^
<scratch space>:237:2: note: expanded from here
"0"
 ^
<inline asm>:2:2351: note: instantiated into assembly here
0:movdqu xmm4, [rcx];pxor xmm0, xmm4;movd ebx, xmm0;mov eax, 0xf0f0f0f0;and eax, ebx;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;movdqa xmm5, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm4, [rsi + 32 + 1024 + rdi];shr eax, 16;movzx edi, ah;movdqa xmm3, [rsi + 32 + 1024 + rdi];movzx edi, al;movdqa xmm2, [rsi + 32 + 1024 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (1-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (1-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (1-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 1*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 1*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 1*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (2-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (2-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (2-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 2*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 2*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 2*256 + rdi];psrldq xmm0, 4;movd eax, xmm0;and eax, 0xf0f0f0f0;movzx edi, bh;pxor xmm5, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + (3-1)*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + (3-1)*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + (3-1)*256 + rdi];movd ebx, xmm0;shl ebx, 4;and ebx, 0xf0f0f0f0;movzx edi, ah;pxor xmm5, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm4, [rsi + 32 + 1024 + 3*256 + rdi];shr eax, 16;movzx edi, ah;pxor xmm3, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, al;pxor xmm2, [rsi + 32 + 1024 + 3*256 + rdi];movzx edi, bh;pxor xmm5, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm4, [rsi + 32 + 3*256 + rdi];shr ebx, 16;movzx edi, bh;pxor xmm3, [rsi + 32 + 3*256 + rdi];movzx edi, bl;pxor xmm2, [rsi + 32 + 3*256 + rdi];movdqa xmm0, xmm3;pslldq xmm3, 1;pxor xmm2, xmm3;movdqa xmm1, xmm2;pslldq xmm2, 1;pxor xmm5, xmm2;psrldq xmm0, 15;movd rdi, xmm0;movzx eax, WORD PTR [r10 + rdi*2];shl eax, 8;movdqa xmm0, xmm5;pslldq xmm5, 1;pxor xmm4, xmm5;psrldq xmm1, 15;movd rdi, xmm1;xor ax, WORD PTR [r10 + rdi*2];shl eax, 8;psrldq xmm0, 15;movd rdi, xmm0;xor ax, WORD PTR [r10 + rdi*2];movd xmm0, eax;pxor xmm0, xmm4;add rcx, 16;sub rdx, 1;jnz 0b;movdqa [rsi], xmm0;.att_syntax prefix;

fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
make[2]: *** [gcm.lo] Error 1
Makefile:1010: recipe for target 'gcm.lo' failed
make[2]: Leaving directory '/build/libcrypto++-YmgfFI/libcrypto++-5.6.1'
make[1]: *** [all] Error 2
Makefile:688: recipe for target 'all' failed
make[1]: Leaving directory '/build/libcrypto++-YmgfFI/libcrypto++-5.6.1'
make: *** [build-stamp] Error 2
debian/rules:86: recipe for target 'build-stamp' failed
dpkg-buildpackage: error: debian/rules build-arch gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20150326-1317

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /build/libcrypto++-YmgfFI
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Build Architecture: amd64
Build-Space: 58972
Build-Time: 123
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 9
Job: libcrypto++_5.6.1-6
Machine Architecture: amd64
Package: libcrypto++
Package-Time: 158
Source-Version: 5.6.1-6
Space: 58972
Status: attempted
Version: 5.6.1-6
────────────────────────────────────────────────────────────────────────────────
Finished at 20150326-1317
Build needed 00:02:38, 58972k disc space
DC-Status: Failed 159.072687379s
DC-Time-Estimation: 159.072687379 versus expected 2446 (r/m: 14.376618326515485 ; m: 159.072687379)
