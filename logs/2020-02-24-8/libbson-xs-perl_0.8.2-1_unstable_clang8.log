DC-Build-Header: libbson-xs-perl 0.8.2-1 / 2020-02-25 05:25:50 +0000
DC-Task: type:rebuild-binarch-only source:libbson-xs-perl version:0.8.2-1 chroot:unstable esttime:67 logfile:/tmp/libbson-xs-perl_0.8.2-1_unstable_clang8.log modes:clang8:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang8 libbson-xs-perl_0.8.2-1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-12-41.eu-central-1.compute.internal

+==============================================================================+
| libbson-xs-perl 0.8.2-1 (amd64)              Tue, 25 Feb 2020 05:25:51 +0000 |
+==============================================================================+

Package: libbson-xs-perl
Version: 0.8.2-1
Source Version: 0.8.2-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-a35e5832-5097-40d3-ae58-926189b2c851' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang8
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=8
+ echo 'Install of clang-8'
Install of clang-8
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6572 kB in 2s (3849 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-8 libomp-8-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-8-dev libclang1-8 libedit2 libgc1c2 libgcc-8-dev libllvm8
  libmpx2 libobjc-8-dev libobjc4 libomp5-8 libstdc++-8-dev
Suggested packages:
  clang-8-doc libomp-8-doc libstdc++-8-doc
Recommended packages:
  llvm-8-dev python3
The following NEW packages will be installed:
  clang-8 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-8-dev libclang1-8 libedit2 libgc1c2 libgcc-8-dev libllvm8
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-8-dev libomp5-8
  libstdc++-8-dev
0 upgraded, 20 newly installed, 0 to remove and 2 not upgraded.
Need to get 39.9 MB of archives.
After this operation, 223 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libllvm8 amd64 1:8.0.1-7 [13.8 MB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-8-dev amd64 1:8.0.1-7 [2989 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libclang1-8 amd64 1:8.0.1-7 [6244 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 clang-8 amd64 1:8.0.1-7 [8010 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libomp5-8 amd64 1:8.0.1-7 [331 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp-8-dev amd64 1:8.0.1-7 [62.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 39.9 MB in 0s (93.8 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libllvm8:amd64.
Preparing to unpack .../02-libllvm8_1%3a8.0.1-7_amd64.deb ...
Unpacking libllvm8:amd64 (1:8.0.1-7) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../03-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../04-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../05-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../06-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../07-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../08-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../09-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../10-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../11-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../12-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../13-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-8-dev.
Preparing to unpack .../14-libclang-common-8-dev_1%3a8.0.1-7_amd64.deb ...
Unpacking libclang-common-8-dev (1:8.0.1-7) ...
Selecting previously unselected package libclang1-8.
Preparing to unpack .../15-libclang1-8_1%3a8.0.1-7_amd64.deb ...
Unpacking libclang1-8 (1:8.0.1-7) ...
Selecting previously unselected package clang-8.
Preparing to unpack .../16-clang-8_1%3a8.0.1-7_amd64.deb ...
Unpacking clang-8 (1:8.0.1-7) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../17-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-8:amd64.
Preparing to unpack .../18-libomp5-8_1%3a8.0.1-7_amd64.deb ...
Unpacking libomp5-8:amd64 (1:8.0.1-7) ...
Selecting previously unselected package libomp-8-dev.
Preparing to unpack .../19-libomp-8-dev_1%3a8.0.1-7_amd64.deb ...
Unpacking libomp-8-dev (1:8.0.1-7) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-8:amd64 (1:8.0.1-7) ...
Setting up libomp-8-dev (1:8.0.1-7) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libllvm8:amd64 (1:8.0.1-7) ...
Setting up libclang1-8 (1:8.0.1-7) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-8-dev (1:8.0.1-7) ...
Setting up clang-8 (1:8.0.1-7) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-8 g++-4.6
+ ln -s clang-8 gcc-4.6
+ ln -s clang-8 cpp-4.6
+ ln -s clang-8 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-8 g++-4.7
+ ln -s clang-8 gcc-4.7
+ ln -s clang-8 cpp-4.7
+ ln -s clang-8 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-8 g++-4.8
+ ln -s clang-8 gcc-4.8
+ ln -s clang-8 cpp-4.8
+ ln -s clang-8 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-8 g++-4.9
+ ln -s clang-8 gcc-4.9
+ ln -s clang-8 cpp-4.9
+ ln -s clang-8 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-8 g++-5
+ ln -s clang-8 gcc-5
+ ln -s clang-8 cpp-5
+ ln -s clang-8 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-8 g++-6
+ ln -s clang-8 gcc-6
+ ln -s clang-8 cpp-6
+ ln -s clang-8 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-8 g++-7
+ ln -s clang-8 gcc-7
+ ln -s clang-8 cpp-7
+ ln -s clang-8 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-8 g++-8
+ ln -s clang-8 gcc-8
+ ln -s clang-8 cpp-8
+ ln -s clang-8 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-8 g++-9
+ ln -s clang-8 gcc-9
+ ln -s clang-8 cpp-9
+ ln -s clang-8 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-8 g++-10
+ ln -s clang-8 gcc-10
+ ln -s clang-8 cpp-10
+ ln -s clang-8 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/libbson-xs-perl-0fUymi
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang8'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libbson-xs-perl-0fUymi/resolver-iTMNXh' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (6429 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13887 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13887 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libbson-xs-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/libbson-xs-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/libbson-xs-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 240 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libbson-xs-perl 0.8.2-1 (dsc) [2252 B]
Get:2 http://127.0.0.1:12990/debian sid/main libbson-xs-perl 0.8.2-1 (tar) [233 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libbson-xs-perl 0.8.2-1 (diff) [4684 B]
Fetched 240 kB in 0s (2729 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libbson-xs-perl-0fUymi/libbson-xs-perl-0.8.2' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libbson-xs-perl-0fUymi' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 12), libboolean-perl, libbson-perl (>= 1.12.1~), libconfig-autoconf-perl, libjson-maybexs-perl, libjson-pp-perl (>= 2.97001), libpath-tiny-perl, libtest-deep-perl, libtest-fatal-perl, libtie-ixhash-perl, perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 12), libboolean-perl, libbson-perl (>= 1.12.1~), libconfig-autoconf-perl, libjson-maybexs-perl, libjson-pp-perl (>= 2.97001), libpath-tiny-perl, libtest-deep-perl, libtest-fatal-perl, libtie-ixhash-perl, perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [458 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [539 B]
Fetched 1954 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libb-hooks-endofscope-perl
  libb-hooks-op-check-perl libboolean-perl libbson-perl libcapture-tiny-perl
  libclass-method-modifiers-perl libconfig-autoconf-perl
  libcpanel-json-xs-perl libcroco3 libcrypt-urandom-perl libdebhelper-perl
  libdevel-callchecker-perl libdynaloader-functions-perl libelf1
  libfile-slurper-perl libfile-stripnondeterminism-perl libglib2.0-0 libicu63
  libimport-into-perl libjson-maybexs-perl libmagic-mgc libmagic1
  libmodule-implementation-perl libmodule-runtime-perl libmoo-perl
  libnamespace-clean-perl libpackage-stash-perl libparams-classify-perl
  libpath-tiny-perl libpipeline1 librole-tiny-perl libsigsegv2
  libstrictures-perl libsub-exporter-progressive-perl libsub-identify-perl
  libsub-name-perl libsub-override-perl libsub-quote-perl libtest-deep-perl
  libtest-fatal-perl libtie-ixhash-perl libtool libtry-tiny-perl libuchardet0
  libvariable-magic-perl libxml2 m4 man-db po-debconf sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff
  libscalar-number-perl libbareword-filehandles-perl libindirect-perl
  libmultidimensional-perl libtool-doc gfortran | fortran95-compiler gcj-jdk
  m4-doc apparmor less www-browser libmail-box-perl
Recommended packages:
  curl | wget | lynx libbson-xs-perl libperlio-utf8-strict-perl
  libarchive-cpio-perl libglib2.0-data shared-mime-info xdg-user-dirs
  libclass-xsaccessor-perl libpackage-stash-xs-perl libunicode-utf8-perl
  libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libb-hooks-endofscope-perl
  libb-hooks-op-check-perl libboolean-perl libbson-perl libcapture-tiny-perl
  libclass-method-modifiers-perl libconfig-autoconf-perl
  libcpanel-json-xs-perl libcroco3 libcrypt-urandom-perl libdebhelper-perl
  libdevel-callchecker-perl libdynaloader-functions-perl libelf1
  libfile-slurper-perl libfile-stripnondeterminism-perl libglib2.0-0 libicu63
  libimport-into-perl libjson-maybexs-perl libmagic-mgc libmagic1
  libmodule-implementation-perl libmodule-runtime-perl libmoo-perl
  libnamespace-clean-perl libpackage-stash-perl libparams-classify-perl
  libpath-tiny-perl libpipeline1 librole-tiny-perl libsigsegv2
  libstrictures-perl libsub-exporter-progressive-perl libsub-identify-perl
  libsub-name-perl libsub-override-perl libsub-quote-perl libtest-deep-perl
  libtest-fatal-perl libtie-ixhash-perl libtool libtry-tiny-perl libuchardet0
  libvariable-magic-perl libxml2 m4 man-db po-debconf
  sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 66 newly installed, 0 to remove and 0 not upgraded.
Need to get 20.1 MB of archives.
After this operation, 72.8 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [968 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libb-hooks-op-check-perl amd64 0.22-1+b2 [11.3 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libdynaloader-functions-perl all 0.003-1 [12.6 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 libdevel-callchecker-perl amd64 0.008-1+b1 [15.9 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libparams-classify-perl amd64 0.015-1+b2 [25.6 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 libmodule-runtime-perl all 0.016-1 [19.4 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 libtry-tiny-perl all 0.30-1 [23.3 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 libmodule-implementation-perl all 0.09-1 [12.9 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 libsub-exporter-progressive-perl all 0.001013-1 [7588 B]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libvariable-magic-perl amd64 0.62-1+b2 [46.0 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libb-hooks-endofscope-perl all 0.24-1 [18.6 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libboolean-perl all 0.46-1 [11.1 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 libcrypt-urandom-perl all 0.36-1 [10.4 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libclass-method-modifiers-perl all 2.13-1 [19.2 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 libimport-into-perl all 1.002005-1 [11.6 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 librole-tiny-perl all 2.001004-1 [20.8 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 libstrictures-perl all 2.000006-1 [18.6 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 libsub-quote-perl all 2.006006-1 [21.0 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 libmoo-perl all 2.003006-1 [58.7 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 libpackage-stash-perl all 0.38-1 [21.7 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 libsub-identify-perl amd64 0.14-1+b2 [12.0 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 libsub-name-perl amd64 0.26-1 [13.5 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 libnamespace-clean-perl all 0.27-1 [17.3 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 libtie-ixhash-perl all 1.23-2 [11.7 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 libbson-perl all 1.12.1-1 [94.5 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 libcapture-tiny-perl all 0.48-1 [26.0 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libfile-slurper-perl all 0.012-1 [8344 B]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libconfig-autoconf-perl all 0.318-1 [42.1 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libcpanel-json-xs-perl amd64 4.19-1 [126 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libjson-maybexs-perl all 1.004000-1 [12.5 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libpath-tiny-perl all 0.108-1 [53.3 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libtest-deep-perl all 1.128-1 [48.8 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libtest-fatal-perl all 0.014-1 [11.9 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 20.1 MB in 0s (57.8 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13887 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../16-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../17-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../18-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../25-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../26-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../27-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../28-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../29-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../30-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../31-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../32-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package libb-hooks-op-check-perl.
Preparing to unpack .../33-libb-hooks-op-check-perl_0.22-1+b2_amd64.deb ...
Unpacking libb-hooks-op-check-perl (0.22-1+b2) ...
Selecting previously unselected package libdynaloader-functions-perl.
Preparing to unpack .../34-libdynaloader-functions-perl_0.003-1_all.deb ...
Unpacking libdynaloader-functions-perl (0.003-1) ...
Selecting previously unselected package libdevel-callchecker-perl.
Preparing to unpack .../35-libdevel-callchecker-perl_0.008-1+b1_amd64.deb ...
Unpacking libdevel-callchecker-perl (0.008-1+b1) ...
Selecting previously unselected package libparams-classify-perl.
Preparing to unpack .../36-libparams-classify-perl_0.015-1+b2_amd64.deb ...
Unpacking libparams-classify-perl (0.015-1+b2) ...
Selecting previously unselected package libmodule-runtime-perl.
Preparing to unpack .../37-libmodule-runtime-perl_0.016-1_all.deb ...
Unpacking libmodule-runtime-perl (0.016-1) ...
Selecting previously unselected package libtry-tiny-perl.
Preparing to unpack .../38-libtry-tiny-perl_0.30-1_all.deb ...
Unpacking libtry-tiny-perl (0.30-1) ...
Selecting previously unselected package libmodule-implementation-perl.
Preparing to unpack .../39-libmodule-implementation-perl_0.09-1_all.deb ...
Unpacking libmodule-implementation-perl (0.09-1) ...
Selecting previously unselected package libsub-exporter-progressive-perl.
Preparing to unpack .../40-libsub-exporter-progressive-perl_0.001013-1_all.deb ...
Unpacking libsub-exporter-progressive-perl (0.001013-1) ...
Selecting previously unselected package libvariable-magic-perl.
Preparing to unpack .../41-libvariable-magic-perl_0.62-1+b2_amd64.deb ...
Unpacking libvariable-magic-perl (0.62-1+b2) ...
Selecting previously unselected package libb-hooks-endofscope-perl.
Preparing to unpack .../42-libb-hooks-endofscope-perl_0.24-1_all.deb ...
Unpacking libb-hooks-endofscope-perl (0.24-1) ...
Selecting previously unselected package libboolean-perl.
Preparing to unpack .../43-libboolean-perl_0.46-1_all.deb ...
Unpacking libboolean-perl (0.46-1) ...
Selecting previously unselected package libcrypt-urandom-perl.
Preparing to unpack .../44-libcrypt-urandom-perl_0.36-1_all.deb ...
Unpacking libcrypt-urandom-perl (0.36-1) ...
Selecting previously unselected package libclass-method-modifiers-perl.
Preparing to unpack .../45-libclass-method-modifiers-perl_2.13-1_all.deb ...
Unpacking libclass-method-modifiers-perl (2.13-1) ...
Selecting previously unselected package libimport-into-perl.
Preparing to unpack .../46-libimport-into-perl_1.002005-1_all.deb ...
Unpacking libimport-into-perl (1.002005-1) ...
Selecting previously unselected package librole-tiny-perl.
Preparing to unpack .../47-librole-tiny-perl_2.001004-1_all.deb ...
Unpacking librole-tiny-perl (2.001004-1) ...
Selecting previously unselected package libstrictures-perl.
Preparing to unpack .../48-libstrictures-perl_2.000006-1_all.deb ...
Unpacking libstrictures-perl (2.000006-1) ...
Selecting previously unselected package libsub-quote-perl.
Preparing to unpack .../49-libsub-quote-perl_2.006006-1_all.deb ...
Unpacking libsub-quote-perl (2.006006-1) ...
Selecting previously unselected package libmoo-perl.
Preparing to unpack .../50-libmoo-perl_2.003006-1_all.deb ...
Unpacking libmoo-perl (2.003006-1) ...
Selecting previously unselected package libpackage-stash-perl.
Preparing to unpack .../51-libpackage-stash-perl_0.38-1_all.deb ...
Unpacking libpackage-stash-perl (0.38-1) ...
Selecting previously unselected package libsub-identify-perl.
Preparing to unpack .../52-libsub-identify-perl_0.14-1+b2_amd64.deb ...
Unpacking libsub-identify-perl (0.14-1+b2) ...
Selecting previously unselected package libsub-name-perl.
Preparing to unpack .../53-libsub-name-perl_0.26-1_amd64.deb ...
Unpacking libsub-name-perl (0.26-1) ...
Selecting previously unselected package libnamespace-clean-perl.
Preparing to unpack .../54-libnamespace-clean-perl_0.27-1_all.deb ...
Unpacking libnamespace-clean-perl (0.27-1) ...
Selecting previously unselected package libtie-ixhash-perl.
Preparing to unpack .../55-libtie-ixhash-perl_1.23-2_all.deb ...
Unpacking libtie-ixhash-perl (1.23-2) ...
Selecting previously unselected package libbson-perl.
Preparing to unpack .../56-libbson-perl_1.12.1-1_all.deb ...
Unpacking libbson-perl (1.12.1-1) ...
Selecting previously unselected package libcapture-tiny-perl.
Preparing to unpack .../57-libcapture-tiny-perl_0.48-1_all.deb ...
Unpacking libcapture-tiny-perl (0.48-1) ...
Selecting previously unselected package libfile-slurper-perl.
Preparing to unpack .../58-libfile-slurper-perl_0.012-1_all.deb ...
Unpacking libfile-slurper-perl (0.012-1) ...
Selecting previously unselected package libconfig-autoconf-perl.
Preparing to unpack .../59-libconfig-autoconf-perl_0.318-1_all.deb ...
Unpacking libconfig-autoconf-perl (0.318-1) ...
Selecting previously unselected package libcpanel-json-xs-perl.
Preparing to unpack .../60-libcpanel-json-xs-perl_4.19-1_amd64.deb ...
Unpacking libcpanel-json-xs-perl (4.19-1) ...
Selecting previously unselected package libjson-maybexs-perl.
Preparing to unpack .../61-libjson-maybexs-perl_1.004000-1_all.deb ...
Unpacking libjson-maybexs-perl (1.004000-1) ...
Selecting previously unselected package libpath-tiny-perl.
Preparing to unpack .../62-libpath-tiny-perl_0.108-1_all.deb ...
Unpacking libpath-tiny-perl (0.108-1) ...
Selecting previously unselected package libtest-deep-perl.
Preparing to unpack .../63-libtest-deep-perl_1.128-1_all.deb ...
Unpacking libtest-deep-perl (1.128-1) ...
Selecting previously unselected package libtest-fatal-perl.
Preparing to unpack .../64-libtest-fatal-perl_0.014-1_all.deb ...
Unpacking libtest-fatal-perl (0.014-1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../65-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libfile-slurper-perl (0.012-1) ...
Setting up libtie-ixhash-perl (1.23-2) ...
Setting up libdynaloader-functions-perl (0.003-1) ...
Setting up libtest-deep-perl (1.128-1) ...
Setting up libclass-method-modifiers-perl (2.13-1) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libsub-identify-perl (0.14-1+b2) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libcpanel-json-xs-perl (4.19-1) ...
Setting up libdebhelper-perl (12.9) ...
Setting up libcrypt-urandom-perl (0.36-1) ...
Setting up libtry-tiny-perl (0.30-1) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up libtest-fatal-perl (0.014-1) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up libjson-maybexs-perl (1.004000-1) ...
Setting up libboolean-perl (0.46-1) ...
Setting up autotools-dev (20180224.1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up libvariable-magic-perl (0.62-1+b2) ...
Setting up autopoint (0.19.8.1-10) ...
Setting up libb-hooks-op-check-perl (0.22-1+b2) ...
Setting up libsub-exporter-progressive-perl (0.001013-1) ...
Setting up libcapture-tiny-perl (0.48-1) ...
Setting up libsub-name-perl (0.26-1) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libpath-tiny-perl (0.108-1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up librole-tiny-perl (2.001004-1) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libconfig-autoconf-perl (0.318-1) ...
Setting up libstrictures-perl (2.000006-1) ...
Setting up libsub-quote-perl (2.006006-1) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up m4 (1.4.18-4) ...
Setting up libdevel-callchecker-perl (0.008-1+b1) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.19.8.1-10) ...
Setting up libparams-classify-perl (0.015-1+b2) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libmodule-runtime-perl (0.016-1) ...
Setting up libmodule-implementation-perl (0.09-1) ...
Setting up libpackage-stash-perl (0.38-1) ...
Setting up libimport-into-perl (1.002005-1) ...
Setting up libmoo-perl (2.003006-1) ...
Setting up po-debconf (1.0.21) ...
Setting up libb-hooks-endofscope-perl (0.24-1) ...
Setting up libnamespace-clean-perl (0.27-1) ...
Setting up libbson-perl (1.12.1-1) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-8_1:8.0.1-7 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libb-hooks-endofscope-perl_0.24-1 libb-hooks-op-check-perl_0.22-1+b2 libbinutils_2.34-3 libblkid1_2.34-0.1 libboolean-perl_0.46-1 libbsd0_0.10.0-1 libbson-perl_1.12.1-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcapture-tiny-perl_0.48-1 libcc1-0_10-20200222-1 libclang-common-8-dev_1:8.0.1-7 libclang1-8_1:8.0.1-7 libclass-method-modifiers-perl_2.13-1 libcom-err2_1.45.5-2 libconfig-autoconf-perl_0.318-1 libcpanel-json-xs-perl_4.19-1 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt-urandom-perl_0.36-1 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdevel-callchecker-perl_0.008-1+b1 libdpkg-perl_1.19.7 libdynaloader-functions-perl_0.003-1 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-slurper-perl_0.012-1 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libimport-into-perl_1.002005-1 libisl22_0.22.1-1 libitm1_10-20200222-1 libjson-maybexs-perl_1.004000-1 libllvm8_1:8.0.1-7 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmodule-implementation-perl_0.09-1 libmodule-runtime-perl_0.016-1 libmoo-perl_2.003006-1 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libnamespace-clean-perl_0.27-1 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-8-dev_1:8.0.1-7 libomp5-8_1:8.0.1-7 libp11-kit0_0.23.20-1 libpackage-stash-perl_0.38-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libparams-classify-perl_0.015-1+b2 libpath-tiny-perl_0.108-1 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libquadmath0_10-20200222-1 librole-tiny-perl_2.001004-1 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libss2_1.45.5-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libstrictures-perl_2.000006-1 libsub-exporter-progressive-perl_0.001013-1 libsub-identify-perl_0.14-1+b2 libsub-name-perl_0.26-1 libsub-override-perl_0.09-2 libsub-quote-perl_2.006006-1 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtest-deep-perl_1.128-1 libtest-fatal-perl_0.014-1 libtie-ixhash-perl_1.23-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtry-tiny-perl_0.30-1 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libvariable-magic-perl_0.62-1+b2 libxml2_2.9.10+dfsg-3 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: libbson-xs-perl
Binary: libbson-xs-perl
Architecture: any
Version: 0.8.2-1
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Xavier Guimard <yadd@debian.org>
Homepage: https://metacpan.org/release/BSON-XS
Standards-Version: 4.4.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libbson-xs-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libbson-xs-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper-compat (= 12), libboolean-perl, libbson-perl (>= 1.12.1~), libconfig-autoconf-perl, libjson-maybexs-perl, libjson-pp-perl (>= 2.97001), libpath-tiny-perl, libtest-deep-perl, libtest-fatal-perl, libtie-ixhash-perl, perl
Package-List:
 libbson-xs-perl deb perl optional arch=any
Checksums-Sha1:
 808dc44b4e4ce10785608fca18f887a29277b83a 232861 libbson-xs-perl_0.8.2.orig.tar.gz
 0be05e9740a1e9c8236802f5bc3f284d8ef97e27 4684 libbson-xs-perl_0.8.2-1.debian.tar.xz
Checksums-Sha256:
 f78e6febbbbacaaf70d5654f2902cf8949c38d0a50a479816881805b96e5c8e4 232861 libbson-xs-perl_0.8.2.orig.tar.gz
 46e058ec28cb50da31179e40c469dce3db75b400878b0e98e8f04f9eeed59bed 4684 libbson-xs-perl_0.8.2-1.debian.tar.xz
Files:
 33e1054f998164dfe1050a7e65d7400b 232861 libbson-xs-perl_0.8.2.orig.tar.gz
 6046181c1f795ecec22201e130fb7b9d 4684 libbson-xs-perl_0.8.2-1.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEEAN/li4tVV3nRAF7J9tdMp8mZ7ukFAl3rhhwACgkQ9tdMp8mZ
7ulXlw/+NI9baUvEhKNv3UvZPnVnppnryIRMxOKfmOnQ52TOGXPc7Lxj/W1atGNm
nOJMMWXEZlzX3sqbDX2X2w6wXNrbRyWBd0yK4TyMFz3xWkYYfNAMTNr9Beq39/WU
VoB4T2hmSA/DEh6FvH9xJFLSccL2JOvLbqKPSmseMHFvTQiJL1geb0JZjNZ47lvP
AYIe+QCtiaQR3xf+fn2QHYPa7ci0EIRioYOJFT36rDDddsH/5Bn1+DWr5MjnRkg4
2sFlEPFZakyf4RB5U9QVpdiLrJlnK+K48alMkp5nuj9+xskffflDLaKw5tOE/ObV
O6r7Oqh/C0tP54sJ+CR/CWmlHvgMnbiaVr7tdUaYW/iZNbzK6jaW3Jqcnx/u87T3
eoaPizUatz72zaij6vv0vJqDAIUO+2PhGAw3rIuSJsQ860b5arnlfHB9L4L83Ldf
GovmjtdFh/Lmky+TQplLh26NyZ5V/73lpS9H/y9SenMKnmfopvKFFEw4/ZO13PLC
6XWYLdjSZu1oKQibWtqiyszanzsnB5rtEK8K9znds5XMhBr7Gf1wKhIz4mFU1VA+
NFHxeXxVv0cPqBASqQ1LjzdjDxLjbosVgo8KLPsnWiza4M0fDAYaIVnTSwSSx/lo
OshAVJf+3KCAFjiODVtMcDB1i0Px/t2/PnEiq2ekn4fv/5IieVI=
=vA1e
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Sat Dec  7 10:59:40 2019 UTC
gpgv:                using RSA key 00DFE58B8B555779D1005EC9F6D74CA7C999EEE9
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libbson-xs-perl_0.8.2-1.dsc
dpkg-source: info: extracting libbson-xs-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libbson-xs-perl_0.8.2.orig.tar.gz
dpkg-source: info: unpacking libbson-xs-perl_0.8.2-1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-a35e5832-5097-40d3-ae58-926189b2c851
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libbson-xs-perl
dpkg-buildpackage: info: source version 0.8.2-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Xavier Guimard <yadd@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   dh_auto_configure
	perl Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now"
Checking for cc... x86_64-linux-gnu-gcc
Checking for cc... x86_64-linux-gnu-gcc
Checking for timespec... no
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for BSON::XS
Writing MYMETA.yml and MYMETA.json
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" "/usr/share/perl/5.30/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.30/ExtUtils/typemap'  xs/XS.xs > xs/XS.xsc
Running Mkbootstrap for XS ()
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-atomic.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-atomic.c
chmod 644 "XS.bs"
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-clock.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-clock.c
cp lib/BSON/XS.pm blib/lib/BSON/XS.pm
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-context.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-context.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-decimal128.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-decimal128.c
mv xs/XS.xsc xs/XS.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-error.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-error.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-iso8601.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-iso8601.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-iter.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-iter.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-keys.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-keys.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-md5.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-md5.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-memory.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-memory.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-oid.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-oid.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-reader.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-reader.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-string.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-string.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-timegm.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-timegm.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-utf8.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-utf8.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-value.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-value.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-version.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-version.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson-writer.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson-writer.c
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o bson/bson.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   bson/bson.c
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XS.bs blib/arch/auto/BSON/XS/XS.bs 644
x86_64-linux-gnu-gcc -c  -I. -Ibson -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DMONGO_USE_64_BIT_INT -DBSON_COMPILATION  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"v0.8.2\" -DXS_VERSION=\"v0.8.2\" -o xs/XS.o -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   xs/XS.c
rm -f blib/arch/auto/BSON/XS/XS.so
x86_64-linux-gnu-gcc -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now  -shared -L/usr/local/lib -fstack-protector-strong  xs/XS.o bson/bson-atomic.o bson/bson-clock.o bson/bson-context.o bson/bson-decimal128.o bson/bson-error.o bson/bson-iso8601.o bson/bson-iter.o bson/bson-keys.o bson/bson-md5.o bson/bson-memory.o bson/bson-oid.o bson/bson-reader.o bson/bson-string.o bson/bson-timegm.o bson/bson-utf8.o bson/bson-value.o bson/bson-version.o bson/bson-writer.o bson/bson.o  -o blib/arch/auto/BSON/XS/XS.so  \
   -lrt   \
  
chmod 755 blib/arch/auto/BSON/XS/XS.so
Manifying 1 pod document
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XS.bs blib/arch/auto/BSON/XS/XS.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(1, 'blib/lib', 'blib/arch')" t/*.t t/common/*.t t/corpus/*.t t/mapping/*.t t/regression/*.t
# 
# Versions for all modules listed in MYMETA.json (including optional ones):
# 
# === Configure Requires ===
# 
#     Module               Want  Have
#     ------------------- ----- -----
#     Config::AutoConf     0.22 0.318
#     ExtUtils::MakeMaker   any  7.34
#     Path::Tiny          0.052 0.108
# 
# === Build Requires ===
# 
#     Module              Want Have
#     ------------------- ---- ----
#     ExtUtils::MakeMaker  any 7.34
# 
# === Test Requires ===
# 
#     Module                  Want     Have
#     ------------------- -------- --------
#     B                        any     1.76
#     BSON                1.012000  v1.12.1
#     BSON::OID                any  v1.12.1
#     BSON::Types              any  v1.12.1
#     Carp                     any     1.50
#     Data::Dumper             any    2.174
#     Devel::Peek              any     1.28
#     Exporter                 any     5.73
#     ExtUtils::MakeMaker      any     7.34
#     File::Spec               any     3.78
#     JSON::MaybeXS            any 1.004000
#     JSON::PP             2.97001     4.02
#     MIME::Base64             any     3.15
#     Math::BigInt             any 1.999816
#     Path::Tiny             0.054    0.108
#     Scalar::Util             any     1.50
#     Test::Deep               any    1.128
#     Test::Fatal              any    0.014
#     Test::More              0.96 1.302162
#     Tie::IxHash              any     1.23
#     base                     any     2.27
#     constant                 any     1.33
#     lib                      any     0.65
#     utf8                     any     1.22
# 
# === Test Recommends ===
# 
#     Module         Want     Have
#     ---------- -------- --------
#     CPAN::Meta 2.120900 2.150010
# 
# === Runtime Requires ===
# 
#     Module       Want    Have
#     -------- -------- -------
#     BSON     1.012000 v1.12.1
#     XSLoader      any    0.30
#     boolean       any    0.46
#     strict        any    1.11
#     version       any  0.9924
#     warnings      any    1.44
# 
# === Other Modules ===
# 
#     Module              Have
#     ---------------- -------
#     CPanel::JSON::XS missing
#     JSON::PP            4.02
#     JSON::XS         missing
# 
t/00-report-prereqs.t ............ 
1..1
ok 1
ok
t/backend.t ...................... 
ok 1 - No error loading BSON.pm
ok 2 - Loading BSON.pm loads BSON::XS
ok 3 - correct encoder sub
ok 4 - correct decoder sub
ok 5 - round trip works with BSON::XS codec
1..5
ok
t/common/bson_array.t ............ 
ok 1 - bson_array
ok 2 - encode bson array
1..2
ok
t/common/create_oid.t ............ 
# Subtest: test timestamp field
    ok 1
    ok 2
    1..2
ok 1 - test timestamp field
# Subtest: test counter
    ok 1
    ok 2 - An object of class 'BSON::OID' isa 'BSON::OID'
    ok 3
    ok 4 - check the oid has the given counter
    ok 5 - check the oid has the given counter
    1..5
ok 2 - test counter
1..2
ok
t/common/cycle.t ................. 
ok 1 - circular hashref
ok 2 - circular tied hashref
ok 3 - circular Tie::IxHash object
ok 4 - circular deep object
1..4
ok
t/common/dualvar.t ............... 
ok 1 - got codec object
ok 2 - dual var is a number
ok 3 - dual var is a string
ok 4 - round trip for dual var
1..4
ok
t/common/errors.t ................ 
ok 1 - encoding unknown type is fatal
ok 2 - decoding unknown type is fatal
ok 3 - encoding non-container is fatal
ok 4 - encoding embedded null is fatal
ok 5 - encoding scalar is fatal
ok 6 - encoding non-container is fatal
ok 7 - encoding hash-type object is fatal
# Subtest: nesting
    ok 1 - No error encoding 100 levels of hash
    ok 2 - Hit the specified max depth encoding documents at 101 levels of hash
    ok 3 - No error at 100 levels of hash+array+hash
    ok 4 - Hit the specified max depth encoding documents at 101 levels of hash+array+hash
    ok 5 - No error decoding 100 levels of hash
    ok 6 - Hit the specified max depth decoding documents at 101 levels of hash
    ok 7 - No error encoding 100 Raw docs with same options
    1..7
ok 8 - nesting
1..8
ok
t/common/number_heuristics.t ..... 
ok 1 - Pure int: SvTYPE(s)
ok 2 - Pure int: prefer_numeric=0
ok 3 - Pure int: value matches 42
ok 4 - Pure int: prefer_numeric=1
ok 5 - Pure int: value matches 42
ok 6 - String int: SvTYPE(s)
ok 7 - String int: prefer_numeric=0
ok 8 - String int: value matches 42
ok 9 - String int: prefer_numeric=1
ok 10 - String int: value matches 42
ok 11 - Dual int: SvTYPE(s)
ok 12 - Dual int: prefer_numeric=0
ok 13 - Dual int: value matches 42
ok 14 - Dual int: prefer_numeric=1
ok 15 - Dual int: value matches 42
ok 16 - Pure double: SvTYPE(s)
ok 17 - Pure double: prefer_numeric=0
ok 18 - Pure double: value matches 3.14
ok 19 - Pure double: prefer_numeric=1
ok 20 - Pure double: value matches 3.14
ok 21 - String double: SvTYPE(s)
ok 22 - String double: prefer_numeric=0
ok 23 - String double: value matches 3.14
ok 24 - String double: prefer_numeric=1
ok 25 - String double: value matches 3.14
ok 26 - Dual double: SvTYPE(s)
ok 27 - Dual double: prefer_numeric=0
ok 28 - Dual double: value matches 3.14
ok 29 - Dual double: prefer_numeric=1
ok 30 - Dual double: value matches 3.14
1..30
ok
t/common/options.t ............... 
# Subtest: error_callback
    ok 1 - error_callback ran
    ok 2 - error_callback arg 0
    ok 3 - error_callback arg 1
    ok 4 - error_callback arg 2
    1..4
ok 1 - error_callback
# Subtest: invalid_char
    ok 1 - invalid char throws exception
    ok 2 - multi-invalid chars throws exception
    1..2
ok 2 - invalid_char
# Subtest: max_length
    ok 1 - max_length exceeded during encode_one
    ok 2 - max_length exceeded during decode_one
    1..2
ok 3 - max_length
# Subtest: op-char
    ok 1 - op-char converts to '$'
    1..1
ok 4 - op-char
# Subtest: prefer_numeric
    ok 1 - prefer_numeric => 1
    ok 2 - prefer_numeric => 0
    1..2
ok 5 - prefer_numeric
# Subtest: first_key
    ok 1 - first_key put first
    ok 2 - first_value overrode existing value
    ok 3 - first_key doesn't propagate
    ok 4 - first_key put first
    ok 5 - first_value overrode existing value
    1..5
ok 6 - first_key
# Subtest: dt_type
    ok 1 - dt_type = undef
    ok 2 - dt_type = BSON::Time
    ok 3 # skip DateTime not installed
    ok 4 # skip DateTime::Tiny not installed
    ok 5 # skip Time::Moment not installed
    ok 6 # skip Mango::BSON::Time not installed
    ok 7 - dt_type = BOGUS
    1..7
ok 7 - dt_type
1..7
ok
t/common/tied.t .................. 
ok 1 - got codec object
ok 2 - round trip for tie var
ok 3 - round trip for tie var
1..3
ok
t/common/top-array.t ............. 
ok 1 - encode_one( [...] )
1..1
ok
t/corpus/array.t ................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty
# Subtest: case: Single Element Array
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Single Element Array
# Subtest: case: Single Element Array with index set incorrectly
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_bson(bson_to_native(dB)) = cB
    1..5
ok 4 - case: Single Element Array with index set incorrectly
# Subtest: case: Single Element Array with index set incorrectly
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_bson(bson_to_native(dB)) = cB
    1..5
ok 5 - case: Single Element Array with index set incorrectly
ok 6 - Decode error: Array length too long: eats outer terminator:
ok 7 - Decode error: Array length too short: leaks terminator:
ok 8 - Decode error: Invalid Array: bad string length in field:
1..8
ok
t/corpus/binary.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: subtype 0x00 (Zero-length)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: subtype 0x00 (Zero-length)
# Subtest: case: subtype 0x00 (Zero-length, keys reversed)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: subtype 0x00 (Zero-length, keys reversed)
# Subtest: case: subtype 0x00
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: subtype 0x00
# Subtest: case: subtype 0x01
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: subtype 0x01
# Subtest: case: subtype 0x02
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: subtype 0x02
# Subtest: case: subtype 0x03
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: subtype 0x03
# Subtest: case: subtype 0x04
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: subtype 0x04
# Subtest: case: subtype 0x05
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: subtype 0x05
# Subtest: case: subtype 0x80
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 10 - case: subtype 0x80
# Subtest: case: $type query operator (conflicts with legacy $binary form with $type field)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 11 - case: $type query operator (conflicts with legacy $binary form with $type field)
# Subtest: case: $type query operator (conflicts with legacy $binary form with $type field)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 12 - case: $type query operator (conflicts with legacy $binary form with $type field)
ok 13 - Decode error: Length longer than document:
ok 14 - Decode error: Negative length:
ok 15 - Decode error: subtype 0x02 length too long :
ok 16 - Decode error: subtype 0x02 length too short:
ok 17 - Decode error: subtype 0x02 length negative one:
1..17
ok
t/corpus/boolean.t ............... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: True
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: True
# Subtest: case: False
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: False
ok 4 - Decode error: Invalid boolean value of 2:
ok 5 - Decode error: Invalid boolean value of -1:
1..5
ok
t/corpus/code.t .................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty string
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty string
# Subtest: case: Single character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Single character
# Subtest: case: Multi-character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Multi-character
# Subtest: case: two-byte UTF-8 (é)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: two-byte UTF-8 (é)
# Subtest: case: three-byte UTF-8 (☆)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: three-byte UTF-8 (☆)
# Subtest: case: Embedded nulls
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: Embedded nulls
ok 8 - Decode error: bad code string length: 0 (but no 0x00 either):
ok 9 - Decode error: bad code string length: -1:
ok 10 - Decode error: bad code string length: eats terminator:
ok 11 - Decode error: bad code string length: longer than rest of document:
ok 12 - Decode error: code string is not null-terminated:
ok 13 - Decode error: empty code string, but extra null:
ok 14 - Decode error: invalid UTF-8:
1..14
ok
t/corpus/code_w_scope.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty code string, empty scope
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty code string, empty scope
# Subtest: case: Non-empty code string, empty scope
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Non-empty code string, empty scope
# Subtest: case: Empty code string, non-empty scope
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Empty code string, non-empty scope
# Subtest: case: Non-empty code string and non-empty scope
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: Non-empty code string and non-empty scope
# Subtest: case: Unicode and embedded null in code string, empty scope
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: Unicode and embedded null in code string, empty scope
ok 7 - Decode error: field length zero:
ok 8 - Decode error: field length negative:
ok 9 - Decode error: field length too short (less than minimum size):
ok 10 - Decode error: field length too short (truncates scope):
ok 11 - Decode error: field length too long (clips outer doc):
ok 12 - Decode error: field length too long (longer than outer doc):
ok 13 - Decode error: bad code string: length too short:
ok 14 - Decode error: bad code string: length too long (clips scope):
ok 15 - Decode error: bad code string: negative length:
ok 16 - Decode error: bad code string: length longer than field:
ok 17 - Decode error: bad scope doc (field has bad string length):
1..17
ok
t/corpus/datetime.t .............. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: epoch
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 2 - case: epoch
# Subtest: case: positive ms
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 3 - case: positive ms
# Subtest: case: negative
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 4 - case: negative
# Subtest: case: Y10K
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: Y10K
ok 6 - Decode error: datetime field truncated:
1..6
ok
t/corpus/dbpointer.t ............. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: DBpointer
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: DBpointer
# Subtest: case: DBpointer with opposite key order
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: DBpointer with opposite key order
# Subtest: case: With two-byte UTF-8
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: With two-byte UTF-8
ok 5 - Decode error: String with negative length:
ok 6 - Decode error: String with zero length:
ok 7 - Decode error: String not null terminated:
ok 8 - Decode error: short OID (less than minimum length for field):
ok 9 - Decode error: short OID (greater than minimum, but truncated):
ok 10 - Decode error: String with bad UTF-8:
1..10
ok
t/corpus/dbref.t ................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: DBRef
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: DBRef
# Subtest: case: DBRef with database
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: DBRef with database
# Subtest: case: DBRef with database and additional fields
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: DBRef with database and additional fields
# Subtest: case: DBRef with additional fields
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: DBRef with additional fields
# Subtest: case: Document with key names similar to those of a DBRef
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: Document with key names similar to those of a DBRef
1..6
ok
t/corpus/decimal128-1.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Special - Canonical NaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Special - Canonical NaN
# Subtest: case: Special - Negative NaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 3 - case: Special - Negative NaN
# Subtest: case: Special - Negative NaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    1..4
ok 4 - case: Special - Negative NaN
# Subtest: case: Special - Canonical SNaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 5 - case: Special - Canonical SNaN
# Subtest: case: Special - Negative SNaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 6 - case: Special - Negative SNaN
# Subtest: case: Special - NaN with a payload
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 7 - case: Special - NaN with a payload
# Subtest: case: Special - Canonical Positive Infinity
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: Special - Canonical Positive Infinity
# Subtest: case: Special - Canonical Negative Infinity
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: Special - Canonical Negative Infinity
# Subtest: case: Special - Invalid representation treated as 0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 10 - case: Special - Invalid representation treated as 0
# Subtest: case: Special - Invalid representation treated as -0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 11 - case: Special - Invalid representation treated as -0
# Subtest: case: Special - Invalid representation treated as 0E3
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    1..3
ok 12 - case: Special - Invalid representation treated as 0E3
# Subtest: case: Regular - Adjusted Exponent Limit
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 13 - case: Regular - Adjusted Exponent Limit
# Subtest: case: Regular - Smallest
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 14 - case: Regular - Smallest
# Subtest: case: Regular - Smallest with Trailing Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 15 - case: Regular - Smallest with Trailing Zeros
# Subtest: case: Regular - 0.1
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 16 - case: Regular - 0.1
# Subtest: case: Regular - 0.1234567890123456789012345678901234
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 17 - case: Regular - 0.1234567890123456789012345678901234
# Subtest: case: Regular - 0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 18 - case: Regular - 0
# Subtest: case: Regular - -0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 19 - case: Regular - -0
# Subtest: case: Regular - -0.0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 20 - case: Regular - -0.0
# Subtest: case: Regular - 2
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 21 - case: Regular - 2
# Subtest: case: Regular - 2.000
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 22 - case: Regular - 2.000
# Subtest: case: Regular - Largest
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 23 - case: Regular - Largest
# Subtest: case: Scientific - Tiniest
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 24 - case: Scientific - Tiniest
# Subtest: case: Scientific - Tiny
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 25 - case: Scientific - Tiny
# Subtest: case: Scientific - Negative Tiny
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 26 - case: Scientific - Negative Tiny
# Subtest: case: Scientific - Adjusted Exponent Limit
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 27 - case: Scientific - Adjusted Exponent Limit
# Subtest: case: Scientific - Fractional
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 28 - case: Scientific - Fractional
# Subtest: case: Scientific - 0 with Exponent
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 29 - case: Scientific - 0 with Exponent
# Subtest: case: Scientific - 0 with Negative Exponent
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 30 - case: Scientific - 0 with Negative Exponent
# Subtest: case: Scientific - No Decimal with Signed Exponent
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 31 - case: Scientific - No Decimal with Signed Exponent
# Subtest: case: Scientific - Trailing Zero
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 32 - case: Scientific - Trailing Zero
# Subtest: case: Scientific - With Decimal
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 33 - case: Scientific - With Decimal
# Subtest: case: Scientific - Full
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 34 - case: Scientific - Full
# Subtest: case: Scientific - Large
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 35 - case: Scientific - Large
# Subtest: case: Scientific - Largest
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 36 - case: Scientific - Largest
# Subtest: case: Non-Canonical Parsing - Exponent Normalization
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 37 - case: Non-Canonical Parsing - Exponent Normalization
# Subtest: case: Non-Canonical Parsing - Unsigned Positive Exponent
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 38 - case: Non-Canonical Parsing - Unsigned Positive Exponent
# Subtest: case: Non-Canonical Parsing - Lowercase Exponent Identifier
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 39 - case: Non-Canonical Parsing - Lowercase Exponent Identifier
# Subtest: case: Non-Canonical Parsing - Long Significand with Exponent
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 40 - case: Non-Canonical Parsing - Long Significand with Exponent
# Subtest: case: Non-Canonical Parsing - Positive Sign
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 41 - case: Non-Canonical Parsing - Positive Sign
# Subtest: case: Non-Canonical Parsing - Long Decimal String
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 42 - case: Non-Canonical Parsing - Long Decimal String
# Subtest: case: Non-Canonical Parsing - nan
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 43 - case: Non-Canonical Parsing - nan
# Subtest: case: Non-Canonical Parsing - nAn
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 44 - case: Non-Canonical Parsing - nAn
# Subtest: case: Non-Canonical Parsing - +infinity
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 45 - case: Non-Canonical Parsing - +infinity
# Subtest: case: Non-Canonical Parsing - infinity
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 46 - case: Non-Canonical Parsing - infinity
# Subtest: case: Non-Canonical Parsing - infiniTY
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 47 - case: Non-Canonical Parsing - infiniTY
# Subtest: case: Non-Canonical Parsing - inf
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 48 - case: Non-Canonical Parsing - inf
# Subtest: case: Non-Canonical Parsing - inF
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 49 - case: Non-Canonical Parsing - inF
# Subtest: case: Non-Canonical Parsing - -infinity
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 50 - case: Non-Canonical Parsing - -infinity
# Subtest: case: Non-Canonical Parsing - -infiniTy
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 51 - case: Non-Canonical Parsing - -infiniTy
# Subtest: case: Non-Canonical Parsing - -Inf
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 52 - case: Non-Canonical Parsing - -Inf
# Subtest: case: Non-Canonical Parsing - -inf
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 53 - case: Non-Canonical Parsing - -inf
# Subtest: case: Non-Canonical Parsing - -inF
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 54 - case: Non-Canonical Parsing - -inF
# Subtest: case: Rounded Subnormal number
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 55 - case: Rounded Subnormal number
# Subtest: case: Clamped
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 56 - case: Clamped
# Subtest: case: Exact rounding
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 57 - case: Exact rounding
1..57
ok
t/corpus/decimal128-2.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: [decq021] Normality
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: [decq021] Normality
# Subtest: case: [decq823] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: [decq823] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq822] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: [decq822] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq821] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: [decq821] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq820] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: [decq820] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq152] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: [decq152] fold-downs (more below)
# Subtest: case: [decq154] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: [decq154] fold-downs (more below)
# Subtest: case: [decq006] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: [decq006] derivative canonical plain strings
# Subtest: case: [decq164] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 10 - case: [decq164] fold-downs (more below)
# Subtest: case: [decq156] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 11 - case: [decq156] fold-downs (more below)
# Subtest: case: [decq008] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 12 - case: [decq008] derivative canonical plain strings
# Subtest: case: [decq158] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 13 - case: [decq158] fold-downs (more below)
# Subtest: case: [decq122] Nmax and similar
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 14 - case: [decq122] Nmax and similar
# Subtest: case: [decq002] (mostly derived from the Strawman 4 document and examples)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 15 - case: [decq002] (mostly derived from the Strawman 4 document and examples)
# Subtest: case: [decq004] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 16 - case: [decq004] derivative canonical plain strings
# Subtest: case: [decq018] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 17 - case: [decq018] derivative canonical plain strings
# Subtest: case: [decq125] Nmax and similar
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 18 - case: [decq125] Nmax and similar
# Subtest: case: [decq131] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 19 - case: [decq131] fold-downs (more below)
# Subtest: case: [decq162] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 20 - case: [decq162] fold-downs (more below)
# Subtest: case: [decq176] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 21 - case: [decq176] Nmin and below
# Subtest: case: [decq174] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 22 - case: [decq174] Nmin and below
# Subtest: case: [decq133] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 23 - case: [decq133] fold-downs (more below)
# Subtest: case: [decq160] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 24 - case: [decq160] fold-downs (more below)
# Subtest: case: [decq172] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 25 - case: [decq172] Nmin and below
# Subtest: case: [decq010] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 26 - case: [decq010] derivative canonical plain strings
# Subtest: case: [decq012] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 27 - case: [decq012] derivative canonical plain strings
# Subtest: case: [decq014] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 28 - case: [decq014] derivative canonical plain strings
# Subtest: case: [decq016] derivative canonical plain strings
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 29 - case: [decq016] derivative canonical plain strings
# Subtest: case: [decq404] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 30 - case: [decq404] zeros
# Subtest: case: [decq424] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 31 - case: [decq424] negative zeros
# Subtest: case: [decq407] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 32 - case: [decq407] zeros
# Subtest: case: [decq427] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 33 - case: [decq427] negative zeros
# Subtest: case: [decq409] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 34 - case: [decq409] zeros
# Subtest: case: [decq428] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 35 - case: [decq428] negative zeros
# Subtest: case: [decq700] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 36 - case: [decq700] Selected DPD codes
# Subtest: case: [decq406] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 37 - case: [decq406] zeros
# Subtest: case: [decq426] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 38 - case: [decq426] negative zeros
# Subtest: case: [decq410] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 39 - case: [decq410] zeros
# Subtest: case: [decq431] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 40 - case: [decq431] negative zeros
# Subtest: case: [decq419] clamped zeros...
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 41 - case: [decq419] clamped zeros...
# Subtest: case: [decq432] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 42 - case: [decq432] negative zeros
# Subtest: case: [decq405] zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 43 - case: [decq405] zeros
# Subtest: case: [decq425] negative zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 44 - case: [decq425] negative zeros
# Subtest: case: [decq508] Specials
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 45 - case: [decq508] Specials
# Subtest: case: [decq528] Specials
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 46 - case: [decq528] Specials
# Subtest: case: [decq541] Specials
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 47 - case: [decq541] Specials
# Subtest: case: [decq074] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 48 - case: [decq074] Nmin and below
# Subtest: case: [decq602] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 49 - case: [decq602] fold-down full sequence
# Subtest: case: [decq604] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 50 - case: [decq604] fold-down full sequence
# Subtest: case: [decq606] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 51 - case: [decq606] fold-down full sequence
# Subtest: case: [decq608] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 52 - case: [decq608] fold-down full sequence
# Subtest: case: [decq610] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 53 - case: [decq610] fold-down full sequence
# Subtest: case: [decq612] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 54 - case: [decq612] fold-down full sequence
# Subtest: case: [decq614] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 55 - case: [decq614] fold-down full sequence
# Subtest: case: [decq616] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 56 - case: [decq616] fold-down full sequence
# Subtest: case: [decq618] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 57 - case: [decq618] fold-down full sequence
# Subtest: case: [decq620] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 58 - case: [decq620] fold-down full sequence
# Subtest: case: [decq622] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 59 - case: [decq622] fold-down full sequence
# Subtest: case: [decq624] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 60 - case: [decq624] fold-down full sequence
# Subtest: case: [decq626] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 61 - case: [decq626] fold-down full sequence
# Subtest: case: [decq628] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 62 - case: [decq628] fold-down full sequence
# Subtest: case: [decq630] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 63 - case: [decq630] fold-down full sequence
# Subtest: case: [decq632] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 64 - case: [decq632] fold-down full sequence
# Subtest: case: [decq634] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 65 - case: [decq634] fold-down full sequence
# Subtest: case: [decq636] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 66 - case: [decq636] fold-down full sequence
# Subtest: case: [decq638] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 67 - case: [decq638] fold-down full sequence
# Subtest: case: [decq640] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 68 - case: [decq640] fold-down full sequence
# Subtest: case: [decq642] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 69 - case: [decq642] fold-down full sequence
# Subtest: case: [decq644] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 70 - case: [decq644] fold-down full sequence
# Subtest: case: [decq646] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 71 - case: [decq646] fold-down full sequence
# Subtest: case: [decq648] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 72 - case: [decq648] fold-down full sequence
# Subtest: case: [decq650] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 73 - case: [decq650] fold-down full sequence
# Subtest: case: [decq652] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 74 - case: [decq652] fold-down full sequence
# Subtest: case: [decq654] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 75 - case: [decq654] fold-down full sequence
# Subtest: case: [decq656] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 76 - case: [decq656] fold-down full sequence
# Subtest: case: [decq658] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 77 - case: [decq658] fold-down full sequence
# Subtest: case: [decq660] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 78 - case: [decq660] fold-down full sequence
# Subtest: case: [decq662] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 79 - case: [decq662] fold-down full sequence
# Subtest: case: [decq664] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 80 - case: [decq664] fold-down full sequence
# Subtest: case: [decq666] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 81 - case: [decq666] fold-down full sequence
# Subtest: case: [decq060] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 82 - case: [decq060] fold-downs (more below)
# Subtest: case: [decq670] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 83 - case: [decq670] fold-down full sequence
# Subtest: case: [decq668] fold-down full sequence
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 84 - case: [decq668] fold-down full sequence
# Subtest: case: [decq072] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 85 - case: [decq072] Nmin and below
# Subtest: case: [decq076] Nmin and below
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 86 - case: [decq076] Nmin and below
# Subtest: case: [decq036] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 87 - case: [decq036] fold-downs (more below)
# Subtest: case: [decq062] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 88 - case: [decq062] fold-downs (more below)
# Subtest: case: [decq034] Nmax and similar
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 89 - case: [decq034] Nmax and similar
# Subtest: case: [decq441] exponent lengths
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 90 - case: [decq441] exponent lengths
# Subtest: case: [decq449] exponent lengths
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 91 - case: [decq449] exponent lengths
# Subtest: case: [decq447] exponent lengths
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 92 - case: [decq447] exponent lengths
# Subtest: case: [decq445] exponent lengths
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 93 - case: [decq445] exponent lengths
# Subtest: case: [decq443] exponent lengths
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 94 - case: [decq443] exponent lengths
# Subtest: case: [decq842] VG testcase
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 95 - case: [decq842] VG testcase
# Subtest: case: [decq841] VG testcase
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 96 - case: [decq841] VG testcase
# Subtest: case: [decq840] VG testcase
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 97 - case: [decq840] VG testcase
# Subtest: case: [decq701] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 98 - case: [decq701] Selected DPD codes
# Subtest: case: [decq032] Nmax and similar
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 99 - case: [decq032] Nmax and similar
# Subtest: case: [decq702] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 100 - case: [decq702] Selected DPD codes
# Subtest: case: [decq057] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 101 - case: [decq057] fold-downs (more below)
# Subtest: case: [decq703] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 102 - case: [decq703] Selected DPD codes
# Subtest: case: [decq704] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 103 - case: [decq704] Selected DPD codes
# Subtest: case: [decq705] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 104 - case: [decq705] Selected DPD codes
# Subtest: case: [decq706] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 105 - case: [decq706] Selected DPD codes
# Subtest: case: [decq707] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 106 - case: [decq707] Selected DPD codes
# Subtest: case: [decq708] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 107 - case: [decq708] Selected DPD codes
# Subtest: case: [decq709] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 108 - case: [decq709] Selected DPD codes
# Subtest: case: [decq710] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 109 - case: [decq710] Selected DPD codes
# Subtest: case: [decq711] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 110 - case: [decq711] Selected DPD codes
# Subtest: case: [decq712] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 111 - case: [decq712] Selected DPD codes
# Subtest: case: [decq713] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 112 - case: [decq713] Selected DPD codes
# Subtest: case: [decq714] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 113 - case: [decq714] Selected DPD codes
# Subtest: case: [decq715] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 114 - case: [decq715] Selected DPD codes
# Subtest: case: [decq716] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 115 - case: [decq716] Selected DPD codes
# Subtest: case: [decq717] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 116 - case: [decq717] Selected DPD codes
# Subtest: case: [decq718] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 117 - case: [decq718] Selected DPD codes
# Subtest: case: [decq719] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 118 - case: [decq719] Selected DPD codes
# Subtest: case: [decq720] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 119 - case: [decq720] Selected DPD codes
# Subtest: case: [decq721] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 120 - case: [decq721] Selected DPD codes
# Subtest: case: [decq722] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 121 - case: [decq722] Selected DPD codes
# Subtest: case: [decq723] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 122 - case: [decq723] Selected DPD codes
# Subtest: case: [decq056] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 123 - case: [decq056] fold-downs (more below)
# Subtest: case: [decq064] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 124 - case: [decq064] fold-downs (more below)
# Subtest: case: [decq732] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 125 - case: [decq732] Selected DPD codes
# Subtest: case: [decq733] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 126 - case: [decq733] Selected DPD codes
# Subtest: case: [decq740] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 127 - case: [decq740] DPD: one of each of the huffman groups
# Subtest: case: [decq741] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 128 - case: [decq741] DPD: one of each of the huffman groups
# Subtest: case: [decq742] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 129 - case: [decq742] DPD: one of each of the huffman groups
# Subtest: case: [decq746] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 130 - case: [decq746] DPD: one of each of the huffman groups
# Subtest: case: [decq743] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 131 - case: [decq743] DPD: one of each of the huffman groups
# Subtest: case: [decq753] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 132 - case: [decq753] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq754] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 133 - case: [decq754] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq760] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 134 - case: [decq760] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq764] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 135 - case: [decq764] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq745] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 136 - case: [decq745] DPD: one of each of the huffman groups
# Subtest: case: [decq770] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 137 - case: [decq770] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq774] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 138 - case: [decq774] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq730] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 139 - case: [decq730] Selected DPD codes
# Subtest: case: [decq731] Selected DPD codes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 140 - case: [decq731] Selected DPD codes
# Subtest: case: [decq744] DPD: one of each of the huffman groups
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 141 - case: [decq744] DPD: one of each of the huffman groups
# Subtest: case: [decq780] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 142 - case: [decq780] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq787] DPD all-highs cases (includes the 24 redundant codes)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 143 - case: [decq787] DPD all-highs cases (includes the 24 redundant codes)
# Subtest: case: [decq053] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 144 - case: [decq053] fold-downs (more below)
# Subtest: case: [decq052] fold-downs (more below)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 145 - case: [decq052] fold-downs (more below)
# Subtest: case: [decq792] Miscellaneous (testers' queries, etc.)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 146 - case: [decq792] Miscellaneous (testers' queries, etc.)
# Subtest: case: [decq793] Miscellaneous (testers' queries, etc.)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 147 - case: [decq793] Miscellaneous (testers' queries, etc.)
# Subtest: case: [decq824] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 148 - case: [decq824] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq825] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 149 - case: [decq825] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq826] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 150 - case: [decq826] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq827] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 151 - case: [decq827] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq828] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 152 - case: [decq828] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq829] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 153 - case: [decq829] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq830] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 154 - case: [decq830] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq831] values around [u]int32 edges (zeros done earlier)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 155 - case: [decq831] values around [u]int32 edges (zeros done earlier)
# Subtest: case: [decq022] Normality
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 156 - case: [decq022] Normality
# Subtest: case: [decq020] Normality
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 157 - case: [decq020] Normality
# Subtest: case: [decq550] Specials
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 158 - case: [decq550] Specials
1..158
ok
t/corpus/decimal128-3.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: [basx066] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 2 - case: [basx066] strings without E cannot generate E in result
# Subtest: case: [basx065] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: [basx065] strings without E cannot generate E in result
# Subtest: case: [basx064] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: [basx064] strings without E cannot generate E in result
# Subtest: case: [basx041] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: [basx041] strings without E cannot generate E in result
# Subtest: case: [basx027] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: [basx027] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx026] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: [basx026] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx025] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: [basx025] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx024] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: [basx024] conform to rules and exponent will be in permitted range).
# Subtest: case: [dqbsr531] negatives (Rounded)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 10 - case: [dqbsr531] negatives (Rounded)
# Subtest: case: [basx022] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 11 - case: [basx022] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx021] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 12 - case: [basx021] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx601] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 13 - case: [basx601] Zeros
# Subtest: case: [basx622] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 14 - case: [basx622] Zeros
# Subtest: case: [basx602] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 15 - case: [basx602] Zeros
# Subtest: case: [basx621] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 16 - case: [basx621] Zeros
# Subtest: case: [basx603] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 17 - case: [basx603] Zeros
# Subtest: case: [basx620] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 18 - case: [basx620] Zeros
# Subtest: case: [basx604] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 19 - case: [basx604] Zeros
# Subtest: case: [basx619] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 20 - case: [basx619] Zeros
# Subtest: case: [basx605] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 21 - case: [basx605] Zeros
# Subtest: case: [basx618] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 22 - case: [basx618] Zeros
# Subtest: case: [basx680] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 23 - case: [basx680] Zeros
# Subtest: case: [basx606] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 24 - case: [basx606] Zeros
# Subtest: case: [basx617] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 25 - case: [basx617] Zeros
# Subtest: case: [basx681] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 26 - case: [basx681] Zeros
# Subtest: case: [basx686] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 27 - case: [basx686] Zeros
# Subtest: case: [basx687] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 28 - case: [basx687] Zeros
# Subtest: case: [basx019] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 29 - case: [basx019] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx607] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 30 - case: [basx607] Zeros
# Subtest: case: [basx616] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 31 - case: [basx616] Zeros
# Subtest: case: [basx682] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 32 - case: [basx682] Zeros
# Subtest: case: [basx155] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 33 - case: [basx155] Numbers with E
# Subtest: case: [basx130] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 34 - case: [basx130] Numbers with E
# Subtest: case: [basx290] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 35 - case: [basx290] some more negative zeros [systematic tests below]
# Subtest: case: [basx131] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 36 - case: [basx131] Numbers with E
# Subtest: case: [basx291] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 37 - case: [basx291] some more negative zeros [systematic tests below]
# Subtest: case: [basx132] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 38 - case: [basx132] Numbers with E
# Subtest: case: [basx292] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 39 - case: [basx292] some more negative zeros [systematic tests below]
# Subtest: case: [basx133] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 40 - case: [basx133] Numbers with E
# Subtest: case: [basx293] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 41 - case: [basx293] some more negative zeros [systematic tests below]
# Subtest: case: [basx608] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 42 - case: [basx608] Zeros
# Subtest: case: [basx615] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 43 - case: [basx615] Zeros
# Subtest: case: [basx683] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 44 - case: [basx683] Zeros
# Subtest: case: [basx630] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 45 - case: [basx630] Zeros
# Subtest: case: [basx670] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 46 - case: [basx670] Zeros
# Subtest: case: [basx631] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 47 - case: [basx631] Zeros
# Subtest: case: [basx671] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 48 - case: [basx671] Zeros
# Subtest: case: [basx134] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 49 - case: [basx134] Numbers with E
# Subtest: case: [basx294] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 50 - case: [basx294] some more negative zeros [systematic tests below]
# Subtest: case: [basx632] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 51 - case: [basx632] Zeros
# Subtest: case: [basx672] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 52 - case: [basx672] Zeros
# Subtest: case: [basx135] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 53 - case: [basx135] Numbers with E
# Subtest: case: [basx295] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 54 - case: [basx295] some more negative zeros [systematic tests below]
# Subtest: case: [basx633] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 55 - case: [basx633] Zeros
# Subtest: case: [basx673] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 56 - case: [basx673] Zeros
# Subtest: case: [basx136] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 57 - case: [basx136] Numbers with E
# Subtest: case: [basx674] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 58 - case: [basx674] Zeros
# Subtest: case: [basx634] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 59 - case: [basx634] Zeros
# Subtest: case: [basx137] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 60 - case: [basx137] Numbers with E
# Subtest: case: [basx635] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 61 - case: [basx635] Zeros
# Subtest: case: [basx675] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 62 - case: [basx675] Zeros
# Subtest: case: [basx636] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 63 - case: [basx636] Zeros
# Subtest: case: [basx676] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 64 - case: [basx676] Zeros
# Subtest: case: [basx637] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 65 - case: [basx637] Zeros
# Subtest: case: [basx677] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 66 - case: [basx677] Zeros
# Subtest: case: [basx638] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 67 - case: [basx638] Zeros
# Subtest: case: [basx678] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 68 - case: [basx678] Zeros
# Subtest: case: [basx149] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 69 - case: [basx149] Numbers with E
# Subtest: case: [basx639] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 70 - case: [basx639] Zeros
# Subtest: case: [basx679] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 71 - case: [basx679] Zeros
# Subtest: case: [basx063] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 72 - case: [basx063] strings without E cannot generate E in result
# Subtest: case: [basx018] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 73 - case: [basx018] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx609] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 74 - case: [basx609] Zeros
# Subtest: case: [basx614] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 75 - case: [basx614] Zeros
# Subtest: case: [basx684] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 76 - case: [basx684] Zeros
# Subtest: case: [basx640] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 77 - case: [basx640] Zeros
# Subtest: case: [basx660] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 78 - case: [basx660] Zeros
# Subtest: case: [basx641] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 79 - case: [basx641] Zeros
# Subtest: case: [basx661] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 80 - case: [basx661] Zeros
# Subtest: case: [basx296] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 81 - case: [basx296] some more negative zeros [systematic tests below]
# Subtest: case: [basx642] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 82 - case: [basx642] Zeros
# Subtest: case: [basx662] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 83 - case: [basx662] Zeros
# Subtest: case: [basx297] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 84 - case: [basx297] some more negative zeros [systematic tests below]
# Subtest: case: [basx643] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 85 - case: [basx643] Zeros
# Subtest: case: [basx663] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 86 - case: [basx663] Zeros
# Subtest: case: [basx644] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 87 - case: [basx644] Zeros
# Subtest: case: [basx664] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 88 - case: [basx664] Zeros
# Subtest: case: [basx645] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 89 - case: [basx645] Zeros
# Subtest: case: [basx665] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 90 - case: [basx665] Zeros
# Subtest: case: [basx646] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 91 - case: [basx646] Zeros
# Subtest: case: [basx666] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 92 - case: [basx666] Zeros
# Subtest: case: [basx647] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 93 - case: [basx647] Zeros
# Subtest: case: [basx667] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 94 - case: [basx667] Zeros
# Subtest: case: [basx648] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 95 - case: [basx648] Zeros
# Subtest: case: [basx668] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 96 - case: [basx668] Zeros
# Subtest: case: [basx160] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 97 - case: [basx160] Numbers with E
# Subtest: case: [basx161] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 98 - case: [basx161] Numbers with E
# Subtest: case: [basx649] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 99 - case: [basx649] Zeros
# Subtest: case: [basx669] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 100 - case: [basx669] Zeros
# Subtest: case: [basx062] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 101 - case: [basx062] strings without E cannot generate E in result
# Subtest: case: [basx001] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 102 - case: [basx001] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx017] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 103 - case: [basx017] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx611] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 104 - case: [basx611] Zeros
# Subtest: case: [basx613] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 105 - case: [basx613] Zeros
# Subtest: case: [basx685] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 106 - case: [basx685] Zeros
# Subtest: case: [basx688] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 107 - case: [basx688] Zeros
# Subtest: case: [basx689] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 108 - case: [basx689] Zeros
# Subtest: case: [basx650] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 109 - case: [basx650] Zeros
# Subtest: case: [basx651] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 110 - case: [basx651] Zeros
# Subtest: case: [basx298] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 111 - case: [basx298] some more negative zeros [systematic tests below]
# Subtest: case: [basx652] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 112 - case: [basx652] Zeros
# Subtest: case: [basx299] some more negative zeros [systematic tests below]
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 113 - case: [basx299] some more negative zeros [systematic tests below]
# Subtest: case: [basx653] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 114 - case: [basx653] Zeros
# Subtest: case: [basx654] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 115 - case: [basx654] Zeros
# Subtest: case: [basx655] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 116 - case: [basx655] Zeros
# Subtest: case: [basx656] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 117 - case: [basx656] Zeros
# Subtest: case: [basx657] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 118 - case: [basx657] Zeros
# Subtest: case: [basx658] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 119 - case: [basx658] Zeros
# Subtest: case: [basx138] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 120 - case: [basx138] Numbers with E
# Subtest: case: [basx139] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 121 - case: [basx139] Numbers with E
# Subtest: case: [basx144] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 122 - case: [basx144] Numbers with E
# Subtest: case: [basx154] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 123 - case: [basx154] Numbers with E
# Subtest: case: [basx659] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 124 - case: [basx659] Zeros
# Subtest: case: [basx042] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 125 - case: [basx042] strings without E cannot generate E in result
# Subtest: case: [basx143] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 126 - case: [basx143] Numbers with E
# Subtest: case: [basx061] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 127 - case: [basx061] strings without E cannot generate E in result
# Subtest: case: [basx036] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 128 - case: [basx036] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx035] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 129 - case: [basx035] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx034] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 130 - case: [basx034] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx053] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 131 - case: [basx053] strings without E cannot generate E in result
# Subtest: case: [basx033] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 132 - case: [basx033] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx016] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 133 - case: [basx016] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx015] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 134 - case: [basx015] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx037] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 135 - case: [basx037] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx038] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 136 - case: [basx038] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx250] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 137 - case: [basx250] Numbers with E
# Subtest: case: [basx257] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 138 - case: [basx257] Numbers with E
# Subtest: case: [basx256] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 139 - case: [basx256] Numbers with E
# Subtest: case: [basx258] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 140 - case: [basx258] Numbers with E
# Subtest: case: [basx251] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 141 - case: [basx251] Numbers with E
# Subtest: case: [basx263] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 142 - case: [basx263] Numbers with E
# Subtest: case: [basx255] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 143 - case: [basx255] Numbers with E
# Subtest: case: [basx259] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 144 - case: [basx259] Numbers with E
# Subtest: case: [basx254] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 145 - case: [basx254] Numbers with E
# Subtest: case: [basx260] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 146 - case: [basx260] Numbers with E
# Subtest: case: [basx253] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 147 - case: [basx253] Numbers with E
# Subtest: case: [basx261] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 148 - case: [basx261] Numbers with E
# Subtest: case: [basx252] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 149 - case: [basx252] Numbers with E
# Subtest: case: [basx262] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 150 - case: [basx262] Numbers with E
# Subtest: case: [basx159] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 151 - case: [basx159] Numbers with E
# Subtest: case: [basx004] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 152 - case: [basx004] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx003] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 153 - case: [basx003] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx002] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 154 - case: [basx002] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx148] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 155 - case: [basx148] Numbers with E
# Subtest: case: [basx153] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 156 - case: [basx153] Numbers with E
# Subtest: case: [basx141] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 157 - case: [basx141] Numbers with E
# Subtest: case: [basx146] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 158 - case: [basx146] Numbers with E
# Subtest: case: [basx151] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 159 - case: [basx151] Numbers with E
# Subtest: case: [basx142] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 160 - case: [basx142] Numbers with E
# Subtest: case: [basx147] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 161 - case: [basx147] Numbers with E
# Subtest: case: [basx152] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 162 - case: [basx152] Numbers with E
# Subtest: case: [basx140] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 163 - case: [basx140] Numbers with E
# Subtest: case: [basx150] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 164 - case: [basx150] Numbers with E
# Subtest: case: [basx014] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 165 - case: [basx014] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx170] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 166 - case: [basx170] Numbers with E
# Subtest: case: [basx177] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 167 - case: [basx177] Numbers with E
# Subtest: case: [basx176] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 168 - case: [basx176] Numbers with E
# Subtest: case: [basx178] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 169 - case: [basx178] Numbers with E
# Subtest: case: [basx171] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 170 - case: [basx171] Numbers with E
# Subtest: case: [basx183] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 171 - case: [basx183] Numbers with E
# Subtest: case: [basx175] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 172 - case: [basx175] Numbers with E
# Subtest: case: [basx179] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 173 - case: [basx179] Numbers with E
# Subtest: case: [basx174] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 174 - case: [basx174] Numbers with E
# Subtest: case: [basx180] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 175 - case: [basx180] Numbers with E
# Subtest: case: [basx173] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 176 - case: [basx173] Numbers with E
# Subtest: case: [basx181] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 177 - case: [basx181] Numbers with E
# Subtest: case: [basx172] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 178 - case: [basx172] Numbers with E
# Subtest: case: [basx182] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 179 - case: [basx182] Numbers with E
# Subtest: case: [basx157] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 180 - case: [basx157] Numbers with E
# Subtest: case: [basx067] examples
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 181 - case: [basx067] examples
# Subtest: case: [basx069] examples
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 182 - case: [basx069] examples
# Subtest: case: [basx385] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 183 - case: [basx385] Engineering notation tests
# Subtest: case: [basx365] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 184 - case: [basx365] Engineering notation tests
# Subtest: case: [basx405] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 185 - case: [basx405] Engineering notation tests
# Subtest: case: [basx363] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 186 - case: [basx363] Engineering notation tests
# Subtest: case: [basx407] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 187 - case: [basx407] Engineering notation tests
# Subtest: case: [basx361] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 188 - case: [basx361] Engineering notation tests
# Subtest: case: [basx409] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 189 - case: [basx409] Engineering notation tests
# Subtest: case: [basx411] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 190 - case: [basx411] Engineering notation tests
# Subtest: case: [basx383] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 191 - case: [basx383] Engineering notation tests
# Subtest: case: [basx387] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 192 - case: [basx387] Engineering notation tests
# Subtest: case: [basx381] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 193 - case: [basx381] Engineering notation tests
# Subtest: case: [basx389] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 194 - case: [basx389] Engineering notation tests
# Subtest: case: [basx379] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 195 - case: [basx379] Engineering notation tests
# Subtest: case: [basx391] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 196 - case: [basx391] Engineering notation tests
# Subtest: case: [basx377] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 197 - case: [basx377] Engineering notation tests
# Subtest: case: [basx393] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 198 - case: [basx393] Engineering notation tests
# Subtest: case: [basx375] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 199 - case: [basx375] Engineering notation tests
# Subtest: case: [basx395] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 200 - case: [basx395] Engineering notation tests
# Subtest: case: [basx373] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 201 - case: [basx373] Engineering notation tests
# Subtest: case: [basx397] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 202 - case: [basx397] Engineering notation tests
# Subtest: case: [basx371] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 203 - case: [basx371] Engineering notation tests
# Subtest: case: [basx399] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 204 - case: [basx399] Engineering notation tests
# Subtest: case: [basx369] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 205 - case: [basx369] Engineering notation tests
# Subtest: case: [basx401] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 206 - case: [basx401] Engineering notation tests
# Subtest: case: [basx367] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 207 - case: [basx367] Engineering notation tests
# Subtest: case: [basx403] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 208 - case: [basx403] Engineering notation tests
# Subtest: case: [basx007] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 209 - case: [basx007] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx005] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 210 - case: [basx005] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx165] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 211 - case: [basx165] Numbers with E
# Subtest: case: [basx163] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 212 - case: [basx163] Numbers with E
# Subtest: case: [basx325] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 213 - case: [basx325] Engineering notation tests
# Subtest: case: [basx305] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 214 - case: [basx305] Engineering notation tests
# Subtest: case: [basx345] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 215 - case: [basx345] Engineering notation tests
# Subtest: case: [basx303] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 216 - case: [basx303] Engineering notation tests
# Subtest: case: [basx347] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 217 - case: [basx347] Engineering notation tests
# Subtest: case: [basx301] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 218 - case: [basx301] Engineering notation tests
# Subtest: case: [basx349] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 219 - case: [basx349] Engineering notation tests
# Subtest: case: [basx351] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 220 - case: [basx351] Engineering notation tests
# Subtest: case: [basx323] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 221 - case: [basx323] Engineering notation tests
# Subtest: case: [basx327] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 222 - case: [basx327] Engineering notation tests
# Subtest: case: [basx321] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 223 - case: [basx321] Engineering notation tests
# Subtest: case: [basx329] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 224 - case: [basx329] Engineering notation tests
# Subtest: case: [basx319] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 225 - case: [basx319] Engineering notation tests
# Subtest: case: [basx331] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 226 - case: [basx331] Engineering notation tests
# Subtest: case: [basx317] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 227 - case: [basx317] Engineering notation tests
# Subtest: case: [basx333] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 228 - case: [basx333] Engineering notation tests
# Subtest: case: [basx315] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 229 - case: [basx315] Engineering notation tests
# Subtest: case: [basx335] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 230 - case: [basx335] Engineering notation tests
# Subtest: case: [basx313] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 231 - case: [basx313] Engineering notation tests
# Subtest: case: [basx337] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 232 - case: [basx337] Engineering notation tests
# Subtest: case: [basx311] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 233 - case: [basx311] Engineering notation tests
# Subtest: case: [basx339] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 234 - case: [basx339] Engineering notation tests
# Subtest: case: [basx309] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 235 - case: [basx309] Engineering notation tests
# Subtest: case: [basx341] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 236 - case: [basx341] Engineering notation tests
# Subtest: case: [basx164] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 237 - case: [basx164] Numbers with E
# Subtest: case: [basx162] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 238 - case: [basx162] Numbers with E
# Subtest: case: [basx307] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 239 - case: [basx307] Engineering notation tests
# Subtest: case: [basx343] Engineering notation tests
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 240 - case: [basx343] Engineering notation tests
# Subtest: case: [basx008] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 241 - case: [basx008] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx009] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 242 - case: [basx009] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx010] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 243 - case: [basx010] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx011] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 244 - case: [basx011] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx012] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 245 - case: [basx012] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx013] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 246 - case: [basx013] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx040] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 247 - case: [basx040] strings without E cannot generate E in result
# Subtest: case: [basx190] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 248 - case: [basx190] Numbers with E
# Subtest: case: [basx197] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 249 - case: [basx197] Numbers with E
# Subtest: case: [basx196] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 250 - case: [basx196] Numbers with E
# Subtest: case: [basx198] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 251 - case: [basx198] Numbers with E
# Subtest: case: [basx191] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 252 - case: [basx191] Numbers with E
# Subtest: case: [basx203] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 253 - case: [basx203] Numbers with E
# Subtest: case: [basx195] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 254 - case: [basx195] Numbers with E
# Subtest: case: [basx199] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 255 - case: [basx199] Numbers with E
# Subtest: case: [basx194] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 256 - case: [basx194] Numbers with E
# Subtest: case: [basx200] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 257 - case: [basx200] Numbers with E
# Subtest: case: [basx193] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 258 - case: [basx193] Numbers with E
# Subtest: case: [basx201] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 259 - case: [basx201] Numbers with E
# Subtest: case: [basx192] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 260 - case: [basx192] Numbers with E
# Subtest: case: [basx202] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 261 - case: [basx202] Numbers with E
# Subtest: case: [basx044] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 262 - case: [basx044] strings without E cannot generate E in result
# Subtest: case: [basx042] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 263 - case: [basx042] strings without E cannot generate E in result
# Subtest: case: [basx046] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 264 - case: [basx046] strings without E cannot generate E in result
# Subtest: case: [basx049] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 265 - case: [basx049] strings without E cannot generate E in result
# Subtest: case: [basx048] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 266 - case: [basx048] strings without E cannot generate E in result
# Subtest: case: [basx158] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 267 - case: [basx158] Numbers with E
# Subtest: case: [basx068] examples
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 268 - case: [basx068] examples
# Subtest: case: [basx169] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 269 - case: [basx169] Numbers with E
# Subtest: case: [basx167] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 270 - case: [basx167] Numbers with E
# Subtest: case: [basx168] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 271 - case: [basx168] Numbers with E
# Subtest: case: [basx166] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 272 - case: [basx166] Numbers with E
# Subtest: case: [basx210] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 273 - case: [basx210] Numbers with E
# Subtest: case: [basx217] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 274 - case: [basx217] Numbers with E
# Subtest: case: [basx216] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 275 - case: [basx216] Numbers with E
# Subtest: case: [basx218] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 276 - case: [basx218] Numbers with E
# Subtest: case: [basx211] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 277 - case: [basx211] Numbers with E
# Subtest: case: [basx223] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 278 - case: [basx223] Numbers with E
# Subtest: case: [basx215] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 279 - case: [basx215] Numbers with E
# Subtest: case: [basx219] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 280 - case: [basx219] Numbers with E
# Subtest: case: [basx214] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 281 - case: [basx214] Numbers with E
# Subtest: case: [basx220] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 282 - case: [basx220] Numbers with E
# Subtest: case: [basx213] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 283 - case: [basx213] Numbers with E
# Subtest: case: [basx221] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 284 - case: [basx221] Numbers with E
# Subtest: case: [basx212] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 285 - case: [basx212] Numbers with E
# Subtest: case: [basx222] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 286 - case: [basx222] Numbers with E
# Subtest: case: [basx006] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 287 - case: [basx006] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx230] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 288 - case: [basx230] Numbers with E
# Subtest: case: [basx237] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 289 - case: [basx237] Numbers with E
# Subtest: case: [basx236] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 290 - case: [basx236] Numbers with E
# Subtest: case: [basx238] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 291 - case: [basx238] Numbers with E
# Subtest: case: [basx231] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 292 - case: [basx231] Numbers with E
# Subtest: case: [basx243] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 293 - case: [basx243] Numbers with E
# Subtest: case: [basx235] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 294 - case: [basx235] Numbers with E
# Subtest: case: [basx239] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 295 - case: [basx239] Numbers with E
# Subtest: case: [basx234] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 296 - case: [basx234] Numbers with E
# Subtest: case: [basx240] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 297 - case: [basx240] Numbers with E
# Subtest: case: [basx233] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 298 - case: [basx233] Numbers with E
# Subtest: case: [basx241] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 299 - case: [basx241] Numbers with E
# Subtest: case: [basx232] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 300 - case: [basx232] Numbers with E
# Subtest: case: [basx242] Numbers with E
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 301 - case: [basx242] Numbers with E
# Subtest: case: [basx060] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 302 - case: [basx060] strings without E cannot generate E in result
# Subtest: case: [basx059] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 303 - case: [basx059] strings without E cannot generate E in result
# Subtest: case: [basx058] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 304 - case: [basx058] strings without E cannot generate E in result
# Subtest: case: [basx057] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 305 - case: [basx057] strings without E cannot generate E in result
# Subtest: case: [basx056] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 306 - case: [basx056] strings without E cannot generate E in result
# Subtest: case: [basx031] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 307 - case: [basx031] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx030] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 308 - case: [basx030] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx032] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 309 - case: [basx032] conform to rules and exponent will be in permitted range).
1..309
ok
t/corpus/decimal128-4.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: [basx023] conform to rules and exponent will be in permitted range).
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: [basx023] conform to rules and exponent will be in permitted range).
# Subtest: case: [basx045] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: [basx045] strings without E cannot generate E in result
# Subtest: case: [basx610] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 4 - case: [basx610] Zeros
# Subtest: case: [basx612] Zeros
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 5 - case: [basx612] Zeros
# Subtest: case: [basx043] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 6 - case: [basx043] strings without E cannot generate E in result
# Subtest: case: [basx055] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 7 - case: [basx055] strings without E cannot generate E in result
# Subtest: case: [basx054] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 8 - case: [basx054] strings without E cannot generate E in result
# Subtest: case: [basx052] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: [basx052] strings without E cannot generate E in result
# Subtest: case: [basx051] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 10 - case: [basx051] strings without E cannot generate E in result
# Subtest: case: [basx050] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 11 - case: [basx050] strings without E cannot generate E in result
# Subtest: case: [basx047] strings without E cannot generate E in result
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 12 - case: [basx047] strings without E cannot generate E in result
# Subtest: case: [dqbsr431] check rounding modes heeded (Rounded)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 13 - case: [dqbsr431] check rounding modes heeded (Rounded)
# Subtest: case: OK2
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 14 - case: OK2
ok 15 - [basx564] Near-specials (Conversion_syntax): parse should throw an error 
ok 16 - [basx565] Near-specials (Conversion_syntax): parse should throw an error 
ok 17 - [basx566] Near-specials (Conversion_syntax): parse should throw an error 
ok 18 - [basx567] Near-specials (Conversion_syntax): parse should throw an error 
ok 19 - [basx568] Near-specials (Conversion_syntax): parse should throw an error 
ok 20 - [basx590] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 21 - [basx562] Near-specials (Conversion_syntax): parse should throw an error 
ok 22 - [basx563] Near-specials (Conversion_syntax): parse should throw an error 
ok 23 - [dqbas939] overflow results at different rounding modes (Overflow & Inexact & Rounded): parse should throw an error 
ok 24 - [dqbsr534] negatives (Rounded & Inexact): parse should throw an error 
ok 25 - [dqbsr535] negatives (Rounded & Inexact): parse should throw an error 
ok 26 - [dqbsr533] negatives (Rounded & Inexact): parse should throw an error 
ok 27 - [dqbsr532] negatives (Rounded & Inexact): parse should throw an error 
ok 28 - [dqbsr432] check rounding modes heeded (Rounded & Inexact): parse should throw an error 
ok 29 - [dqbsr433] check rounding modes heeded (Rounded & Inexact): parse should throw an error 
ok 30 - [dqbsr435] check rounding modes heeded (Rounded & Inexact): parse should throw an error 
ok 31 - [dqbsr434] check rounding modes heeded (Rounded & Inexact): parse should throw an error 
ok 32 - [dqbas938] overflow results at different rounding modes (Overflow & Inexact & Rounded): parse should throw an error 
ok 33 - Inexact rounding\#1: parse should throw an error 
ok 34 - Inexact rounding\#2: parse should throw an error 
1..34
ok
t/corpus/decimal128-5.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: [decq035] fold-downs (more below) (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 2 - case: [decq035] fold-downs (more below) (Clamped)
# Subtest: case: [decq037] fold-downs (more below) (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: [decq037] fold-downs (more below) (Clamped)
# Subtest: case: [decq077] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 4 - case: [decq077] Nmin and below (Subnormal)
# Subtest: case: [decq078] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: [decq078] Nmin and below (Subnormal)
# Subtest: case: [decq079] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 6 - case: [decq079] Nmin and below (Subnormal)
# Subtest: case: [decq080] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: [decq080] Nmin and below (Subnormal)
# Subtest: case: [decq081] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 8 - case: [decq081] Nmin and below (Subnormal)
# Subtest: case: [decq082] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: [decq082] Nmin and below (Subnormal)
# Subtest: case: [decq083] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 10 - case: [decq083] Nmin and below (Subnormal)
# Subtest: case: [decq084] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 11 - case: [decq084] Nmin and below (Subnormal)
# Subtest: case: [decq090] underflows cannot be tested for simple copies, check edge cases (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 12 - case: [decq090] underflows cannot be tested for simple copies, check edge cases (Subnormal)
# Subtest: case: [decq100] underflows cannot be tested for simple copies, check edge cases (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 13 - case: [decq100] underflows cannot be tested for simple copies, check edge cases (Subnormal)
# Subtest: case: [decq130] fold-downs (more below) (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 14 - case: [decq130] fold-downs (more below) (Clamped)
# Subtest: case: [decq132] fold-downs (more below) (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 15 - case: [decq132] fold-downs (more below) (Clamped)
# Subtest: case: [decq177] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 16 - case: [decq177] Nmin and below (Subnormal)
# Subtest: case: [decq178] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 17 - case: [decq178] Nmin and below (Subnormal)
# Subtest: case: [decq179] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 18 - case: [decq179] Nmin and below (Subnormal)
# Subtest: case: [decq180] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 19 - case: [decq180] Nmin and below (Subnormal)
# Subtest: case: [decq181] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 20 - case: [decq181] Nmin and below (Subnormal)
# Subtest: case: [decq182] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 21 - case: [decq182] Nmin and below (Subnormal)
# Subtest: case: [decq183] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 22 - case: [decq183] Nmin and below (Subnormal)
# Subtest: case: [decq184] Nmin and below (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 23 - case: [decq184] Nmin and below (Subnormal)
# Subtest: case: [decq190] underflow edge cases (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 24 - case: [decq190] underflow edge cases (Subnormal)
# Subtest: case: [decq200] underflow edge cases (Subnormal)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 25 - case: [decq200] underflow edge cases (Subnormal)
# Subtest: case: [decq400] zeros (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 26 - case: [decq400] zeros (Clamped)
# Subtest: case: [decq401] zeros (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 27 - case: [decq401] zeros (Clamped)
# Subtest: case: [decq414] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 28 - case: [decq414] clamped zeros... (Clamped)
# Subtest: case: [decq416] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 29 - case: [decq416] clamped zeros... (Clamped)
# Subtest: case: [decq418] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 30 - case: [decq418] clamped zeros... (Clamped)
# Subtest: case: [decq420] negative zeros (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 31 - case: [decq420] negative zeros (Clamped)
# Subtest: case: [decq421] negative zeros (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 32 - case: [decq421] negative zeros (Clamped)
# Subtest: case: [decq434] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 33 - case: [decq434] clamped zeros... (Clamped)
# Subtest: case: [decq436] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 34 - case: [decq436] clamped zeros... (Clamped)
# Subtest: case: [decq438] clamped zeros... (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 35 - case: [decq438] clamped zeros... (Clamped)
# Subtest: case: [decq601] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 36 - case: [decq601] fold-down full sequence (Clamped)
# Subtest: case: [decq603] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 37 - case: [decq603] fold-down full sequence (Clamped)
# Subtest: case: [decq605] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 38 - case: [decq605] fold-down full sequence (Clamped)
# Subtest: case: [decq607] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 39 - case: [decq607] fold-down full sequence (Clamped)
# Subtest: case: [decq609] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 40 - case: [decq609] fold-down full sequence (Clamped)
# Subtest: case: [decq611] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 41 - case: [decq611] fold-down full sequence (Clamped)
# Subtest: case: [decq613] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 42 - case: [decq613] fold-down full sequence (Clamped)
# Subtest: case: [decq615] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 43 - case: [decq615] fold-down full sequence (Clamped)
# Subtest: case: [decq617] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 44 - case: [decq617] fold-down full sequence (Clamped)
# Subtest: case: [decq619] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 45 - case: [decq619] fold-down full sequence (Clamped)
# Subtest: case: [decq621] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 46 - case: [decq621] fold-down full sequence (Clamped)
# Subtest: case: [decq623] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 47 - case: [decq623] fold-down full sequence (Clamped)
# Subtest: case: [decq625] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 48 - case: [decq625] fold-down full sequence (Clamped)
# Subtest: case: [decq627] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 49 - case: [decq627] fold-down full sequence (Clamped)
# Subtest: case: [decq629] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 50 - case: [decq629] fold-down full sequence (Clamped)
# Subtest: case: [decq631] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 51 - case: [decq631] fold-down full sequence (Clamped)
# Subtest: case: [decq633] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 52 - case: [decq633] fold-down full sequence (Clamped)
# Subtest: case: [decq635] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 53 - case: [decq635] fold-down full sequence (Clamped)
# Subtest: case: [decq637] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 54 - case: [decq637] fold-down full sequence (Clamped)
# Subtest: case: [decq639] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 55 - case: [decq639] fold-down full sequence (Clamped)
# Subtest: case: [decq641] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 56 - case: [decq641] fold-down full sequence (Clamped)
# Subtest: case: [decq643] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 57 - case: [decq643] fold-down full sequence (Clamped)
# Subtest: case: [decq645] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 58 - case: [decq645] fold-down full sequence (Clamped)
# Subtest: case: [decq647] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 59 - case: [decq647] fold-down full sequence (Clamped)
# Subtest: case: [decq649] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 60 - case: [decq649] fold-down full sequence (Clamped)
# Subtest: case: [decq651] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 61 - case: [decq651] fold-down full sequence (Clamped)
# Subtest: case: [decq653] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 62 - case: [decq653] fold-down full sequence (Clamped)
# Subtest: case: [decq655] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 63 - case: [decq655] fold-down full sequence (Clamped)
# Subtest: case: [decq657] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 64 - case: [decq657] fold-down full sequence (Clamped)
# Subtest: case: [decq659] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 65 - case: [decq659] fold-down full sequence (Clamped)
# Subtest: case: [decq661] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 66 - case: [decq661] fold-down full sequence (Clamped)
# Subtest: case: [decq663] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 67 - case: [decq663] fold-down full sequence (Clamped)
# Subtest: case: [decq665] fold-down full sequence (Clamped)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 68 - case: [decq665] fold-down full sequence (Clamped)
1..68
ok
t/corpus/decimal128-6.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
ok 2 - Incomplete Exponent: parse should throw an error 
ok 3 - Exponent at the beginning: parse should throw an error 
ok 4 - Just a decimal place: parse should throw an error 
ok 5 - 2 decimal places: parse should throw an error 
ok 6 - 2 decimal places: parse should throw an error 
ok 7 - 2 decimal places: parse should throw an error 
ok 8 - 2 decimal places: parse should throw an error 
ok 9 - 2 decimal places: parse should throw an error 
ok 10 - Decimal with no digits: parse should throw an error 
ok 11 - 2 signs: parse should throw an error 
ok 12 - 2 signs: parse should throw an error 
ok 13 - 2 negative signs: parse should throw an error 
ok 14 - 2 negative signs: parse should throw an error 
ok 15 - End in negative sign: parse should throw an error 
ok 16 - 2 negative signs: parse should throw an error 
ok 17 - 2 negative signs: parse should throw an error 
ok 18 - 2 signs: parse should throw an error 
ok 19 - Empty string: parse should throw an error 
ok 20 - leading white space positive number: parse should throw an error 
ok 21 - leading white space negative number: parse should throw an error 
ok 22 - trailing white space: parse should throw an error 
ok 23 - Invalid: parse should throw an error 
ok 24 - Invalid: parse should throw an error 
ok 25 - Invalid: parse should throw an error 
ok 26 - Invalid: parse should throw an error 
ok 27 - Invalid: parse should throw an error 
ok 28 - Invalid: parse should throw an error 
ok 29 - Invalid: parse should throw an error 
ok 30 - Invalid: parse should throw an error 
ok 31 - Invalid: parse should throw an error 
ok 32 - Invalid: parse should throw an error 
1..32
ok
t/corpus/decimal128-7.t .......... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
ok 2 - [basx572] Near-specials (Conversion_syntax): parse should throw an error 
ok 3 - [basx516] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 4 - [basx533] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 5 - [basx534] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 6 - [basx535] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 7 - [basx569] Near-specials (Conversion_syntax): parse should throw an error 
ok 8 - [basx571] Near-specials (Conversion_syntax): parse should throw an error 
ok 9 - [basx575] Near-specials (Conversion_syntax): parse should throw an error 
ok 10 - [basx503] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 11 - [basx504] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 12 - [basx505] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 13 - [basx506] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 14 - [basx510] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 15 - [basx513] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 16 - [basx514] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 17 - [basx501] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 18 - [basx502] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 19 - [basx519] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 20 - [basx525] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 21 - [basx549] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 22 - [basx577] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 23 - [basx578] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 24 - [basx581] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 25 - [basx582] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 26 - [basx583] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 27 - [basx579] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 28 - [basx580] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 29 - [basx584] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 30 - [basx585] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 31 - [basx589] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 32 - [basx586] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 33 - [basx587] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 34 - [basx545] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 35 - [basx561] Near-specials (Conversion_syntax): parse should throw an error 
ok 36 - [basx573] Near-specials (Conversion_syntax): parse should throw an error 
ok 37 - [basx588] some baddies with dots and Es and dots and specials (Conversion_syntax): parse should throw an error 
ok 38 - [basx544] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 39 - [basx527] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 40 - [basx526] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 41 - [basx515] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 42 - [basx574] Near-specials (Conversion_syntax): parse should throw an error 
ok 43 - [basx530] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 44 - [basx500] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 45 - [basx542] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 46 - [basx553] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 47 - [basx543] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 48 - [basx552] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 49 - [basx546] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 50 - [basx547] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 51 - [basx554] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 52 - [basx555] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 53 - [basx556] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 54 - [basx557] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 55 - [basx558] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 56 - [basx559] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 57 - [basx520] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 58 - [basx560] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 59 - [basx548] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 60 - [basx551] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 61 - [basx550] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 62 - [basx529] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 63 - [basx531] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 64 - [basx532] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 65 - [basx518] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 66 - [basx521] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 67 - [basx570] Near-specials (Conversion_syntax): parse should throw an error 
ok 68 - [basx512] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 69 - [basx517] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 70 - [basx507] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 71 - [basx508] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 72 - [basx509] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 73 - [basx536] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 74 - [basx537] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 75 - [basx540] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 76 - [basx538] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 77 - [basx539] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 78 - [basx541] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 79 - [basx528] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 80 - [basx523] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
ok 81 - [basx522] The 'baddies' tests from DiagBigDecimal, plus some new ones (Conversion_syntax): parse should throw an error 
1..81
ok
t/corpus/document.t .............. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty subdoc
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty subdoc
# Subtest: case: Empty-string key subdoc
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Empty-string key subdoc
# Subtest: case: Single-character key subdoc
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Single-character key subdoc
ok 5 - Decode error: Subdocument length too long: eats outer terminator:
ok 6 - Decode error: Subdocument length too short: leaks terminator:
ok 7 - Decode error: Invalid subdocument: bad string length in field:
1..7
ok
t/corpus/double.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: +1.0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 2 - case: +1.0
# Subtest: case: -1.0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 3 - case: -1.0
# Subtest: case: +1.0001220703125
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 4 - case: +1.0001220703125
# Subtest: case: -1.0001220703125
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 5 - case: -1.0001220703125
# Subtest: case: 1.23456789012345677E+18
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 6 - case: 1.23456789012345677E+18
# Subtest: case: -1.23456789012345677E+18
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 7 - case: -1.23456789012345677E+18
# Subtest: case: 0.0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 8 - case: 0.0
# Subtest: case: -0.0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 9 - case: -0.0
# Subtest: case: NaN
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..5
ok 10 - case: NaN
# Subtest: case: NaN with payload
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..5
ok 11 - case: NaN with payload
# Subtest: case: Inf
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 12 - case: Inf
# Subtest: case: -Inf
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 13 - case: -Inf
ok 14 - Decode error: double truncated:
1..14
ok
t/corpus/int32.t ................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: MinValue
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 2 - case: MinValue
# Subtest: case: MaxValue
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 3 - case: MaxValue
# Subtest: case: -1
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 4 - case: -1
# Subtest: case: 0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 5 - case: 0
# Subtest: case: 1
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 6 - case: 1
ok 7 - Decode error: Bad int32 field length:
1..7
ok
t/corpus/int64.t ................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: MinValue
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 2 - case: MinValue
# Subtest: case: MaxValue
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 3 - case: MaxValue
# Subtest: case: -1
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 4 - case: -1
# Subtest: case: 0
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 5 - case: 0
# Subtest: case: 1
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_relaxed_extended_json(bson_to_native(cB)) = rEJ
    ok 4 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 5 - native_to_bson(json_to_native(cEJ)) = cB
    ok 6 - native_to_relaxed_extended_json(json_to_native(rEJ)) = rEJ
    1..6
ok 6 - case: 1
ok 7 - Decode error: int64 field truncated:
1..7
ok
t/corpus/maxkey.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Maxkey
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Maxkey
1..2
ok
t/corpus/minkey.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Minkey
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Minkey
1..2
ok
t/corpus/multi-type.t ............ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: All BSON types
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: All BSON types
1..2
ok
t/corpus/null.t .................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Null
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Null
1..2
ok
t/corpus/oid.t ................... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: All zeroes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: All zeroes
# Subtest: case: All ones
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: All ones
# Subtest: case: Random
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Random
ok 5 - Decode error: OID truncated:
1..5
ok
t/corpus/regex.t ................. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: empty regex with no options
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: empty regex with no options
# Subtest: case: regex without options
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: regex without options
# Subtest: case: regex with options
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: regex with options
# Subtest: case: regex with options (keys reversed)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 5 - case: regex with options (keys reversed)
# Subtest: case: regex with slash
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: regex with slash
# Subtest: case: flags not alphabetized
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_bson(bson_to_native(dB)) = cB
    ok 6 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 7 - native_to_bson(json_to_native(dEJ)) = cB
    1..7
ok 7 - case: flags not alphabetized
# Subtest: case: Required escapes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: Required escapes
# Subtest: case: Regular expression as value of $regex query operator
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 9 - case: Regular expression as value of $regex query operator
# Subtest: case: Regular expression as value of $regex query operator with $options
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 10 - case: Regular expression as value of $regex query operator with $options
ok 11 - Decode error: embedded null in pattern:
ok 12 - Decode error: embedded null in flags:
1..12
ok
t/corpus/string.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty string
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty string
# Subtest: case: Single character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Single character
# Subtest: case: Multi-character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Multi-character
# Subtest: case: two-byte UTF-8 (é)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: two-byte UTF-8 (é)
# Subtest: case: three-byte UTF-8 (☆)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: three-byte UTF-8 (☆)
# Subtest: case: Embedded nulls
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: Embedded nulls
# Subtest: case: Required escapes
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 8 - case: Required escapes
ok 9 - Decode error: bad string length: 0 (but no 0x00 either):
ok 10 - Decode error: bad string length: -1:
ok 11 - Decode error: bad string length: eats terminator:
ok 12 - Decode error: bad string length: longer than rest of document:
ok 13 - Decode error: string is not null-terminated:
ok 14 - Decode error: empty string, but extra null:
ok 15 - Decode error: invalid UTF-8:
1..15
ok
t/corpus/symbol.t ................ 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Empty string
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Empty string
# Subtest: case: Single character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 3 - case: Single character
# Subtest: case: Multi-character
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Multi-character
# Subtest: case: two-byte UTF-8 (é)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 5 - case: two-byte UTF-8 (é)
# Subtest: case: three-byte UTF-8 (☆)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 6 - case: three-byte UTF-8 (☆)
# Subtest: case: Embedded nulls
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 7 - case: Embedded nulls
ok 8 - Decode error: bad symbol length: 0 (but no 0x00 either):
ok 9 - Decode error: bad symbol length: -1:
ok 10 - Decode error: bad symbol length: eats terminator:
ok 11 - Decode error: bad symbol length: longer than rest of document:
ok 12 - Decode error: symbol is not null-terminated:
ok 13 - Decode error: empty symbol, but extra null:
ok 14 - Decode error: invalid UTF-8:
1..14
ok
t/corpus/timestamp.t ............. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Timestamp: (123456789, 42)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Timestamp: (123456789, 42)
# Subtest: case: Timestamp: (123456789, 42) (keys reversed)
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    ok 5 - native_to_canonical_extended_json(json_to_native(dEJ)) = cEJ
    ok 6 - native_to_bson(json_to_native(dEJ)) = cB
    1..6
ok 3 - case: Timestamp: (123456789, 42) (keys reversed)
# Subtest: case: Timestamp with high-order bit set on both seconds and increment
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 4 - case: Timestamp with high-order bit set on both seconds and increment
ok 5 - Decode error: Truncated timestamp field:
1..5
ok
t/corpus/top.t ................... 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Document with keys that start with $
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Document with keys that start with $
ok 3 - Decode error: An object size that's too small to even include the object size, but is a well-formed, empty object:
ok 4 - Decode error: An object size that's only enough for the object size, but is a well-formed, empty object:
ok 5 - Decode error: One object, with length shorter than size (missing EOO):
ok 6 - Decode error: One object, sized correctly, with a spot for an EOO, but the EOO is 0x01:
ok 7 - Decode error: One object, sized correctly, with a spot for an EOO, but the EOO is 0xff:
ok 8 - Decode error: One object, sized correctly, with a spot for an EOO, but the EOO is 0x70:
ok 9 - Decode error: Byte count is zero (with non-zero input length):
ok 10 - Decode error: Stated length exceeds byte count, with truncated document:
ok 11 - Decode error: Stated length less than byte count, with garbage after envelope:
ok 12 - Decode error: Stated length exceeds byte count, with valid envelope:
ok 13 - Decode error: Stated length less than byte count, with valid envelope:
ok 14 - Decode error: Invalid BSON type low range:
ok 15 - Decode error: Invalid BSON type high range:
ok 16 - Decode error: Document truncated mid-key:
ok 17 - Bad $regularExpression (extra field): parse should throw an error 
ok 18 - Bad $regularExpression (missing options field): parse should throw an error 
ok 19 - Bad $regularExpression (pattern is number, not string): parse should throw an error 
ok 20 - Bad $regularExpression (options are number, not string): parse should throw an error 
ok 21 - Bad $regularExpression (missing pattern field): parse should throw an error 
ok 22 - Bad $oid (number, not string): parse should throw an error 
ok 23 - Bad $oid (extra field): parse should throw an error 
ok 24 - Bad $numberInt (number, not string): parse should throw an error 
ok 25 - Bad $numberInt (extra field): parse should throw an error 
ok 26 - Bad $numberLong (number, not string): parse should throw an error 
ok 27 - Bad $numberLong (extra field): parse should throw an error 
ok 28 - Bad $numberDouble (number, not string): parse should throw an error 
ok 29 - Bad $numberDouble (extra field): parse should throw an error 
ok 30 - Bad $numberDecimal (number, not string): parse should throw an error 
ok 31 - Bad $numberDecimal (extra field): parse should throw an error 
ok 32 - Bad $binary (binary is number, not string): parse should throw an error 
ok 33 - Bad $binary (type is number, not string): parse should throw an error 
ok 34 - Bad $binary (missing $type): parse should throw an error 
ok 35 - Bad $binary (missing $binary): parse should throw an error 
ok 36 - Bad $binary (extra field): parse should throw an error 
ok 37 - Bad $code (type is number, not string): parse should throw an error 
ok 38 - Bad $code (extra field): parse should throw an error 
ok 39 - Bad $code with $scope (scope is number, not doc): parse should throw an error 
ok 40 - Bad $timestamp (type is number, not doc): parse should throw an error 
ok 41 - Bad $timestamp ('t' type is string, not number): parse should throw an error 
ok 42 - Bad $timestamp ('i' type is string, not number): parse should throw an error 
ok 43 - Bad $timestamp (extra field at same level as $timestamp): parse should throw an error 
ok 44 - Bad $timestamp (extra field at same level as t and i): parse should throw an error 
ok 45 - Bad $timestamp (missing t): parse should throw an error 
ok 46 - Bad $timestamp (missing i): parse should throw an error 
ok 47 - Bad $date (number, not string or hash): parse should throw an error 
ok 48 - Bad $date (extra field): parse should throw an error 
ok 49 - Bad DBRef (ref is number, not string): parse should throw an error 
ok 50 - Bad DBRef (db is number, not string): parse should throw an error 
ok 51 - Bad $minKey (boolean, not integer): parse should throw an error 
ok 52 - Bad $minKey (wrong integer): parse should throw an error 
ok 53 - Bad $minKey (extra field): parse should throw an error 
ok 54 - Bad $maxKey (boolean, not integer): parse should throw an error 
ok 55 - Bad $maxKey (wrong integer): parse should throw an error 
ok 56 - Bad $maxKey (extra field): parse should throw an error 
ok 57 - Bad DBpointer (extra field): parse should throw an error 
1..57
ok
t/corpus/undefined.t ............. 
# Subtest: JSON::PP Tie::IxHash injection
    ok 1 - JSON::PP returns tied objects
    1..1
ok 1 - JSON::PP Tie::IxHash injection
# Subtest: case: Undefined
    ok 1 - native_to_bson(bson_to_native(cB)) = cB
    ok 2 - native_to_canonical_extended_json(bson_to_native(cB)) = cEJ
    ok 3 - native_to_canonical_extended_json(json_to_native(cEJ)) = cEJ
    ok 4 - native_to_bson(json_to_native(cEJ)) = cB
    1..4
ok 2 - case: Undefined
1..2
ok
t/mapping/binary.t ............... 
ok 1 - empty bson_bytes() is ''
ok 2 - empty BSON::Bytes constructor is ''
ok 3 - bson_bytes($data, $subtype) works
ok 4 - BSON::Bytes string overload
ok 5 - BSON::Bytes->BSON::Bytes
ok 6 - value correct
ok 7 - scalarref->BSON::Bytes
ok 8 - value correct
ok 9 - BSON correct
ok 10 - BSON::Binary->BSON::Bytes
ok 11 - value correct
ok 12 - BSON correct
ok 13 # skip MongoDB::BSON::Binary not installed
ok 14 # skip MongoDB::BSON::Binary not installed
ok 15 - json: bson_bytes(<data>)
ok 16 - extjson: bson_bytes(<data>)
ok 17 - extjson: bson_bytes(<data>,128)
1..17
ok
t/mapping/boolean.t .............. 
ok 1 - 'bson_bool() gives boolean.pm' isa 'boolean'
ok 2 - 'bson_bool(0) gives boolean.pm' isa 'boolean'
ok 3 - 'bson_bool(1) gives boolean.pm' isa 'boolean'
ok 4 - bson_bool() is false
ok 5 - bson_bool(0) is false
ok 6 - bson_bool(1) is true
ok 7 - boolean->boolean
ok 8 - value is correct
ok 9 - BSON::Bool->boolean
ok 10 - value is correct
ok 11 - BSON is correct
ok 12 - JSON::XS::Boolean->boolean
ok 13 - value is correct
ok 14 - BSON is correct
ok 15 - JSON::PP::Boolean->boolean
ok 16 - value is correct
ok 17 - BSON is correct
ok 18 - JSON::Tiny::_Bool->boolean
ok 19 - value is correct
ok 20 - BSON is correct
ok 21 - Mojo::JSON::_Bool->boolean
ok 22 - value is correct
ok 23 - BSON is correct
ok 24 - Cpanel::JSON::XS::Boolean->boolean
ok 25 - value is correct
ok 26 - BSON is correct
ok 27 - Types::Serialiser::Boolean->boolean
ok 28 - value is correct
ok 29 - BSON is correct
1..29
ok
t/mapping/code.t ................. 
ok 1 - empty bson_code()
ok 2 - empty bson_code()
ok 3 - bson_code(code)->code
ok 4 - bson_code(code)->scope
ok 5 - bson_code(code, scope)->code
ok 6 - bson_code(code, scope)->scope
ok 7 - empty BSON::Code->new()
ok 8 - empty BSON::Code->new()
ok 9 - BSON::Code->new(code)->code
ok 10 - BSON::Code->new(code)->scope
ok 11 - BSON::Code->new(code, scope)->code
ok 12 - BSON::Code->new(code, scope)->scope
# Subtest: BSON type CODE
    ok 1 - BSON::Code->BSON::Code
    ok 2 - code correct
    ok 3 - scope correct
    ok 4 # skip MongoDB::Code not installed
    ok 5 # skip MongoDB::Code not installed
    1..5
ok 13 - BSON type CODE
# Subtest: BSON type CODEWSCOPE
    ok 1 - BSON::Code->BSON::Code
    ok 2 - code correct
    ok 3 - scope correct
    ok 4 # skip MongoDB::Code not installed
    ok 5 # skip MongoDB::Code not installed
    1..5
ok 14 - BSON type CODEWSCOPE
ok 15 - json throws: bson_code()
ok 16 - extjson: bson_code(<code>)
ok 17 - extjson: bson_code(<code>,<scope>)
1..17
ok
t/mapping/dbref.t ................ 
ok 1 - empty bson_dbref() throws error
ok 2 - bson_dbref(ID) throws error
ok 3 - bson_dbref(ID,REF,EXTRA) throws error
ok 4 - BSON::DBRef->BSON::DBRef
ok 5 - DBRef id
ok 6 - DBRef ref
ok 7 - BSON::DBRef->HASH
ok 8 - $id
ok 9 - $ref
ok 10 # skip MongoDB::DBRef v1.0.0+ not installed
ok 11 # skip MongoDB::DBRef v1.0.0+ not installed
ok 12 # skip MongoDB::DBRef v1.0.0+ not installed
ok 13 # skip MongoDB::DBRef v1.0.0+ not installed
1..13
ok
t/mapping/decimal128.t ........... 
ok 1 - empty bson_decimal128() is 0
ok 2 - BSON::Decimal128->new throws
ok 3 - overloading correct
ok 4 - BSON::Decimal128->BSON::Decimal128
ok 5 - value correct
ok 6 - Infinity value correct
ok 7 - -Infinity value correct
ok 8 - NaN value correct
ok 9 - bson_decimal128(0.0)
ok 10 - bson_decimal128(42)
ok 11 - bson_decimal128(0.1)
ok 12 - bson_decimal128(0.0)
ok 13 - bson_decimal128(12345678E+678)
1..13
ok
t/mapping/double.t ............... 
ok 1 - empty bson_double() is 0.0
ok 2 - empty constructor is 0.0
ok 3 - overloading correct
ok 4 - double->double
ok 5 - value correct
ok 6 - BSON::Double->double
ok 7 - value correct
ok 8 - double->BSON::Double
ok 9 - value correct
ok 10 - BSON::Double->BSON::Double
ok 11 - value correct
ok 12 - Inf as double->double
ok 13 - value correct
ok 14 - -Inf as double->double
ok 15 - value correct
ok 16 - NaN as double->double
ok 17 - value correct
ok 18 - Inf as double->BSON::Double
ok 19 - value correct
ok 20 - -Inf as double->BSON::Double
ok 21 - value correct
ok 22 - NaN as double->BSON::Double
ok 23 - value correct
ok 24 - Inf as BSON::Double->BSON::Double
ok 25 - value correct
ok 26 - -Inf as BSON::Double->BSON::Double
ok 27 - value correct
ok 28 - NaN as BSON::Double->BSON::Double
ok 29 - value correct
ok 30 - Inf as BSON::Double->BSON::Double
ok 31 - value correct
ok 32 - -Inf as BSON::Double->BSON::Double
ok 33 - value correct
ok 34 - NaN as BSON::Double->BSON::Double
ok 35 - value correct
ok 36 - bson_double(0.0) (XXX lossy!)
ok 37 - bson_double(42) (XXX lossy!)
ok 38 - bson_double(0.1)
ok 39 - throws: bson_double(BSON::Double:pInf())
1..39
ok
t/mapping/hashref.t .............. 
ok 1 - empty bson_doc() is empty doc
ok 2 - empty constructor is empty doc
ok 3 - duplicate keys in bson_doc() throw error
# Subtest: Top level document
    ok 1 - hashref->hashref
    ok 2 - value correct
    ok 3 - BSON::Doc->hashref
    ok 4 - value correct
    ok 5 - BSON::Raw->hashref
    ok 6 - value correct
    ok 7 - MongoDB::BSON::Raw->hashref
    ok 8 - value correct
    ok 9 - Tie::IxHash(tied)->hashref
    ok 10 - value correct
    ok 11 - Tie::IxHash(OO)->hashref
    ok 12 - value correct
    1..12
ok 4 - Top level document
# Subtest: Subdocument
    ok 1 - hashref->hashref
    ok 2 - value correct
    ok 3 - BSON::Doc->hashref
    ok 4 - value correct
    ok 5 - BSON::Raw->hashref
    ok 6 - value correct
    ok 7 - MongoDB::BSON::Raw->hashref
    ok 8 - value correct
    ok 9 - Tie::IxHash(tied)->hashref
    ok 10 - value correct
    ok 11 - Tie::IxHash(OO)->hashref
    ok 12 - value correct
    1..12
ok 5 - Subdocument
# Subtest: Nested
    ok 1 - hashref->hashref
    ok 2 - value correct
    ok 3 - BSON::Doc->hashref
    ok 4 - value correct
    ok 5 - BSON::Raw->hashref
    ok 6 - value correct
    ok 7 - MongoDB::BSON::Raw->hashref
    ok 8 - value correct
    ok 9 - Tie::IxHash(tied)->hashref
    ok 10 - value correct
    ok 11 - Tie::IxHash(OO)->hashref
    ok 12 - value correct
    1..12
ok 6 - Nested
# Subtest: Ordered top level doc
    ok 1 - hashref->hashref(ordered)
    ok 2 - hashref is tied
    ok 3 - value correct
    ok 4 - BSON::Doc->hashref
    ok 5 - hashref is tied
    ok 6 - value correct
    ok 7 - BSON::Doc->hashref
    ok 8 - hashref is tied
    ok 9 - value correct
    1..9
ok 7 - Ordered top level doc
# Subtest: Ordered subdoc
    ok 1 - hashref->hashref
    ok 2 - hashref is tied
    ok 3 - value correct
    ok 4 - BSON::Doc->hashref
    ok 5 - hashref is tied
    ok 6 - value correct
    1..6
ok 8 - Ordered subdoc
1..8
ok
t/mapping/int32.t ................ 
ok 1 - empty bson_int32() is 0
ok 2 - empty constructor is 0
ok 3 - bson_int32(2**31) fails
ok 4 - bson_int32(-2**31-1) fails
ok 5 - bson_int32(big BigInt) fails
ok 6 - bson_int32(-big BigInt) fails
ok 7 - overloading correct
# Subtest: native
    ok 1 - int32->int32
    ok 2 - value correct
    ok 3 - BSON::Int32->int32
    ok 4 - value correct
    ok 5 - BSON correct
    ok 6 - BSON::Int32->int32
    ok 7 - value correct
    ok 8 - BSON correct
    1..8
ok 8 - native
# Subtest: wrapped
    ok 1 - int32->BSON::Int32
    ok 2 - value correct
    ok 3 - int32->BSON::Int32
    ok 4 - value correct
    ok 5 - BSON correct
    ok 6 - int32->BSON::Int32
    ok 7 - value correct
    ok 8 - BSON correct
    1..8
ok 9 - wrapped
ok 10 - bson_int32(0)
ok 11 - bson_int32(42)
ok 12 - extjson: bson_int32(0)
ok 13 - extjson: bson_int32(42)
1..13
ok
t/mapping/int64.t ................ 
ok 1 - empty bson_int64() is 0
ok 2 - empty constructor is 0
ok 3 - bson_int64(9223372036854775808)
ok 4 - bson_int64(9223372036854775808.01)
ok 5 - bson_int64(9223372036854775807.99)
ok 6 - bson_int64(-9223372036854775809)
ok 7 - bson_int64(-9223372036854775809.01)
ok 8 - bson_int64(-9223372036854775808.99)
ok 9 - bson_int64(bigpos)
ok 10 - bson_int64(bigpos)
ok 11 - overloading correct
# Subtest: native (64-bit perls)
    ok 1 - int64->int64
    ok 2 - value correct
    ok 3 - BSON::Int64->int64
    ok 4 - value correct
    ok 5 - BSON correct
    ok 6 - BSON::Int64->int64
    ok 7 - value correct
    ok 8 - Math::BigInt->int64
    ok 9 - value correct
    ok 10 # skip Math::Int64 not installed
    ok 11 # skip Math::Int64 not installed
    1..11
ok 12 - native (64-bit perls)
# Subtest: Math::BigInt (32-bit perls)
    1..0 # SKIP not a 32-bit perl
ok 13 # skip not a 32-bit perl
# Subtest: wrapped
    ok 1 - int64->BSON::Int64
    ok 2 - value correct
    ok 3 - int64->BSON::Int64
    ok 4 - value correct
    ok 5 - BSON correct
    ok 6 - int64->BSON::Int64
    ok 7 - value correct
    ok 8 - Math::BigInt->BSON::Int64
    ok 9 - value correct
    ok 10 # skip Math::Int64 not installed
    ok 11 # skip Math::Int64 not installed
    1..11
ok 14 - wrapped
ok 15 - bson_int64(0)
ok 16 - bson_int64(42)
ok 17 - extjson: bson_int64(0)
ok 18 - extjson: bson_int64(0)
1..18
ok
t/mapping/minmaxkey.t ............ 
ok 1 - 'bson_maxkey' isa 'BSON::MaxKey'
ok 2 - 'bson_minkey' isa 'BSON::MinKey'
ok 3 - 'bson_maxkey' isa 'BSON::MaxKey'
ok 4 - 'bson_minkey' isa 'BSON::MinKey'
ok 5 - BSON::MaxKey->BSON::MaxKey
ok 6 - BSON::MinKey->BSON::MinKey
ok 7 - BSON::MaxKey->BSON::MaxKey
ok 8 - BSON::MinKey->BSON::MinKey
ok 9 - BSON correct
ok 10 - json throws: bson_maxkey()
ok 11 - json throws: bson_minkey()
ok 12 - extjson: bson_minkey
ok 13 - extjson: bson_maxkey
1..13
ok
t/mapping/oid.t .................. 
ok 1 - empty bson_oid() generates new OID
ok 2 - from_epoch(time) generates new OID
ok 3 - from_epoch(time, 0) generates new OID
ok 4 - from_epoch(time, "\xff"x8) generates new OID
ok 5 - bson_oid($packed) returns packed
ok 6 - bson_oid($hexoid) returns packed
ok 7 - empty BSON::OID->new() generates new OID
ok 8 - BSON::OID->from_epoch(time) generates new OID
ok 9 - BSON::OID->new($packed) returns packed
ok 10 - BSON::OID string overload
ok 11 - BSON::OID cmp overload (0)
ok 12 - BSON::OID cmp overload (-1)
ok 13 - BSON::OID cmp overload (1)
ok 14 - BSON::OID <=> overload (0)
ok 15 - BSON::OID <=> overload (-1)
ok 16 - BSON::OID <=> overload (1)
ok 17 - BSON::OID->BSON::OID
ok 18 - value correct
ok 19 - from_epoch(time) time roundtrip ok
ok 20 - from_epoch(time, 0) OID is correct
ok 21 - from_epoch(time, "0") OID is correct
ok 22 - from_epoch(time, "0000") OID is correct
ok 23 - from_epoch(time, "\xff"x8) roundtrip ok
ok 24 - bson_oid->from_epoch(time, "\xff"x8) roundtrip ok
ok 25 - second arg must be zero or eight byts
ok 26 - BSON::ObjectId->BSON::OID
ok 27 - value correct
ok 28 - BSON correct
ok 29 # skip MongoDB::OID not installed
ok 30 # skip MongoDB::OID not installed
1..30
ok
t/mapping/regex.t ................ 
ok 1 - empty bson_regex()
ok 2 - empty bson_regex()
ok 3 - bson_regex(PATTERN)->pattern
ok 4 - bson_regex(PATTERN)->flags
ok 5 - bson_regex(PATTERN, FLAGS)->pattern
ok 6 - bson_regex(PATTERN, FLAGS)->flags
ok 7 - empty BSON::Regex->new()
ok 8 - empty BSON::Regex->new()
ok 9 - BSON::Regex->new(PATTERN)->pattern
ok 10 - BSON::Regex->new(PATTERN)->flags
ok 11 - BSON::Regex->new(PATTERN, FLAGS)->pattern
ok 12 - BSON::Regex->new(PATTERN, FLAGS)->flags
ok 13 - BSON::Regex->BSON::Regex
ok 14 - pattern correct
ok 15 - flags correct
ok 16 - qr//->BSON::Regex
ok 17 - pattern correct
ok 18 - flags correct
ok 19 - BSON correct
ok 20 # skip MongoDB::BSON::Regexp not installed
ok 21 # skip MongoDB::BSON::Regexp not installed
ok 22 - json throws: bson_regex()
ok 23 - extjson: bson_regex(<pattern>,<flags>)
1..23
ok
t/mapping/string.t ............... 
ok 1 - empty bson_string() is ''
ok 2 - empty constructor is ''
ok 3 - string overload
ok 4 - bool overload
ok 5 - string->string
ok 6 - value correct
ok 7 - BSON::String->string
ok 8 - value correct
ok 9 - MongoDB::BSON::String->string
ok 10 - value correct
ok 11 - string->BSON::String
ok 12 - value correct
ok 13 - BSON::String->BSON::String
ok 14 - value correct
ok 15 - MongoDB::BSON::String->BSON::String
ok 16 - value correct
1..16
ok
t/mapping/time.t ................. 
ok 1 - empty bson_time() is current time (or so)
ok 2 - empty BSON::Time constructor is curren time (or so)
ok 3 - BSON::Time string overload
ok 4 - BSON::Time string overload
ok 5 - BSON::Time->BSON::Time
ok 6 - value correct
ok 7 # skip DateTime not installed
ok 8 # skip DateTime::Tiny not installed
ok 9 # skip Time::Moment not installed
ok 10 # skip Mango::BSON::Time not installed
ok 11 - epoch handles small values without rounding to zero
ok 12 - json: bson_time(0)
ok 13 - json: bson_time(1356351330.5)
ok 14 - extjson: bson_time(0)
ok 15 - extjson: bson_time(1356351330.5)
1..15
ok
t/mapping/timestamp.t ............ 
ok 1 - bson_timestamp()->seconds
ok 2 - bson_timestamp()->increment
ok 3 - bson_timestamp(seconds)->seconds
ok 4 - bson_timestamp(seconds)->increment
ok 5 - bson_timestamp(seconds, increment)->seconds
ok 6 - bson_timestamp(seconds, increment)->increment
ok 7 - BSON::Timestamp->new()->seconds
ok 8 - BSON::Timestamp->new()->increment
ok 9 - BSON::Timestamp->new(seconds)->seconds
ok 10 - BSON::Timestamp->new(seconds)->increment
ok 11 - BSON::Timestamp->new(seconds, increment)->seconds
ok 12 - BSON::Timestamp->new(seconds, increment)->increment
ok 13 - bson_timestamp(2**32, 42) fails
ok 14 - bson_timestamp(-1, 42) fails
ok 15 - bson_timestamp(<time>, 2**32) fails
ok 16 - bson_timestamp(<time>, -1) fails
ok 17 - BSON::Timestamp->BSON::Timestamp
ok 18 - seconds correct
ok 19 - increment correct
ok 20 # skip MongoDB::Timestamp not installed
ok 21 # skip MongoDB::Timestamp not installed
ok 22 - json throws: bson_timestamp()
ok 23 - extjson: bson_timestamp(<secs>,<inc>)
ok 24 - (0 1) <=> (0 1) == 0
ok 25 - (0 2) <=> (0 1) == 1
ok 26 - (1 0) <=> (0 1) == 1
ok 27 - (0 0) <=> (0 1) == -1
ok 28 - (0 0) <=> (1 0) == -1
ok 29 - undef is treated like 0
ok 30 - undef <=> bson_timestamp(0,1)
ok 31 - bson_timestamp(0,1) <=> undef
1..31
ok
t/regression/boolean_copy.t ...... 
ok 1 - replacing one boolean doesn't affect another
1..1
ok
t/regression/scalar_ref_value.t .. 
ok 1 - encoding ref to PVNV is not fatal
1..1
ok
t/regression/undef_round_trip.t .. 
# Subtest: tied Tie::IxHash
    ok 1 - round trip undef
    1..1
ok 1 - tied Tie::IxHash
# Subtest: OO Tie::IxHash
    ok 1 - round trip undef
    1..1
ok 2 - OO Tie::IxHash
# Subtest: standard hash
    ok 1 - round trip undef
    1..1
ok 3 - standard hash
1..3
ok
All tests successful.
Files=59, Tests=1342, 11 wallclock secs ( 0.31 usr  0.08 sys +  9.22 cusr  1.12 csys = 10.73 CPU)
Result: PASS
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
   dh_testroot
   dh_prep
   dh_auto_install
	make -j4 install DESTDIR=/<<PKGBUILDDIR>>/debian/libbson-xs-perl AM_UPDATE_INFO_DIR=no PREFIX=/usr
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XS.bs blib/arch/auto/BSON/XS/XS.bs 644
Manifying 1 pod document
Files found in blib/arch: installing files in blib/lib into architecture dependent library tree
Installing /<<PKGBUILDDIR>>/debian/libbson-xs-perl/usr/lib/x86_64-linux-gnu/perl5/5.30/auto/BSON/XS/XS.so
Installing /<<PKGBUILDDIR>>/debian/libbson-xs-perl/usr/lib/x86_64-linux-gnu/perl5/5.30/BSON/XS.pm
Installing /<<PKGBUILDDIR>>/debian/libbson-xs-perl/usr/share/man/man3/BSON::XS.3pm
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installdocs
   dh_installchangelogs
   dh_installman
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
   dh_fixperms
   dh_missing
   dh_dwz
   dh_strip
   dh_makeshlibs
   dh_shlibdeps
   dh_installdeb
   dh_gencontrol
   dh_md5sums
   dh_builddeb
dpkg-deb: building package 'libbson-xs-perl' in '../libbson-xs-perl_0.8.2-1_amd64.deb'.
dpkg-deb: building package 'libbson-xs-perl-dbgsym' in '../libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../libbson-xs-perl_0.8.2-1_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T05:26:23Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


libbson-xs-perl_0.8.2-1_amd64.changes:
--------------------------------------

Format: 1.8
Date: Sat, 07 Dec 2019 08:27:12 +0100
Source: libbson-xs-perl
Binary: libbson-xs-perl libbson-xs-perl-dbgsym
Architecture: amd64
Version: 0.8.2-1
Distribution: unstable
Urgency: medium
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Changed-By: Xavier Guimard <yadd@debian.org>
Description:
 libbson-xs-perl - Perl XS implementation of MongoDB's BSON serialization
Changes:
 libbson-xs-perl (0.8.2-1) unstable; urgency=medium
 .
   * Import upstream version 0.8.2
   * Declare compliance with policy 4.4.1
   * Add "Rules-Requires-Root: no"
Checksums-Sha1:
 87b727f1d3c49a8603227a9252e9ddf3cdbf2a71 105740 libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 572513c50637efbc8f3425a8ff340d3a6739c391 6362 libbson-xs-perl_0.8.2-1_amd64.buildinfo
 6fa2fdfa16e63a4d5d792b1d0087ad2f9a104566 67544 libbson-xs-perl_0.8.2-1_amd64.deb
Checksums-Sha256:
 114950336f1b98f4430e385bc034e4f69fe0905690f6486140adeb38e138ccc8 105740 libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 56a91ada2d80faeae02cfc392070109e0c9180212bd273b3aae5eb3dd7badbbe 6362 libbson-xs-perl_0.8.2-1_amd64.buildinfo
 f7180382817c0ca358869db38a917cf3759c836c0d5e130f08f3f39ba5b3c264 67544 libbson-xs-perl_0.8.2-1_amd64.deb
Files:
 3a6722f2cf0efa49d60938fad4e01535 105740 debug optional libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 8d0a7f51fac72ce499572cead2625a95 6362 perl optional libbson-xs-perl_0.8.2-1_amd64.buildinfo
 a5c5eaf8b502097e64f37e99c2c00b07 67544 perl optional libbson-xs-perl_0.8.2-1_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: libbson-xs-perl
Binary: libbson-xs-perl
Architecture: amd64
Version: 0.8.2-1
Checksums-Md5:
 3a6722f2cf0efa49d60938fad4e01535 105740 libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 a5c5eaf8b502097e64f37e99c2c00b07 67544 libbson-xs-perl_0.8.2-1_amd64.deb
Checksums-Sha1:
 87b727f1d3c49a8603227a9252e9ddf3cdbf2a71 105740 libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 6fa2fdfa16e63a4d5d792b1d0087ad2f9a104566 67544 libbson-xs-perl_0.8.2-1_amd64.deb
Checksums-Sha256:
 114950336f1b98f4430e385bc034e4f69fe0905690f6486140adeb38e138ccc8 105740 libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
 f7180382817c0ca358869db38a917cf3759c836c0d5e130f08f3f39ba5b3c264 67544 libbson-xs-perl_0.8.2-1_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 05:26:23 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-8 (= 1:8.0.1-7),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libb-hooks-endofscope-perl (= 0.24-1),
 libb-hooks-op-check-perl (= 0.22-1+b2),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libboolean-perl (= 0.46-1),
 libbsd0 (= 0.10.0-1),
 libbson-perl (= 1.12.1-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcapture-tiny-perl (= 0.48-1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-8-dev (= 1:8.0.1-7),
 libclang1-8 (= 1:8.0.1-7),
 libclass-method-modifiers-perl (= 2.13-1),
 libconfig-autoconf-perl (= 0.318-1),
 libcpanel-json-xs-perl (= 4.19-1),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt-urandom-perl (= 0.36-1),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdevel-callchecker-perl (= 0.008-1+b1),
 libdpkg-perl (= 1.19.7),
 libdynaloader-functions-perl (= 0.003-1),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-slurper-perl (= 0.012-1),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libimport-into-perl (= 1.002005-1),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libjson-maybexs-perl (= 1.004000-1),
 libllvm8 (= 1:8.0.1-7),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmodule-implementation-perl (= 0.09-1),
 libmodule-runtime-perl (= 0.016-1),
 libmoo-perl (= 2.003006-1),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libnamespace-clean-perl (= 0.27-1),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpackage-stash-perl (= 0.38-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libparams-classify-perl (= 0.015-1+b2),
 libpath-tiny-perl (= 0.108-1),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libquadmath0 (= 10-20200222-1),
 librole-tiny-perl (= 2.001004-1),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libstrictures-perl (= 2.000006-1),
 libsub-exporter-progressive-perl (= 0.001013-1),
 libsub-identify-perl (= 0.14-1+b2),
 libsub-name-perl (= 0.26-1),
 libsub-override-perl (= 0.09-2),
 libsub-quote-perl (= 2.006006-1),
 libsystemd0 (= 244.3-1),
 libtest-deep-perl (= 1.128-1),
 libtest-fatal-perl (= 0.014-1),
 libtie-ixhash-perl (= 1.23-2),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtry-tiny-perl (= 0.30-1),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libvariable-magic-perl (= 0.62-1+b2),
 libxml2 (= 2.9.10+dfsg-3),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1575703632"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


libbson-xs-perl-dbgsym_0.8.2-1_amd64.deb
----------------------------------------

 new Debian package, version 2.0.
 size 105740 bytes: control archive=552 bytes.
     411 bytes,    13 lines      control              
     106 bytes,     1 lines      md5sums              
 Package: libbson-xs-perl-dbgsym
 Source: libbson-xs-perl
 Version: 0.8.2-1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
 Installed-Size: 129
 Depends: libbson-xs-perl (= 0.8.2-1)
 Section: debug
 Priority: optional
 Multi-Arch: same
 Description: debug symbols for libbson-xs-perl
 Build-Ids: ed101b10221176ddd34a7b0d99ff39167f45b838

drwxr-xr-x root/root         0 2019-12-07 07:27 ./
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/debug/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/debug/.build-id/ed/
-rw-r--r-- root/root    121048 2019-12-07 07:27 ./usr/lib/debug/.build-id/ed/101b10221176ddd34a7b0d99ff39167f45b838.debug
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/doc/
lrwxrwxrwx root/root         0 2019-12-07 07:27 ./usr/share/doc/libbson-xs-perl-dbgsym -> libbson-xs-perl


libbson-xs-perl_0.8.2-1_amd64.deb
---------------------------------

 new Debian package, version 2.0.
 size 67544 bytes: control archive=1128 bytes.
    1024 bytes,    22 lines      control              
     556 bytes,     7 lines      md5sums              
 Package: libbson-xs-perl
 Version: 0.8.2-1
 Architecture: amd64
 Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
 Installed-Size: 223
 Depends: perl (>= 5.30.0-9), perlapi-5.30.0, libc6 (>= 2.14), libboolean-perl, libbson-perl (>= 1.12.1~)
 Section: perl
 Priority: optional
 Multi-Arch: same
 Homepage: https://metacpan.org/release/BSON-XS
 Description: Perl XS implementation of MongoDB's BSON serialization
  The BSON class implements a BSON encoder/decoder ("codec"). It consumes
  "documents" (typically hash references) and emits BSON strings and vice versa
  in accordance with the BSON Specification (http://bsonspec.org).
  .
  BSON is the primary data representation for MongoDB. While this module has
  several features that support MongoDB-specific needs and conventions, it can
  be used as a standalone serialization format.
  .
  BSON::XS contains an XS implementation for BSON encoding and decoding.
  There is no public API. Use the BSON module and it will choose the best
  implementation for you.

drwxr-xr-x root/root         0 2019-12-07 07:27 ./
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/BSON/
-rw-r--r-- root/root      2707 2019-12-05 18:57 ./usr/lib/x86_64-linux-gnu/perl5/5.30/BSON/XS.pm
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/BSON/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/BSON/XS/
-rw-r--r-- root/root    190504 2019-12-07 07:27 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/BSON/XS/XS.so
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/doc/libbson-xs-perl/
-rw-r--r-- root/root      3460 2019-12-05 18:57 ./usr/share/doc/libbson-xs-perl/CONTRIBUTING.mkdn
-rw-r--r-- root/root       661 2019-12-07 07:27 ./usr/share/doc/libbson-xs-perl/changelog.Debian.gz
-rw-r--r-- root/root      1234 2019-12-05 18:57 ./usr/share/doc/libbson-xs-perl/changelog.gz
-rw-r--r-- root/root      7519 2019-07-18 07:06 ./usr/share/doc/libbson-xs-perl/copyright
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/man/
drwxr-xr-x root/root         0 2019-12-07 07:27 ./usr/share/man/man3/
-rw-r--r-- root/root      1854 2019-12-07 07:27 ./usr/share/man/man3/BSON::XS.3pm.gz


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 3972
Build-Time: 15
Distribution: unstable
Host Architecture: amd64
Install-Time: 5
Job: libbson-xs-perl_0.8.2-1
Machine Architecture: amd64
Package: libbson-xs-perl
Package-Time: 32
Source-Version: 0.8.2-1
Space: 3972
Status: successful
Version: 0.8.2-1
--------------------------------------------------------------------------------
Finished at 2020-02-25T05:26:23Z
Build needed 00:00:32, 3972k disk space
DC-Status: OK 33.84772504s
