DC-Build-Header: asyncpg 0.13.0-1 / 2018-02-07 20:28:57 +0000
DC-Task: type:rebuild-binarch-only source:asyncpg version:0.13.0-1 chroot:unstable esttime:239 logfile:/tmp/asyncpg_0.13.0-1_unstable_clang60.log modes:clang60:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v  --chroot-setup-commands=/tmp/clang60 asyncpg_0.13.0-1'
sbuild (Debian sbuild) 0.73.0 (23 Dec 2016) on ip-172-31-26-129.eu-central-1.compute.internal

+==============================================================================+
| asyncpg 0.13.0-1 (amd64)                     Wed, 07 Feb 2018 20:28:58 +0000 |
+==============================================================================+

Package: asyncpg
Version: 0.13.0-1
Source Version: 0.13.0-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: any

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/unstable-amd64-sbuild-a6c3d842-cb57-4fc0-8acb-4f549ca88e79' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang60
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=6.0
+ echo 'Install of clang-6.0'
Install of clang-6.0
+ apt-get update
Get:1 http://127.0.0.1:9999/debian unstable InRelease [241 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-02-07-1427.34.pdiff [9180 B]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-02-07-1427.34.pdiff [9180 B]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-02-07-1427.34.pdiff [14.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-02-07-1427.34.pdiff [14.2 kB]
Get:6 http://127.0.0.1:9999/debian unstable/main Translation-en [5980 kB]
Fetched 6300 kB in 2s (3388 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-6.0
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
Suggested packages:
  gnustep gnustep-devel clang-6.0-doc
Recommended packages:
  llvm-6.0-dev python libomp-dev libgpm2
The following NEW packages will be installed:
  clang-6.0 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
0 upgraded, 13 newly installed, 0 to remove and 1 not upgraded.
Need to get 37.6 MB of archives.
After this operation, 187 MB of additional disk space will be used.
Get:1 http://127.0.0.1:9999/debian unstable/main amd64 libjsoncpp1 amd64 1.7.4-3 [75.6 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 libbsd0 amd64 0.8.7-1 [92.1 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 libncurses5 amd64 6.0+20171125-1 [95.7 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libedit2 amd64 3.1-20170329-1 [85.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 libllvm6.0 amd64 1:6.0~+rc1-1 [14.5 MB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libobjc4 amd64 7.3.0-1 [51.2 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 libobjc-7-dev amd64 7.3.0-1 [203 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 libc6-i386 amd64 2.26-6 [2836 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 lib32gcc1 amd64 1:7.3.0-1 [46.8 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 lib32stdc++6 amd64 7.3.0-1 [405 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 libclang-common-6.0-dev amd64 1:6.0~+rc1-1 [3097 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 libclang1-6.0 amd64 1:6.0~+rc1-1 [6983 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 clang-6.0 amd64 1:6.0~+rc1-1 [9171 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 37.6 MB in 0s (97.8 MB/s)
Selecting previously unselected package libjsoncpp1:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 9974 files and directories currently installed.)
Preparing to unpack .../00-libjsoncpp1_1.7.4-3_amd64.deb ...
Unpacking libjsoncpp1:amd64 (1.7.4-3) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.8.7-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.8.7-1) ...
Selecting previously unselected package libncurses5:amd64.
Preparing to unpack .../02-libncurses5_6.0+20171125-1_amd64.deb ...
Unpacking libncurses5:amd64 (6.0+20171125-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../03-libedit2_3.1-20170329-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20170329-1) ...
Selecting previously unselected package libllvm6.0:amd64.
Preparing to unpack .../04-libllvm6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libllvm6.0:amd64 (1:6.0~+rc1-1) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../05-libobjc4_7.3.0-1_amd64.deb ...
Unpacking libobjc4:amd64 (7.3.0-1) ...
Selecting previously unselected package libobjc-7-dev:amd64.
Preparing to unpack .../06-libobjc-7-dev_7.3.0-1_amd64.deb ...
Unpacking libobjc-7-dev:amd64 (7.3.0-1) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../07-libc6-i386_2.26-6_amd64.deb ...
Unpacking libc6-i386 (2.26-6) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../08-lib32gcc1_1%3a7.3.0-1_amd64.deb ...
Unpacking lib32gcc1 (1:7.3.0-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../09-lib32stdc++6_7.3.0-1_amd64.deb ...
Unpacking lib32stdc++6 (7.3.0-1) ...
Selecting previously unselected package libclang-common-6.0-dev.
Preparing to unpack .../10-libclang-common-6.0-dev_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libclang-common-6.0-dev (1:6.0~+rc1-1) ...
Selecting previously unselected package libclang1-6.0:amd64.
Preparing to unpack .../11-libclang1-6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libclang1-6.0:amd64 (1:6.0~+rc1-1) ...
Selecting previously unselected package clang-6.0.
Preparing to unpack .../12-clang-6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking clang-6.0 (1:6.0~+rc1-1) ...
Setting up libncurses5:amd64 (6.0+20171125-1) ...
Setting up libobjc4:amd64 (7.3.0-1) ...
Setting up libc6-i386 (2.26-6) ...
Setting up libbsd0:amd64 (0.8.7-1) ...
Setting up libobjc-7-dev:amd64 (7.3.0-1) ...
Processing triggers for libc-bin (2.26-6) ...
Setting up lib32gcc1 (1:7.3.0-1) ...
Setting up libjsoncpp1:amd64 (1.7.4-3) ...
Setting up libedit2:amd64 (3.1-20170329-1) ...
Setting up libllvm6.0:amd64 (1:6.0~+rc1-1) ...
Setting up libclang1-6.0:amd64 (1:6.0~+rc1-1) ...
Setting up lib32stdc++6 (7.3.0-1) ...
Setting up libclang-common-6.0-dev (1:6.0~+rc1-1) ...
Setting up clang-6.0 (1:6.0~+rc1-1) ...
Processing triggers for libc-bin (2.26-6) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-6.0 g++-4.6
+ ln -s clang-6.0 gcc-4.6
+ ln -s clang-6.0 cpp-4.6
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-6.0 g++-4.7
+ ln -s clang-6.0 gcc-4.7
+ ln -s clang-6.0 cpp-4.7
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-6.0 g++-4.8
+ ln -s clang-6.0 gcc-4.8
+ ln -s clang-6.0 cpp-4.8
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-6.0 g++-4.9
+ ln -s clang-6.0 gcc-4.9
+ ln -s clang-6.0 cpp-4.9
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-6.0 g++-5
+ ln -s clang-6.0 gcc-5
+ ln -s clang-6.0 cpp-5
+ ln -s clang-6.0 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
+ echo 'g++-5 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-6.0 g++-6
+ ln -s clang-6.0 gcc-6
+ ln -s clang-6.0 cpp-6
+ ln -s clang-6.0 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-6.0 g++-7
+ ln -s clang-6.0 gcc-7
+ ln -s clang-6.0 cpp-7
+ ln -s clang-6.0 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
+ echo 'g++-7 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-6.0 g++-8
+ ln -s clang-6.0 gcc-8
+ ln -s clang-6.0 cpp-8
+ ln -s clang-6.0 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/asyncpg-h3D3Va
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang60'.

Finished processing commands.
--------------------------------------------------------------------------------

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:9999/debian unstable InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libdebconfclient0
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 48.3 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:9999/debian unstable/main amd64 libdebconfclient0 amd64 0.240 [48.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 48.3 kB in 0s (4063 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../libdebconfclient0_0.240_amd64.deb ...
Unpacking libdebconfclient0:amd64 (0.240) over (0.239) ...
Setting up libdebconfclient0:amd64 (0.240) ...
Processing triggers for libc-bin (2.26-6) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'asyncpg' packaging is maintained in the 'Git' version control system at:
https://anonscm.debian.org/git/python-modules/packages/asyncpg.git
Please use:
git clone https://anonscm.debian.org/git/python-modules/packages/asyncpg.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 582 kB of source archives.
Get:1 http://127.0.0.1:9999/debian unstable/main asyncpg 0.13.0-1 (dsc) [2092 B]
Get:2 http://127.0.0.1:9999/debian unstable/main asyncpg 0.13.0-1 (tar) [573 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main asyncpg 0.13.0-1 (diff) [6596 B]
Fetched 582 kB in 0s (5762 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/asyncpg-h3D3Va/asyncpg-0.13.0' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/asyncpg-h3D3Va' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install build-essential                                                      |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-core-dummy' in '/<<BUILDDIR>>/resolver-Viesox/apt_archive/sbuild-build-depends-core-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-core-dummy
dpkg-scanpackages: info: Wrote 1 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Release [957 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Sources [349 B]
Get:5 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Packages [431 B]
Fetched 1737 B in 0s (126 kB/s)
Reading package lists...
Reading package lists...

Install core build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 852 B of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ sbuild-build-depends-core-dummy 0.invalid.0 [852 B]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 852 B in 0s (0 B/s)
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 9), dh-python, cython3 (>= 0.24), python3-all-dev, python3-setuptools, python3-pytest, postgresql, postgresql-contrib, libpq-dev
Filtered Build-Depends: debhelper (>= 9), dh-python, cython3 (>= 0.24), python3-all-dev, python3-setuptools, python3-pytest, postgresql, postgresql-contrib, libpq-dev
dpkg-deb: building package 'sbuild-build-depends-asyncpg-dummy' in '/<<BUILDDIR>>/resolver-Viesox/apt_archive/sbuild-build-depends-asyncpg-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-asyncpg-dummy sbuild-build-depends-core-dummy
dpkg-scanpackages: info: Wrote 2 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Release [963 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Sources [549 B]
Get:5 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ Packages [627 B]
Fetched 2139 B in 0s (155 kB/s)
Reading package lists...
Reading package lists...

Install asyncpg build dependencies (apt-based resolver)
-------------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils cython3 debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libc-l10n libcroco3 libexpat1
  libexpat1-dev libfile-stripnondeterminism-perl libglib2.0-0 libgssapi-krb5-2
  libicu57 libk5crypto3 libkeyutils1 libkrb5-3 libkrb5support0 libldap-2.4-2
  libldap-common libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpq-dev
  libpq5 libprocps6 libpython3-all-dev libpython3-dev libpython3-stdlib
  libpython3.6 libpython3.6-dev libpython3.6-minimal libpython3.6-stdlib
  libreadline7 libsasl2-2 libsasl2-modules-db libsigsegv2 libsqlite3-0
  libssl1.1 libtimedate-perl libtool libxml2 libxslt1.1 locales lsb-base m4
  man-db mime-support netbase openssl po-debconf postgresql postgresql-10
  postgresql-client-10 postgresql-client-common postgresql-common
  postgresql-contrib procps python3 python3-all python3-all-dev python3-dev
  python3-distutils python3-lib2to3 python3-minimal python3-pkg-resources
  python3-py python3-pytest python3-setuptools python3.6 python3.6-dev
  python3.6-minimal readline-common ssl-cert tzdata ucf
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation cython-doc dh-make dwz gettext-doc libasprintf-dev libgettextpo-dev
  groff krb5-doc krb5-user postgresql-doc-10 libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc less www-browser apparmor
  ca-certificates libmail-box-perl postgresql-doc locales-all libjson-perl
  python3-doc python3-tk python3-venv subversion python-setuptools-doc
  python3.6-venv python3.6-doc binfmt-support readline-doc openssl-blacklist
Recommended packages:
  curl | wget | lynx-cur libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs krb5-locales libsasl2-modules libltdl-dev
  libmail-sendmail-perl sysstat lsb-release logrotate psmisc
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils cython3 debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libc-l10n libcroco3 libexpat1
  libexpat1-dev libfile-stripnondeterminism-perl libglib2.0-0 libgssapi-krb5-2
  libicu57 libk5crypto3 libkeyutils1 libkrb5-3 libkrb5support0 libldap-2.4-2
  libldap-common libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpq-dev
  libpq5 libprocps6 libpython3-all-dev libpython3-dev libpython3-stdlib
  libpython3.6 libpython3.6-dev libpython3.6-minimal libpython3.6-stdlib
  libreadline7 libsasl2-2 libsasl2-modules-db libsigsegv2 libsqlite3-0
  libssl1.1 libtimedate-perl libtool libxml2 libxslt1.1 locales lsb-base m4
  man-db mime-support netbase openssl po-debconf postgresql postgresql-10
  postgresql-client-10 postgresql-client-common postgresql-common
  postgresql-contrib procps python3 python3-all python3-all-dev python3-dev
  python3-distutils python3-lib2to3 python3-minimal python3-pkg-resources
  python3-py python3-pytest python3-setuptools python3.6 python3.6-dev
  python3.6-minimal readline-common sbuild-build-depends-asyncpg-dummy
  ssl-cert tzdata ucf
0 upgraded, 88 newly installed, 0 to remove and 0 not upgraded.
Need to get 47.2 MB of archives.
After this operation, 183 MB of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-Viesox/apt_archive ./ sbuild-build-depends-asyncpg-dummy 0.invalid.0 [920 B]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 groff-base amd64 1.22.3-9 [1160 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 bsdmainutils amd64 11.1.2 [190 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libpipeline1 amd64 1.5.0-1 [29.0 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 man-db amd64 2.8.0-2 [1170 kB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libssl1.1 amd64 1.1.0g-2 [1346 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6-minimal amd64 3.6.4-3 [571 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 libexpat1 amd64 2.2.5-3 [96.8 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 python3.6-minimal amd64 3.6.4-3 [1465 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 python3-minimal amd64 3.6.4-1 [35.8 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 mime-support all 3.60 [36.7 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 libmpdec2 amd64 2.4.2-1 [85.2 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 readline-common all 7.0-3 [70.4 kB]
Get:14 http://127.0.0.1:9999/debian unstable/main amd64 libreadline7 amd64 7.0-3 [151 kB]
Get:15 http://127.0.0.1:9999/debian unstable/main amd64 libsqlite3-0 amd64 3.22.0-1 [595 kB]
Get:16 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6-stdlib amd64 3.6.4-3 [1644 kB]
Get:17 http://127.0.0.1:9999/debian unstable/main amd64 python3-lib2to3 all 3.6.4-3 [78.8 kB]
Get:18 http://127.0.0.1:9999/debian unstable/main amd64 python3-distutils all 3.6.4-3 [147 kB]
Get:19 http://127.0.0.1:9999/debian unstable/main amd64 python3.6 amd64 3.6.4-3 [223 kB]
Get:20 http://127.0.0.1:9999/debian unstable/main amd64 libpython3-stdlib amd64 3.6.4-1 [19.3 kB]
Get:21 http://127.0.0.1:9999/debian unstable/main amd64 dh-python all 2.20170125 [86.8 kB]
Get:22 http://127.0.0.1:9999/debian unstable/main amd64 python3 amd64 3.6.4-1 [22.3 kB]
Get:23 http://127.0.0.1:9999/debian unstable/main amd64 tzdata all 2018c-1 [250 kB]
Get:24 http://127.0.0.1:9999/debian unstable/main amd64 netbase all 5.4 [19.1 kB]
Get:25 http://127.0.0.1:9999/debian unstable/main amd64 libprocps6 amd64 2:3.3.12-3 [58.1 kB]
Get:26 http://127.0.0.1:9999/debian unstable/main amd64 lsb-base all 9.20170808 [28.1 kB]
Get:27 http://127.0.0.1:9999/debian unstable/main amd64 procps amd64 2:3.3.12-3 [249 kB]
Get:28 http://127.0.0.1:9999/debian unstable/main amd64 libmagic-mgc amd64 1:5.32-1 [225 kB]
Get:29 http://127.0.0.1:9999/debian unstable/main amd64 libmagic1 amd64 1:5.32-1 [111 kB]
Get:30 http://127.0.0.1:9999/debian unstable/main amd64 file amd64 1:5.32-1 [64.4 kB]
Get:31 http://127.0.0.1:9999/debian unstable/main amd64 gettext-base amd64 0.19.8.1-4 [122 kB]
Get:32 http://127.0.0.1:9999/debian unstable/main amd64 libc-l10n all 2.26-6 [853 kB]
Get:33 http://127.0.0.1:9999/debian unstable/main amd64 locales all 2.26-6 [3308 kB]
Get:34 http://127.0.0.1:9999/debian unstable/main amd64 ucf all 3.0036 [70.2 kB]
Get:35 http://127.0.0.1:9999/debian unstable/main amd64 libsigsegv2 amd64 2.12-1 [32.7 kB]
Get:36 http://127.0.0.1:9999/debian unstable/main amd64 m4 amd64 1.4.18-1 [202 kB]
Get:37 http://127.0.0.1:9999/debian unstable/main amd64 autoconf all 2.69-11 [341 kB]
Get:38 http://127.0.0.1:9999/debian unstable/main amd64 autotools-dev all 20171216.1 [75.9 kB]
Get:39 http://127.0.0.1:9999/debian unstable/main amd64 automake all 1:1.15.1-3 [736 kB]
Get:40 http://127.0.0.1:9999/debian unstable/main amd64 autopoint all 0.19.8.1-4 [434 kB]
Get:41 http://127.0.0.1:9999/debian unstable/main amd64 cython3 amd64 0.26.1-0.4 [1955 kB]
Get:42 http://127.0.0.1:9999/debian unstable/main amd64 libtool all 2.4.6-2 [545 kB]
Get:43 http://127.0.0.1:9999/debian unstable/main amd64 dh-autoreconf all 16 [16.3 kB]
Get:44 http://127.0.0.1:9999/debian unstable/main amd64 libarchive-zip-perl all 1.60-1 [95.6 kB]
Get:45 http://127.0.0.1:9999/debian unstable/main amd64 libfile-stripnondeterminism-perl all 0.040-1 [18.4 kB]
Get:46 http://127.0.0.1:9999/debian unstable/main amd64 libtimedate-perl all 2.3000-2 [42.2 kB]
Get:47 http://127.0.0.1:9999/debian unstable/main amd64 dh-strip-nondeterminism all 0.040-1 [11.8 kB]
Get:48 http://127.0.0.1:9999/debian unstable/main amd64 libglib2.0-0 amd64 2.54.3-2 [2822 kB]
Get:49 http://127.0.0.1:9999/debian unstable/main amd64 libicu57 amd64 57.1-8 [7699 kB]
Get:50 http://127.0.0.1:9999/debian unstable/main amd64 libxml2 amd64 2.9.4+dfsg1-6.1 [725 kB]
Get:51 http://127.0.0.1:9999/debian unstable/main amd64 libcroco3 amd64 0.6.12-2 [144 kB]
Get:52 http://127.0.0.1:9999/debian unstable/main amd64 gettext amd64 0.19.8.1-4 [1302 kB]
Get:53 http://127.0.0.1:9999/debian unstable/main amd64 intltool-debian all 0.35.0+20060710.4 [26.3 kB]
Get:54 http://127.0.0.1:9999/debian unstable/main amd64 po-debconf all 1.0.20 [247 kB]
Get:55 http://127.0.0.1:9999/debian unstable/main amd64 debhelper all 11.1.4 [1005 kB]
Get:56 http://127.0.0.1:9999/debian unstable/main amd64 libexpat1-dev amd64 2.2.5-3 [140 kB]
Get:57 http://127.0.0.1:9999/debian unstable/main amd64 libkeyutils1 amd64 1.5.9-9.2 [12.9 kB]
Get:58 http://127.0.0.1:9999/debian unstable/main amd64 libkrb5support0 amd64 1.16-2 [62.8 kB]
Get:59 http://127.0.0.1:9999/debian unstable/main amd64 libk5crypto3 amd64 1.16-2 [121 kB]
Get:60 http://127.0.0.1:9999/debian unstable/main amd64 libkrb5-3 amd64 1.16-2 [316 kB]
Get:61 http://127.0.0.1:9999/debian unstable/main amd64 libgssapi-krb5-2 amd64 1.16-2 [158 kB]
Get:62 http://127.0.0.1:9999/debian unstable/main amd64 libsasl2-modules-db amd64 2.1.27~101-g0780600+dfsg-3 [68.2 kB]
Get:63 http://127.0.0.1:9999/debian unstable/main amd64 libsasl2-2 amd64 2.1.27~101-g0780600+dfsg-3 [105 kB]
Get:64 http://127.0.0.1:9999/debian unstable/main amd64 libldap-common all 2.4.45+dfsg-1 [87.0 kB]
Get:65 http://127.0.0.1:9999/debian unstable/main amd64 libldap-2.4-2 amd64 2.4.45+dfsg-1 [223 kB]
Get:66 http://127.0.0.1:9999/debian unstable/main amd64 libpq5 amd64 10.1-3 [158 kB]
Get:67 http://127.0.0.1:9999/debian unstable/main amd64 libpq-dev amd64 10.1-3 [219 kB]
Get:68 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6 amd64 3.6.4-3 [1446 kB]
Get:69 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6-dev amd64 3.6.4-3 [2484 kB]
Get:70 http://127.0.0.1:9999/debian unstable/main amd64 libpython3-dev amd64 3.6.4-1 [19.4 kB]
Get:71 http://127.0.0.1:9999/debian unstable/main amd64 libpython3-all-dev amd64 3.6.4-1 [1044 B]
Get:72 http://127.0.0.1:9999/debian unstable/main amd64 libxslt1.1 amd64 1.1.29-5 [236 kB]
Get:73 http://127.0.0.1:9999/debian unstable/main amd64 openssl amd64 1.1.0g-2 [741 kB]
Get:74 http://127.0.0.1:9999/debian unstable/main amd64 postgresql-client-common all 189 [81.9 kB]
Get:75 http://127.0.0.1:9999/debian unstable/main amd64 postgresql-client-10 amd64 10.1-3 [1282 kB]
Get:76 http://127.0.0.1:9999/debian unstable/main amd64 ssl-cert all 1.0.39 [20.8 kB]
Get:77 http://127.0.0.1:9999/debian unstable/main amd64 postgresql-common all 189 [219 kB]
Get:78 http://127.0.0.1:9999/debian unstable/main amd64 postgresql-10 amd64 10.1-3 [4656 kB]
Get:79 http://127.0.0.1:9999/debian unstable/main amd64 postgresql all 10+189 [58.1 kB]
Get:80 http://127.0.0.1:9999/debian unstable/main amd64 postgresql-contrib all 10+189 [58.1 kB]
Get:81 http://127.0.0.1:9999/debian unstable/main amd64 python3-all amd64 3.6.4-1 [1020 B]
Get:82 http://127.0.0.1:9999/debian unstable/main amd64 python3.6-dev amd64 3.6.4-3 [519 kB]
Get:83 http://127.0.0.1:9999/debian unstable/main amd64 python3-dev amd64 3.6.4-1 [1228 B]
Get:84 http://127.0.0.1:9999/debian unstable/main amd64 python3-all-dev amd64 3.6.4-1 [1044 B]
Get:85 http://127.0.0.1:9999/debian unstable/main amd64 python3-pkg-resources all 38.4.0-1 [142 kB]
Get:86 http://127.0.0.1:9999/debian unstable/main amd64 python3-py all 1.4.34-3 [83.6 kB]
Get:87 http://127.0.0.1:9999/debian unstable/main amd64 python3-pytest all 3.2.5-1 [202 kB]
Get:88 http://127.0.0.1:9999/debian unstable/main amd64 python3-setuptools all 38.4.0-1 [229 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 47.2 MB in 1s (92.9 MB/s)
Selecting previously unselected package groff-base.
(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../00-groff-base_1.22.3-9_amd64.deb ...
Unpacking groff-base (1.22.3-9) ...
Selecting previously unselected package bsdmainutils.
Preparing to unpack .../01-bsdmainutils_11.1.2_amd64.deb ...
Unpacking bsdmainutils (11.1.2) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../02-libpipeline1_1.5.0-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.0-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../03-man-db_2.8.0-2_amd64.deb ...
Unpacking man-db (2.8.0-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../04-libssl1.1_1.1.0g-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.0g-2) ...
Selecting previously unselected package libpython3.6-minimal:amd64.
Preparing to unpack .../05-libpython3.6-minimal_3.6.4-3_amd64.deb ...
Unpacking libpython3.6-minimal:amd64 (3.6.4-3) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../06-libexpat1_2.2.5-3_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.5-3) ...
Selecting previously unselected package python3.6-minimal.
Preparing to unpack .../07-python3.6-minimal_3.6.4-3_amd64.deb ...
Unpacking python3.6-minimal (3.6.4-3) ...
Selecting previously unselected package python3-minimal.
Preparing to unpack .../08-python3-minimal_3.6.4-1_amd64.deb ...
Unpacking python3-minimal (3.6.4-1) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../09-mime-support_3.60_all.deb ...
Unpacking mime-support (3.60) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../10-libmpdec2_2.4.2-1_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-1) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../11-readline-common_7.0-3_all.deb ...
Unpacking readline-common (7.0-3) ...
Selecting previously unselected package libreadline7:amd64.
Preparing to unpack .../12-libreadline7_7.0-3_amd64.deb ...
Unpacking libreadline7:amd64 (7.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../13-libsqlite3-0_3.22.0-1_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.22.0-1) ...
Selecting previously unselected package libpython3.6-stdlib:amd64.
Preparing to unpack .../14-libpython3.6-stdlib_3.6.4-3_amd64.deb ...
Unpacking libpython3.6-stdlib:amd64 (3.6.4-3) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../15-python3-lib2to3_3.6.4-3_all.deb ...
Unpacking python3-lib2to3 (3.6.4-3) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../16-python3-distutils_3.6.4-3_all.deb ...
Unpacking python3-distutils (3.6.4-3) ...
Selecting previously unselected package python3.6.
Preparing to unpack .../17-python3.6_3.6.4-3_amd64.deb ...
Unpacking python3.6 (3.6.4-3) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../18-libpython3-stdlib_3.6.4-1_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.6.4-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../19-dh-python_2.20170125_all.deb ...
Unpacking dh-python (2.20170125) ...
Setting up libssl1.1:amd64 (1.1.0g-2) ...
Setting up libpython3.6-minimal:amd64 (3.6.4-3) ...
Setting up libexpat1:amd64 (2.2.5-3) ...
Setting up python3.6-minimal (3.6.4-3) ...
Setting up python3-minimal (3.6.4-1) ...
Selecting previously unselected package python3.
(Reading database ... 12366 files and directories currently installed.)
Preparing to unpack .../00-python3_3.6.4-1_amd64.deb ...
Unpacking python3 (3.6.4-1) ...
Selecting previously unselected package tzdata.
Preparing to unpack .../01-tzdata_2018c-1_all.deb ...
Unpacking tzdata (2018c-1) ...
Selecting previously unselected package netbase.
Preparing to unpack .../02-netbase_5.4_all.deb ...
Unpacking netbase (5.4) ...
Selecting previously unselected package libprocps6:amd64.
Preparing to unpack .../03-libprocps6_2%3a3.3.12-3_amd64.deb ...
Unpacking libprocps6:amd64 (2:3.3.12-3) ...
Selecting previously unselected package lsb-base.
Preparing to unpack .../04-lsb-base_9.20170808_all.deb ...
Unpacking lsb-base (9.20170808) ...
Selecting previously unselected package procps.
Preparing to unpack .../05-procps_2%3a3.3.12-3_amd64.deb ...
Unpacking procps (2:3.3.12-3) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.32-1_amd64.deb ...
Unpacking libmagic-mgc (1:5.32-1) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.32-1_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.32-1) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.32-1_amd64.deb ...
Unpacking file (1:5.32-1) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.19.8.1-4_amd64.deb ...
Unpacking gettext-base (0.19.8.1-4) ...
Selecting previously unselected package libc-l10n.
Preparing to unpack .../10-libc-l10n_2.26-6_all.deb ...
Unpacking libc-l10n (2.26-6) ...
Selecting previously unselected package locales.
Preparing to unpack .../11-locales_2.26-6_all.deb ...
Unpacking locales (2.26-6) ...
Selecting previously unselected package ucf.
Preparing to unpack .../12-ucf_3.0036_all.deb ...
Moving old data out of the way
Unpacking ucf (3.0036) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../13-libsigsegv2_2.12-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../14-m4_1.4.18-1_amd64.deb ...
Unpacking m4 (1.4.18-1) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../15-autoconf_2.69-11_all.deb ...
Unpacking autoconf (2.69-11) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../16-autotools-dev_20171216.1_all.deb ...
Unpacking autotools-dev (20171216.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../17-automake_1%3a1.15.1-3_all.deb ...
Unpacking automake (1:1.15.1-3) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../18-autopoint_0.19.8.1-4_all.deb ...
Unpacking autopoint (0.19.8.1-4) ...
Selecting previously unselected package cython3.
Preparing to unpack .../19-cython3_0.26.1-0.4_amd64.deb ...
Unpacking cython3 (0.26.1-0.4) ...
Selecting previously unselected package libtool.
Preparing to unpack .../20-libtool_2.4.6-2_all.deb ...
Unpacking libtool (2.4.6-2) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../21-dh-autoreconf_16_all.deb ...
Unpacking dh-autoreconf (16) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../22-libarchive-zip-perl_1.60-1_all.deb ...
Unpacking libarchive-zip-perl (1.60-1) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../23-libfile-stripnondeterminism-perl_0.040-1_all.deb ...
Unpacking libfile-stripnondeterminism-perl (0.040-1) ...
Selecting previously unselected package libtimedate-perl.
Preparing to unpack .../24-libtimedate-perl_2.3000-2_all.deb ...
Unpacking libtimedate-perl (2.3000-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../25-dh-strip-nondeterminism_0.040-1_all.deb ...
Unpacking dh-strip-nondeterminism (0.040-1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../26-libglib2.0-0_2.54.3-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.54.3-2) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../27-libicu57_57.1-8_amd64.deb ...
Unpacking libicu57:amd64 (57.1-8) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../28-libxml2_2.9.4+dfsg1-6.1_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../29-libcroco3_0.6.12-2_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.12-2) ...
Selecting previously unselected package gettext.
Preparing to unpack .../30-gettext_0.19.8.1-4_amd64.deb ...
Unpacking gettext (0.19.8.1-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../31-intltool-debian_0.35.0+20060710.4_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.4) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../32-po-debconf_1.0.20_all.deb ...
Unpacking po-debconf (1.0.20) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../33-debhelper_11.1.4_all.deb ...
Unpacking debhelper (11.1.4) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../34-libexpat1-dev_2.2.5-3_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.2.5-3) ...
Selecting previously unselected package libkeyutils1:amd64.
Preparing to unpack .../35-libkeyutils1_1.5.9-9.2_amd64.deb ...
Unpacking libkeyutils1:amd64 (1.5.9-9.2) ...
Selecting previously unselected package libkrb5support0:amd64.
Preparing to unpack .../36-libkrb5support0_1.16-2_amd64.deb ...
Unpacking libkrb5support0:amd64 (1.16-2) ...
Selecting previously unselected package libk5crypto3:amd64.
Preparing to unpack .../37-libk5crypto3_1.16-2_amd64.deb ...
Unpacking libk5crypto3:amd64 (1.16-2) ...
Selecting previously unselected package libkrb5-3:amd64.
Preparing to unpack .../38-libkrb5-3_1.16-2_amd64.deb ...
Unpacking libkrb5-3:amd64 (1.16-2) ...
Selecting previously unselected package libgssapi-krb5-2:amd64.
Preparing to unpack .../39-libgssapi-krb5-2_1.16-2_amd64.deb ...
Unpacking libgssapi-krb5-2:amd64 (1.16-2) ...
Selecting previously unselected package libsasl2-modules-db:amd64.
Preparing to unpack .../40-libsasl2-modules-db_2.1.27~101-g0780600+dfsg-3_amd64.deb ...
Unpacking libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3) ...
Selecting previously unselected package libsasl2-2:amd64.
Preparing to unpack .../41-libsasl2-2_2.1.27~101-g0780600+dfsg-3_amd64.deb ...
Unpacking libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3) ...
Selecting previously unselected package libldap-common.
Preparing to unpack .../42-libldap-common_2.4.45+dfsg-1_all.deb ...
Unpacking libldap-common (2.4.45+dfsg-1) ...
Selecting previously unselected package libldap-2.4-2:amd64.
Preparing to unpack .../43-libldap-2.4-2_2.4.45+dfsg-1_amd64.deb ...
Unpacking libldap-2.4-2:amd64 (2.4.45+dfsg-1) ...
Selecting previously unselected package libpq5:amd64.
Preparing to unpack .../44-libpq5_10.1-3_amd64.deb ...
Unpacking libpq5:amd64 (10.1-3) ...
Selecting previously unselected package libpq-dev.
Preparing to unpack .../45-libpq-dev_10.1-3_amd64.deb ...
Unpacking libpq-dev (10.1-3) ...
Selecting previously unselected package libpython3.6:amd64.
Preparing to unpack .../46-libpython3.6_3.6.4-3_amd64.deb ...
Unpacking libpython3.6:amd64 (3.6.4-3) ...
Selecting previously unselected package libpython3.6-dev:amd64.
Preparing to unpack .../47-libpython3.6-dev_3.6.4-3_amd64.deb ...
Unpacking libpython3.6-dev:amd64 (3.6.4-3) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../48-libpython3-dev_3.6.4-1_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.6.4-1) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../49-libpython3-all-dev_3.6.4-1_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.6.4-1) ...
Selecting previously unselected package libxslt1.1:amd64.
Preparing to unpack .../50-libxslt1.1_1.1.29-5_amd64.deb ...
Unpacking libxslt1.1:amd64 (1.1.29-5) ...
Selecting previously unselected package openssl.
Preparing to unpack .../51-openssl_1.1.0g-2_amd64.deb ...
Unpacking openssl (1.1.0g-2) ...
Selecting previously unselected package postgresql-client-common.
Preparing to unpack .../52-postgresql-client-common_189_all.deb ...
Unpacking postgresql-client-common (189) ...
Selecting previously unselected package postgresql-client-10.
Preparing to unpack .../53-postgresql-client-10_10.1-3_amd64.deb ...
Unpacking postgresql-client-10 (10.1-3) ...
Selecting previously unselected package ssl-cert.
Preparing to unpack .../54-ssl-cert_1.0.39_all.deb ...
Unpacking ssl-cert (1.0.39) ...
Selecting previously unselected package postgresql-common.
Preparing to unpack .../55-postgresql-common_189_all.deb ...
Adding 'diversion of /usr/bin/pg_config to /usr/bin/pg_config.libpq-dev by postgresql-common'
Unpacking postgresql-common (189) ...
Selecting previously unselected package postgresql-10.
Preparing to unpack .../56-postgresql-10_10.1-3_amd64.deb ...
Unpacking postgresql-10 (10.1-3) ...
Selecting previously unselected package postgresql.
Preparing to unpack .../57-postgresql_10+189_all.deb ...
Unpacking postgresql (10+189) ...
Selecting previously unselected package postgresql-contrib.
Preparing to unpack .../58-postgresql-contrib_10+189_all.deb ...
Unpacking postgresql-contrib (10+189) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../59-python3-all_3.6.4-1_amd64.deb ...
Unpacking python3-all (3.6.4-1) ...
Selecting previously unselected package python3.6-dev.
Preparing to unpack .../60-python3.6-dev_3.6.4-3_amd64.deb ...
Unpacking python3.6-dev (3.6.4-3) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../61-python3-dev_3.6.4-1_amd64.deb ...
Unpacking python3-dev (3.6.4-1) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../62-python3-all-dev_3.6.4-1_amd64.deb ...
Unpacking python3-all-dev (3.6.4-1) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../63-python3-pkg-resources_38.4.0-1_all.deb ...
Unpacking python3-pkg-resources (38.4.0-1) ...
Selecting previously unselected package python3-py.
Preparing to unpack .../64-python3-py_1.4.34-3_all.deb ...
Unpacking python3-py (1.4.34-3) ...
Selecting previously unselected package python3-pytest.
Preparing to unpack .../65-python3-pytest_3.2.5-1_all.deb ...
Unpacking python3-pytest (3.2.5-1) ...
Selecting previously unselected package python3-setuptools.
Preparing to unpack .../66-python3-setuptools_38.4.0-1_all.deb ...
Unpacking python3-setuptools (38.4.0-1) ...
Selecting previously unselected package sbuild-build-depends-asyncpg-dummy.
Preparing to unpack .../67-sbuild-build-depends-asyncpg-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-asyncpg-dummy (0.invalid.0) ...
Setting up readline-common (7.0-3) ...
Setting up libarchive-zip-perl (1.60-1) ...
Setting up mime-support (3.60) ...
Setting up libtimedate-perl (2.3000-2) ...
Setting up libsigsegv2:amd64 (2.12-1) ...
Setting up libldap-common (2.4.45+dfsg-1) ...
Setting up libreadline7:amd64 (7.0-3) ...
Setting up tzdata (2018c-1) ...

Current default time zone: 'Etc/UTC'
Local time is now:      Wed Feb  7 20:29:21 UTC 2018.
Universal Time is now:  Wed Feb  7 20:29:21 UTC 2018.
Run 'dpkg-reconfigure tzdata' if you wish to change it.

Setting up groff-base (1.22.3-9) ...
Setting up libglib2.0-0:amd64 (2.54.3-2) ...
No schema files found: doing nothing.
Setting up libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3) ...
Setting up libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3) ...
Setting up gettext-base (0.19.8.1-4) ...
Setting up libpipeline1:amd64 (1.5.0-1) ...
Setting up m4 (1.4.18-1) ...
Setting up libicu57:amd64 (57.1-8) ...
Setting up libprocps6:amd64 (2:3.3.12-3) ...
Setting up ucf (3.0036) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Setting up libmagic-mgc (1:5.32-1) ...
Setting up libmagic1:amd64 (1:5.32-1) ...
Setting up lsb-base (9.20170808) ...
Setting up procps (2:3.3.12-3) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode
Setting up libcroco3:amd64 (0.6.12-2) ...
Setting up libxslt1.1:amd64 (1.1.29-5) ...
Processing triggers for libc-bin (2.26-6) ...
Setting up autotools-dev (20171216.1) ...
Setting up libldap-2.4-2:amd64 (2.4.45+dfsg-1) ...
Setting up libc-l10n (2.26-6) ...
Setting up openssl (1.1.0g-2) ...
Setting up libsqlite3-0:amd64 (3.22.0-1) ...
Setting up libexpat1-dev:amd64 (2.2.5-3) ...
Setting up libkeyutils1:amd64 (1.5.9-9.2) ...
Setting up bsdmainutils (11.1.2) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up locales (2.26-6) ...
Generating locales (this might take a while)...
Generation complete.
Setting up autopoint (0.19.8.1-4) ...
Setting up libmpdec2:amd64 (2.4.2-1) ...
Setting up netbase (5.4) ...
Setting up libfile-stripnondeterminism-perl (0.040-1) ...
Setting up libpython3.6-stdlib:amd64 (3.6.4-3) ...
Setting up gettext (0.19.8.1-4) ...
Setting up ssl-cert (1.0.39) ...
Setting up autoconf (2.69-11) ...
Setting up file (1:5.32-1) ...
Setting up libkrb5support0:amd64 (1.16-2) ...
Setting up intltool-debian (0.35.0+20060710.4) ...
Setting up postgresql-client-common (189) ...
Setting up postgresql-common (189) ...
ERROR: ld.so: object 'libeatmydata.so' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.
Adding user postgres to group ssl-cert

Creating config file /etc/postgresql-common/createcluster.conf with new version
Building PostgreSQL dictionaries from installed myspell/hunspell packages...
Removing obsolete dictionary files:
invoke-rc.d: could not determine current runlevel
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up automake (1:1.15.1-3) ...
update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode
Setting up man-db (2.8.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libpython3.6:amd64 (3.6.4-3) ...
Setting up libtool (2.4.6-2) ...
Setting up libpython3-stdlib:amd64 (3.6.4-1) ...
Setting up libk5crypto3:amd64 (1.16-2) ...
Setting up po-debconf (1.0.20) ...
Setting up libpython3.6-dev:amd64 (3.6.4-3) ...
Setting up libkrb5-3:amd64 (1.16-2) ...
Setting up libpython3-dev:amd64 (3.6.4-1) ...
Setting up libgssapi-krb5-2:amd64 (1.16-2) ...
Setting up libpq5:amd64 (10.1-3) ...
Setting up libpython3-all-dev:amd64 (3.6.4-1) ...
Setting up postgresql-client-10 (10.1-3) ...
update-alternatives: using /usr/share/postgresql/10/man/man1/psql.1.gz to provide /usr/share/man/man1/psql.1.gz (psql.1.gz) in auto mode
Setting up libpq-dev (10.1-3) ...
Setting up postgresql-10 (10.1-3) ...
Creating new PostgreSQL cluster 10/main ...
/usr/lib/postgresql/10/bin/initdb -D /var/lib/postgresql/10/main --auth-local peer --auth-host md5
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "C.UTF-8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/10/main ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

Success. You can now start the database server using:

    /usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l logfile start

Ver Cluster Port Status Owner    Data directory              Log file
10  main    5432 down   postgres /var/lib/postgresql/10/main /var/log/postgresql/postgresql-10-main.log
update-alternatives: using /usr/share/postgresql/10/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) in auto mode
invoke-rc.d: could not determine current runlevel
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up postgresql (10+189) ...
Setting up postgresql-contrib (10+189) ...
Setting up dh-autoreconf (16) ...
Setting up python3 (3.6.4-1) ...
Setting up python3-pkg-resources (38.4.0-1) ...
Setting up dh-strip-nondeterminism (0.040-1) ...
Setting up cython3 (0.26.1-0.4) ...
Setting up python3-lib2to3 (3.6.4-3) ...
Setting up dh-python (2.20170125) ...
Setting up python3-distutils (3.6.4-3) ...
Setting up debhelper (11.1.4) ...
Setting up python3.6 (3.6.4-3) ...
Setting up python3-py (1.4.34-3) ...
Setting up python3-pytest (3.2.5-1) ...
Setting up python3-all (3.6.4-1) ...
Setting up python3-setuptools (38.4.0-1) ...
Setting up python3.6-dev (3.6.4-3) ...
Setting up python3-dev (3.6.4-1) ...
Setting up python3-all-dev (3.6.4-1) ...
Setting up sbuild-build-depends-asyncpg-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.26-6) ...

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.9.0-2-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.30-2 dpkg-dev_1.19.0.5 g++-7_7.3.0-1 gcc-7_7.3.0-1 libc6-dev_2.26-6 libstdc++-7-dev_7.3.0-1 libstdc++6_7.3.0-1 linux-libc-dev_4.14.13-1
Package versions: adduser_3.117 apt_1.6~alpha7 autoconf_2.69-11 automake_1:1.15.1-3 autopoint_0.19.8.1-4 autotools-dev_20171216.1 base-files_10.1 base-passwd_3.5.44 bash_4.4.18-1 binutils_2.30-2 binutils-common_2.30-2 binutils-x86-64-linux-gnu_2.30-2 bsdmainutils_11.1.2 bsdutils_1:2.30.2-0.3 build-essential_12.4 bzip2_1.0.6-8.1 clang-6.0_1:6.0~+rc1-1 coreutils_8.28-1 cpp_4:7.2.0-1d1 cpp-7_7.3.0-1 cython3_0.26.1-0.4 dash_0.5.8-2.10 debconf_1.5.65 debfoster_2.7-2.1+b1 debhelper_11.1.4 debian-archive-keyring_2017.7 debianutils_4.8.4 dh-autoreconf_16 dh-python_2.20170125 dh-strip-nondeterminism_0.040-1 diffutils_1:3.6-1 dpkg_1.19.0.5 dpkg-dev_1.19.0.5 e2fslibs_1.43.8-2 e2fsprogs_1.43.8-2 eatmydata_105-5 fakeroot_1.22-2 fdisk_2.30.2-0.3 file_1:5.32-1 findutils_4.6.0+git+20170828-2 g++_4:7.2.0-1d1 g++-7_7.3.0-1 gcc_4:7.2.0-1d1 gcc-6-base_6.4.0-12 gcc-7_7.3.0-1 gcc-7-base_7.3.0-1 gettext_0.19.8.1-4 gettext-base_0.19.8.1-4 gpgv_2.2.4-2 grep_3.1-2 groff-base_1.22.3-9 gzip_1.6-5+b1 hostname_3.20 init-system-helpers_1.51 intltool-debian_0.35.0+20060710.4 lib32gcc1_1:7.3.0-1 lib32stdc++6_7.3.0-1 libacl1_2.2.52-3+b1 libapt-pkg5.0_1.6~alpha7 libarchive-zip-perl_1.60-1 libasan4_7.3.0-1 libatomic1_7.3.0-1 libattr1_1:2.4.47-2+b2 libaudit-common_1:2.8.2-1 libaudit1_1:2.8.2-1 libbinutils_2.30-2 libblkid1_2.30.2-0.3 libbsd0_0.8.7-1 libbz2-1.0_1.0.6-8.1 libc-bin_2.26-6 libc-dev-bin_2.26-6 libc-l10n_2.26-6 libc6_2.26-6 libc6-dev_2.26-6 libc6-i386_2.26-6 libcap-ng0_0.7.7-3.1+b1 libcc1-0_7.3.0-1 libcilkrts5_7.3.0-1 libclang-common-6.0-dev_1:6.0~+rc1-1 libclang1-6.0_1:6.0~+rc1-1 libcomerr2_1.43.8-2 libcroco3_0.6.12-2 libdb5.3_5.3.28-13.1+b1 libdebconfclient0_0.240 libdpkg-perl_1.19.0.5 libeatmydata1_105-5 libedit2_3.1-20170329-1 libexpat1_2.2.5-3 libexpat1-dev_2.2.5-3 libfakeroot_1.22-2 libfdisk1_2.30.2-0.3 libffi6_3.2.1-8 libfile-stripnondeterminism-perl_0.040-1 libgc1c2_1:7.4.2-8.1 libgcc-7-dev_7.3.0-1 libgcc1_1:7.3.0-1 libgcrypt20_1.8.1-4 libgdbm3_1.8.3-14 libgdbm5_1.14.1-2 libglib2.0-0_2.54.3-2 libgmp10_2:6.1.2+dfsg-2 libgnutls30_3.5.17-1 libgomp1_7.3.0-1 libgpg-error0_1.27-6 libgssapi-krb5-2_1.16-2 libhogweed4_3.4-1 libicu57_57.1-8 libidn2-0_2.0.4-1.1 libisl15_0.18-1 libitm1_7.3.0-1 libjsoncpp1_1.7.4-3 libk5crypto3_1.16-2 libkeyutils1_1.5.9-9.2 libkrb5-3_1.16-2 libkrb5support0_1.16-2 libldap-2.4-2_2.4.45+dfsg-1 libldap-common_2.4.45+dfsg-1 libllvm6.0_1:6.0~+rc1-1 liblsan0_7.3.0-1 liblz4-1_0.0~r131-2+b1 liblzma5_5.2.2-1.3 libmagic-mgc_1:5.32-1 libmagic1_1:5.32-1 libmount1_2.30.2-0.3 libmpc3_1.1.0-1 libmpdec2_2.4.2-1 libmpfr4_3.1.6-1 libmpfr6_4.0.1~rc2-1 libmpx2_7.3.0-1 libncurses5_6.0+20171125-1 libncursesw5_6.0+20171125-1 libnettle6_3.4-1 libobjc-7-dev_7.3.0-1 libobjc4_7.3.0-1 libp11-kit0_0.23.9-2 libpam-modules_1.1.8-3.6 libpam-modules-bin_1.1.8-3.6 libpam-runtime_1.1.8-3.6 libpam0g_1.1.8-3.6 libpcre3_2:8.39-9 libperl5.26_5.26.1-4+b1 libpipeline1_1.5.0-1 libpq-dev_10.1-3 libpq5_10.1-3 libprocps6_2:3.3.12-3 libpython3-all-dev_3.6.4-1 libpython3-dev_3.6.4-1 libpython3-stdlib_3.6.4-1 libpython3.6_3.6.4-3 libpython3.6-dev_3.6.4-3 libpython3.6-minimal_3.6.4-3 libpython3.6-stdlib_3.6.4-3 libquadmath0_7.3.0-1 libreadline7_7.0-3 libsasl2-2_2.1.27~101-g0780600+dfsg-3 libsasl2-modules-db_2.1.27~101-g0780600+dfsg-3 libseccomp2_2.3.1-2.1 libselinux1_2.7-2+b1 libsemanage-common_2.7-2 libsemanage1_2.7-2+b1 libsepol1_2.7-1 libsigsegv2_2.12-1 libsmartcols1_2.30.2-0.3 libsqlite3-0_3.22.0-1 libss2_1.43.8-2 libssl1.1_1.1.0g-2 libstdc++-7-dev_7.3.0-1 libstdc++6_7.3.0-1 libsystemd0_237-1 libtasn1-6_4.13-2 libtimedate-perl_2.3000-2 libtinfo5_6.0+20171125-1 libtool_2.4.6-2 libtsan0_7.3.0-1 libubsan0_7.3.0-1 libudev1_237-1 libunistring2_0.9.8-1 libustr-1.0-1_1.0.4-6 libuuid1_2.30.2-0.3 libxml2_2.9.4+dfsg1-6.1 libxslt1.1_1.1.29-5 linux-libc-dev_4.14.13-1 locales_2.26-6 login_1:4.5-1 lsb-base_9.20170808 m4_1.4.18-1 make_4.1-9.1 man-db_2.8.0-2 mawk_1.3.3-17+b3 mime-support_3.60 mount_2.30.2-0.3 multiarch-support_2.26-6 ncurses-base_6.0+20171125-1 ncurses-bin_6.0+20171125-1 netbase_5.4 openssl_1.1.0g-2 passwd_1:4.5-1 patch_2.7.5-1+b2 perl_5.26.1-4+b1 perl-base_5.26.1-4+b1 perl-modules-5.26_5.26.1-4 po-debconf_1.0.20 postgresql_10+189 postgresql-10_10.1-3 postgresql-client-10_10.1-3 postgresql-client-common_189 postgresql-common_189 postgresql-contrib_10+189 procps_2:3.3.12-3 python3_3.6.4-1 python3-all_3.6.4-1 python3-all-dev_3.6.4-1 python3-dev_3.6.4-1 python3-distutils_3.6.4-3 python3-lib2to3_3.6.4-3 python3-minimal_3.6.4-1 python3-pkg-resources_38.4.0-1 python3-py_1.4.34-3 python3-pytest_3.2.5-1 python3-setuptools_38.4.0-1 python3.6_3.6.4-3 python3.6-dev_3.6.4-3 python3.6-minimal_3.6.4-3 readline-common_7.0-3 sbuild-build-depends-asyncpg-dummy_0.invalid.0 sbuild-build-depends-core-dummy_0.invalid.0 sed_4.4-2 sensible-utils_0.0.11 ssl-cert_1.0.39 sysvinit-utils_2.88dsf-59.10 tar_1.29b-2 tzdata_2018c-1 ucf_3.0036 util-linux_2.30.2-0.3 xz-utils_5.2.2-1.3 zlib1g_1:1.2.8.dfsg-5

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Wed Oct 25 08:46:03 2017 UTC
gpgv:                using RSA key 1D2FA89858DAAF6217862DF7AEF6F1A2A7457645
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./asyncpg_0.13.0-1.dsc
dpkg-source: info: extracting asyncpg in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking asyncpg_0.13.0.orig.tar.gz
dpkg-source: info: unpacking asyncpg_0.13.0-1.debian.tar.xz
dpkg-source: info: applying 0001-use-alignment-safe-unpacking-of-buffers.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=en_US.UTF-8
LC_ALL=POSIX
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=unstable-amd64-sbuild-a6c3d842-cb57-4fc0-8acb-4f549ca88e79
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

dpkg-buildpackage: info: source package asyncpg
dpkg-buildpackage: info: source version 0.13.0-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Piotr Ożarowski <piotr@debian.org>
 dpkg-source --before-build asyncpg-0.13.0
dpkg-buildpackage: info: host architecture amd64
dpkg-source: info: using options from asyncpg-0.13.0/debian/source/options: --extend-diff-ignore=^[^/]+.egg-info/ --extend-diff-ignore=asyncpg/protocol/protocol.c
 fakeroot debian/rules clean
dh clean --with python3 --buildsystem=pybuild
   dh_auto_clean -O--buildsystem=pybuild
I: pybuild base:184: python3.6 setup.py clean 
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build' (and everything under it)
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.6' does not exist -- can't clean it
   dh_clean -O--buildsystem=pybuild
 debian/rules build-arch
dh build-arch --with python3 --buildsystem=pybuild
   dh_update_autotools_config -a -O--buildsystem=pybuild
   dh_auto_configure -a -O--buildsystem=pybuild
I: pybuild base:184: python3.6 setup.py config 
running config
   dh_auto_build -a -O--buildsystem=pybuild
I: pybuild base:184: /usr/bin/python3 setup.py build build_ext --cython-always
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/connect_utils.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/connresource.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/connection.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/_testbase.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/cursor.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/utils.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/compat.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/introspection.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/prepared_stmt.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/cluster.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/types.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/serverversion.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/transaction.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
copying asyncpg/pool.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg
running egg_info
writing asyncpg.egg-info/PKG-INFO
writing dependency_links to asyncpg.egg-info/dependency_links.txt
writing top-level names to asyncpg.egg-info/top_level.txt
asyncpg/protocol/protocol.pyx: cannot find cimported module 'asyncpg.protocol'
reading manifest file 'asyncpg.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
warning: no files found matching '*.py' under directory 'examples'
writing manifest file 'asyncpg.egg-info/SOURCES.txt'
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/exceptions
copying asyncpg/exceptions/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/exceptions
copying asyncpg/exceptions/_base.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/exceptions
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/buffer.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/buffer.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/consts.pxi -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/coreproto.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/coreproto.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/debug.h -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/debug.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/encodings.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/hton.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/pgtypes.pxi -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/prepared_stmt.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/prepared_stmt.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/protocol.c -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/protocol.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/protocol.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/python.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/settings.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
copying asyncpg/protocol/settings.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/array.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/base.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/base.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/bits.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/bytea.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/datetime.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/float.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/geometry.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/hstore.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/int.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/json.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/misc.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/money.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/network.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/numeric.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/range.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/record.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/text.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/textutils.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/tsearch.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/txid.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
copying asyncpg/protocol/codecs/uuid.pyx -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/codecs
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/record
copying asyncpg/protocol/record/__init__.pxd -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/record
copying asyncpg/protocol/record/recordobj.c -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/record
copying asyncpg/protocol/record/recordobj.h -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/record
running build_ext
building 'asyncpg.protocol.protocol' extension
creating build
creating build/temp.linux-amd64-3.6
creating build/temp.linux-amd64-3.6/asyncpg
creating build/temp.linux-amd64-3.6/asyncpg/protocol
creating build/temp.linux-amd64-3.6/asyncpg/protocol/record
x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I./asyncpg/protocol -I/usr/include/python3.6m -c asyncpg/protocol/protocol.c -o build/temp.linux-amd64-3.6/asyncpg/protocol/protocol.o -O2 -Wall -Wsign-compare -Wconversion
asyncpg/protocol/protocol.c:31443:25: warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wconversion]
  __pyx_t_3 = ((!(isinf(__pyx_v_dval) != 0)) != 0);
                  ~~~~~~^~~~~~~~~~~~~
/usr/include/math.h:472:46: note: expanded from macro 'isinf'
#  define isinf(x) __MATH_TG ((x), __isinf, (x))
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/math.h:370:16: note: expanded from macro '__MATH_TG'
   ? FUNC ## f ARGS                             \
     ~~~~~~~~~ ^~~~
asyncpg/protocol/protocol.c:65253:113: warning: implicit conversion loses integer precision: 'enum __pyx_t_7asyncpg_8protocol_8protocol_ServerDataFormat' to 'int16_t' (aka 'short') [-Wconversion]
      __pyx_t_6 = __pyx_f_7asyncpg_8protocol_8protocol_11WriteBuffer_write_int16(__pyx_v_writer, __pyx_v_codec->format); if (unlikely(!__pyx_t_6)) __PYX_ERR(27, 134, __pyx_L1_error)
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                 ~~~~~~~~~~~~~~~^~~~~~
asyncpg/protocol/protocol.c:65441:113: warning: implicit conversion loses integer precision: 'enum __pyx_t_7asyncpg_8protocol_8protocol_ServerDataFormat' to 'int16_t' (aka 'short') [-Wconversion]
      __pyx_t_3 = __pyx_f_7asyncpg_8protocol_8protocol_11WriteBuffer_write_int16(__pyx_v_writer, __pyx_v_codec->format); if (unlikely(!__pyx_t_3)) __PYX_ERR(27, 153, __pyx_L1_error)
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                 ~~~~~~~~~~~~~~~^~~~~~
3 warnings generated.
x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I./asyncpg/protocol -I/usr/include/python3.6m -c asyncpg/protocol/record/recordobj.c -o build/temp.linux-amd64-3.6/asyncpg/protocol/record/recordobj.o -O2 -Wall -Wsign-compare -Wconversion
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,relro -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.6/asyncpg/protocol/protocol.o build/temp.linux-amd64-3.6/asyncpg/protocol/record/recordobj.o -o /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/asyncpg/protocol/protocol.cpython-36m-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
   dh_auto_test -a -O--buildsystem=pybuild
I: pybuild base:184: cd /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build; python3.6 -m pytest -k-test_flake8
============================= test session starts ==============================
platform linux -- Python 3.6.4, pytest-3.2.5, py-1.4.34, pluggy-0.4.0
rootdir: /<<PKGBUILDDIR>>, inifile:
collected 205 items

tests/test__environment.py E
tests/test_cache_invalidation.py EEE
tests/test_cancellation.py EEEE
tests/test_codecs.py EEEEEEEEEEEEEEEEEEEEEEEEEE
tests/test_connect.py EEEEEEEEE....EEEEEEEE
tests/test_copy.py EEEEEEEEEEEEEEEEEEEEE
tests/test_cursor.py EEEEEEEEEE
tests/test_exceptions.py EEE
tests/test_execute.py EEEEEEEEE
tests/test_introspection.py EEEE
tests/test_listeners.py EEEEEEE
tests/test_pool.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEE
tests/test_prepare.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
tests/test_record.py EEEEEEEEEEEEEEEEEE
tests/test_test.py ..
tests/test_timeout.py EEEEEEEEE
tests/test_transaction.py EEEE
tests/test_utils.py EE

==================================== ERRORS ====================================
______ ERROR at setup of TestEnvironment.test_environment_server_version _______

cls = <class 'tests.test__environment.TestEnvironment'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038f131ac8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestCacheInvalidation.test_prepare_cache_invalidation_in_pool 

cls = <class 'tests.test_cache_invalidation.TestCacheInvalidation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efc63c8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestCacheInvalidation.test_prepare_cache_invalidation_in_transaction 

cls = <class 'tests.test_cache_invalidation.TestCacheInvalidation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efc63c8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestCacheInvalidation.test_prepare_cache_invalidation_silent 

cls = <class 'tests.test_cache_invalidation.TestCacheInvalidation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efc63c8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestCancellation.test_cancellation_01 ____________

cls = <class 'tests.test_cancellation.TestCancellation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eebf278>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestCancellation.test_cancellation_02 ____________

cls = <class 'tests.test_cancellation.TestCancellation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eebf278>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestCancellation.test_cancellation_03 ____________

cls = <class 'tests.test_cancellation.TestCancellation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eebf278>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestCancellation.test_cancellation_04 ____________

cls = <class 'tests.test_cancellation.TestCancellation'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eebf278>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestCodecs.test_all_builtin_types_handled __________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestCodecs.test_arrays ___________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCodecs.test_bitstring __________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCodecs.test_composites _________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestCodecs.test_composites_in_arrays ____________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestCodecs.test_custom_codec_binary _____________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCodecs.test_custom_codec_override_binary ________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestCodecs.test_custom_codec_override_text _________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCodecs.test_custom_codec_override_tuple _________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestCodecs.test_custom_codec_text ______________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________________ ERROR at setup of TestCodecs.test_domains ___________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________________ ERROR at setup of TestCodecs.test_enum ____________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestCodecs.test_enum_and_range _______________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestCodecs.test_enum_in_array ________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestCodecs.test_extra_codec_alias ______________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________________ ERROR at setup of TestCodecs.test_interval __________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestCodecs.test_invalid_input ________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCodecs.test_no_result __________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________________ ERROR at setup of TestCodecs.test_numeric ___________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestCodecs.test_range_types _________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestCodecs.test_relacl_array_type ______________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______________ ERROR at setup of TestCodecs.test_standard_codecs _______________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestCodecs.test_table_as_composite _____________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestCodecs.test_unhandled_type_fallback ___________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestCodecs.test_unknown_type_text_fallback _________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________________ ERROR at setup of TestCodecs.test_void ____________________

cls = <class 'tests.test_codecs.TestCodecs'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038eee5c88>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestSettings.test_get_settings_01 ______________

cls = <class 'tests.test_connect.TestSettings'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee6e1d0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestSettings.test_server_version_01 _____________

cls = <class 'tests.test_connect.TestSettings'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee6e1d0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestSettings.test_server_version_02 _____________

cls = <class 'tests.test_connect.TestSettings'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee6e1d0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestAuthentication.test_auth_bad_user ____________

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______ ERROR at setup of TestAuthentication.test_auth_password_cleartext _______

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestAuthentication.test_auth_password_md5 __________

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestAuthentication.test_auth_reject _____________

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestAuthentication.test_auth_trust _____________

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestAuthentication.test_auth_unsupported __________

cls = <class 'tests.test_connect.TestAuthentication'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee91ef0>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestConnection.test_connection_implicit_host ________

cls = <class 'tests.test_connect.TestConnection'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efae668>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestConnection.test_connection_isinstance __________

cls = <class 'tests.test_connect.TestConnection'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efae668>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____ ERROR at setup of TestConnection.test_connection_ssl_to_no_ssl_server _____

cls = <class 'tests.test_connect.TestConnection'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efae668>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestConnection.test_connection_ssl_unix ___________

cls = <class 'tests.test_connect.TestConnection'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efae668>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestConnection.test_connection_use_after_close _______

cls = <class 'tests.test_connect.TestConnection'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efae668>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____ ERROR at setup of TestSSLConnection.test_ssl_connection_custom_context ____

cls = <class 'tests.test_connect.TestSSLConnection'>

    @classmethod
    def setup_cluster(cls):
        cls.cluster = cls.start_cluster(
>           pg_cluster.TempCluster, server_settings=cls.get_server_settings())

tests/test_connect.py:539: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:204: in start_cluster
    return _start_cluster(ClusterCls, cluster_kwargs, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efdec50>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestSSLConnection.test_ssl_connection_default_context ____

cls = <class 'tests.test_connect.TestSSLConnection'>

    @classmethod
    def setup_cluster(cls):
        cls.cluster = cls.start_cluster(
>           pg_cluster.TempCluster, server_settings=cls.get_server_settings())

tests/test_connect.py:539: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:204: in start_cluster
    return _start_cluster(ClusterCls, cluster_kwargs, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efdec50>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestSSLConnection.test_ssl_connection_pool _________

cls = <class 'tests.test_connect.TestSSLConnection'>

    @classmethod
    def setup_cluster(cls):
        cls.cluster = cls.start_cluster(
>           pg_cluster.TempCluster, server_settings=cls.get_server_settings())

tests/test_connect.py:539: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:204: in start_cluster
    return _start_cluster(ClusterCls, cluster_kwargs, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038efdec50>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestCopyFrom.test_copy_from_query_basics __________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__ ERROR at setup of TestCopyFrom.test_copy_from_query_cancellation_explicit ___

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestCopyFrom.test_copy_from_query_cancellation_on_sink_error 

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestCopyFrom.test_copy_from_query_cancellation_while_waiting_for_data 

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCopyFrom.test_copy_from_query_timeout_1 _________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCopyFrom.test_copy_from_query_timeout_2 _________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______ ERROR at setup of TestCopyFrom.test_copy_from_query_to_bad_output _______

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestCopyFrom.test_copy_from_query_to_path __________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestCopyFrom.test_copy_from_query_to_path_like _______

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestCopyFrom.test_copy_from_query_to_sink __________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCopyFrom.test_copy_from_query_with_args _________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestCopyFrom.test_copy_from_table_basics __________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestCopyFrom.test_copy_from_table_large_rows ________

cls = <class 'tests.test_copy.TestCopyFrom'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee94518>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestCopyTo.test_copy_records_to_table_1 ___________

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestCopyTo.test_copy_records_to_table_no_binary_codec ____

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestCopyTo.test_copy_to_table_basics ____________

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestCopyTo.test_copy_to_table_fail_in_source_1 _______

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestCopyTo.test_copy_to_table_fail_in_source_2 _______

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestCopyTo.test_copy_to_table_from_bytes_like ________

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestCopyTo.test_copy_to_table_large_rows __________

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestCopyTo.test_copy_to_table_timeout ____________

cls = <class 'tests.test_copy.TestCopyTo'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef17048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_01 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_02 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_03 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_04 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_05 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestIterableCursor.test_cursor_iterable_06 _________

cls = <class 'tests.test_cursor.TestIterableCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee47588>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCursor.test_cursor_01 __________________

cls = <class 'tests.test_cursor.TestCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038f04ed30>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCursor.test_cursor_02 __________________

cls = <class 'tests.test_cursor.TestCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038f04ed30>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCursor.test_cursor_03 __________________

cls = <class 'tests.test_cursor.TestCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038f04ed30>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestCursor.test_cursor_04 __________________

cls = <class 'tests.test_cursor.TestCursor'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038f04ed30>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestExceptions.test_exceptions_exported ___________

cls = <class 'tests.test_exceptions.TestExceptions'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef26630>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestExceptions.test_exceptions_str _____________

cls = <class 'tests.test_exceptions.TestExceptions'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef26630>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestExceptions.test_exceptions_unpacking __________

cls = <class 'tests.test_exceptions.TestExceptions'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ef26630>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestExecuteScript.test_execute_exceptions_1 _________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestExecuteScript.test_execute_many_1 ____________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestExecuteScript.test_execute_many_2 ____________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestExecuteScript.test_execute_script_1 ___________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestExecuteScript.test_execute_script_2 ___________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestExecuteScript.test_execute_script_3 ___________

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestExecuteScript.test_execute_script_check_transactionality 

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__ ERROR at setup of TestExecuteScript.test_execute_script_interrupted_close ___

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
 ERROR at setup of TestExecuteScript.test_execute_script_interrupted_terminate _

cls = <class 'tests.test_execute.TestExecuteScript'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed7dcf8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestIntrospection.test_introspection_no_stmt_cache_01 ____

cls = <class 'tests.test_introspection.TestIntrospection'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_introspection.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed734a8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestIntrospection.test_introspection_no_stmt_cache_02 ____

cls = <class 'tests.test_introspection.TestIntrospection'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_introspection.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed734a8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestIntrospection.test_introspection_no_stmt_cache_03 ____

cls = <class 'tests.test_introspection.TestIntrospection'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_introspection.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed734a8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______ ERROR at setup of TestIntrospection.test_introspection_on_large_db ______

cls = <class 'tests.test_introspection.TestIntrospection'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_introspection.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed734a8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestListeners.test_dangling_listener_warns _________

cls = <class 'tests.test_listeners.TestListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec9ae80>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestListeners.test_listen_01 ________________

cls = <class 'tests.test_listeners.TestListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec9ae80>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestListeners.test_listen_02 ________________

cls = <class 'tests.test_listeners.TestListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec9ae80>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____ ERROR at setup of TestLogListeners.test_dangling_log_listener_warns ______

cls = <class 'tests.test_listeners.TestLogListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed2d048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestLogListeners.test_log_listener_01 ____________

cls = <class 'tests.test_listeners.TestLogListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed2d048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestLogListeners.test_log_listener_02 ____________

cls = <class 'tests.test_listeners.TestLogListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed2d048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestLogListeners.test_log_listener_03 ____________

cls = <class 'tests.test_listeners.TestLogListeners'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed2d048>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_01 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_02 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_03 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_04 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_05 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_06 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_07 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_08 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_09 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_10 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_11 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_12 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________________ ERROR at setup of TestPool.test_pool_13 ____________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________________ ERROR at setup of TestPool.test_pool_auth ___________________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPool.test_pool_config_persistence ____________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestPool.test_pool_connection_execute_many _________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPool.test_pool_connection_methods ____________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestPool.test_pool_exception_in_setup_and_init _______

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestPool.test_pool_handles_cancel_in_release ________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___ ERROR at setup of TestPool.test_pool_handles_inactive_connection_errors ____

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestPool.test_pool_init_run_until_complete _________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPool.test_pool_max_inactive_time_01 ___________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPool.test_pool_max_inactive_time_02 ___________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPool.test_pool_max_inactive_time_03 ___________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPool.test_pool_max_inactive_time_04 ___________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPool.test_pool_no_acquire_deadlock ___________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestPool.test_pool_release_in_xact _____________

cls = <class 'tests.test_pool.TestPool'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edfaba8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestHotStandby.test_standby_cursors _____________

cls = <class 'tests.test_pool.TestHotStandby'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_pool.py:646: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee00400>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestHotStandby.test_standby_pool_01 _____________

cls = <class 'tests.test_pool.TestHotStandby'>

    @classmethod
    def setUpClass(cls):
>       super().setUpClass()

tests/test_pool.py:646: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:194: in setUpClass
    cls.setup_cluster()
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee00400>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestPrepare.test_prepare_01 _________________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestPrepare.test_prepare_02 _________________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestPrepare.test_prepare_03 _________________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestPrepare.test_prepare_04 _________________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPrepare.test_prepare_05_unknownoid ___________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestPrepare.test_prepare_06_interrupted_close ________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____ ERROR at setup of TestPrepare.test_prepare_07_interrupted_terminate ______

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPrepare.test_prepare_08_big_result ___________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPrepare.test_prepare_09_raise_error ___________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_10_stmt_lru ____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_11_stmt_gc _____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_12_stmt_gc _____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_13_connect _____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_14_explain _____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____ ERROR at setup of TestPrepare.test_prepare_15_stmt_gc_cache_disabled _____

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestPrepare.test_prepare_16_command_result _________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestPrepare.test_prepare_17_stmt_closed_lru _________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPrepare.test_prepare_18_empty_result __________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestPrepare.test_prepare_19_concurrent_calls ________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________ ERROR at setup of TestPrepare.test_prepare_20_concurrent_calls ________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestPrepare.test_prepare_21_errors _____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestPrepare.test_prepare_22_empty ______________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestPrepare.test_prepare_23_no_stmt_cache_seq ________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestPrepare.test_prepare_24_max_lifetime __________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestPrepare.test_prepare_25_max_lifetime_reset _______

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____ ERROR at setup of TestPrepare.test_prepare_26_max_lifetime_max_size ______

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__ ERROR at setup of TestPrepare.test_prepare_27_max_cacheable_statement_size __

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestPrepare.test_prepare_28_max_args ____________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestPrepare.test_prepare_29_duplicates ___________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______ ERROR at setup of TestPrepare.test_prepare_30_invalid_arg_count ________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestPrepare.test_prepare_statement_invalid _________

cls = <class 'tests.test_prepare.TestPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ec21908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestRecord.test_record_cmp _________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______________ ERROR at setup of TestRecord.test_record_contains _______________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________ ERROR at setup of TestRecord.test_record_duplicate_colnames __________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_empty ________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestRecord.test_record_freelist_ok _____________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_________________ ERROR at setup of TestRecord.test_record_gc __________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_hash _________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______________ ERROR at setup of TestRecord.test_record_immutable ______________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____________ ERROR at setup of TestRecord.test_record_isinstance ______________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_items ________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_iter _________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_keys _________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____________ ERROR at setup of TestRecord.test_record_len_getindex _____________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestRecord.test_record_no_new ________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
___________ ERROR at setup of TestRecord.test_record_not_pickleable ____________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_repr _________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestRecord.test_record_slice ________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestRecord.test_record_values ________________

cls = <class 'tests.test_record.TestRecord'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee3d2e8>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______________ ERROR at setup of TestTimeout.test_invalid_timeout ______________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_01 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_02 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_03 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_04 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_05 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
________________ ERROR at setup of TestTimeout.test_timeout_06 _________________

cls = <class 'tests.test_timeout.TestTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edc5908>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
____ ERROR at setup of TestConnectionCommandTimeout.test_command_timeout_01 ____

cls = <class 'tests.test_timeout.TestConnectionCommandTimeout'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038edead68>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__ ERROR at setup of TestTimeoutCoversPrepare.test_timeout_covers_prepare_01 ___

cls = <class 'tests.test_timeout.TestTimeoutCoversPrepare'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ebb2128>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_____ ERROR at setup of TestTransaction.test_transaction_interface_errors ______

cls = <class 'tests.test_transaction.TestTransaction'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee73b38>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestTransaction.test_transaction_nested ___________

cls = <class 'tests.test_transaction.TestTransaction'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee73b38>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
__________ ERROR at setup of TestTransaction.test_transaction_regular __________

cls = <class 'tests.test_transaction.TestTransaction'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee73b38>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_ ERROR at setup of TestTransaction.test_transaction_within_manual_transaction _

cls = <class 'tests.test_transaction.TestTransaction'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ee73b38>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
______________ ERROR at setup of TestUtils.test_mogrify_multiple _______________

cls = <class 'tests.test_utils.TestUtils'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed23898>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
_______________ ERROR at setup of TestUtils.test_mogrify_simple ________________

cls = <class 'tests.test_utils.TestUtils'>

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
>       cls.setup_cluster()

asyncpg/_testbase.py:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
asyncpg/_testbase.py:189: in setup_cluster
    cls.cluster = _start_default_cluster(cls.get_server_settings())
asyncpg/_testbase.py:150: in _start_default_cluster
    pg_cluster.TempCluster, {}, server_settings)
asyncpg/_testbase.py:133: in _start_cluster
    cluster.init()
asyncpg/cluster.py:133: in init
    if self.get_status() != 'not-initialized':
asyncpg/cluster.py:102: in get_status
    self._init_env()
asyncpg/cluster.py:387: in _init_env
    self._pg_version = self._get_pg_version()
asyncpg/cluster.py:542: in _get_pg_version
    return serverversion.split_server_version_string(version_string)
asyncpg/serverversion.py:37: in split_server_version_string
    versions = [int(p) for p in parts][:3]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f038ed23898>

>   versions = [int(p) for p in parts][:3]
E   ValueError: invalid literal for int() with base 10: '1 (Debian 10'

asyncpg/serverversion.py:37: ValueError
============================== 1 tests deselected ==============================
============== 6 passed, 1 deselected, 198 error in 10.98 seconds ==============
E: pybuild pybuild:283: test: plugin distutils failed with: exit code=1: cd /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build; python3.6 -m pytest -k-test_flake8
dh_auto_test: pybuild --test --test-pytest -i python{version} -p 3.6 returned exit code 13
debian/rules:8: recipe for target 'build-arch' failed
make: *** [build-arch] Error 25
dpkg-buildpackage: error: debian/rules build-arch subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2018-02-07T20:30:06Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: any
Build-Space: 21192
Build-Time: 39
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 16
Job: asyncpg_0.13.0-1
Machine Architecture: amd64
Package: asyncpg
Package-Time: 68
Source-Version: 0.13.0-1
Space: 21192
Status: attempted
Version: 0.13.0-1
--------------------------------------------------------------------------------
Finished at 2018-02-07T20:30:06Z
Build needed 00:01:08, 21192k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 68.971153843s
DC-Time-Estimation: 68.971153843 versus expected 239 (r/m: 2.465216785325051 ; m: 68.971153843)
