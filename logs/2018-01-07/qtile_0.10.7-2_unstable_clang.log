DC-Build-Header: qtile 0.10.7-2 / 2018-02-07 19:41:59 +0000
DC-Task: type:rebuild-binarch-only source:qtile version:0.10.7-2 chroot:unstable esttime: logfile:/tmp/qtile_0.10.7-2_unstable_clang60.log modes:clang60:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v  --chroot-setup-commands=/tmp/clang60 qtile_0.10.7-2'
sbuild (Debian sbuild) 0.73.0 (23 Dec 2016) on ip-172-31-0-11.eu-central-1.compute.internal

+==============================================================================+
| qtile 0.10.7-2 (amd64)                       Wed, 07 Feb 2018 19:41:59 +0000 |
+==============================================================================+

Package: qtile
Version: 0.10.7-2
Source Version: 0.10.7-2
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: any

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/unstable-amd64-sbuild-7b7a15c5-72e4-42d9-9593-1d2664c26448' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang60
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=6.0
+ echo 'Install of clang-6.0'
Install of clang-6.0
+ apt-get update
Get:1 http://127.0.0.1:9999/debian unstable InRelease [241 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-02-07-1427.34.pdiff [9180 B]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-02-07-1427.34.pdiff [9180 B]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-02-07-1427.34.pdiff [14.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-02-07-1427.34.pdiff [14.2 kB]
Get:6 http://127.0.0.1:9999/debian unstable/main Translation-en [5980 kB]
Fetched 6300 kB in 2s (3432 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-6.0
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
Suggested packages:
  gnustep gnustep-devel clang-6.0-doc
Recommended packages:
  llvm-6.0-dev python libomp-dev libgpm2
The following NEW packages will be installed:
  clang-6.0 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
0 upgraded, 13 newly installed, 0 to remove and 1 not upgraded.
Need to get 37.6 MB of archives.
After this operation, 187 MB of additional disk space will be used.
Get:1 http://127.0.0.1:9999/debian unstable/main amd64 libjsoncpp1 amd64 1.7.4-3 [75.6 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 libbsd0 amd64 0.8.7-1 [92.1 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 libncurses5 amd64 6.0+20171125-1 [95.7 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libedit2 amd64 3.1-20170329-1 [85.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 libllvm6.0 amd64 1:6.0~+rc1-1 [14.5 MB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libobjc4 amd64 7.3.0-1 [51.2 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 libobjc-7-dev amd64 7.3.0-1 [203 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 libc6-i386 amd64 2.26-6 [2836 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 lib32gcc1 amd64 1:7.3.0-1 [46.8 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 lib32stdc++6 amd64 7.3.0-1 [405 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 libclang-common-6.0-dev amd64 1:6.0~+rc1-1 [3097 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 libclang1-6.0 amd64 1:6.0~+rc1-1 [6983 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 clang-6.0 amd64 1:6.0~+rc1-1 [9171 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 37.6 MB in 0s (95.7 MB/s)
Selecting previously unselected package libjsoncpp1:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 9974 files and directories currently installed.)
Preparing to unpack .../00-libjsoncpp1_1.7.4-3_amd64.deb ...
Unpacking libjsoncpp1:amd64 (1.7.4-3) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.8.7-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.8.7-1) ...
Selecting previously unselected package libncurses5:amd64.
Preparing to unpack .../02-libncurses5_6.0+20171125-1_amd64.deb ...
Unpacking libncurses5:amd64 (6.0+20171125-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../03-libedit2_3.1-20170329-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20170329-1) ...
Selecting previously unselected package libllvm6.0:amd64.
Preparing to unpack .../04-libllvm6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libllvm6.0:amd64 (1:6.0~+rc1-1) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../05-libobjc4_7.3.0-1_amd64.deb ...
Unpacking libobjc4:amd64 (7.3.0-1) ...
Selecting previously unselected package libobjc-7-dev:amd64.
Preparing to unpack .../06-libobjc-7-dev_7.3.0-1_amd64.deb ...
Unpacking libobjc-7-dev:amd64 (7.3.0-1) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../07-libc6-i386_2.26-6_amd64.deb ...
Unpacking libc6-i386 (2.26-6) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../08-lib32gcc1_1%3a7.3.0-1_amd64.deb ...
Unpacking lib32gcc1 (1:7.3.0-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../09-lib32stdc++6_7.3.0-1_amd64.deb ...
Unpacking lib32stdc++6 (7.3.0-1) ...
Selecting previously unselected package libclang-common-6.0-dev.
Preparing to unpack .../10-libclang-common-6.0-dev_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libclang-common-6.0-dev (1:6.0~+rc1-1) ...
Selecting previously unselected package libclang1-6.0:amd64.
Preparing to unpack .../11-libclang1-6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking libclang1-6.0:amd64 (1:6.0~+rc1-1) ...
Selecting previously unselected package clang-6.0.
Preparing to unpack .../12-clang-6.0_1%3a6.0~+rc1-1_amd64.deb ...
Unpacking clang-6.0 (1:6.0~+rc1-1) ...
Setting up libncurses5:amd64 (6.0+20171125-1) ...
Setting up libobjc4:amd64 (7.3.0-1) ...
Setting up libc6-i386 (2.26-6) ...
Setting up libbsd0:amd64 (0.8.7-1) ...
Setting up libobjc-7-dev:amd64 (7.3.0-1) ...
Processing triggers for libc-bin (2.26-6) ...
Setting up lib32gcc1 (1:7.3.0-1) ...
Setting up libjsoncpp1:amd64 (1.7.4-3) ...
Setting up libedit2:amd64 (3.1-20170329-1) ...
Setting up libllvm6.0:amd64 (1:6.0~+rc1-1) ...
Setting up libclang1-6.0:amd64 (1:6.0~+rc1-1) ...
Setting up lib32stdc++6 (7.3.0-1) ...
Setting up libclang-common-6.0-dev (1:6.0~+rc1-1) ...
Setting up clang-6.0 (1:6.0~+rc1-1) ...
Processing triggers for libc-bin (2.26-6) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-6.0 g++-4.6
+ ln -s clang-6.0 gcc-4.6
+ ln -s clang-6.0 cpp-4.6
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-6.0 g++-4.7
+ ln -s clang-6.0 gcc-4.7
+ ln -s clang-6.0 cpp-4.7
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-6.0 g++-4.8
+ ln -s clang-6.0 gcc-4.8
+ ln -s clang-6.0 cpp-4.8
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-6.0 g++-4.9
+ ln -s clang-6.0 gcc-4.9
+ ln -s clang-6.0 cpp-4.9
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-6.0 g++-5
+ ln -s clang-6.0 gcc-5
+ ln -s clang-6.0 cpp-5
+ ln -s clang-6.0 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
+ echo 'g++-5 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-6.0 g++-6
+ ln -s clang-6.0 gcc-6
+ ln -s clang-6.0 cpp-6
+ ln -s clang-6.0 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-6.0 g++-7
+ ln -s clang-6.0 gcc-7
+ ln -s clang-6.0 cpp-7
+ ln -s clang-6.0 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
+ echo 'g++-7 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-6.0 g++-8
+ ln -s clang-6.0 gcc-8
+ ln -s clang-6.0 cpp-8
+ ln -s clang-6.0 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/qtile-xpfVin
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang60'.

Finished processing commands.
--------------------------------------------------------------------------------

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:9999/debian unstable InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libdebconfclient0
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 48.3 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:9999/debian unstable/main amd64 libdebconfclient0 amd64 0.240 [48.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 48.3 kB in 0s (4051 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../libdebconfclient0_0.240_amd64.deb ...
Unpacking libdebconfclient0:amd64 (0.240) over (0.239) ...
Setting up libdebconfclient0:amd64 (0.240) ...
Processing triggers for libc-bin (2.26-6) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'qtile' packaging is maintained in the 'Git' version control system at:
https://anonscm.debian.org/git/collab-maint/qtile.git
Please use:
git clone https://anonscm.debian.org/git/collab-maint/qtile.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 348 kB of source archives.
Get:1 http://127.0.0.1:9999/debian unstable/main qtile 0.10.7-2 (dsc) [1803 B]
Get:2 http://127.0.0.1:9999/debian unstable/main qtile 0.10.7-2 (tar) [342 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main qtile 0.10.7-2 (diff) [4364 B]
Fetched 348 kB in 0s (1789 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/qtile-xpfVin/qtile-0.10.7' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/qtile-xpfVin' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install build-essential                                                      |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-core-dummy' in '/<<BUILDDIR>>/resolver-h2TVnb/apt_archive/sbuild-build-depends-core-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-core-dummy
dpkg-scanpackages: info: Wrote 1 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Release [957 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Sources [349 B]
Get:5 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Packages [434 B]
Fetched 1740 B in 0s (122 kB/s)
Reading package lists...
Reading package lists...

Install core build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 856 B of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ sbuild-build-depends-core-dummy 0.invalid.0 [856 B]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 856 B in 0s (0 B/s)
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 9), dh-python, python3-all, python3-setuptools, python3-cffi (>= 1.3.0), python3-xcffib (>= 0.5.0), python3-cairocffi (>= 0.7.2-2.1), libglib2.0-0, libpango1.0-0, libpangocairo-1.0-0, xvfb, xserver-xephyr, python3-pytest, python3-pytest-cov, xterm, x11-apps, x11-xserver-utils, lm-sensors
Filtered Build-Depends: debhelper (>= 9), dh-python, python3-all, python3-setuptools, python3-cffi (>= 1.3.0), python3-xcffib (>= 0.5.0), python3-cairocffi (>= 0.7.2-2.1), libglib2.0-0, libpango1.0-0, libpangocairo-1.0-0, xvfb, xserver-xephyr, python3-pytest, python3-pytest-cov, xterm, x11-apps, x11-xserver-utils, lm-sensors
dpkg-deb: building package 'sbuild-build-depends-qtile-dummy' in '/<<BUILDDIR>>/resolver-h2TVnb/apt_archive/sbuild-build-depends-qtile-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-core-dummy sbuild-build-depends-qtile-dummy
dpkg-scanpackages: info: Wrote 2 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Release [963 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Sources [614 B]
Get:5 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ Packages [699 B]
Fetched 2276 B in 0s (159 kB/s)
Reading package lists...
Reading package lists...

Install qtile build dependencies (apt-based resolver)
-----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism file fontconfig
  fontconfig-config fonts-dejavu-core gettext gettext-base groff-base
  intltool-debian libarchive-zip-perl libcairo2 libcroco3 libdatrie1
  libdbus-1-3 libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2
  libdrm-radeon1 libdrm2 libelf1 libepoxy0 libexpat1
  libfile-stripnondeterminism-perl libfontconfig1 libfontenc1 libfreetype6
  libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common libgl1 libgl1-mesa-dri
  libglapi-mesa libglib2.0-0 libglvnd0 libglx-mesa0 libglx0 libgraphite2-3
  libharfbuzz0b libice6 libicu57 libjbig0 libjpeg62-turbo libjs-jquery
  libjs-jquery-hotkeys libjs-jquery-isonscreen libjs-jquery-metadata
  libjs-jquery-tablesorter libjs-jquery-throttle-debounce libllvm5.0
  libmagic-mgc libmagic1 libmpdec2 libpango-1.0-0 libpango1.0-0
  libpangocairo-1.0-0 libpangoft2-1.0-0 libpangox-1.0-0 libpangoxft-1.0-0
  libpciaccess0 libpipeline1 libpixman-1-0 libpng16-16 libpython3-stdlib
  libpython3.6-minimal libpython3.6-stdlib libreadline7 libsensors4
  libsigsegv2 libsm6 libsqlite3-0 libssl1.1 libthai-data libthai0 libtiff5
  libtimedate-perl libtool libutempter0 libx11-6 libx11-data libx11-xcb1
  libxau6 libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-icccm4
  libxcb-image0 libxcb-keysyms1 libxcb-present0 libxcb-randr0
  libxcb-render-util0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1
  libxcb-util0 libxcb-xf86dri0 libxcb-xfixes0 libxcb-xkb1 libxcb-xv0 libxcb1
  libxcursor1 libxdamage1 libxdmcp6 libxext6 libxfixes3 libxfont2 libxft2
  libxi6 libxinerama1 libxkbfile1 libxml2 libxmu6 libxmuu1 libxpm4 libxrandr2
  libxrender1 libxshmfence1 libxt6 libxxf86vm1 lm-sensors lsb-base m4 man-db
  mime-support po-debconf python3 python3-all python3-cairocffi python3-cffi
  python3-cffi-backend python3-cov-core python3-coverage python3-distutils
  python3-lib2to3 python3-minimal python3-nose2 python3-pkg-resources
  python3-ply python3-py python3-pycparser python3-pytest python3-pytest-cov
  python3-setuptools python3-six python3-xcffib python3.6 python3.6-minimal
  readline-common shared-mime-info ucf x11-apps x11-common x11-xkb-utils
  x11-xserver-utils xbitmaps xkb-data xserver-common xserver-xephyr xterm xvfb
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make dwz gettext-doc libasprintf-dev libgettextpo-dev groff
  pciutils libtool-doc gfortran | fortran95-compiler gcj-jdk fancontrol
  read-edid i2c-tools m4-doc less www-browser apparmor libmail-box-perl
  python3-doc python3-tk python3-venv python-cairocffi-doc python3-dev
  python-coverage-doc python-nose2-doc python-ply-doc subversion
  python-setuptools-doc python3.6-venv python3.6-doc binfmt-support
  readline-doc mesa-utils nickle cairo-5c xorg-docs-core xfonts-cyrillic
Recommended packages:
  curl | wget | lynx-cur dbus libarchive-cpio-perl libgdk-pixbuf2.0-bin
  libglib2.0-data xdg-user-dirs javascript-common libltdl-dev
  libmail-sendmail-perl xfonts-base xauth x11-utils
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism file fontconfig
  fontconfig-config fonts-dejavu-core gettext gettext-base groff-base
  intltool-debian libarchive-zip-perl libcairo2 libcroco3 libdatrie1
  libdbus-1-3 libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2
  libdrm-radeon1 libdrm2 libelf1 libepoxy0 libexpat1
  libfile-stripnondeterminism-perl libfontconfig1 libfontenc1 libfreetype6
  libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common libgl1 libgl1-mesa-dri
  libglapi-mesa libglib2.0-0 libglvnd0 libglx-mesa0 libglx0 libgraphite2-3
  libharfbuzz0b libice6 libicu57 libjbig0 libjpeg62-turbo libjs-jquery
  libjs-jquery-hotkeys libjs-jquery-isonscreen libjs-jquery-metadata
  libjs-jquery-tablesorter libjs-jquery-throttle-debounce libllvm5.0
  libmagic-mgc libmagic1 libmpdec2 libpango-1.0-0 libpango1.0-0
  libpangocairo-1.0-0 libpangoft2-1.0-0 libpangox-1.0-0 libpangoxft-1.0-0
  libpciaccess0 libpipeline1 libpixman-1-0 libpng16-16 libpython3-stdlib
  libpython3.6-minimal libpython3.6-stdlib libreadline7 libsensors4
  libsigsegv2 libsm6 libsqlite3-0 libssl1.1 libthai-data libthai0 libtiff5
  libtimedate-perl libtool libutempter0 libx11-6 libx11-data libx11-xcb1
  libxau6 libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-icccm4
  libxcb-image0 libxcb-keysyms1 libxcb-present0 libxcb-randr0
  libxcb-render-util0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1
  libxcb-util0 libxcb-xf86dri0 libxcb-xfixes0 libxcb-xkb1 libxcb-xv0 libxcb1
  libxcursor1 libxdamage1 libxdmcp6 libxext6 libxfixes3 libxfont2 libxft2
  libxi6 libxinerama1 libxkbfile1 libxml2 libxmu6 libxmuu1 libxpm4 libxrandr2
  libxrender1 libxshmfence1 libxt6 libxxf86vm1 lm-sensors lsb-base m4 man-db
  mime-support po-debconf python3 python3-all python3-cairocffi python3-cffi
  python3-cffi-backend python3-cov-core python3-coverage python3-distutils
  python3-lib2to3 python3-minimal python3-nose2 python3-pkg-resources
  python3-ply python3-py python3-pycparser python3-pytest python3-pytest-cov
  python3-setuptools python3-six python3-xcffib python3.6 python3.6-minimal
  readline-common sbuild-build-depends-qtile-dummy shared-mime-info ucf
  x11-apps x11-common x11-xkb-utils x11-xserver-utils xbitmaps xkb-data
  xserver-common xserver-xephyr xterm xvfb
0 upgraded, 170 newly installed, 0 to remove and 0 not upgraded.
Need to get 71.0 MB of archives.
After this operation, 355 MB of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-h2TVnb/apt_archive ./ sbuild-build-depends-qtile-dummy 0.invalid.0 [992 B]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 groff-base amd64 1.22.3-9 [1160 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 bsdmainutils amd64 11.1.2 [190 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libpipeline1 amd64 1.5.0-1 [29.0 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 man-db amd64 2.8.0-2 [1170 kB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libexpat1 amd64 2.2.5-3 [96.8 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 libpng16-16 amd64 1.6.34-1 [287 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 libfreetype6 amd64 2.8.1-1 [461 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 ucf all 3.0036 [70.2 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 fonts-dejavu-core all 2.37-1 [1068 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 fontconfig-config all 2.12.6-0.1 [304 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 libfontconfig1 amd64 2.12.6-0.1 [368 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 fontconfig amd64 2.12.6-0.1 [439 kB]
Get:14 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery all 3.2.1-1 [154 kB]
Get:15 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery-hotkeys all 0~20130707+git2d51e3a9+dfsg-2 [11.3 kB]
Get:16 http://127.0.0.1:9999/debian unstable/main amd64 libssl1.1 amd64 1.1.0g-2 [1346 kB]
Get:17 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6-minimal amd64 3.6.4-3 [571 kB]
Get:18 http://127.0.0.1:9999/debian unstable/main amd64 python3.6-minimal amd64 3.6.4-3 [1465 kB]
Get:19 http://127.0.0.1:9999/debian unstable/main amd64 python3-minimal amd64 3.6.4-1 [35.8 kB]
Get:20 http://127.0.0.1:9999/debian unstable/main amd64 mime-support all 3.60 [36.7 kB]
Get:21 http://127.0.0.1:9999/debian unstable/main amd64 libmpdec2 amd64 2.4.2-1 [85.2 kB]
Get:22 http://127.0.0.1:9999/debian unstable/main amd64 readline-common all 7.0-3 [70.4 kB]
Get:23 http://127.0.0.1:9999/debian unstable/main amd64 libreadline7 amd64 7.0-3 [151 kB]
Get:24 http://127.0.0.1:9999/debian unstable/main amd64 libsqlite3-0 amd64 3.22.0-1 [595 kB]
Get:25 http://127.0.0.1:9999/debian unstable/main amd64 libpython3.6-stdlib amd64 3.6.4-3 [1644 kB]
Get:26 http://127.0.0.1:9999/debian unstable/main amd64 python3-lib2to3 all 3.6.4-3 [78.8 kB]
Get:27 http://127.0.0.1:9999/debian unstable/main amd64 python3-distutils all 3.6.4-3 [147 kB]
Get:28 http://127.0.0.1:9999/debian unstable/main amd64 python3.6 amd64 3.6.4-3 [223 kB]
Get:29 http://127.0.0.1:9999/debian unstable/main amd64 libpython3-stdlib amd64 3.6.4-1 [19.3 kB]
Get:30 http://127.0.0.1:9999/debian unstable/main amd64 dh-python all 2.20170125 [86.8 kB]
Get:31 http://127.0.0.1:9999/debian unstable/main amd64 python3 amd64 3.6.4-1 [22.3 kB]
Get:32 http://127.0.0.1:9999/debian unstable/main amd64 libmagic-mgc amd64 1:5.32-1 [225 kB]
Get:33 http://127.0.0.1:9999/debian unstable/main amd64 libmagic1 amd64 1:5.32-1 [111 kB]
Get:34 http://127.0.0.1:9999/debian unstable/main amd64 file amd64 1:5.32-1 [64.4 kB]
Get:35 http://127.0.0.1:9999/debian unstable/main amd64 gettext-base amd64 0.19.8.1-4 [122 kB]
Get:36 http://127.0.0.1:9999/debian unstable/main amd64 libsigsegv2 amd64 2.12-1 [32.7 kB]
Get:37 http://127.0.0.1:9999/debian unstable/main amd64 m4 amd64 1.4.18-1 [202 kB]
Get:38 http://127.0.0.1:9999/debian unstable/main amd64 autoconf all 2.69-11 [341 kB]
Get:39 http://127.0.0.1:9999/debian unstable/main amd64 autotools-dev all 20171216.1 [75.9 kB]
Get:40 http://127.0.0.1:9999/debian unstable/main amd64 automake all 1:1.15.1-3 [736 kB]
Get:41 http://127.0.0.1:9999/debian unstable/main amd64 autopoint all 0.19.8.1-4 [434 kB]
Get:42 http://127.0.0.1:9999/debian unstable/main amd64 libtool all 2.4.6-2 [545 kB]
Get:43 http://127.0.0.1:9999/debian unstable/main amd64 dh-autoreconf all 16 [16.3 kB]
Get:44 http://127.0.0.1:9999/debian unstable/main amd64 libarchive-zip-perl all 1.60-1 [95.6 kB]
Get:45 http://127.0.0.1:9999/debian unstable/main amd64 libfile-stripnondeterminism-perl all 0.040-1 [18.4 kB]
Get:46 http://127.0.0.1:9999/debian unstable/main amd64 libtimedate-perl all 2.3000-2 [42.2 kB]
Get:47 http://127.0.0.1:9999/debian unstable/main amd64 dh-strip-nondeterminism all 0.040-1 [11.8 kB]
Get:48 http://127.0.0.1:9999/debian unstable/main amd64 libglib2.0-0 amd64 2.54.3-2 [2822 kB]
Get:49 http://127.0.0.1:9999/debian unstable/main amd64 libicu57 amd64 57.1-8 [7699 kB]
Get:50 http://127.0.0.1:9999/debian unstable/main amd64 libxml2 amd64 2.9.4+dfsg1-6.1 [725 kB]
Get:51 http://127.0.0.1:9999/debian unstable/main amd64 libcroco3 amd64 0.6.12-2 [144 kB]
Get:52 http://127.0.0.1:9999/debian unstable/main amd64 gettext amd64 0.19.8.1-4 [1302 kB]
Get:53 http://127.0.0.1:9999/debian unstable/main amd64 intltool-debian all 0.35.0+20060710.4 [26.3 kB]
Get:54 http://127.0.0.1:9999/debian unstable/main amd64 po-debconf all 1.0.20 [247 kB]
Get:55 http://127.0.0.1:9999/debian unstable/main amd64 debhelper all 11.1.4 [1005 kB]
Get:56 http://127.0.0.1:9999/debian unstable/main amd64 libpixman-1-0 amd64 0.34.0-2 [529 kB]
Get:57 http://127.0.0.1:9999/debian unstable/main amd64 libxau6 amd64 1:1.0.8-1+b2 [19.9 kB]
Get:58 http://127.0.0.1:9999/debian unstable/main amd64 libxdmcp6 amd64 1:1.1.2-3 [26.3 kB]
Get:59 http://127.0.0.1:9999/debian unstable/main amd64 libxcb1 amd64 1.12-1 [133 kB]
Get:60 http://127.0.0.1:9999/debian unstable/main amd64 libx11-data all 2:1.6.4-3 [290 kB]
Get:61 http://127.0.0.1:9999/debian unstable/main amd64 libx11-6 amd64 2:1.6.4-3 [747 kB]
Get:62 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-render0 amd64 1.12-1 [105 kB]
Get:63 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-shm0 amd64 1.12-1 [95.9 kB]
Get:64 http://127.0.0.1:9999/debian unstable/main amd64 libxext6 amd64 2:1.3.3-1+b2 [52.5 kB]
Get:65 http://127.0.0.1:9999/debian unstable/main amd64 libxrender1 amd64 1:0.9.10-1 [33.0 kB]
Get:66 http://127.0.0.1:9999/debian unstable/main amd64 libcairo2 amd64 1.15.10-1 [663 kB]
Get:67 http://127.0.0.1:9999/debian unstable/main amd64 libdatrie1 amd64 0.2.10-6 [36.5 kB]
Get:68 http://127.0.0.1:9999/debian unstable/main amd64 libdbus-1-3 amd64 1.12.2-1 [208 kB]
Get:69 http://127.0.0.1:9999/debian unstable/main amd64 libdrm-common all 2.4.89-1 [13.4 kB]
Get:70 http://127.0.0.1:9999/debian unstable/main amd64 libdrm2 amd64 2.4.89-1 [39.8 kB]
Get:71 http://127.0.0.1:9999/debian unstable/main amd64 libdrm-amdgpu1 amd64 2.4.89-1 [28.2 kB]
Get:72 http://127.0.0.1:9999/debian unstable/main amd64 libpciaccess0 amd64 0.13.4-1+b2 [50.0 kB]
Get:73 http://127.0.0.1:9999/debian unstable/main amd64 libdrm-intel1 amd64 2.4.89-1 [69.3 kB]
Get:74 http://127.0.0.1:9999/debian unstable/main amd64 libdrm-nouveau2 amd64 2.4.89-1 [25.9 kB]
Get:75 http://127.0.0.1:9999/debian unstable/main amd64 libdrm-radeon1 amd64 2.4.89-1 [31.0 kB]
Get:76 http://127.0.0.1:9999/debian unstable/main amd64 libelf1 amd64 0.170-0.3 [162 kB]
Get:77 http://127.0.0.1:9999/debian unstable/main amd64 libepoxy0 amd64 1.4.3-1 [234 kB]
Get:78 http://127.0.0.1:9999/debian unstable/main amd64 libfontenc1 amd64 1:1.1.3-1+b2 [24.4 kB]
Get:79 http://127.0.0.1:9999/debian unstable/main amd64 libjpeg62-turbo amd64 1:1.5.2-2+b1 [134 kB]
Get:80 http://127.0.0.1:9999/debian unstable/main amd64 libjbig0 amd64 2.1-3.1+b2 [31.0 kB]
Get:81 http://127.0.0.1:9999/debian unstable/main amd64 libtiff5 amd64 4.0.9-3 [245 kB]
Get:82 http://127.0.0.1:9999/debian unstable/main amd64 shared-mime-info amd64 1.9-2 [753 kB]
Get:83 http://127.0.0.1:9999/debian unstable/main amd64 libgdk-pixbuf2.0-common all 2.36.11-1 [312 kB]
Get:84 http://127.0.0.1:9999/debian unstable/main amd64 libgdk-pixbuf2.0-0 amd64 2.36.11-1 [172 kB]
Get:85 http://127.0.0.1:9999/debian unstable/main amd64 libglapi-mesa amd64 17.3.3-1 [61.2 kB]
Get:86 http://127.0.0.1:9999/debian unstable/main amd64 libllvm5.0 amd64 1:5.0.1-2 [13.7 MB]
Get:87 http://127.0.0.1:9999/debian unstable/main amd64 libsensors4 amd64 1:3.4.0-4 [53.3 kB]
Get:88 http://127.0.0.1:9999/debian unstable/main amd64 libgl1-mesa-dri amd64 17.3.3-1 [5900 kB]
Get:89 http://127.0.0.1:9999/debian unstable/main amd64 libglvnd0 amd64 1.0.0-2 [46.5 kB]
Get:90 http://127.0.0.1:9999/debian unstable/main amd64 libx11-xcb1 amd64 2:1.6.4-3 [183 kB]
Get:91 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-dri2-0 amd64 1.12-1 [97.2 kB]
Get:92 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-dri3-0 amd64 1.12-1 [95.6 kB]
Get:93 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-glx0 amd64 1.12-1 [113 kB]
Get:94 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-present0 amd64 1.12-1 [95.8 kB]
Get:95 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-sync1 amd64 1.12-1 [99.2 kB]
Get:96 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-xfixes0 amd64 1.12-1 [99.6 kB]
Get:97 http://127.0.0.1:9999/debian unstable/main amd64 libxfixes3 amd64 1:5.0.3-1 [21.9 kB]
Get:98 http://127.0.0.1:9999/debian unstable/main amd64 libxdamage1 amd64 1:1.1.4-3 [14.4 kB]
Get:99 http://127.0.0.1:9999/debian unstable/main amd64 libxshmfence1 amd64 1.2-1+b2 [7922 B]
Get:100 http://127.0.0.1:9999/debian unstable/main amd64 libxxf86vm1 amd64 1:1.1.4-1+b2 [20.8 kB]
Get:101 http://127.0.0.1:9999/debian unstable/main amd64 libglx-mesa0 amd64 17.3.3-1 [171 kB]
Get:102 http://127.0.0.1:9999/debian unstable/main amd64 libgraphite2-3 amd64 1.3.10-8 [84.2 kB]
Get:103 http://127.0.0.1:9999/debian unstable/main amd64 libharfbuzz0b amd64 1.7.2-1 [738 kB]
Get:104 http://127.0.0.1:9999/debian unstable/main amd64 lsb-base all 9.20170808 [28.1 kB]
Get:105 http://127.0.0.1:9999/debian unstable/main amd64 x11-common all 1:7.7+19 [251 kB]
Get:106 http://127.0.0.1:9999/debian unstable/main amd64 libice6 amd64 2:1.0.9-2 [58.7 kB]
Get:107 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery-isonscreen all 1.2.0-1 [3046 B]
Get:108 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery-metadata all 12-1 [7236 B]
Get:109 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery-tablesorter all 1:2.29.5+dfsg1-1 [174 kB]
Get:110 http://127.0.0.1:9999/debian unstable/main amd64 libjs-jquery-throttle-debounce all 1.1+dfsg.1-1 [6178 B]
Get:111 http://127.0.0.1:9999/debian unstable/main amd64 libthai-data all 0.1.27-1 [168 kB]
Get:112 http://127.0.0.1:9999/debian unstable/main amd64 libthai0 amd64 0.1.27-1 [53.1 kB]
Get:113 http://127.0.0.1:9999/debian unstable/main amd64 libpango-1.0-0 amd64 1.40.14-1 [198 kB]
Get:114 http://127.0.0.1:9999/debian unstable/main amd64 libpangoft2-1.0-0 amd64 1.40.14-1 [79.1 kB]
Get:115 http://127.0.0.1:9999/debian unstable/main amd64 libpangocairo-1.0-0 amd64 1.40.14-1 [66.9 kB]
Get:116 http://127.0.0.1:9999/debian unstable/main amd64 libpangox-1.0-0 amd64 0.0.2-5+b2 [42.3 kB]
Get:117 http://127.0.0.1:9999/debian unstable/main amd64 libxft2 amd64 2.3.2-1+b2 [56.5 kB]
Get:118 http://127.0.0.1:9999/debian unstable/main amd64 libpangoxft-1.0-0 amd64 1.40.14-1 [61.0 kB]
Get:119 http://127.0.0.1:9999/debian unstable/main amd64 libpango1.0-0 amd64 1.40.14-1 [49.3 kB]
Get:120 http://127.0.0.1:9999/debian unstable/main amd64 libsm6 amd64 2:1.2.2-1+b3 [33.3 kB]
Get:121 http://127.0.0.1:9999/debian unstable/main amd64 libutempter0 amd64 1.1.6-3 [7812 B]
Get:122 http://127.0.0.1:9999/debian unstable/main amd64 libxt6 amd64 1:1.1.5-1 [188 kB]
Get:123 http://127.0.0.1:9999/debian unstable/main amd64 libxmu6 amd64 2:1.1.2-2 [60.3 kB]
Get:124 http://127.0.0.1:9999/debian unstable/main amd64 libxpm4 amd64 1:3.5.12-1 [49.1 kB]
Get:125 http://127.0.0.1:9999/debian unstable/main amd64 libxaw7 amd64 2:1.0.13-1+b2 [201 kB]
Get:126 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-icccm4 amd64 0.4.1-1+b1 [27.4 kB]
Get:127 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-util0 amd64 0.3.8-3+b2 [23.0 kB]
Get:128 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-image0 amd64 0.4.0-1+b2 [24.4 kB]
Get:129 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-keysyms1 amd64 0.4.0-1+b2 [16.4 kB]
Get:130 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-randr0 amd64 1.12-1 [107 kB]
Get:131 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-render-util0 amd64 0.3.9-1+b1 [18.3 kB]
Get:132 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-shape0 amd64 1.12-1 [96.2 kB]
Get:133 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-xf86dri0 amd64 1.12-1 [96.9 kB]
Get:134 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-xkb1 amd64 1.12-1 [120 kB]
Get:135 http://127.0.0.1:9999/debian unstable/main amd64 libxcb-xv0 amd64 1.12-1 [99.6 kB]
Get:136 http://127.0.0.1:9999/debian unstable/main amd64 libxcursor1 amd64 1:1.1.15-1 [36.4 kB]
Get:137 http://127.0.0.1:9999/debian unstable/main amd64 libxfont2 amd64 1:2.0.1-4 [132 kB]
Get:138 http://127.0.0.1:9999/debian unstable/main amd64 libxi6 amd64 2:1.7.9-1 [82.6 kB]
Get:139 http://127.0.0.1:9999/debian unstable/main amd64 libxinerama1 amd64 2:1.1.3-1+b3 [16.7 kB]
Get:140 http://127.0.0.1:9999/debian unstable/main amd64 libxkbfile1 amd64 1:1.0.9-2 [74.6 kB]
Get:141 http://127.0.0.1:9999/debian unstable/main amd64 libxmuu1 amd64 2:1.1.2-2 [23.5 kB]
Get:142 http://127.0.0.1:9999/debian unstable/main amd64 libxrandr2 amd64 2:1.5.1-1 [37.5 kB]
Get:143 http://127.0.0.1:9999/debian unstable/main amd64 lm-sensors amd64 1:3.4.0-4 [112 kB]
Get:144 http://127.0.0.1:9999/debian unstable/main amd64 python3-all amd64 3.6.4-1 [1020 B]
Get:145 http://127.0.0.1:9999/debian unstable/main amd64 python3-cffi-backend amd64 1.9.1-2+b1 [72.0 kB]
Get:146 http://127.0.0.1:9999/debian unstable/main amd64 python3-ply all 3.9-1 [64.4 kB]
Get:147 http://127.0.0.1:9999/debian unstable/main amd64 python3-pycparser all 2.17-2 [63.4 kB]
Get:148 http://127.0.0.1:9999/debian unstable/main amd64 python3-cffi all 1.9.1-2 [73.4 kB]
Get:149 http://127.0.0.1:9999/debian unstable/main amd64 python3-cairocffi all 0.7.2-2.1 [62.4 kB]
Get:150 http://127.0.0.1:9999/debian unstable/main amd64 python3-pkg-resources all 38.4.0-1 [142 kB]
Get:151 http://127.0.0.1:9999/debian unstable/main amd64 python3-coverage amd64 4.4.2+dfsg.1-1 [139 kB]
Get:152 http://127.0.0.1:9999/debian unstable/main amd64 python3-six all 1.11.0-1 [15.0 kB]
Get:153 http://127.0.0.1:9999/debian unstable/main amd64 python3-nose2 all 0.7.3-2 [84.4 kB]
Get:154 http://127.0.0.1:9999/debian unstable/main amd64 python3-cov-core all 1.15.0-2 [7228 B]
Get:155 http://127.0.0.1:9999/debian unstable/main amd64 python3-py all 1.4.34-3 [83.6 kB]
Get:156 http://127.0.0.1:9999/debian unstable/main amd64 python3-pytest all 3.2.5-1 [202 kB]
Get:157 http://127.0.0.1:9999/debian unstable/main amd64 python3-pytest-cov all 2.5.1-1 [16.7 kB]
Get:158 http://127.0.0.1:9999/debian unstable/main amd64 python3-setuptools all 38.4.0-1 [229 kB]
Get:159 http://127.0.0.1:9999/debian unstable/main amd64 python3-xcffib amd64 0.5.1-1 [61.3 kB]
Get:160 http://127.0.0.1:9999/debian unstable/main amd64 x11-apps amd64 7.7+6+b1 [660 kB]
Get:161 http://127.0.0.1:9999/debian unstable/main amd64 x11-xkb-utils amd64 7.7+3+b1 [163 kB]
Get:162 http://127.0.0.1:9999/debian unstable/main amd64 x11-xserver-utils amd64 7.7+7+b1 [167 kB]
Get:163 http://127.0.0.1:9999/debian unstable/main amd64 xbitmaps all 1.1.1-2 [32.1 kB]
Get:164 http://127.0.0.1:9999/debian unstable/main amd64 xkb-data all 2.23.1-1 [675 kB]
Get:165 http://127.0.0.1:9999/debian unstable/main amd64 xserver-common all 2:1.19.6-1 [2085 kB]
Get:166 http://127.0.0.1:9999/debian unstable/main amd64 libglx0 amd64 1.0.0-2 [29.5 kB]
Get:167 http://127.0.0.1:9999/debian unstable/main amd64 libgl1 amd64 1.0.0-2 [88.8 kB]
Get:168 http://127.0.0.1:9999/debian unstable/main amd64 xserver-xephyr amd64 2:1.19.6-1 [2982 kB]
Get:169 http://127.0.0.1:9999/debian unstable/main amd64 xterm amd64 331-1 [699 kB]
Get:170 http://127.0.0.1:9999/debian unstable/main amd64 xvfb amd64 2:1.19.6-1 [2842 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 71.0 MB in 2s (37.8 MB/s)
Selecting previously unselected package groff-base.
(Reading database ... 10722 files and directories currently installed.)
Preparing to unpack .../00-groff-base_1.22.3-9_amd64.deb ...
Unpacking groff-base (1.22.3-9) ...
Selecting previously unselected package bsdmainutils.
Preparing to unpack .../01-bsdmainutils_11.1.2_amd64.deb ...
Unpacking bsdmainutils (11.1.2) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../02-libpipeline1_1.5.0-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.0-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../03-man-db_2.8.0-2_amd64.deb ...
Unpacking man-db (2.8.0-2) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../04-libexpat1_2.2.5-3_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.5-3) ...
Selecting previously unselected package libpng16-16:amd64.
Preparing to unpack .../05-libpng16-16_1.6.34-1_amd64.deb ...
Unpacking libpng16-16:amd64 (1.6.34-1) ...
Selecting previously unselected package libfreetype6:amd64.
Preparing to unpack .../06-libfreetype6_2.8.1-1_amd64.deb ...
Unpacking libfreetype6:amd64 (2.8.1-1) ...
Selecting previously unselected package ucf.
Preparing to unpack .../07-ucf_3.0036_all.deb ...
Moving old data out of the way
Unpacking ucf (3.0036) ...
Selecting previously unselected package fonts-dejavu-core.
Preparing to unpack .../08-fonts-dejavu-core_2.37-1_all.deb ...
Unpacking fonts-dejavu-core (2.37-1) ...
Selecting previously unselected package fontconfig-config.
Preparing to unpack .../09-fontconfig-config_2.12.6-0.1_all.deb ...
Unpacking fontconfig-config (2.12.6-0.1) ...
Selecting previously unselected package libfontconfig1:amd64.
Preparing to unpack .../10-libfontconfig1_2.12.6-0.1_amd64.deb ...
Unpacking libfontconfig1:amd64 (2.12.6-0.1) ...
Selecting previously unselected package fontconfig.
Preparing to unpack .../11-fontconfig_2.12.6-0.1_amd64.deb ...
Unpacking fontconfig (2.12.6-0.1) ...
Selecting previously unselected package libjs-jquery.
Preparing to unpack .../12-libjs-jquery_3.2.1-1_all.deb ...
Unpacking libjs-jquery (3.2.1-1) ...
Selecting previously unselected package libjs-jquery-hotkeys.
Preparing to unpack .../13-libjs-jquery-hotkeys_0~20130707+git2d51e3a9+dfsg-2_all.deb ...
Unpacking libjs-jquery-hotkeys (0~20130707+git2d51e3a9+dfsg-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../14-libssl1.1_1.1.0g-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.0g-2) ...
Selecting previously unselected package libpython3.6-minimal:amd64.
Preparing to unpack .../15-libpython3.6-minimal_3.6.4-3_amd64.deb ...
Unpacking libpython3.6-minimal:amd64 (3.6.4-3) ...
Selecting previously unselected package python3.6-minimal.
Preparing to unpack .../16-python3.6-minimal_3.6.4-3_amd64.deb ...
Unpacking python3.6-minimal (3.6.4-3) ...
Selecting previously unselected package python3-minimal.
Preparing to unpack .../17-python3-minimal_3.6.4-1_amd64.deb ...
Unpacking python3-minimal (3.6.4-1) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../18-mime-support_3.60_all.deb ...
Unpacking mime-support (3.60) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../19-libmpdec2_2.4.2-1_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-1) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../20-readline-common_7.0-3_all.deb ...
Unpacking readline-common (7.0-3) ...
Selecting previously unselected package libreadline7:amd64.
Preparing to unpack .../21-libreadline7_7.0-3_amd64.deb ...
Unpacking libreadline7:amd64 (7.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../22-libsqlite3-0_3.22.0-1_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.22.0-1) ...
Selecting previously unselected package libpython3.6-stdlib:amd64.
Preparing to unpack .../23-libpython3.6-stdlib_3.6.4-3_amd64.deb ...
Unpacking libpython3.6-stdlib:amd64 (3.6.4-3) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../24-python3-lib2to3_3.6.4-3_all.deb ...
Unpacking python3-lib2to3 (3.6.4-3) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../25-python3-distutils_3.6.4-3_all.deb ...
Unpacking python3-distutils (3.6.4-3) ...
Selecting previously unselected package python3.6.
Preparing to unpack .../26-python3.6_3.6.4-3_amd64.deb ...
Unpacking python3.6 (3.6.4-3) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../27-libpython3-stdlib_3.6.4-1_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.6.4-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../28-dh-python_2.20170125_all.deb ...
Unpacking dh-python (2.20170125) ...
Setting up libssl1.1:amd64 (1.1.0g-2) ...
Setting up libpython3.6-minimal:amd64 (3.6.4-3) ...
Setting up libexpat1:amd64 (2.2.5-3) ...
Setting up python3.6-minimal (3.6.4-3) ...
Setting up python3-minimal (3.6.4-1) ...
Selecting previously unselected package python3.
(Reading database ... 12580 files and directories currently installed.)
Preparing to unpack .../000-python3_3.6.4-1_amd64.deb ...
Unpacking python3 (3.6.4-1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../001-libmagic-mgc_1%3a5.32-1_amd64.deb ...
Unpacking libmagic-mgc (1:5.32-1) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../002-libmagic1_1%3a5.32-1_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.32-1) ...
Selecting previously unselected package file.
Preparing to unpack .../003-file_1%3a5.32-1_amd64.deb ...
Unpacking file (1:5.32-1) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../004-gettext-base_0.19.8.1-4_amd64.deb ...
Unpacking gettext-base (0.19.8.1-4) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../005-libsigsegv2_2.12-1_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-1) ...
Selecting previously unselected package m4.
Preparing to unpack .../006-m4_1.4.18-1_amd64.deb ...
Unpacking m4 (1.4.18-1) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../007-autoconf_2.69-11_all.deb ...
Unpacking autoconf (2.69-11) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../008-autotools-dev_20171216.1_all.deb ...
Unpacking autotools-dev (20171216.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../009-automake_1%3a1.15.1-3_all.deb ...
Unpacking automake (1:1.15.1-3) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../010-autopoint_0.19.8.1-4_all.deb ...
Unpacking autopoint (0.19.8.1-4) ...
Selecting previously unselected package libtool.
Preparing to unpack .../011-libtool_2.4.6-2_all.deb ...
Unpacking libtool (2.4.6-2) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../012-dh-autoreconf_16_all.deb ...
Unpacking dh-autoreconf (16) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../013-libarchive-zip-perl_1.60-1_all.deb ...
Unpacking libarchive-zip-perl (1.60-1) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../014-libfile-stripnondeterminism-perl_0.040-1_all.deb ...
Unpacking libfile-stripnondeterminism-perl (0.040-1) ...
Selecting previously unselected package libtimedate-perl.
Preparing to unpack .../015-libtimedate-perl_2.3000-2_all.deb ...
Unpacking libtimedate-perl (2.3000-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../016-dh-strip-nondeterminism_0.040-1_all.deb ...
Unpacking dh-strip-nondeterminism (0.040-1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../017-libglib2.0-0_2.54.3-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.54.3-2) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../018-libicu57_57.1-8_amd64.deb ...
Unpacking libicu57:amd64 (57.1-8) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../019-libxml2_2.9.4+dfsg1-6.1_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../020-libcroco3_0.6.12-2_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.12-2) ...
Selecting previously unselected package gettext.
Preparing to unpack .../021-gettext_0.19.8.1-4_amd64.deb ...
Unpacking gettext (0.19.8.1-4) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../022-intltool-debian_0.35.0+20060710.4_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.4) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../023-po-debconf_1.0.20_all.deb ...
Unpacking po-debconf (1.0.20) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../024-debhelper_11.1.4_all.deb ...
Unpacking debhelper (11.1.4) ...
Selecting previously unselected package libpixman-1-0:amd64.
Preparing to unpack .../025-libpixman-1-0_0.34.0-2_amd64.deb ...
Unpacking libpixman-1-0:amd64 (0.34.0-2) ...
Selecting previously unselected package libxau6:amd64.
Preparing to unpack .../026-libxau6_1%3a1.0.8-1+b2_amd64.deb ...
Unpacking libxau6:amd64 (1:1.0.8-1+b2) ...
Selecting previously unselected package libxdmcp6:amd64.
Preparing to unpack .../027-libxdmcp6_1%3a1.1.2-3_amd64.deb ...
Unpacking libxdmcp6:amd64 (1:1.1.2-3) ...
Selecting previously unselected package libxcb1:amd64.
Preparing to unpack .../028-libxcb1_1.12-1_amd64.deb ...
Unpacking libxcb1:amd64 (1.12-1) ...
Selecting previously unselected package libx11-data.
Preparing to unpack .../029-libx11-data_2%3a1.6.4-3_all.deb ...
Unpacking libx11-data (2:1.6.4-3) ...
Selecting previously unselected package libx11-6:amd64.
Preparing to unpack .../030-libx11-6_2%3a1.6.4-3_amd64.deb ...
Unpacking libx11-6:amd64 (2:1.6.4-3) ...
Selecting previously unselected package libxcb-render0:amd64.
Preparing to unpack .../031-libxcb-render0_1.12-1_amd64.deb ...
Unpacking libxcb-render0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-shm0:amd64.
Preparing to unpack .../032-libxcb-shm0_1.12-1_amd64.deb ...
Unpacking libxcb-shm0:amd64 (1.12-1) ...
Selecting previously unselected package libxext6:amd64.
Preparing to unpack .../033-libxext6_2%3a1.3.3-1+b2_amd64.deb ...
Unpacking libxext6:amd64 (2:1.3.3-1+b2) ...
Selecting previously unselected package libxrender1:amd64.
Preparing to unpack .../034-libxrender1_1%3a0.9.10-1_amd64.deb ...
Unpacking libxrender1:amd64 (1:0.9.10-1) ...
Selecting previously unselected package libcairo2:amd64.
Preparing to unpack .../035-libcairo2_1.15.10-1_amd64.deb ...
Unpacking libcairo2:amd64 (1.15.10-1) ...
Selecting previously unselected package libdatrie1:amd64.
Preparing to unpack .../036-libdatrie1_0.2.10-6_amd64.deb ...
Unpacking libdatrie1:amd64 (0.2.10-6) ...
Selecting previously unselected package libdbus-1-3:amd64.
Preparing to unpack .../037-libdbus-1-3_1.12.2-1_amd64.deb ...
Unpacking libdbus-1-3:amd64 (1.12.2-1) ...
Selecting previously unselected package libdrm-common.
Preparing to unpack .../038-libdrm-common_2.4.89-1_all.deb ...
Unpacking libdrm-common (2.4.89-1) ...
Selecting previously unselected package libdrm2:amd64.
Preparing to unpack .../039-libdrm2_2.4.89-1_amd64.deb ...
Unpacking libdrm2:amd64 (2.4.89-1) ...
Selecting previously unselected package libdrm-amdgpu1:amd64.
Preparing to unpack .../040-libdrm-amdgpu1_2.4.89-1_amd64.deb ...
Unpacking libdrm-amdgpu1:amd64 (2.4.89-1) ...
Selecting previously unselected package libpciaccess0:amd64.
Preparing to unpack .../041-libpciaccess0_0.13.4-1+b2_amd64.deb ...
Unpacking libpciaccess0:amd64 (0.13.4-1+b2) ...
Selecting previously unselected package libdrm-intel1:amd64.
Preparing to unpack .../042-libdrm-intel1_2.4.89-1_amd64.deb ...
Unpacking libdrm-intel1:amd64 (2.4.89-1) ...
Selecting previously unselected package libdrm-nouveau2:amd64.
Preparing to unpack .../043-libdrm-nouveau2_2.4.89-1_amd64.deb ...
Unpacking libdrm-nouveau2:amd64 (2.4.89-1) ...
Selecting previously unselected package libdrm-radeon1:amd64.
Preparing to unpack .../044-libdrm-radeon1_2.4.89-1_amd64.deb ...
Unpacking libdrm-radeon1:amd64 (2.4.89-1) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../045-libelf1_0.170-0.3_amd64.deb ...
Unpacking libelf1:amd64 (0.170-0.3) ...
Selecting previously unselected package libepoxy0:amd64.
Preparing to unpack .../046-libepoxy0_1.4.3-1_amd64.deb ...
Unpacking libepoxy0:amd64 (1.4.3-1) ...
Selecting previously unselected package libfontenc1:amd64.
Preparing to unpack .../047-libfontenc1_1%3a1.1.3-1+b2_amd64.deb ...
Unpacking libfontenc1:amd64 (1:1.1.3-1+b2) ...
Selecting previously unselected package libjpeg62-turbo:amd64.
Preparing to unpack .../048-libjpeg62-turbo_1%3a1.5.2-2+b1_amd64.deb ...
Unpacking libjpeg62-turbo:amd64 (1:1.5.2-2+b1) ...
Selecting previously unselected package libjbig0:amd64.
Preparing to unpack .../049-libjbig0_2.1-3.1+b2_amd64.deb ...
Unpacking libjbig0:amd64 (2.1-3.1+b2) ...
Selecting previously unselected package libtiff5:amd64.
Preparing to unpack .../050-libtiff5_4.0.9-3_amd64.deb ...
Unpacking libtiff5:amd64 (4.0.9-3) ...
Selecting previously unselected package shared-mime-info.
Preparing to unpack .../051-shared-mime-info_1.9-2_amd64.deb ...
Unpacking shared-mime-info (1.9-2) ...
Selecting previously unselected package libgdk-pixbuf2.0-common.
Preparing to unpack .../052-libgdk-pixbuf2.0-common_2.36.11-1_all.deb ...
Unpacking libgdk-pixbuf2.0-common (2.36.11-1) ...
Selecting previously unselected package libgdk-pixbuf2.0-0:amd64.
Preparing to unpack .../053-libgdk-pixbuf2.0-0_2.36.11-1_amd64.deb ...
Unpacking libgdk-pixbuf2.0-0:amd64 (2.36.11-1) ...
Selecting previously unselected package libglapi-mesa:amd64.
Preparing to unpack .../054-libglapi-mesa_17.3.3-1_amd64.deb ...
Unpacking libglapi-mesa:amd64 (17.3.3-1) ...
Selecting previously unselected package libllvm5.0:amd64.
Preparing to unpack .../055-libllvm5.0_1%3a5.0.1-2_amd64.deb ...
Unpacking libllvm5.0:amd64 (1:5.0.1-2) ...
Selecting previously unselected package libsensors4:amd64.
Preparing to unpack .../056-libsensors4_1%3a3.4.0-4_amd64.deb ...
Unpacking libsensors4:amd64 (1:3.4.0-4) ...
Selecting previously unselected package libgl1-mesa-dri:amd64.
Preparing to unpack .../057-libgl1-mesa-dri_17.3.3-1_amd64.deb ...
Unpacking libgl1-mesa-dri:amd64 (17.3.3-1) ...
Selecting previously unselected package libglvnd0:amd64.
Preparing to unpack .../058-libglvnd0_1.0.0-2_amd64.deb ...
Unpacking libglvnd0:amd64 (1.0.0-2) ...
Selecting previously unselected package libx11-xcb1:amd64.
Preparing to unpack .../059-libx11-xcb1_2%3a1.6.4-3_amd64.deb ...
Unpacking libx11-xcb1:amd64 (2:1.6.4-3) ...
Selecting previously unselected package libxcb-dri2-0:amd64.
Preparing to unpack .../060-libxcb-dri2-0_1.12-1_amd64.deb ...
Unpacking libxcb-dri2-0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-dri3-0:amd64.
Preparing to unpack .../061-libxcb-dri3-0_1.12-1_amd64.deb ...
Unpacking libxcb-dri3-0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-glx0:amd64.
Preparing to unpack .../062-libxcb-glx0_1.12-1_amd64.deb ...
Unpacking libxcb-glx0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-present0:amd64.
Preparing to unpack .../063-libxcb-present0_1.12-1_amd64.deb ...
Unpacking libxcb-present0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-sync1:amd64.
Preparing to unpack .../064-libxcb-sync1_1.12-1_amd64.deb ...
Unpacking libxcb-sync1:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-xfixes0:amd64.
Preparing to unpack .../065-libxcb-xfixes0_1.12-1_amd64.deb ...
Unpacking libxcb-xfixes0:amd64 (1.12-1) ...
Selecting previously unselected package libxfixes3:amd64.
Preparing to unpack .../066-libxfixes3_1%3a5.0.3-1_amd64.deb ...
Unpacking libxfixes3:amd64 (1:5.0.3-1) ...
Selecting previously unselected package libxdamage1:amd64.
Preparing to unpack .../067-libxdamage1_1%3a1.1.4-3_amd64.deb ...
Unpacking libxdamage1:amd64 (1:1.1.4-3) ...
Selecting previously unselected package libxshmfence1:amd64.
Preparing to unpack .../068-libxshmfence1_1.2-1+b2_amd64.deb ...
Unpacking libxshmfence1:amd64 (1.2-1+b2) ...
Selecting previously unselected package libxxf86vm1:amd64.
Preparing to unpack .../069-libxxf86vm1_1%3a1.1.4-1+b2_amd64.deb ...
Unpacking libxxf86vm1:amd64 (1:1.1.4-1+b2) ...
Selecting previously unselected package libglx-mesa0:amd64.
Preparing to unpack .../070-libglx-mesa0_17.3.3-1_amd64.deb ...
Unpacking libglx-mesa0:amd64 (17.3.3-1) ...
Selecting previously unselected package libgraphite2-3:amd64.
Preparing to unpack .../071-libgraphite2-3_1.3.10-8_amd64.deb ...
Unpacking libgraphite2-3:amd64 (1.3.10-8) ...
Selecting previously unselected package libharfbuzz0b:amd64.
Preparing to unpack .../072-libharfbuzz0b_1.7.2-1_amd64.deb ...
Unpacking libharfbuzz0b:amd64 (1.7.2-1) ...
Selecting previously unselected package lsb-base.
Preparing to unpack .../073-lsb-base_9.20170808_all.deb ...
Unpacking lsb-base (9.20170808) ...
Selecting previously unselected package x11-common.
Preparing to unpack .../074-x11-common_1%3a7.7+19_all.deb ...
Unpacking x11-common (1:7.7+19) ...
Selecting previously unselected package libice6:amd64.
Preparing to unpack .../075-libice6_2%3a1.0.9-2_amd64.deb ...
Unpacking libice6:amd64 (2:1.0.9-2) ...
Selecting previously unselected package libjs-jquery-isonscreen.
Preparing to unpack .../076-libjs-jquery-isonscreen_1.2.0-1_all.deb ...
Unpacking libjs-jquery-isonscreen (1.2.0-1) ...
Selecting previously unselected package libjs-jquery-metadata.
Preparing to unpack .../077-libjs-jquery-metadata_12-1_all.deb ...
Unpacking libjs-jquery-metadata (12-1) ...
Selecting previously unselected package libjs-jquery-tablesorter.
Preparing to unpack .../078-libjs-jquery-tablesorter_1%3a2.29.5+dfsg1-1_all.deb ...
Unpacking libjs-jquery-tablesorter (1:2.29.5+dfsg1-1) ...
Selecting previously unselected package libjs-jquery-throttle-debounce.
Preparing to unpack .../079-libjs-jquery-throttle-debounce_1.1+dfsg.1-1_all.deb ...
Unpacking libjs-jquery-throttle-debounce (1.1+dfsg.1-1) ...
Selecting previously unselected package libthai-data.
Preparing to unpack .../080-libthai-data_0.1.27-1_all.deb ...
Unpacking libthai-data (0.1.27-1) ...
Selecting previously unselected package libthai0:amd64.
Preparing to unpack .../081-libthai0_0.1.27-1_amd64.deb ...
Unpacking libthai0:amd64 (0.1.27-1) ...
Selecting previously unselected package libpango-1.0-0:amd64.
Preparing to unpack .../082-libpango-1.0-0_1.40.14-1_amd64.deb ...
Unpacking libpango-1.0-0:amd64 (1.40.14-1) ...
Selecting previously unselected package libpangoft2-1.0-0:amd64.
Preparing to unpack .../083-libpangoft2-1.0-0_1.40.14-1_amd64.deb ...
Unpacking libpangoft2-1.0-0:amd64 (1.40.14-1) ...
Selecting previously unselected package libpangocairo-1.0-0:amd64.
Preparing to unpack .../084-libpangocairo-1.0-0_1.40.14-1_amd64.deb ...
Unpacking libpangocairo-1.0-0:amd64 (1.40.14-1) ...
Selecting previously unselected package libpangox-1.0-0:amd64.
Preparing to unpack .../085-libpangox-1.0-0_0.0.2-5+b2_amd64.deb ...
Unpacking libpangox-1.0-0:amd64 (0.0.2-5+b2) ...
Selecting previously unselected package libxft2:amd64.
Preparing to unpack .../086-libxft2_2.3.2-1+b2_amd64.deb ...
Unpacking libxft2:amd64 (2.3.2-1+b2) ...
Selecting previously unselected package libpangoxft-1.0-0:amd64.
Preparing to unpack .../087-libpangoxft-1.0-0_1.40.14-1_amd64.deb ...
Unpacking libpangoxft-1.0-0:amd64 (1.40.14-1) ...
Selecting previously unselected package libpango1.0-0:amd64.
Preparing to unpack .../088-libpango1.0-0_1.40.14-1_amd64.deb ...
Unpacking libpango1.0-0:amd64 (1.40.14-1) ...
Selecting previously unselected package libsm6:amd64.
Preparing to unpack .../089-libsm6_2%3a1.2.2-1+b3_amd64.deb ...
Unpacking libsm6:amd64 (2:1.2.2-1+b3) ...
Selecting previously unselected package libutempter0:amd64.
Preparing to unpack .../090-libutempter0_1.1.6-3_amd64.deb ...
Unpacking libutempter0:amd64 (1.1.6-3) ...
Selecting previously unselected package libxt6:amd64.
Preparing to unpack .../091-libxt6_1%3a1.1.5-1_amd64.deb ...
Unpacking libxt6:amd64 (1:1.1.5-1) ...
Selecting previously unselected package libxmu6:amd64.
Preparing to unpack .../092-libxmu6_2%3a1.1.2-2_amd64.deb ...
Unpacking libxmu6:amd64 (2:1.1.2-2) ...
Selecting previously unselected package libxpm4:amd64.
Preparing to unpack .../093-libxpm4_1%3a3.5.12-1_amd64.deb ...
Unpacking libxpm4:amd64 (1:3.5.12-1) ...
Selecting previously unselected package libxaw7:amd64.
Preparing to unpack .../094-libxaw7_2%3a1.0.13-1+b2_amd64.deb ...
Unpacking libxaw7:amd64 (2:1.0.13-1+b2) ...
Selecting previously unselected package libxcb-icccm4:amd64.
Preparing to unpack .../095-libxcb-icccm4_0.4.1-1+b1_amd64.deb ...
Unpacking libxcb-icccm4:amd64 (0.4.1-1+b1) ...
Selecting previously unselected package libxcb-util0:amd64.
Preparing to unpack .../096-libxcb-util0_0.3.8-3+b2_amd64.deb ...
Unpacking libxcb-util0:amd64 (0.3.8-3+b2) ...
Selecting previously unselected package libxcb-image0:amd64.
Preparing to unpack .../097-libxcb-image0_0.4.0-1+b2_amd64.deb ...
Unpacking libxcb-image0:amd64 (0.4.0-1+b2) ...
Selecting previously unselected package libxcb-keysyms1:amd64.
Preparing to unpack .../098-libxcb-keysyms1_0.4.0-1+b2_amd64.deb ...
Unpacking libxcb-keysyms1:amd64 (0.4.0-1+b2) ...
Selecting previously unselected package libxcb-randr0:amd64.
Preparing to unpack .../099-libxcb-randr0_1.12-1_amd64.deb ...
Unpacking libxcb-randr0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-render-util0:amd64.
Preparing to unpack .../100-libxcb-render-util0_0.3.9-1+b1_amd64.deb ...
Unpacking libxcb-render-util0:amd64 (0.3.9-1+b1) ...
Selecting previously unselected package libxcb-shape0:amd64.
Preparing to unpack .../101-libxcb-shape0_1.12-1_amd64.deb ...
Unpacking libxcb-shape0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-xf86dri0:amd64.
Preparing to unpack .../102-libxcb-xf86dri0_1.12-1_amd64.deb ...
Unpacking libxcb-xf86dri0:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-xkb1:amd64.
Preparing to unpack .../103-libxcb-xkb1_1.12-1_amd64.deb ...
Unpacking libxcb-xkb1:amd64 (1.12-1) ...
Selecting previously unselected package libxcb-xv0:amd64.
Preparing to unpack .../104-libxcb-xv0_1.12-1_amd64.deb ...
Unpacking libxcb-xv0:amd64 (1.12-1) ...
Selecting previously unselected package libxcursor1:amd64.
Preparing to unpack .../105-libxcursor1_1%3a1.1.15-1_amd64.deb ...
Unpacking libxcursor1:amd64 (1:1.1.15-1) ...
Selecting previously unselected package libxfont2:amd64.
Preparing to unpack .../106-libxfont2_1%3a2.0.1-4_amd64.deb ...
Unpacking libxfont2:amd64 (1:2.0.1-4) ...
Selecting previously unselected package libxi6:amd64.
Preparing to unpack .../107-libxi6_2%3a1.7.9-1_amd64.deb ...
Unpacking libxi6:amd64 (2:1.7.9-1) ...
Selecting previously unselected package libxinerama1:amd64.
Preparing to unpack .../108-libxinerama1_2%3a1.1.3-1+b3_amd64.deb ...
Unpacking libxinerama1:amd64 (2:1.1.3-1+b3) ...
Selecting previously unselected package libxkbfile1:amd64.
Preparing to unpack .../109-libxkbfile1_1%3a1.0.9-2_amd64.deb ...
Unpacking libxkbfile1:amd64 (1:1.0.9-2) ...
Selecting previously unselected package libxmuu1:amd64.
Preparing to unpack .../110-libxmuu1_2%3a1.1.2-2_amd64.deb ...
Unpacking libxmuu1:amd64 (2:1.1.2-2) ...
Selecting previously unselected package libxrandr2:amd64.
Preparing to unpack .../111-libxrandr2_2%3a1.5.1-1_amd64.deb ...
Unpacking libxrandr2:amd64 (2:1.5.1-1) ...
Selecting previously unselected package lm-sensors.
Preparing to unpack .../112-lm-sensors_1%3a3.4.0-4_amd64.deb ...
Unpacking lm-sensors (1:3.4.0-4) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../113-python3-all_3.6.4-1_amd64.deb ...
Unpacking python3-all (3.6.4-1) ...
Selecting previously unselected package python3-cffi-backend.
Preparing to unpack .../114-python3-cffi-backend_1.9.1-2+b1_amd64.deb ...
Unpacking python3-cffi-backend (1.9.1-2+b1) ...
Selecting previously unselected package python3-ply.
Preparing to unpack .../115-python3-ply_3.9-1_all.deb ...
Unpacking python3-ply (3.9-1) ...
Selecting previously unselected package python3-pycparser.
Preparing to unpack .../116-python3-pycparser_2.17-2_all.deb ...
Unpacking python3-pycparser (2.17-2) ...
Selecting previously unselected package python3-cffi.
Preparing to unpack .../117-python3-cffi_1.9.1-2_all.deb ...
Unpacking python3-cffi (1.9.1-2) ...
Selecting previously unselected package python3-cairocffi.
Preparing to unpack .../118-python3-cairocffi_0.7.2-2.1_all.deb ...
Unpacking python3-cairocffi (0.7.2-2.1) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../119-python3-pkg-resources_38.4.0-1_all.deb ...
Unpacking python3-pkg-resources (38.4.0-1) ...
Selecting previously unselected package python3-coverage.
Preparing to unpack .../120-python3-coverage_4.4.2+dfsg.1-1_amd64.deb ...
Unpacking python3-coverage (4.4.2+dfsg.1-1) ...
Selecting previously unselected package python3-six.
Preparing to unpack .../121-python3-six_1.11.0-1_all.deb ...
Unpacking python3-six (1.11.0-1) ...
Selecting previously unselected package python3-nose2.
Preparing to unpack .../122-python3-nose2_0.7.3-2_all.deb ...
Unpacking python3-nose2 (0.7.3-2) ...
Selecting previously unselected package python3-cov-core.
Preparing to unpack .../123-python3-cov-core_1.15.0-2_all.deb ...
Unpacking python3-cov-core (1.15.0-2) ...
Selecting previously unselected package python3-py.
Preparing to unpack .../124-python3-py_1.4.34-3_all.deb ...
Unpacking python3-py (1.4.34-3) ...
Selecting previously unselected package python3-pytest.
Preparing to unpack .../125-python3-pytest_3.2.5-1_all.deb ...
Unpacking python3-pytest (3.2.5-1) ...
Selecting previously unselected package python3-pytest-cov.
Preparing to unpack .../126-python3-pytest-cov_2.5.1-1_all.deb ...
Unpacking python3-pytest-cov (2.5.1-1) ...
Selecting previously unselected package python3-setuptools.
Preparing to unpack .../127-python3-setuptools_38.4.0-1_all.deb ...
Unpacking python3-setuptools (38.4.0-1) ...
Selecting previously unselected package python3-xcffib.
Preparing to unpack .../128-python3-xcffib_0.5.1-1_amd64.deb ...
Unpacking python3-xcffib (0.5.1-1) ...
Selecting previously unselected package x11-apps.
Preparing to unpack .../129-x11-apps_7.7+6+b1_amd64.deb ...
Unpacking x11-apps (7.7+6+b1) ...
Selecting previously unselected package x11-xkb-utils.
Preparing to unpack .../130-x11-xkb-utils_7.7+3+b1_amd64.deb ...
Unpacking x11-xkb-utils (7.7+3+b1) ...
Selecting previously unselected package x11-xserver-utils.
Preparing to unpack .../131-x11-xserver-utils_7.7+7+b1_amd64.deb ...
Unpacking x11-xserver-utils (7.7+7+b1) ...
Selecting previously unselected package xbitmaps.
Preparing to unpack .../132-xbitmaps_1.1.1-2_all.deb ...
Unpacking xbitmaps (1.1.1-2) ...
Selecting previously unselected package xkb-data.
Preparing to unpack .../133-xkb-data_2.23.1-1_all.deb ...
Unpacking xkb-data (2.23.1-1) ...
Selecting previously unselected package xserver-common.
Preparing to unpack .../134-xserver-common_2%3a1.19.6-1_all.deb ...
Unpacking xserver-common (2:1.19.6-1) ...
Selecting previously unselected package libglx0:amd64.
Preparing to unpack .../135-libglx0_1.0.0-2_amd64.deb ...
Unpacking libglx0:amd64 (1.0.0-2) ...
Selecting previously unselected package libgl1:amd64.
Preparing to unpack .../136-libgl1_1.0.0-2_amd64.deb ...
Unpacking libgl1:amd64 (1.0.0-2) ...
Selecting previously unselected package xserver-xephyr.
Preparing to unpack .../137-xserver-xephyr_2%3a1.19.6-1_amd64.deb ...
Unpacking xserver-xephyr (2:1.19.6-1) ...
Selecting previously unselected package xterm.
Preparing to unpack .../138-xterm_331-1_amd64.deb ...
Unpacking xterm (331-1) ...
Selecting previously unselected package xvfb.
Preparing to unpack .../139-xvfb_2%3a1.19.6-1_amd64.deb ...
Unpacking xvfb (2:1.19.6-1) ...
Selecting previously unselected package sbuild-build-depends-qtile-dummy.
Preparing to unpack .../140-sbuild-build-depends-qtile-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-qtile-dummy (0.invalid.0) ...
Setting up libjs-jquery (3.2.1-1) ...
Setting up libglvnd0:amd64 (1.0.0-2) ...
Setting up readline-common (7.0-3) ...
Setting up libjs-jquery-throttle-debounce (1.1+dfsg.1-1) ...
Setting up libjpeg62-turbo:amd64 (1:1.5.2-2+b1) ...
Setting up libarchive-zip-perl (1.60-1) ...
Setting up mime-support (3.60) ...
Setting up libpng16-16:amd64 (1.6.34-1) ...
Setting up libtimedate-perl (2.3000-2) ...
Setting up libjbig0:amd64 (2.1-3.1+b2) ...
Setting up libsigsegv2:amd64 (2.12-1) ...
Setting up fonts-dejavu-core (2.37-1) ...
Setting up xbitmaps (1.1.1-2) ...
Setting up libreadline7:amd64 (7.0-3) ...
Setting up libelf1:amd64 (0.170-0.3) ...
Setting up groff-base (1.22.3-9) ...
Setting up libglib2.0-0:amd64 (2.54.3-2) ...
No schema files found: doing nothing.
Setting up libxshmfence1:amd64 (1.2-1+b2) ...
Setting up xkb-data (2.23.1-1) ...
Setting up libgdk-pixbuf2.0-common (2.36.11-1) ...
Setting up libllvm5.0:amd64 (1:5.0.1-2) ...
Setting up libdatrie1:amd64 (0.2.10-6) ...
Setting up libtiff5:amd64 (4.0.9-3) ...
Setting up gettext-base (0.19.8.1-4) ...
Setting up libpipeline1:amd64 (1.5.0-1) ...
Setting up libglapi-mesa:amd64 (17.3.3-1) ...
Setting up m4 (1.4.18-1) ...
Setting up libicu57:amd64 (57.1-8) ...
Setting up ucf (3.0036) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Setting up libutempter0:amd64 (1.1.6-3) ...
Setting up libfreetype6:amd64 (2.8.1-1) ...
Setting up libmagic-mgc (1:5.32-1) ...
Setting up libmagic1:amd64 (1:5.32-1) ...
Setting up libdrm-common (2.4.89-1) ...
Setting up lsb-base (9.20170808) ...
Setting up libgraphite2-3:amd64 (1.3.10-8) ...
Setting up libcroco3:amd64 (0.6.12-2) ...
Setting up libx11-xcb1:amd64 (2:1.6.4-3) ...
Setting up libpixman-1-0:amd64 (0.34.0-2) ...
Setting up libjs-jquery-hotkeys (0~20130707+git2d51e3a9+dfsg-2) ...
Processing triggers for libc-bin (2.26-6) ...
Setting up libjs-jquery-isonscreen (1.2.0-1) ...
Setting up libepoxy0:amd64 (1.4.3-1) ...
Setting up autotools-dev (20171216.1) ...
Setting up libsqlite3-0:amd64 (3.22.0-1) ...
Setting up libfontenc1:amd64 (1:1.1.3-1+b2) ...
Setting up libpciaccess0:amd64 (0.13.4-1+b2) ...
Setting up libsensors4:amd64 (1:3.4.0-4) ...
Setting up shared-mime-info (1.9-2) ...
Setting up libthai-data (0.1.27-1) ...
Setting up libxdmcp6:amd64 (1:1.1.2-3) ...
Setting up bsdmainutils (11.1.2) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up libjs-jquery-metadata (12-1) ...
Setting up x11-common (1:7.7+19) ...
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
invoke-rc.d: could not determine current runlevel
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libx11-data (2:1.6.4-3) ...
Setting up libxau6:amd64 (1:1.0.8-1+b2) ...
Setting up autopoint (0.19.8.1-4) ...
Setting up libmpdec2:amd64 (2.4.2-1) ...
Setting up libdbus-1-3:amd64 (1.12.2-1) ...
Setting up libfile-stripnondeterminism-perl (0.040-1) ...
Setting up libpython3.6-stdlib:amd64 (3.6.4-3) ...
Setting up libjs-jquery-tablesorter (1:2.29.5+dfsg1-1) ...
Setting up fontconfig-config (2.12.6-0.1) ...
Setting up gettext (0.19.8.1-4) ...
Setting up libxfont2:amd64 (1:2.0.1-4) ...
Setting up libharfbuzz0b:amd64 (1.7.2-1) ...
Setting up autoconf (2.69-11) ...
Setting up libthai0:amd64 (0.1.27-1) ...
Setting up file (1:5.32-1) ...
Setting up libdrm2:amd64 (2.4.89-1) ...
Setting up intltool-debian (0.35.0+20060710.4) ...
Setting up libdrm-intel1:amd64 (2.4.89-1) ...
Setting up lm-sensors (1:3.4.0-4) ...
Setting up automake (1:1.15.1-3) ...
update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode
Setting up libice6:amd64 (2:1.0.9-2) ...
Setting up man-db (2.8.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libdrm-radeon1:amd64 (2.4.89-1) ...
Setting up libdrm-nouveau2:amd64 (2.4.89-1) ...
Setting up libxcb1:amd64 (1.12-1) ...
Setting up libxcb-xkb1:amd64 (1.12-1) ...
Setting up libtool (2.4.6-2) ...
Setting up libpython3-stdlib:amd64 (3.6.4-1) ...
Setting up libxcb-present0:amd64 (1.12-1) ...
Setting up libfontconfig1:amd64 (2.12.6-0.1) ...
Setting up libxcb-dri2-0:amd64 (1.12-1) ...
Setting up libsm6:amd64 (2:1.2.2-1+b3) ...
Setting up libxcb-dri3-0:amd64 (1.12-1) ...
Setting up libxcb-glx0:amd64 (1.12-1) ...
Setting up libxcb-randr0:amd64 (1.12-1) ...
Setting up libxcb-xfixes0:amd64 (1.12-1) ...
Setting up libxcb-icccm4:amd64 (0.4.1-1+b1) ...
Setting up libxcb-render0:amd64 (1.12-1) ...
Setting up libxcb-util0:amd64 (0.3.8-3+b2) ...
Setting up po-debconf (1.0.20) ...
Setting up libdrm-amdgpu1:amd64 (2.4.89-1) ...
Setting up libxcb-xf86dri0:amd64 (1.12-1) ...
Setting up libx11-6:amd64 (2:1.6.4-3) ...
Setting up libgl1-mesa-dri:amd64 (17.3.3-1) ...
Setting up libxmuu1:amd64 (2:1.1.2-2) ...
Setting up libxcb-sync1:amd64 (1.12-1) ...
Setting up libxcb-xv0:amd64 (1.12-1) ...
Setting up libxcb-shm0:amd64 (1.12-1) ...
Setting up libxpm4:amd64 (1:3.5.12-1) ...
Setting up libxt6:amd64 (1:1.1.5-1) ...
Setting up libxcb-shape0:amd64 (1.12-1) ...
Setting up libxrender1:amd64 (1:0.9.10-1) ...
Setting up libxcb-keysyms1:amd64 (0.4.0-1+b2) ...
Setting up libxft2:amd64 (2.3.2-1+b2) ...
Setting up fontconfig (2.12.6-0.1) ...
Regenerating fonts cache... done.
Setting up libxkbfile1:amd64 (1:1.0.9-2) ...
Setting up libxcb-render-util0:amd64 (0.3.9-1+b1) ...
Setting up libxcb-image0:amd64 (0.4.0-1+b2) ...
Setting up libxext6:amd64 (2:1.3.3-1+b2) ...
Setting up libxfixes3:amd64 (1:5.0.3-1) ...
Setting up libgdk-pixbuf2.0-0:amd64 (2.36.11-1) ...
Setting up libxmu6:amd64 (2:1.1.2-2) ...
Setting up libxcursor1:amd64 (1:1.1.15-1) ...
Setting up libpango-1.0-0:amd64 (1.40.14-1) ...
Setting up libpangox-1.0-0:amd64 (0.0.2-5+b2) ...
Setting up libxxf86vm1:amd64 (1:1.1.4-1+b2) ...
Setting up libxrandr2:amd64 (2:1.5.1-1) ...
Setting up libxi6:amd64 (2:1.7.9-1) ...
Setting up libxaw7:amd64 (2:1.0.13-1+b2) ...
Setting up libcairo2:amd64 (1.15.10-1) ...
Setting up libxinerama1:amd64 (2:1.1.3-1+b3) ...
Setting up libxdamage1:amd64 (1:1.1.4-3) ...
Setting up x11-xkb-utils (7.7+3+b1) ...
Setting up xterm (331-1) ...
update-alternatives: using /usr/bin/xterm to provide /usr/bin/x-terminal-emulator (x-terminal-emulator) in auto mode
update-alternatives: using /usr/bin/lxterm to provide /usr/bin/x-terminal-emulator (x-terminal-emulator) in auto mode
Setting up libpangoft2-1.0-0:amd64 (1.40.14-1) ...
Setting up x11-xserver-utils (7.7+7+b1) ...
Setting up x11-apps (7.7+6+b1) ...
Setting up libglx-mesa0:amd64 (17.3.3-1) ...
Setting up xserver-common (2:1.19.6-1) ...
Setting up libpangoxft-1.0-0:amd64 (1.40.14-1) ...
Setting up libpangocairo-1.0-0:amd64 (1.40.14-1) ...
Setting up libglx0:amd64 (1.0.0-2) ...
Setting up libpango1.0-0:amd64 (1.40.14-1) ...
Setting up libgl1:amd64 (1.0.0-2) ...
Setting up xvfb (2:1.19.6-1) ...
Setting up xserver-xephyr (2:1.19.6-1) ...
Setting up dh-autoreconf (16) ...
Setting up python3 (3.6.4-1) ...
Setting up python3-cffi-backend (1.9.1-2+b1) ...
Setting up python3-six (1.11.0-1) ...
Setting up python3-pkg-resources (38.4.0-1) ...
Setting up python3-coverage (4.4.2+dfsg.1-1) ...
Setting up dh-strip-nondeterminism (0.040-1) ...
Setting up python3-xcffib (0.5.1-1) ...
Setting up python3-ply (3.9-1) ...
Setting up python3-lib2to3 (3.6.4-3) ...
Setting up python3-nose2 (0.7.3-2) ...
Setting up dh-python (2.20170125) ...
Setting up python3-distutils (3.6.4-3) ...
Setting up debhelper (11.1.4) ...
Setting up python3.6 (3.6.4-3) ...
Setting up python3-py (1.4.34-3) ...
Setting up python3-pytest (3.2.5-1) ...
Setting up python3-cov-core (1.15.0-2) ...
Setting up python3-pytest-cov (2.5.1-1) ...
Setting up python3-all (3.6.4-1) ...
Setting up python3-pycparser (2.17-2) ...
Setting up python3-cffi (1.9.1-2) ...
Setting up python3-setuptools (38.4.0-1) ...
Setting up python3-cairocffi (0.7.2-2.1) ...
Setting up sbuild-build-depends-qtile-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.26-6) ...

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.9.0-2-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.30-2 dpkg-dev_1.19.0.5 g++-7_7.3.0-1 gcc-7_7.3.0-1 libc6-dev_2.26-6 libstdc++-7-dev_7.3.0-1 libstdc++6_7.3.0-1 linux-libc-dev_4.14.13-1
Package versions: adduser_3.117 apt_1.6~alpha7 autoconf_2.69-11 automake_1:1.15.1-3 autopoint_0.19.8.1-4 autotools-dev_20171216.1 base-files_10.1 base-passwd_3.5.44 bash_4.4.18-1 binutils_2.30-2 binutils-common_2.30-2 binutils-x86-64-linux-gnu_2.30-2 bsdmainutils_11.1.2 bsdutils_1:2.30.2-0.3 build-essential_12.4 bzip2_1.0.6-8.1 clang-6.0_1:6.0~+rc1-1 coreutils_8.28-1 cpp_4:7.2.0-1d1 cpp-7_7.3.0-1 dash_0.5.8-2.10 debconf_1.5.65 debfoster_2.7-2.1+b1 debhelper_11.1.4 debian-archive-keyring_2017.7 debianutils_4.8.4 dh-autoreconf_16 dh-python_2.20170125 dh-strip-nondeterminism_0.040-1 diffutils_1:3.6-1 dpkg_1.19.0.5 dpkg-dev_1.19.0.5 e2fslibs_1.43.8-2 e2fsprogs_1.43.8-2 eatmydata_105-5 fakeroot_1.22-2 fdisk_2.30.2-0.3 file_1:5.32-1 findutils_4.6.0+git+20170828-2 fontconfig_2.12.6-0.1 fontconfig-config_2.12.6-0.1 fonts-dejavu-core_2.37-1 g++_4:7.2.0-1d1 g++-7_7.3.0-1 gcc_4:7.2.0-1d1 gcc-6-base_6.4.0-12 gcc-7_7.3.0-1 gcc-7-base_7.3.0-1 gettext_0.19.8.1-4 gettext-base_0.19.8.1-4 gpgv_2.2.4-2 grep_3.1-2 groff-base_1.22.3-9 gzip_1.6-5+b1 hostname_3.20 init-system-helpers_1.51 intltool-debian_0.35.0+20060710.4 lib32gcc1_1:7.3.0-1 lib32stdc++6_7.3.0-1 libacl1_2.2.52-3+b1 libapt-pkg5.0_1.6~alpha7 libarchive-zip-perl_1.60-1 libasan4_7.3.0-1 libatomic1_7.3.0-1 libattr1_1:2.4.47-2+b2 libaudit-common_1:2.8.2-1 libaudit1_1:2.8.2-1 libbinutils_2.30-2 libblkid1_2.30.2-0.3 libbsd0_0.8.7-1 libbz2-1.0_1.0.6-8.1 libc-bin_2.26-6 libc-dev-bin_2.26-6 libc6_2.26-6 libc6-dev_2.26-6 libc6-i386_2.26-6 libcairo2_1.15.10-1 libcap-ng0_0.7.7-3.1+b1 libcc1-0_7.3.0-1 libcilkrts5_7.3.0-1 libclang-common-6.0-dev_1:6.0~+rc1-1 libclang1-6.0_1:6.0~+rc1-1 libcomerr2_1.43.8-2 libcroco3_0.6.12-2 libdatrie1_0.2.10-6 libdb5.3_5.3.28-13.1+b1 libdbus-1-3_1.12.2-1 libdebconfclient0_0.240 libdpkg-perl_1.19.0.5 libdrm-amdgpu1_2.4.89-1 libdrm-common_2.4.89-1 libdrm-intel1_2.4.89-1 libdrm-nouveau2_2.4.89-1 libdrm-radeon1_2.4.89-1 libdrm2_2.4.89-1 libeatmydata1_105-5 libedit2_3.1-20170329-1 libelf1_0.170-0.3 libepoxy0_1.4.3-1 libexpat1_2.2.5-3 libfakeroot_1.22-2 libfdisk1_2.30.2-0.3 libffi6_3.2.1-8 libfile-stripnondeterminism-perl_0.040-1 libfontconfig1_2.12.6-0.1 libfontenc1_1:1.1.3-1+b2 libfreetype6_2.8.1-1 libgc1c2_1:7.4.2-8.1 libgcc-7-dev_7.3.0-1 libgcc1_1:7.3.0-1 libgcrypt20_1.8.1-4 libgdbm3_1.8.3-14 libgdbm5_1.14.1-2 libgdk-pixbuf2.0-0_2.36.11-1 libgdk-pixbuf2.0-common_2.36.11-1 libgl1_1.0.0-2 libgl1-mesa-dri_17.3.3-1 libglapi-mesa_17.3.3-1 libglib2.0-0_2.54.3-2 libglvnd0_1.0.0-2 libglx-mesa0_17.3.3-1 libglx0_1.0.0-2 libgmp10_2:6.1.2+dfsg-2 libgnutls30_3.5.17-1 libgomp1_7.3.0-1 libgpg-error0_1.27-6 libgraphite2-3_1.3.10-8 libharfbuzz0b_1.7.2-1 libhogweed4_3.4-1 libice6_2:1.0.9-2 libicu57_57.1-8 libidn2-0_2.0.4-1.1 libisl15_0.18-1 libitm1_7.3.0-1 libjbig0_2.1-3.1+b2 libjpeg62-turbo_1:1.5.2-2+b1 libjs-jquery_3.2.1-1 libjs-jquery-hotkeys_0~20130707+git2d51e3a9+dfsg-2 libjs-jquery-isonscreen_1.2.0-1 libjs-jquery-metadata_12-1 libjs-jquery-tablesorter_1:2.29.5+dfsg1-1 libjs-jquery-throttle-debounce_1.1+dfsg.1-1 libjsoncpp1_1.7.4-3 libllvm5.0_1:5.0.1-2 libllvm6.0_1:6.0~+rc1-1 liblsan0_7.3.0-1 liblz4-1_0.0~r131-2+b1 liblzma5_5.2.2-1.3 libmagic-mgc_1:5.32-1 libmagic1_1:5.32-1 libmount1_2.30.2-0.3 libmpc3_1.1.0-1 libmpdec2_2.4.2-1 libmpfr4_3.1.6-1 libmpfr6_4.0.1~rc2-1 libmpx2_7.3.0-1 libncurses5_6.0+20171125-1 libncursesw5_6.0+20171125-1 libnettle6_3.4-1 libobjc-7-dev_7.3.0-1 libobjc4_7.3.0-1 libp11-kit0_0.23.9-2 libpam-modules_1.1.8-3.6 libpam-modules-bin_1.1.8-3.6 libpam-runtime_1.1.8-3.6 libpam0g_1.1.8-3.6 libpango-1.0-0_1.40.14-1 libpango1.0-0_1.40.14-1 libpangocairo-1.0-0_1.40.14-1 libpangoft2-1.0-0_1.40.14-1 libpangox-1.0-0_0.0.2-5+b2 libpangoxft-1.0-0_1.40.14-1 libpciaccess0_0.13.4-1+b2 libpcre3_2:8.39-9 libperl5.26_5.26.1-4+b1 libpipeline1_1.5.0-1 libpixman-1-0_0.34.0-2 libpng16-16_1.6.34-1 libpython3-stdlib_3.6.4-1 libpython3.6-minimal_3.6.4-3 libpython3.6-stdlib_3.6.4-3 libquadmath0_7.3.0-1 libreadline7_7.0-3 libseccomp2_2.3.1-2.1 libselinux1_2.7-2+b1 libsemanage-common_2.7-2 libsemanage1_2.7-2+b1 libsensors4_1:3.4.0-4 libsepol1_2.7-1 libsigsegv2_2.12-1 libsm6_2:1.2.2-1+b3 libsmartcols1_2.30.2-0.3 libsqlite3-0_3.22.0-1 libss2_1.43.8-2 libssl1.1_1.1.0g-2 libstdc++-7-dev_7.3.0-1 libstdc++6_7.3.0-1 libsystemd0_237-1 libtasn1-6_4.13-2 libthai-data_0.1.27-1 libthai0_0.1.27-1 libtiff5_4.0.9-3 libtimedate-perl_2.3000-2 libtinfo5_6.0+20171125-1 libtool_2.4.6-2 libtsan0_7.3.0-1 libubsan0_7.3.0-1 libudev1_237-1 libunistring2_0.9.8-1 libustr-1.0-1_1.0.4-6 libutempter0_1.1.6-3 libuuid1_2.30.2-0.3 libx11-6_2:1.6.4-3 libx11-data_2:1.6.4-3 libx11-xcb1_2:1.6.4-3 libxau6_1:1.0.8-1+b2 libxaw7_2:1.0.13-1+b2 libxcb-dri2-0_1.12-1 libxcb-dri3-0_1.12-1 libxcb-glx0_1.12-1 libxcb-icccm4_0.4.1-1+b1 libxcb-image0_0.4.0-1+b2 libxcb-keysyms1_0.4.0-1+b2 libxcb-present0_1.12-1 libxcb-randr0_1.12-1 libxcb-render-util0_0.3.9-1+b1 libxcb-render0_1.12-1 libxcb-shape0_1.12-1 libxcb-shm0_1.12-1 libxcb-sync1_1.12-1 libxcb-util0_0.3.8-3+b2 libxcb-xf86dri0_1.12-1 libxcb-xfixes0_1.12-1 libxcb-xkb1_1.12-1 libxcb-xv0_1.12-1 libxcb1_1.12-1 libxcursor1_1:1.1.15-1 libxdamage1_1:1.1.4-3 libxdmcp6_1:1.1.2-3 libxext6_2:1.3.3-1+b2 libxfixes3_1:5.0.3-1 libxfont2_1:2.0.1-4 libxft2_2.3.2-1+b2 libxi6_2:1.7.9-1 libxinerama1_2:1.1.3-1+b3 libxkbfile1_1:1.0.9-2 libxml2_2.9.4+dfsg1-6.1 libxmu6_2:1.1.2-2 libxmuu1_2:1.1.2-2 libxpm4_1:3.5.12-1 libxrandr2_2:1.5.1-1 libxrender1_1:0.9.10-1 libxshmfence1_1.2-1+b2 libxt6_1:1.1.5-1 libxxf86vm1_1:1.1.4-1+b2 linux-libc-dev_4.14.13-1 lm-sensors_1:3.4.0-4 login_1:4.5-1 lsb-base_9.20170808 m4_1.4.18-1 make_4.1-9.1 man-db_2.8.0-2 mawk_1.3.3-17+b3 mime-support_3.60 mount_2.30.2-0.3 multiarch-support_2.26-6 ncurses-base_6.0+20171125-1 ncurses-bin_6.0+20171125-1 passwd_1:4.5-1 patch_2.7.5-1+b2 perl_5.26.1-4+b1 perl-base_5.26.1-4+b1 perl-modules-5.26_5.26.1-4 po-debconf_1.0.20 python3_3.6.4-1 python3-all_3.6.4-1 python3-cairocffi_0.7.2-2.1 python3-cffi_1.9.1-2 python3-cffi-backend_1.9.1-2+b1 python3-cov-core_1.15.0-2 python3-coverage_4.4.2+dfsg.1-1 python3-distutils_3.6.4-3 python3-lib2to3_3.6.4-3 python3-minimal_3.6.4-1 python3-nose2_0.7.3-2 python3-pkg-resources_38.4.0-1 python3-ply_3.9-1 python3-py_1.4.34-3 python3-pycparser_2.17-2 python3-pytest_3.2.5-1 python3-pytest-cov_2.5.1-1 python3-setuptools_38.4.0-1 python3-six_1.11.0-1 python3-xcffib_0.5.1-1 python3.6_3.6.4-3 python3.6-minimal_3.6.4-3 readline-common_7.0-3 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-qtile-dummy_0.invalid.0 sed_4.4-2 sensible-utils_0.0.11 shared-mime-info_1.9-2 sysvinit-utils_2.88dsf-59.10 tar_1.29b-2 ucf_3.0036 util-linux_2.30.2-0.3 x11-apps_7.7+6+b1 x11-common_1:7.7+19 x11-xkb-utils_7.7+3+b1 x11-xserver-utils_7.7+7+b1 xbitmaps_1.1.1-2 xkb-data_2.23.1-1 xserver-common_2:1.19.6-1 xserver-xephyr_2:1.19.6-1 xterm_331-1 xvfb_2:1.19.6-1 xz-utils_5.2.2-1.3 zlib1g_1:1.2.8.dfsg-5

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Sat Jul 15 23:27:21 2017 UTC
gpgv:                using RSA key 7C610494944FC81DA6485696D2179D5B8A1ED011
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./qtile_0.10.7-2.dsc
dpkg-source: info: extracting qtile in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking qtile_0.10.7.orig.tar.gz
dpkg-source: info: unpacking qtile_0.10.7-2.debian.tar.xz
dpkg-source: info: applying remove_unneeded_deps.patch
dpkg-source: info: applying no_xterm_tests.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=en_US.UTF-8
LC_ALL=POSIX
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=unstable-amd64-sbuild-7b7a15c5-72e4-42d9-9593-1d2664c26448
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

dpkg-buildpackage: info: source package qtile
dpkg-buildpackage: info: source version 0.10.7-2
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Iain R. Learmonth <irl@debian.org>
 dpkg-source --before-build qtile-0.10.7
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean --with python3 --buildsystem=pybuild
   dh_auto_clean -O--buildsystem=pybuild
I: pybuild base:184: python3.6 setup.py clean 
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build' (and everything under it)
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.6' does not exist -- can't clean it
   dh_clean -O--buildsystem=pybuild
 debian/rules build-arch
dh build-arch --with python3 --buildsystem=pybuild
   dh_update_autotools_config -a -O--buildsystem=pybuild
   dh_auto_configure -a -O--buildsystem=pybuild
I: pybuild base:184: python3.6 setup.py config 
running config
   dh_auto_build -a -O--buildsystem=pybuild
I: pybuild base:184: /usr/bin/python3 setup.py build 
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/xkeysyms.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/xcursors.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/ffi_build.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/dgroups.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/config.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/group.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/hook.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/utils.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/command.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/window.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/confreader.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/ipc.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/notify.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/bar.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/state.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/drawer.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/pangocffi.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/configurable.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/manager.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/log_utils.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/sh.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
copying libqtile/xcbq.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/interactive
copying libqtile/interactive/iqshell_kernel.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/interactive
copying libqtile/interactive/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/interactive
copying libqtile/interactive/iqshell_install.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/interactive
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/wmii.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/stack.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/xmonad.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/slice.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/max.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/columns.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/floating.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/verticaltile.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/tree.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/tile.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/base.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/matrix.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/zoomy.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
copying libqtile/layout/ratiotile.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/layout
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
copying libqtile/scripts/qtile_top.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
copying libqtile/scripts/qtile_run.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
copying libqtile/scripts/qtile.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
copying libqtile/scripts/qshell.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
copying libqtile/scripts/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/scripts
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/prompt.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/mpriswidget.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/currentlayout.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/wallpaper.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/backlight.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/net.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/generic_poll_text.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/sep.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/khal_calendar.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/yahoo_weather.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/launchbar.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/groupbox.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/crashme.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/df.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/canto.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/graph.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/volume.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/spacer.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/bitcoin_ticker.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/notify.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/maildir.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/battery.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/mpd2widget.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/image.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/wlan.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/idlerpg.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/keyboardlayout.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/pacman.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/tasklist.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/cmus.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/currentscreen.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/sensors.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/debuginfo.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/windowtabs.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/keyboardkbdd.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/memory.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/she.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/mpris2widget.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/base.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/clipboard.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/gmail_checker.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/textbox.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/mpdwidget.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/systray.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/clock.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/windowname.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/moc.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/countdown.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/check_updates.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
copying libqtile/widget/imapwidget.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/widget
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/extention
copying libqtile/extention/window_list.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/extention
copying libqtile/extention/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/extention
copying libqtile/extention/dmenu.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/extention
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources
copying libqtile/resources/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources
copying libqtile/resources/default_config.py -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-full-charging.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-good.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-low.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-full-charged.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-good-charging.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-empty.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-missing.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-low-charging.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-full.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-caution-charging.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
copying libqtile/resources/battery-icons/battery-caution.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/battery-icons
creating /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-monadtall.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-columns.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-wmii.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-treetab.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-stack.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-unknown.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-slice.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-tile.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-ratiotile.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-zoomy.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-max.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-verticaltile.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-floating.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
copying libqtile/resources/layout-icons/layout-matrix.png -> /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/resources/layout-icons
generating cffi module '/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/_ffi_pango.py'
generating cffi module '/<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build/libqtile/_ffi_xcursors.py'
running build_scripts
creating build
creating build/scripts-3.6
copying bin/iqshell -> build/scripts-3.6
   dh_auto_test -a -O--buildsystem=pybuild
I: pybuild base:184: cd /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build; python3.6 -m pytest test
============================= test session starts ==============================
platform linux -- Python 3.6.4, pytest-3.2.5, py-1.4.34, pluggy-0.4.0 -- /usr/bin/python3.6
cachedir: ../../../.cache
rootdir: /<<PKGBUILDDIR>>, inifile: setup.cfg
plugins: cov-2.5.1
collecting ... collected 182 items

test/test_bar.py::test_completion PASSED
test/test_bar.py::test_draw[GBConfig] ERROR
test/test_bar.py::test_prompt[GBConfig] ERROR
test/test_bar.py::test_event[GBConfig] ERROR
test/test_bar.py::test_textbox[GBConfig] ERROR
test/test_bar.py::test_textbox_errors[GBConfig] ERROR
test/test_bar.py::test_groupbox_button_press[GBConfig] ERROR
test/test_bar.py::test_geometry[GeomConf] ERROR
test/test_bar.py::test_resize[GeomConf] ERROR
test/test_bar.py::test_incompatible_widget ERROR
test/test_bar.py::test_multiple_stretches ERROR
test/test_bar.py::test_basic ERROR
test/test_bar.py::test_singlespacer ERROR
test/test_bar.py::test_nospacer ERROR
test/test_command.py::test_layout_filter[CallConfig] ERROR
test/test_command.py::test_doc PASSED
test/test_command.py::test_commands PASSED
test/test_command.py::test_command PASSED
test/test_command.py::test_selectors PASSED
test/test_command.py::test_cmd_commands[ServerConfig] ERROR
test/test_command.py::test_call_unknown[ServerConfig] ERROR
test/test_command.py::test_items_qtile[ServerConfig] ERROR
test/test_command.py::test_select_qtile[ServerConfig] ERROR
test/test_command.py::test_items_group[ServerConfig] ERROR
test/test_command.py::test_select_group[ServerConfig] ERROR
test/test_command.py::test_items_screen[ServerConfig] ERROR
test/test_command.py::test_select_screen[ServerConfig] ERROR
test/test_command.py::test_items_bar[ServerConfig] ERROR
test/test_command.py::test_select_bar[ServerConfig] ERROR
test/test_command.py::test_items_layout[ServerConfig] ERROR
test/test_command.py::test_select_layout[ServerConfig] ERROR
test/test_command.py::test_items_window[ServerConfig] ERROR
test/test_command.py::test_select_window[ServerConfig] ERROR
test/test_command.py::test_items_widget[ServerConfig] ERROR
test/test_command.py::test_select_widget[ServerConfig] ERROR
test/test_config.py::test_syntaxerr PASSED
test/test_config.py::test_basic PASSED
test/test_config.py::test_falls_back PASSED
test/test_config.py::test_ezkey PASSED
test/test_config.py::test_ezclick_ezdrag PASSED
test/test_configurable.py::test_use_fallback PASSED
test/test_configurable.py::test_use_fallback_if_set_to_none PASSED
test/test_configurable.py::test_dont_use_fallback_if_set PASSED
test/test_fakescreen.py::test_basic[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_gaps[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_maximize_with_move_to_screen[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_float_first_on_second_screen[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_float_change_screens[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_float_outside_edges[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_hammer_tile[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_hammer_ratio_tile[xephyr0-FakeScreenConfig] PASSED
test/test_fakescreen.py::test_ratio_to_fourth_screen[xephyr0-FakeScreenConfig] PASSED
test/test_hook.py::test_cannot_fire_unknown_event PASSED
test/test_hook.py::test_hook_calls_subscriber PASSED
test/test_hook.py::test_subscribers_can_be_added_removed PASSED
test/test_hook.py::test_can_unsubscribe_from_hook PASSED
test/test_hook.py::test_can_subscribe_to_startup_hooks ERROR
test/test_manager.py::test_screen_dim[ManagerConfig] ERROR
test/test_manager.py::test_clone_dim[ManagerConfig-xephyr0] ERROR
test/test_manager.py::test_to_screen[ManagerConfig] ERROR
test/test_manager.py::test_togroup[ManagerConfig] ERROR
test/test_manager.py::test_resize[ManagerConfig] ERROR
test/test_manager.py::test_minimal[xephyr0] PASSED
test/test_manager.py::test_events[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_keypress[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_spawn[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_spawn_list[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_kill_window[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_kill_other[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_regression_groupswitch[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_next_layout[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_setlayout[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_adddelgroup[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_delgroup[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_nextprevgroup[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_toggle_group[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_inspect_xeyes[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_static[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_match[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_default_float[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_last_float_size[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_toggle_floating[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_move_floating[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_screens[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_rotate[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_resize_[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_focus_stays_on_layout_switch[xephyr0-ManagerConfig] PASSED
test/test_manager.py::test_xeyes[xephyr0-BareConfig] ERROR
test/test_manager.py::test_xeyes[xephyr0-ManagerConfig] ERROR
test/test_manager.py::test_xeyes[xephyr1-BareConfig] PASSED
test/test_manager.py::test_xeyes[xephyr1-ManagerConfig] PASSED
test/test_manager.py::test_map_request[xephyr0-BareConfig] ERROR
test/test_manager.py::test_map_request[xephyr0-ManagerConfig] ERROR
test/test_manager.py::test_map_request[xephyr1-BareConfig] PASSED
test/test_manager.py::test_map_request[xephyr1-ManagerConfig] PASSED
test/test_manager.py::test_unmap[xephyr0-BareConfig] ERROR
test/test_manager.py::test_unmap[xephyr0-ManagerConfig] ERROR
test/test_manager.py::test_unmap[xephyr1-BareConfig] PASSED
test/test_manager.py::test_unmap[xephyr1-ManagerConfig] PASSED
test/test_manager.py::test_setgroup[xephyr0-BareConfig] ERROR
test/test_manager.py::test_setgroup[xephyr0-ManagerConfig] ERROR
test/test_manager.py::test_setgroup[xephyr1-BareConfig] PASSED
test/test_manager.py::test_setgroup[xephyr1-ManagerConfig] PASSED
test/test_manager.py::test_unmap_noscreen[xephyr0-BareConfig] ERROR
test/test_manager.py::test_unmap_noscreen[xephyr0-ManagerConfig] ERROR
test/test_manager.py::test_unmap_noscreen[xephyr1-BareConfig] PASSED
test/test_manager.py::test_unmap_noscreen[xephyr1-ManagerConfig] PASSED
test/test_manager.py::test_init PASSED
test/test_manager.py::test_dx PASSED
test/test_manager.py::test_dwidth PASSED
test/test_manager.py::test_dy PASSED
test/test_manager.py::test_dheight PASSED
test/test_manager.py::test_minimal_[ClientNewStaticConfig] ERROR
test/test_manager.py::test_gkrellm[ClientNewStaticConfig] SKIPPED
test/test_manager.py::test_minimal__[ToGroupConfig] ERROR
test/test_manager.py::test_colorPixel[ManagerConfig] ERROR
test/test_sh.py::test_columnize[ShConfig] ERROR
test/test_sh.py::test_ls[ShConfig] ERROR
test/test_sh.py::test_findNode[ShConfig] ERROR
test/test_sh.py::test_do_cd[ShConfig] ERROR
test/test_sh.py::test_call[ShConfig] ERROR
test/test_sh.py::test_complete[ShConfig] ERROR
test/test_sh.py::test_help[ShConfig] ERROR
test/test_utils.py::test_translate_masks PASSED
test/test_utils.py::test_lrucache_works_as_decorator PASSED
test/test_utils.py::test_lrucache_caches PASSED
test/test_utils.py::test_lrucache_discards_lru_item PASSED
test/test_utils.py::test_lrucache_maintains_size PASSED
test/test_utils.py::test_rgb_from_hex_number PASSED
test/test_utils.py::test_rgb_from_hex_string PASSED
test/test_utils.py::test_rgb_from_hex_number_with_alpha PASSED
test/test_utils.py::test_rgb_from_hex_string_with_alpha PASSED
test/test_utils.py::test_rgb_from_base10_tuple PASSED
test/test_utils.py::test_rgb_from_base10_tuple_with_alpha PASSED
test/test_utils.py::test_scrub_to_utf8 PASSED
test/test_utils.py::test_shuffle PASSED
test/test_widget.py::test_textbox_color_change[WidgetTestConf] ERROR
test/test_widget.py::test_thermalsensor_regex_compatibility FAILED
test/layouts/test_floating.py::test_float_next_prev_window[FloatingConfig-xephyr0] PASSED
test/layouts/test_matrix.py::test_matrix_simple[MatrixConfig-xephyr0] PASSED
test/layouts/test_matrix.py::test_matrix_navigation[MatrixConfig-xephyr0] PASSED
test/layouts/test_matrix.py::test_matrix_add_remove_columns[MatrixConfig-xephyr0] PASSED
test/layouts/test_max.py::test_max_simple[MaxConfig-xephyr0] PASSED
test/layouts/test_max.py::test_max_updown[MaxConfig-xephyr0] PASSED
test/layouts/test_max.py::test_max_remove[MaxConfig-xephyr0] PASSED
test/layouts/test_max.py::test_closing_dialog[MaxConfig-xephyr0] PASSED
test/layouts/test_max.py::test_closing_notification[MaxConfig-xephyr0] PASSED
test/layouts/test_ratiotile.py::test_ratiotile_add_windows[RatioTileConfig-xephyr0] PASSED
test/layouts/test_ratiotile.py::test_ratiotile_add_windows_golden_ratio[RatioTileConfig-xephyr0] PASSED
test/layouts/test_ratiotile.py::test_ratiotile_basic[RatioTileConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_no_slice[SliceConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_slice_first[SliceConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_slice_last[SliceConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_slice_focus[SliceConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_all_slices[SliceConfig-xephyr0] PASSED
test/layouts/test_slice.py::test_command_propagation[SliceConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_commands[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_cmd_down[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_addremove[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_rotation[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_nextprev[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_window_removal[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_split[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_shuffle[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_client_to[StackConfig-xephyr0] PASSED
test/layouts/test_stack.py::test_stack_info[StackConfig-xephyr0] PASSED
test/layouts/test_tile.py::test_tile_updown[TileConfig-xephyr0] PASSED
test/layouts/test_tile.py::test_tile_nextprev[TileConfig-xephyr0] PASSED
test/layouts/test_tile.py::test_tile_master_and_slave[TileConfig-xephyr0] PASSED
test/layouts/test_tile.py::test_tile_remove[TileConfig-xephyr0] PASSED
test/layouts/test_verticaltile.py::test_verticaltile_simple[VerticalTileConfig-xephyr0] PASSED
test/layouts/test_verticaltile.py::test_verticaltile_maximize[VerticalTileConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_add_clients[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_margins[MonadTallMarginsConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_growmain_solosecondary[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_growmain_multiplesecondary[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_growsecondary_solosecondary[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_growsecondary_multiplesecondary[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_flip[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_shuffle[MonadTallConfig-xephyr0] PASSED
test/layouts/test_xmonad.py::test_swap[MonadTallConfig-xephyr0] PASSED
test/layouts/test_zoomy.py::test_zoomy_one[ZoomyConfig-xephyr0] PASSED

==================================== ERRORS ====================================
____________________ ERROR at setup of test_draw[GBConfig] _____________________

request = <SubRequest 'xephyr' for <Function 'test_draw[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2463062f60>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5576afdc87bd]
(EE) 1: Xephyr (0x5576afc02000+0x1ca559) [0x5576afdcc559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f80a0040000+0x12180) [0x7f80a0052180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5576afd173d1]
(EE) 4: Xephyr (0x5576afc02000+0x7cd5f) [0x5576afc7ed5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f809fcaaf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5576afc3e2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5594e87357bd]
(EE) 1: Xephyr (0x5594e856f000+0x1ca559) [0x5594e8739559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5e12774000+0x12180) [0x7f5e12786180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5594e86843d1]
(EE) 4: Xephyr (0x5594e856f000+0x7cd5f) [0x5594e85ebd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5e123def2a]
(EE) 6: Xephyr (_start+0x2a) [0x5594e85ab2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
___________________ ERROR at setup of test_prompt[GBConfig] ____________________

request = <SubRequest 'xephyr' for <Function 'test_prompt[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d6f860>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55e13f8c07bd]
(EE) 1: Xephyr (0x55e13f6fa000+0x1ca559) [0x55e13f8c4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fd4f64da000+0x12180) [0x7fd4f64ec180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55e13f80f3d1]
(EE) 4: Xephyr (0x55e13f6fa000+0x7cd5f) [0x55e13f776d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fd4f6144f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55e13f7362fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c8570aa7bd]
(EE) 1: Xephyr (0x55c856ee4000+0x1ca559) [0x55c8570ae559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f2acf9f4000+0x12180) [0x7f2acfa06180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c856ff93d1]
(EE) 4: Xephyr (0x55c856ee4000+0x7cd5f) [0x55c856f60d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f2acf65ef2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c856f202fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________________ ERROR at setup of test_event[GBConfig] ____________________

request = <SubRequest 'xephyr' for <Function 'test_event[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d66550>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a1f2ae07bd]
(EE) 1: Xephyr (0x55a1f291a000+0x1ca559) [0x55a1f2ae4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f0017fbc000+0x12180) [0x7f0017fce180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a1f2a2f3d1]
(EE) 4: Xephyr (0x55a1f291a000+0x7cd5f) [0x55a1f2996d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f0017c26f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a1f29562fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55bdd88867bd]
(EE) 1: Xephyr (0x55bdd86c0000+0x1ca559) [0x55bdd888a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fbd17c00000+0x12180) [0x7fbd17c12180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55bdd87d53d1]
(EE) 4: Xephyr (0x55bdd86c0000+0x7cd5f) [0x55bdd873cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fbd1786af2a]
(EE) 6: Xephyr (_start+0x2a) [0x55bdd86fc2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
___________________ ERROR at setup of test_textbox[GBConfig] ___________________

request = <SubRequest 'xephyr' for <Function 'test_textbox[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d4da58>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x564afcb3a7bd]
(EE) 1: Xephyr (0x564afc974000+0x1ca559) [0x564afcb3e559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe6e674e000+0x12180) [0x7fe6e6760180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x564afca893d1]
(EE) 4: Xephyr (0x564afc974000+0x7cd5f) [0x564afc9f0d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe6e63b8f2a]
(EE) 6: Xephyr (_start+0x2a) [0x564afc9b02fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x556afadf07bd]
(EE) 1: Xephyr (0x556afac2a000+0x1ca559) [0x556afadf4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f23a4944000+0x12180) [0x7f23a4956180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x556afad3f3d1]
(EE) 4: Xephyr (0x556afac2a000+0x7cd5f) [0x556afaca6d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f23a45aef2a]
(EE) 6: Xephyr (_start+0x2a) [0x556afac662fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_textbox_errors[GBConfig] ________________

request = <SubRequest 'xephyr' for <Function 'test_textbox_errors[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d9dc88>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55936641f7bd]
(EE) 1: Xephyr (0x559366259000+0x1ca559) [0x559366423559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc9211f7000+0x12180) [0x7fc921209180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55936636e3d1]
(EE) 4: Xephyr (0x559366259000+0x7cd5f) [0x5593662d5d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc920e61f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5593662952fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c71ea2b7bd]
(EE) 1: Xephyr (0x55c71e865000+0x1ca559) [0x55c71ea2f559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f17b1569000+0x12180) [0x7f17b157b180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c71e97a3d1]
(EE) 4: Xephyr (0x55c71e865000+0x7cd5f) [0x55c71e8e1d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f17b11d3f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c71e8a12fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________ ERROR at setup of test_groupbox_button_press[GBConfig] ____________

request = <SubRequest 'xephyr' for <Function 'test_groupbox_button_press[GBConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2463041f98>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55ddc9f667bd]
(EE) 1: Xephyr (0x55ddc9da0000+0x1ca559) [0x55ddc9f6a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fa80092a000+0x12180) [0x7fa80093c180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55ddc9eb53d1]
(EE) 4: Xephyr (0x55ddc9da0000+0x7cd5f) [0x55ddc9e1cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fa800594f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55ddc9ddc2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x555a917507bd]
(EE) 1: Xephyr (0x555a9158a000+0x1ca559) [0x555a91754559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f31c969b000+0x12180) [0x7f31c96ad180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x555a9169f3d1]
(EE) 4: Xephyr (0x555a9158a000+0x7cd5f) [0x555a91606d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f31c9305f2a]
(EE) 6: Xephyr (_start+0x2a) [0x555a915c62fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_geometry[GeomConf] ___________________

request = <SubRequest 'xephyr' for <Function 'test_geometry[GeomConf]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462daf470>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x558b7ccc97bd]
(EE) 1: Xephyr (0x558b7cb03000+0x1ca559) [0x558b7cccd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fb169527000+0x12180) [0x7fb169539180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x558b7cc183d1]
(EE) 4: Xephyr (0x558b7cb03000+0x7cd5f) [0x558b7cb7fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fb169191f2a]
(EE) 6: Xephyr (_start+0x2a) [0x558b7cb3f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563b6ad967bd]
(EE) 1: Xephyr (0x563b6abd0000+0x1ca559) [0x563b6ad9a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f1049e60000+0x12180) [0x7f1049e72180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563b6ace53d1]
(EE) 4: Xephyr (0x563b6abd0000+0x7cd5f) [0x563b6ac4cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f1049acaf2a]
(EE) 6: Xephyr (_start+0x2a) [0x563b6ac0c2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
___________________ ERROR at setup of test_resize[GeomConf] ____________________

request = <SubRequest 'xephyr' for <Function 'test_resize[GeomConf]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462dc8828>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5627a963f7bd]
(EE) 1: Xephyr (0x5627a9479000+0x1ca559) [0x5627a9643559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f4edafe9000+0x12180) [0x7f4edaffb180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5627a958e3d1]
(EE) 4: Xephyr (0x5627a9479000+0x7cd5f) [0x5627a94f5d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f4edac53f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5627a94b52fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56552b3d57bd]
(EE) 1: Xephyr (0x56552b20f000+0x1ca559) [0x56552b3d9559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f6323ebb000+0x12180) [0x7f6323ecd180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56552b3243d1]
(EE) 4: Xephyr (0x56552b20f000+0x7cd5f) [0x56552b28bd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f6323b25f2a]
(EE) 6: Xephyr (_start+0x2a) [0x56552b24b2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_incompatible_widget __________________

request = <SubRequest 'xephyr' for <Function 'test_incompatible_widget'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462da90f0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5623835d97bd]
(EE) 1: Xephyr (0x562383413000+0x1ca559) [0x5623835dd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f686b195000+0x12180) [0x7f686b1a7180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5623835283d1]
(EE) 4: Xephyr (0x562383413000+0x7cd5f) [0x56238348fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f686adfff2a]
(EE) 6: Xephyr (_start+0x2a) [0x56238344f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b42c6577bd]
(EE) 1: Xephyr (0x55b42c491000+0x1ca559) [0x55b42c65b559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f7c23063000+0x12180) [0x7f7c23075180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b42c5a63d1]
(EE) 4: Xephyr (0x55b42c491000+0x7cd5f) [0x55b42c50dd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f7c22ccdf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b42c4cd2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_multiple_stretches ___________________

request = <SubRequest 'xephyr' for <Function 'test_multiple_stretches'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c77ba8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x557dd2ad67bd]
(EE) 1: Xephyr (0x557dd2910000+0x1ca559) [0x557dd2ada559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f632743d000+0x12180) [0x7f632744f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x557dd2a253d1]
(EE) 4: Xephyr (0x557dd2910000+0x7cd5f) [0x557dd298cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f63270a7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x557dd294c2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b65ae317bd]
(EE) 1: Xephyr (0x55b65ac6b000+0x1ca559) [0x55b65ae35559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f4da2c41000+0x12180) [0x7f4da2c53180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b65ad803d1]
(EE) 4: Xephyr (0x55b65ac6b000+0x7cd5f) [0x55b65ace7d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f4da28abf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b65aca72fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_________________________ ERROR at setup of test_basic _________________________

request = <SubRequest 'xephyr' for <Function 'test_basic'>>, xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d83cc0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55da257fe7bd]
(EE) 1: Xephyr (0x55da25638000+0x1ca559) [0x55da25802559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fceffb8d000+0x12180) [0x7fceffb9f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55da2574d3d1]
(EE) 4: Xephyr (0x55da25638000+0x7cd5f) [0x55da256b4d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fceff7f7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55da256742fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x560581a967bd]
(EE) 1: Xephyr (0x5605818d0000+0x1ca559) [0x560581a9a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7efbf8f53000+0x12180) [0x7efbf8f65180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5605819e53d1]
(EE) 4: Xephyr (0x5605818d0000+0x7cd5f) [0x56058194cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7efbf8bbdf2a]
(EE) 6: Xephyr (_start+0x2a) [0x56058190c2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_____________________ ERROR at setup of test_singlespacer ______________________

request = <SubRequest 'xephyr' for <Function 'test_singlespacer'>>, xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d6f4e0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c8f34127bd]
(EE) 1: Xephyr (0x55c8f324c000+0x1ca559) [0x55c8f3416559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fdfb77c8000+0x12180) [0x7fdfb77da180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c8f33613d1]
(EE) 4: Xephyr (0x55c8f324c000+0x7cd5f) [0x55c8f32c8d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fdfb7432f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c8f32882fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a79ec377bd]
(EE) 1: Xephyr (0x55a79ea71000+0x1ca559) [0x55a79ec3b559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f863bcaa000+0x12180) [0x7f863bcbc180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a79eb863d1]
(EE) 4: Xephyr (0x55a79ea71000+0x7cd5f) [0x55a79eaedd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f863b914f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a79eaad2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________________ ERROR at setup of test_nospacer ________________________

request = <SubRequest 'xephyr' for <Function 'test_nospacer'>>, xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462e0ada0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x564b6acb17bd]
(EE) 1: Xephyr (0x564b6aaeb000+0x1ca559) [0x564b6acb5559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fea843ca000+0x12180) [0x7fea843dc180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x564b6ac003d1]
(EE) 4: Xephyr (0x564b6aaeb000+0x7cd5f) [0x564b6ab67d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fea84034f2a]
(EE) 6: Xephyr (_start+0x2a) [0x564b6ab272fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5599dfedf7bd]
(EE) 1: Xephyr (0x5599dfd19000+0x1ca559) [0x5599dfee3559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f0167e52000+0x12180) [0x7f0167e64180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5599dfe2e3d1]
(EE) 4: Xephyr (0x5599dfd19000+0x7cd5f) [0x5599dfd95d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f0167abcf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5599dfd552fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_layout_filter[CallConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_layout_filter[CallConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d7c518>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55882065a7bd]
(EE) 1: Xephyr (0x558820494000+0x1ca559) [0x55882065e559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5a03a63000+0x12180) [0x7f5a03a75180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5588205a93d1]
(EE) 4: Xephyr (0x558820494000+0x7cd5f) [0x558820510d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5a036cdf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5588204d02fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563f2fbe07bd]
(EE) 1: Xephyr (0x563f2fa1a000+0x1ca559) [0x563f2fbe4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fd29dee1000+0x12180) [0x7fd29def3180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563f2fb2f3d1]
(EE) 4: Xephyr (0x563f2fa1a000+0x7cd5f) [0x563f2fa96d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fd29db4bf2a]
(EE) 6: Xephyr (_start+0x2a) [0x563f2fa562fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_cmd_commands[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_cmd_commands[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462e057b8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563a6a48c7bd]
(EE) 1: Xephyr (0x563a6a2c6000+0x1ca559) [0x563a6a490559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f18681cb000+0x12180) [0x7f18681dd180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563a6a3db3d1]
(EE) 4: Xephyr (0x563a6a2c6000+0x7cd5f) [0x563a6a342d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f1867e35f2a]
(EE) 6: Xephyr (_start+0x2a) [0x563a6a3022fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55cfccbe67bd]
(EE) 1: Xephyr (0x55cfcca20000+0x1ca559) [0x55cfccbea559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe0b3547000+0x12180) [0x7fe0b3559180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55cfccb353d1]
(EE) 4: Xephyr (0x55cfcca20000+0x7cd5f) [0x55cfcca9cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe0b31b1f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55cfcca5c2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_call_unknown[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_call_unknown[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d9f160>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5641fbe907bd]
(EE) 1: Xephyr (0x5641fbcca000+0x1ca559) [0x5641fbe94559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f0400551000+0x12180) [0x7f0400563180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5641fbddf3d1]
(EE) 4: Xephyr (0x5641fbcca000+0x7cd5f) [0x5641fbd46d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f04001bbf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5641fbd062fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5636bffd97bd]
(EE) 1: Xephyr (0x5636bfe13000+0x1ca559) [0x5636bffdd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ffa791e6000+0x12180) [0x7ffa791f8180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5636bff283d1]
(EE) 4: Xephyr (0x5636bfe13000+0x7cd5f) [0x5636bfe8fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ffa78e50f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5636bfe4f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_items_qtile[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_qtile[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462bd5f98>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x556872f047bd]
(EE) 1: Xephyr (0x556872d3e000+0x1ca559) [0x556872f08559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f980aeb2000+0x12180) [0x7f980aec4180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x556872e533d1]
(EE) 4: Xephyr (0x556872d3e000+0x7cd5f) [0x556872dbad5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f980ab1cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x556872d7a2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5588129cb7bd]
(EE) 1: Xephyr (0x558812805000+0x1ca559) [0x5588129cf559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f0a7d455000+0x12180) [0x7f0a7d467180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55881291a3d1]
(EE) 4: Xephyr (0x558812805000+0x7cd5f) [0x558812881d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f0a7d0bff2a]
(EE) 6: Xephyr (_start+0x2a) [0x5588128412fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_qtile[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_select_qtile[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462badbe0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5601f618c7bd]
(EE) 1: Xephyr (0x5601f5fc6000+0x1ca559) [0x5601f6190559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe4d500c000+0x12180) [0x7fe4d501e180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5601f60db3d1]
(EE) 4: Xephyr (0x5601f5fc6000+0x7cd5f) [0x5601f6042d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe4d4c76f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5601f60022fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x558ae0ef37bd]
(EE) 1: Xephyr (0x558ae0d2d000+0x1ca559) [0x558ae0ef7559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f2902f6d000+0x12180) [0x7f2902f7f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x558ae0e423d1]
(EE) 4: Xephyr (0x558ae0d2d000+0x7cd5f) [0x558ae0da9d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f2902bd7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x558ae0d692fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_items_group[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_group[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d1d358>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55ed3a23b7bd]
(EE) 1: Xephyr (0x55ed3a075000+0x1ca559) [0x55ed3a23f559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fab5dd3e000+0x12180) [0x7fab5dd50180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55ed3a18a3d1]
(EE) 4: Xephyr (0x55ed3a075000+0x7cd5f) [0x55ed3a0f1d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fab5d9a8f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55ed3a0b12fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x560d6aaf17bd]
(EE) 1: Xephyr (0x560d6a92b000+0x1ca559) [0x560d6aaf5559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f1ab653e000+0x12180) [0x7f1ab6550180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x560d6aa403d1]
(EE) 4: Xephyr (0x560d6a92b000+0x7cd5f) [0x560d6a9a7d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f1ab61a8f2a]
(EE) 6: Xephyr (_start+0x2a) [0x560d6a9672fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_group[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_select_group[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c6b1d0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x560474f657bd]
(EE) 1: Xephyr (0x560474d9f000+0x1ca559) [0x560474f69559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fb3af12e000+0x12180) [0x7fb3af140180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x560474eb43d1]
(EE) 4: Xephyr (0x560474d9f000+0x7cd5f) [0x560474e1bd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fb3aed98f2a]
(EE) 6: Xephyr (_start+0x2a) [0x560474ddb2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55d105c347bd]
(EE) 1: Xephyr (0x55d105a6e000+0x1ca559) [0x55d105c38559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fa280772000+0x12180) [0x7fa280784180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55d105b833d1]
(EE) 4: Xephyr (0x55d105a6e000+0x7cd5f) [0x55d105aead5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fa2803dcf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55d105aaa2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_items_screen[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_screen[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c7b940>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56251e24f7bd]
(EE) 1: Xephyr (0x56251e089000+0x1ca559) [0x56251e253559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f654a997000+0x12180) [0x7f654a9a9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56251e19e3d1]
(EE) 4: Xephyr (0x56251e089000+0x7cd5f) [0x56251e105d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f654a601f2a]
(EE) 6: Xephyr (_start+0x2a) [0x56251e0c52fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5647c1e577bd]
(EE) 1: Xephyr (0x5647c1c91000+0x1ca559) [0x5647c1e5b559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f7cb1f09000+0x12180) [0x7f7cb1f1b180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5647c1da63d1]
(EE) 4: Xephyr (0x5647c1c91000+0x7cd5f) [0x5647c1d0dd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f7cb1b73f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5647c1ccd2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_screen[ServerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_select_screen[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462e0de48>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55bb56ffa7bd]
(EE) 1: Xephyr (0x55bb56e34000+0x1ca559) [0x55bb56ffe559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fdbc24be000+0x12180) [0x7fdbc24d0180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55bb56f493d1]
(EE) 4: Xephyr (0x55bb56e34000+0x7cd5f) [0x55bb56eb0d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fdbc2128f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55bb56e702fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a9cb5027bd]
(EE) 1: Xephyr (0x55a9cb33c000+0x1ca559) [0x55a9cb506559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f33c8335000+0x12180) [0x7f33c8347180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a9cb4513d1]
(EE) 4: Xephyr (0x55a9cb33c000+0x7cd5f) [0x55a9cb3b8d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f33c7f9ff2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a9cb3782fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
________________ ERROR at setup of test_items_bar[ServerConfig] ________________

request = <SubRequest 'xephyr' for <Function 'test_items_bar[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462ac0470>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a3757b77bd]
(EE) 1: Xephyr (0x55a3755f1000+0x1ca559) [0x55a3757bb559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5353cdb000+0x12180) [0x7f5353ced180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a3757063d1]
(EE) 4: Xephyr (0x55a3755f1000+0x7cd5f) [0x55a37566dd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5353945f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a37562d2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x562e31faf7bd]
(EE) 1: Xephyr (0x562e31de9000+0x1ca559) [0x562e31fb3559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc9edfa5000+0x12180) [0x7fc9edfb7180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x562e31efe3d1]
(EE) 4: Xephyr (0x562e31de9000+0x7cd5f) [0x562e31e65d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc9edc0ff2a]
(EE) 6: Xephyr (_start+0x2a) [0x562e31e252fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_select_bar[ServerConfig] ________________

request = <SubRequest 'xephyr' for <Function 'test_select_bar[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462e03550>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x557d3553b7bd]
(EE) 1: Xephyr (0x557d35375000+0x1ca559) [0x557d3553f559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5b2d4fe000+0x12180) [0x7f5b2d510180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x557d3548a3d1]
(EE) 4: Xephyr (0x557d35375000+0x7cd5f) [0x557d353f1d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5b2d168f2a]
(EE) 6: Xephyr (_start+0x2a) [0x557d353b12fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55751471f7bd]
(EE) 1: Xephyr (0x557514559000+0x1ca559) [0x557514723559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe59e3e1000+0x12180) [0x7fe59e3f3180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55751466e3d1]
(EE) 4: Xephyr (0x557514559000+0x7cd5f) [0x5575145d5d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe59e04bf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5575145952fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_items_layout[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_layout[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d18a58>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x557591e0d7bd]
(EE) 1: Xephyr (0x557591c47000+0x1ca559) [0x557591e11559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7faf1eaa6000+0x12180) [0x7faf1eab8180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x557591d5c3d1]
(EE) 4: Xephyr (0x557591c47000+0x7cd5f) [0x557591cc3d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7faf1e710f2a]
(EE) 6: Xephyr (_start+0x2a) [0x557591c832fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55cad7ba17bd]
(EE) 1: Xephyr (0x55cad79db000+0x1ca559) [0x55cad7ba5559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f7bebe53000+0x12180) [0x7f7bebe65180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55cad7af03d1]
(EE) 4: Xephyr (0x55cad79db000+0x7cd5f) [0x55cad7a57d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f7bebabdf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55cad7a172fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_layout[ServerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_select_layout[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d83b70>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x564ad1d017bd]
(EE) 1: Xephyr (0x564ad1b3b000+0x1ca559) [0x564ad1d05559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f4a7f524000+0x12180) [0x7f4a7f536180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x564ad1c503d1]
(EE) 4: Xephyr (0x564ad1b3b000+0x7cd5f) [0x564ad1bb7d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f4a7f18ef2a]
(EE) 6: Xephyr (_start+0x2a) [0x564ad1b772fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55eff73587bd]
(EE) 1: Xephyr (0x55eff7192000+0x1ca559) [0x55eff735c559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fa02bc12000+0x12180) [0x7fa02bc24180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55eff72a73d1]
(EE) 4: Xephyr (0x55eff7192000+0x7cd5f) [0x55eff720ed5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fa02b87cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55eff71ce2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_items_window[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_window[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462ca05f8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55904a4347bd]
(EE) 1: Xephyr (0x55904a26e000+0x1ca559) [0x55904a438559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f8a72cb9000+0x12180) [0x7f8a72ccb180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55904a3833d1]
(EE) 4: Xephyr (0x55904a26e000+0x7cd5f) [0x55904a2ead5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f8a72923f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55904a2aa2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b80a0af7bd]
(EE) 1: Xephyr (0x55b809ee9000+0x1ca559) [0x55b80a0b3559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f3a84cc7000+0x12180) [0x7f3a84cd9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b809ffe3d1]
(EE) 4: Xephyr (0x55b809ee9000+0x7cd5f) [0x55b809f65d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f3a84931f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b809f252fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_window[ServerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_select_window[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c69c50>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x561898fd07bd]
(EE) 1: Xephyr (0x561898e0a000+0x1ca559) [0x561898fd4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fcebe1f0000+0x12180) [0x7fcebe202180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x561898f1f3d1]
(EE) 4: Xephyr (0x561898e0a000+0x7cd5f) [0x561898e86d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fcebde5af2a]
(EE) 6: Xephyr (_start+0x2a) [0x561898e462fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55dc880427bd]
(EE) 1: Xephyr (0x55dc87e7c000+0x1ca559) [0x55dc88046559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fed2499c000+0x12180) [0x7fed249ae180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55dc87f913d1]
(EE) 4: Xephyr (0x55dc87e7c000+0x7cd5f) [0x55dc87ef8d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fed24606f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55dc87eb82fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_items_widget[ServerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_items_widget[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d13da0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55f06d8f07bd]
(EE) 1: Xephyr (0x55f06d72a000+0x1ca559) [0x55f06d8f4559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f66e67c3000+0x12180) [0x7f66e67d5180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55f06d83f3d1]
(EE) 4: Xephyr (0x55f06d72a000+0x7cd5f) [0x55f06d7a6d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f66e642df2a]
(EE) 6: Xephyr (_start+0x2a) [0x55f06d7662fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x559dfd8f97bd]
(EE) 1: Xephyr (0x559dfd733000+0x1ca559) [0x559dfd8fd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ffb4e63d000+0x12180) [0x7ffb4e64f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x559dfd8483d1]
(EE) 4: Xephyr (0x559dfd733000+0x7cd5f) [0x559dfd7afd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ffb4e2a7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x559dfd76f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
______________ ERROR at setup of test_select_widget[ServerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_select_widget[ServerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d1d160>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55d078e407bd]
(EE) 1: Xephyr (0x55d078c7a000+0x1ca559) [0x55d078e44559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f53d8ac7000+0x12180) [0x7f53d8ad9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55d078d8f3d1]
(EE) 4: Xephyr (0x55d078c7a000+0x7cd5f) [0x55d078cf6d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f53d8731f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55d078cb62fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563dec7757bd]
(EE) 1: Xephyr (0x563dec5af000+0x1ca559) [0x563dec779559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc922d62000+0x12180) [0x7fc922d74180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563dec6c43d1]
(EE) 4: Xephyr (0x563dec5af000+0x7cd5f) [0x563dec62bd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc9229ccf2a]
(EE) 6: Xephyr (_start+0x2a) [0x563dec5eb2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________ ERROR at setup of test_can_subscribe_to_startup_hooks _____________

request = <SubRequest 'xephyr' for <Function 'test_can_subscribe_to_startup_hooks'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462b2f908>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55bbb8f467bd]
(EE) 1: Xephyr (0x55bbb8d80000+0x1ca559) [0x55bbb8f4a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f820f753000+0x12180) [0x7f820f765180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55bbb8e953d1]
(EE) 4: Xephyr (0x55bbb8d80000+0x7cd5f) [0x55bbb8dfcd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f820f3bdf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55bbb8dbc2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5650754867bd]
(EE) 1: Xephyr (0x5650752c0000+0x1ca559) [0x56507548a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f592523e000+0x12180) [0x7f5925250180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5650753d53d1]
(EE) 4: Xephyr (0x5650752c0000+0x7cd5f) [0x56507533cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5924ea8f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5650752fc2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_screen_dim[ManagerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_screen_dim[ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462e0f208>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55f2f2abf7bd]
(EE) 1: Xephyr (0x55f2f28f9000+0x1ca559) [0x55f2f2ac3559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f83bc274000+0x12180) [0x7f83bc286180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55f2f2a0e3d1]
(EE) 4: Xephyr (0x55f2f28f9000+0x7cd5f) [0x55f2f2975d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f83bbedef2a]
(EE) 6: Xephyr (_start+0x2a) [0x55f2f29352fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x564bc28ac7bd]
(EE) 1: Xephyr (0x564bc26e6000+0x1ca559) [0x564bc28b0559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc58ff52000+0x12180) [0x7fc58ff64180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x564bc27fb3d1]
(EE) 4: Xephyr (0x564bc26e6000+0x7cd5f) [0x564bc2762d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc58fbbcf2a]
(EE) 6: Xephyr (_start+0x2a) [0x564bc27222fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
___________ ERROR at setup of test_clone_dim[ManagerConfig-xephyr0] ____________

request = <SubRequest 'xephyr' for <Function 'test_clone_dim[ManagerConfig-xephyr0]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d7cd68>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55d7115897bd]
(EE) 1: Xephyr (0x55d7113c3000+0x1ca559) [0x55d71158d559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fb44f5b4000+0x12180) [0x7fb44f5c6180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55d7114d83d1]
(EE) 4: Xephyr (0x55d7113c3000+0x7cd5f) [0x55d71143fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fb44f21ef2a]
(EE) 6: Xephyr (_start+0x2a) [0x55d7113ff2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55cd5f0a97bd]
(EE) 1: Xephyr (0x55cd5eee3000+0x1ca559) [0x55cd5f0ad559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fb11492f000+0x12180) [0x7fb114941180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55cd5eff83d1]
(EE) 4: Xephyr (0x55cd5eee3000+0x7cd5f) [0x55cd5ef5fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fb114599f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55cd5ef1f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_to_screen[ManagerConfig] ________________

request = <SubRequest 'xephyr' for <Function 'test_to_screen[ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462ca0c18>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55dbafeec7bd]
(EE) 1: Xephyr (0x55dbafd26000+0x1ca559) [0x55dbafef0559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fa731c8d000+0x12180) [0x7fa731c9f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55dbafe3b3d1]
(EE) 4: Xephyr (0x55dbafd26000+0x7cd5f) [0x55dbafda2d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fa7318f7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55dbafd622fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x561c83be27bd]
(EE) 1: Xephyr (0x561c83a1c000+0x1ca559) [0x561c83be6559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fcdc6172000+0x12180) [0x7fcdc6184180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x561c83b313d1]
(EE) 4: Xephyr (0x561c83a1c000+0x7cd5f) [0x561c83a98d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fcdc5ddcf2a]
(EE) 6: Xephyr (_start+0x2a) [0x561c83a582fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
________________ ERROR at setup of test_togroup[ManagerConfig] _________________

request = <SubRequest 'xephyr' for <Function 'test_togroup[ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462cbde80>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55fa03b687bd]
(EE) 1: Xephyr (0x55fa039a2000+0x1ca559) [0x55fa03b6c559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fac3e7db000+0x12180) [0x7fac3e7ed180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55fa03ab73d1]
(EE) 4: Xephyr (0x55fa039a2000+0x7cd5f) [0x55fa03a1ed5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fac3e445f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55fa039de2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x556ae826e7bd]
(EE) 1: Xephyr (0x556ae80a8000+0x1ca559) [0x556ae8272559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f88d09c1000+0x12180) [0x7f88d09d3180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x556ae81bd3d1]
(EE) 4: Xephyr (0x556ae80a8000+0x7cd5f) [0x556ae8124d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f88d062bf2a]
(EE) 6: Xephyr (_start+0x2a) [0x556ae80e42fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_________________ ERROR at setup of test_resize[ManagerConfig] _________________

request = <SubRequest 'xephyr' for <Function 'test_resize[ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462bade10>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x561a7ac2c7bd]
(EE) 1: Xephyr (0x561a7aa66000+0x1ca559) [0x561a7ac30559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f5eb34d6000+0x12180) [0x7f5eb34e8180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x561a7ab7b3d1]
(EE) 4: Xephyr (0x561a7aa66000+0x7cd5f) [0x561a7aae2d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f5eb3140f2a]
(EE) 6: Xephyr (_start+0x2a) [0x561a7aaa22fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55aa7c9527bd]
(EE) 1: Xephyr (0x55aa7c78c000+0x1ca559) [0x55aa7c956559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f278a7c4000+0x12180) [0x7f278a7d6180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55aa7c8a13d1]
(EE) 4: Xephyr (0x55aa7c78c000+0x7cd5f) [0x55aa7c808d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f278a42ef2a]
(EE) 6: Xephyr (_start+0x2a) [0x55aa7c7c82fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_xeyes[xephyr0-BareConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_xeyes[xephyr0-BareConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c2fa20>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55d099af47bd]
(EE) 1: Xephyr (0x55d09992e000+0x1ca559) [0x55d099af8559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f47d65e6000+0x12180) [0x7f47d65f8180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55d099a433d1]
(EE) 4: Xephyr (0x55d09992e000+0x7cd5f) [0x55d0999aad5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f47d6250f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55d09996a2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c7813837bd]
(EE) 1: Xephyr (0x55c7811bd000+0x1ca559) [0x55c781387559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f3a7e6b2000+0x12180) [0x7f3a7e6c4180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c7812d23d1]
(EE) 4: Xephyr (0x55c7811bd000+0x7cd5f) [0x55c781239d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f3a7e31cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c7811f92fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_____________ ERROR at setup of test_xeyes[xephyr0-ManagerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_xeyes[xephyr0-ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462a831d0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a6856e97bd]
(EE) 1: Xephyr (0x55a685523000+0x1ca559) [0x55a6856ed559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f246e06d000+0x12180) [0x7f246e07f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a6856383d1]
(EE) 4: Xephyr (0x55a685523000+0x7cd5f) [0x55a68559fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f246dcd7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a68555f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a39fa437bd]
(EE) 1: Xephyr (0x55a39f87d000+0x1ca559) [0x55a39fa47559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc6b94c3000+0x12180) [0x7fc6b94d5180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a39f9923d1]
(EE) 4: Xephyr (0x55a39f87d000+0x7cd5f) [0x55a39f8f9d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc6b912df2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a39f8b92fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________ ERROR at setup of test_map_request[xephyr0-BareConfig] ____________

request = <SubRequest 'xephyr' for <Function 'test_map_request[xephyr0-BareConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c04518>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55cc7ac497bd]
(EE) 1: Xephyr (0x55cc7aa83000+0x1ca559) [0x55cc7ac4d559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f6012056000+0x12180) [0x7f6012068180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55cc7ab983d1]
(EE) 4: Xephyr (0x55cc7aa83000+0x7cd5f) [0x55cc7aaffd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f6011cc0f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55cc7aabf2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55d93fc277bd]
(EE) 1: Xephyr (0x55d93fa61000+0x1ca559) [0x55d93fc2b559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe531146000+0x12180) [0x7fe531158180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55d93fb763d1]
(EE) 4: Xephyr (0x55d93fa61000+0x7cd5f) [0x55d93faddd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe530db0f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55d93fa9d2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________ ERROR at setup of test_map_request[xephyr0-ManagerConfig] ___________

request = <SubRequest 'xephyr' for <Function 'test_map_request[xephyr0-ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d1dbe0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563ca72d87bd]
(EE) 1: Xephyr (0x563ca7112000+0x1ca559) [0x563ca72dc559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f597eb90000+0x12180) [0x7f597eba2180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563ca72273d1]
(EE) 4: Xephyr (0x563ca7112000+0x7cd5f) [0x563ca718ed5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f597e7faf2a]
(EE) 6: Xephyr (_start+0x2a) [0x563ca714e2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x563c9aa0b7bd]
(EE) 1: Xephyr (0x563c9a845000+0x1ca559) [0x563c9aa0f559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7faf23d91000+0x12180) [0x7faf23da3180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x563c9a95a3d1]
(EE) 4: Xephyr (0x563c9a845000+0x7cd5f) [0x563c9a8c1d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7faf239fbf2a]
(EE) 6: Xephyr (_start+0x2a) [0x563c9a8812fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_unmap[xephyr0-BareConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_unmap[xephyr0-BareConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d07860>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x562a167c37bd]
(EE) 1: Xephyr (0x562a165fd000+0x1ca559) [0x562a167c7559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe380ad2000+0x12180) [0x7fe380ae4180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x562a167123d1]
(EE) 4: Xephyr (0x562a165fd000+0x7cd5f) [0x562a16679d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe38073cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x562a166392fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56409ed5d7bd]
(EE) 1: Xephyr (0x56409eb97000+0x1ca559) [0x56409ed61559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f9997ca7000+0x12180) [0x7f9997cb9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56409ecac3d1]
(EE) 4: Xephyr (0x56409eb97000+0x7cd5f) [0x56409ec13d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f9997911f2a]
(EE) 6: Xephyr (_start+0x2a) [0x56409ebd32fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_____________ ERROR at setup of test_unmap[xephyr0-ManagerConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_unmap[xephyr0-ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462dfb198>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56000cac57bd]
(EE) 1: Xephyr (0x56000c8ff000+0x1ca559) [0x56000cac9559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f1628a0d000+0x12180) [0x7f1628a1f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56000ca143d1]
(EE) 4: Xephyr (0x56000c8ff000+0x7cd5f) [0x56000c97bd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f1628677f2a]
(EE) 6: Xephyr (_start+0x2a) [0x56000c93b2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55780b6037bd]
(EE) 1: Xephyr (0x55780b43d000+0x1ca559) [0x55780b607559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc899ecd000+0x12180) [0x7fc899edf180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55780b5523d1]
(EE) 4: Xephyr (0x55780b43d000+0x7cd5f) [0x55780b4b9d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc899b37f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55780b4792fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_____________ ERROR at setup of test_setgroup[xephyr0-BareConfig] ______________

request = <SubRequest 'xephyr' for <Function 'test_setgroup[xephyr0-BareConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f24621b9d68>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5624200737bd]
(EE) 1: Xephyr (0x56241fead000+0x1ca559) [0x562420077559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f6f57885000+0x12180) [0x7f6f57897180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56241ffc23d1]
(EE) 4: Xephyr (0x56241fead000+0x7cd5f) [0x56241ff29d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f6f574eff2a]
(EE) 6: Xephyr (_start+0x2a) [0x56241fee92fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55cd85f497bd]
(EE) 1: Xephyr (0x55cd85d83000+0x1ca559) [0x55cd85f4d559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f8e576a7000+0x12180) [0x7f8e576b9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55cd85e983d1]
(EE) 4: Xephyr (0x55cd85d83000+0x7cd5f) [0x55cd85dffd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f8e57311f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55cd85dbf2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________ ERROR at setup of test_setgroup[xephyr0-ManagerConfig] ____________

request = <SubRequest 'xephyr' for <Function 'test_setgroup[xephyr0-ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c4cbe0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x556c33d827bd]
(EE) 1: Xephyr (0x556c33bbc000+0x1ca559) [0x556c33d86559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ff7fc075000+0x12180) [0x7ff7fc087180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x556c33cd13d1]
(EE) 4: Xephyr (0x556c33bbc000+0x7cd5f) [0x556c33c38d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ff7fbcdff2a]
(EE) 6: Xephyr (_start+0x2a) [0x556c33bf82fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55fb60fc57bd]
(EE) 1: Xephyr (0x55fb60dff000+0x1ca559) [0x55fb60fc9559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fa0b2f8c000+0x12180) [0x7fa0b2f9e180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55fb60f143d1]
(EE) 4: Xephyr (0x55fb60dff000+0x7cd5f) [0x55fb60e7bd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fa0b2bf6f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55fb60e3b2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________ ERROR at setup of test_unmap_noscreen[xephyr0-BareConfig] ___________

request = <SubRequest 'xephyr' for <Function 'test_unmap_noscreen[xephyr0-BareConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f24621ab2e8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x558c0e20e7bd]
(EE) 1: Xephyr (0x558c0e048000+0x1ca559) [0x558c0e212559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f2b40331000+0x12180) [0x7f2b40343180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x558c0e15d3d1]
(EE) 4: Xephyr (0x558c0e048000+0x7cd5f) [0x558c0e0c4d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f2b3ff9bf2a]
(EE) 6: Xephyr (_start+0x2a) [0x558c0e0842fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55fe8170d7bd]
(EE) 1: Xephyr (0x55fe81547000+0x1ca559) [0x55fe81711559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f671dac0000+0x12180) [0x7f671dad2180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55fe8165c3d1]
(EE) 4: Xephyr (0x55fe81547000+0x7cd5f) [0x55fe815c3d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f671d72af2a]
(EE) 6: Xephyr (_start+0x2a) [0x55fe815832fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_________ ERROR at setup of test_unmap_noscreen[xephyr0-ManagerConfig] _________

request = <SubRequest 'xephyr' for <Function 'test_unmap_noscreen[xephyr0-ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462d83358>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55810b9597bd]
(EE) 1: Xephyr (0x55810b793000+0x1ca559) [0x55810b95d559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f75067bb000+0x12180) [0x7f75067cd180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55810b8a83d1]
(EE) 4: Xephyr (0x55810b793000+0x7cd5f) [0x55810b80fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f7506425f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55810b7cf2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5556872837bd]
(EE) 1: Xephyr (0x5556870bd000+0x1ca559) [0x555687287559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe51a58f000+0x12180) [0x7fe51a5a1180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5556871d23d1]
(EE) 4: Xephyr (0x5556870bd000+0x7cd5f) [0x555687139d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe51a1f9f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5556870f92fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________ ERROR at setup of test_minimal_[ClientNewStaticConfig] ____________

request = <SubRequest 'xephyr' for <Function 'test_minimal_[ClientNewStaticConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c58d68>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56096bb9d7bd]
(EE) 1: Xephyr (0x56096b9d7000+0x1ca559) [0x56096bba1559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f0ca7a05000+0x12180) [0x7f0ca7a17180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56096baec3d1]
(EE) 4: Xephyr (0x56096b9d7000+0x7cd5f) [0x56096ba53d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f0ca766ff2a]
(EE) 6: Xephyr (_start+0x2a) [0x56096ba132fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5581333d17bd]
(EE) 1: Xephyr (0x55813320b000+0x1ca559) [0x5581333d5559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fbb821d7000+0x12180) [0x7fbb821e9180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5581333203d1]
(EE) 4: Xephyr (0x55813320b000+0x7cd5f) [0x558133287d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fbb81e41f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5581332472fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_minimal__[ToGroupConfig] ________________

request = <SubRequest 'xephyr' for <Function 'test_minimal__[ToGroupConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c33f98>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55fe8e2047bd]
(EE) 1: Xephyr (0x55fe8e03e000+0x1ca559) [0x55fe8e208559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fd2c345e000+0x12180) [0x7fd2c3470180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55fe8e1533d1]
(EE) 4: Xephyr (0x55fe8e03e000+0x7cd5f) [0x55fe8e0bad5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fd2c30c8f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55fe8e07a2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c4ed6747bd]
(EE) 1: Xephyr (0x55c4ed4ae000+0x1ca559) [0x55c4ed678559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f85ca910000+0x12180) [0x7f85ca922180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c4ed5c33d1]
(EE) 4: Xephyr (0x55c4ed4ae000+0x7cd5f) [0x55c4ed52ad5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f85ca57af2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c4ed4ea2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_______________ ERROR at setup of test_colorPixel[ManagerConfig] _______________

request = <SubRequest 'xephyr' for <Function 'test_colorPixel[ManagerConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f246214f898>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a9f11c97bd]
(EE) 1: Xephyr (0x55a9f1003000+0x1ca559) [0x55a9f11cd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fd91f977000+0x12180) [0x7fd91f989180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a9f11183d1]
(EE) 4: Xephyr (0x55a9f1003000+0x7cd5f) [0x55a9f107fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fd91f5e1f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a9f103f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5619e1aa37bd]
(EE) 1: Xephyr (0x5619e18dd000+0x1ca559) [0x5619e1aa7559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f4d1936c000+0x12180) [0x7f4d1937e180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5619e19f23d1]
(EE) 4: Xephyr (0x5619e18dd000+0x7cd5f) [0x5619e1959d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f4d18fd6f2a]
(EE) 6: Xephyr (_start+0x2a) [0x5619e19192fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_columnize[ShConfig] __________________

request = <SubRequest 'xephyr' for <Function 'test_columnize[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462bed0f0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b4144297bd]
(EE) 1: Xephyr (0x55b414263000+0x1ca559) [0x55b41442d559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f150ee9d000+0x12180) [0x7f150eeaf180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b4143783d1]
(EE) 4: Xephyr (0x55b414263000+0x7cd5f) [0x55b4142dfd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f150eb07f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b41429f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5598f69e97bd]
(EE) 1: Xephyr (0x5598f6823000+0x1ca559) [0x5598f69ed559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fc35ab83000+0x12180) [0x7fc35ab95180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5598f69383d1]
(EE) 4: Xephyr (0x5598f6823000+0x7cd5f) [0x5598f689fd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fc35a7edf2a]
(EE) 6: Xephyr (_start+0x2a) [0x5598f685f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_____________________ ERROR at setup of test_ls[ShConfig] ______________________

request = <SubRequest 'xephyr' for <Function 'test_ls[ShConfig]'>>, xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462ae47f0>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x557c0e7d27bd]
(EE) 1: Xephyr (0x557c0e60c000+0x1ca559) [0x557c0e7d6559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ff40c104000+0x12180) [0x7ff40c116180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x557c0e7213d1]
(EE) 4: Xephyr (0x557c0e60c000+0x7cd5f) [0x557c0e688d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ff40bd6ef2a]
(EE) 6: Xephyr (_start+0x2a) [0x557c0e6482fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b179f967bd]
(EE) 1: Xephyr (0x55b179dd0000+0x1ca559) [0x55b179f9a559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f603af05000+0x12180) [0x7f603af17180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b179ee53d1]
(EE) 4: Xephyr (0x55b179dd0000+0x7cd5f) [0x55b179e4cd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f603ab6ff2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b179e0c2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_findNode[ShConfig] ___________________

request = <SubRequest 'xephyr' for <Function 'test_findNode[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462c2f9e8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a18f2f57bd]
(EE) 1: Xephyr (0x55a18f12f000+0x1ca559) [0x55a18f2f9559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ff519712000+0x12180) [0x7ff519724180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a18f2443d1]
(EE) 4: Xephyr (0x55a18f12f000+0x7cd5f) [0x55a18f1abd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ff51937cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a18f16b2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55a6b147c7bd]
(EE) 1: Xephyr (0x55a6b12b6000+0x1ca559) [0x55a6b1480559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fe166a8d000+0x12180) [0x7fe166a9f180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55a6b13cb3d1]
(EE) 4: Xephyr (0x55a6b12b6000+0x7cd5f) [0x55a6b1332d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fe1666f7f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55a6b12f22fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________________ ERROR at setup of test_do_cd[ShConfig] ____________________

request = <SubRequest 'xephyr' for <Function 'test_do_cd[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f24621b29e8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55ffce2927bd]
(EE) 1: Xephyr (0x55ffce0cc000+0x1ca559) [0x55ffce296559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f15d8ebc000+0x12180) [0x7f15d8ece180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55ffce1e13d1]
(EE) 4: Xephyr (0x55ffce0cc000+0x7cd5f) [0x55ffce148d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f15d8b26f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55ffce1082fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5633df4717bd]
(EE) 1: Xephyr (0x5633df2ab000+0x1ca559) [0x5633df475559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fdce16a0000+0x12180) [0x7fdce16b2180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5633df3c03d1]
(EE) 4: Xephyr (0x5633df2ab000+0x7cd5f) [0x5633df327d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fdce130af2a]
(EE) 6: Xephyr (_start+0x2a) [0x5633df2e72fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________________ ERROR at setup of test_call[ShConfig] _____________________

request = <SubRequest 'xephyr' for <Function 'test_call[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f24621bfba8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55c52b9dc7bd]
(EE) 1: Xephyr (0x55c52b816000+0x1ca559) [0x55c52b9e0559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fdcb559c000+0x12180) [0x7fdcb55ae180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55c52b92b3d1]
(EE) 4: Xephyr (0x55c52b816000+0x7cd5f) [0x55c52b892d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fdcb5206f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55c52b8522fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b775c817bd]
(EE) 1: Xephyr (0x55b775abb000+0x1ca559) [0x55b775c85559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fd669ef6000+0x12180) [0x7fd669f08180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b775bd03d1]
(EE) 4: Xephyr (0x55b775abb000+0x7cd5f) [0x55b775b37d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fd669b60f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b775af72fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
__________________ ERROR at setup of test_complete[ShConfig] ___________________

request = <SubRequest 'xephyr' for <Function 'test_complete[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462156cf8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x56498b7b27bd]
(EE) 1: Xephyr (0x56498b5ec000+0x1ca559) [0x56498b7b6559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fbaee296000+0x12180) [0x7fbaee2a8180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x56498b7013d1]
(EE) 4: Xephyr (0x56498b5ec000+0x7cd5f) [0x56498b668d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fbaedf00f2a]
(EE) 6: Xephyr (_start+0x2a) [0x56498b6282fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b6cfc2a7bd]
(EE) 1: Xephyr (0x55b6cfa64000+0x1ca559) [0x55b6cfc2e559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f67f5bd2000+0x12180) [0x7f67f5be4180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b6cfb793d1]
(EE) 4: Xephyr (0x55b6cfa64000+0x7cd5f) [0x55b6cfae0d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f67f583cf2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b6cfaa02fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
____________________ ERROR at setup of test_help[ShConfig] _____________________

request = <SubRequest 'xephyr' for <Function 'test_help[ShConfig]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f24621ab6d8>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55b4f873e7bd]
(EE) 1: Xephyr (0x55b4f8578000+0x1ca559) [0x55b4f8742559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7fab548eb000+0x12180) [0x7fab548fd180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55b4f868d3d1]
(EE) 4: Xephyr (0x55b4f8578000+0x7cd5f) [0x55b4f85f4d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7fab54555f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55b4f85b42fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x5624392f97bd]
(EE) 1: Xephyr (0x562439133000+0x1ca559) [0x5624392fd559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7ff8a4bf1000+0x12180) [0x7ff8a4c03180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x5624392483d1]
(EE) 4: Xephyr (0x562439133000+0x7cd5f) [0x5624391afd5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7ff8a485bf2a]
(EE) 6: Xephyr (_start+0x2a) [0x56243916f2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
_________ ERROR at setup of test_textbox_color_change[WidgetTestConf] __________

request = <SubRequest 'xephyr' for <Function 'test_textbox_color_change[WidgetTestConf]'>>
xvfb = None

    @pytest.yield_fixture(scope="function")
    def xephyr(request, xvfb):
        kwargs = getattr(request, "param", {})
    
        x = Xephyr(**kwargs)
        try:
>           x.start_xephyr()

test/conftest.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <test.conftest.Xephyr object at 0x7f2462184320>

    def start_xephyr(self):
        """Start Xephyr instance
    
            Starts the Xephyr instance and sets the `self.display` to the display
            which is used to setup the instance.
            """
        # we'll try twice to open Xephyr
        for _ in range(2):
            # get a new display
            self.display = ":{}".format(_find_display())
    
            # build up arguments
            args = [
                "Xephyr", "-name", "qtile_test",
                self.display, "-ac",
                "-screen", "%sx%s" % (self.width, self.height)]
            if self.two_screens:
                args.extend(["-origin", "%s,0" % self.xoffset, "-screen",
                             "%sx%s" % (SECOND_WIDTH, SECOND_HEIGHT)])
            if self.xinerama:
                args.extend(["+xinerama"])
            if self.randr:
                args.extend(["+extension", "RANDR"])
    
            self.proc = subprocess.Popen(args)
    
            start = time.time()
            # wait for X display to come up
            while self.proc.poll() is None and time.time() < start + max_sleep:
                try:
                    conn = xcffib.connect(self.display)
                except xcffib.ConnectionException:
                    time.sleep(sleep_time)
                else:
                    conn.disconnect()
                    return
        else:
            # we wern't able to get a display up
            self.display = None
            raise AssertionError("Unable to start Xephyr, quit with return code {:d}".format(
>               self.proc.returncode
            ))
E           AssertionError: Unable to start Xephyr, quit with return code -6

test/conftest.py:163: AssertionError
---------------------------- Captured stderr setup -----------------------------
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55ff1e9b87bd]
(EE) 1: Xephyr (0x55ff1e7f2000+0x1ca559) [0x55ff1e9bc559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f13f9dbc000+0x12180) [0x7f13f9dce180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55ff1e9073d1]
(EE) 4: Xephyr (0x55ff1e7f2000+0x7cd5f) [0x55ff1e86ed5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f13f9a26f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55ff1e82e2fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
(EE) 
(EE) Backtrace:
(EE) 0: Xephyr (xorg_backtrace+0x4d) [0x55849e7d27bd]
(EE) 1: Xephyr (0x55849e60c000+0x1ca559) [0x55849e7d6559]
(EE) 2: /lib/x86_64-linux-gnu/libpthread.so.0 (0x7f6ed61f8000+0x12180) [0x7f6ed620a180]
(EE) 3: Xephyr (PanoramiXConsolidate+0x401) [0x55849e7213d1]
(EE) 4: Xephyr (0x55849e60c000+0x7cd5f) [0x55849e688d5f]
(EE) 5: /lib/x86_64-linux-gnu/libc.so.6 (__libc_start_main+0xea) [0x7f6ed5e62f2a]
(EE) 6: Xephyr (_start+0x2a) [0x55849e6482fa]
(EE) 
(EE) Segmentation fault at address 0x0
(EE) 
Fatal server error:
(EE) Caught signal 11 (Segmentation fault). Server aborting
(EE) 
=================================== FAILURES ===================================
____________________ test_thermalsensor_regex_compatibility ____________________

    def test_thermalsensor_regex_compatibility():
>       sensors = ThermalSensor()

test/test_widget.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
libqtile/widget/sensors.py:73: in __init__
    temp_values = self.get_temp_sensors()
libqtile/utils.py:202: in wrapper
    return_value = func(*args, **kwargs)
libqtile/widget/sensors.py:93: in get_temp_sensors
    sensors_out = self.call_process(command)
libqtile/widget/base.py:262: in call_process
    output = subprocess.check_output(command, **kwargs)
/usr/lib/python3.6/subprocess.py:336: in check_output
    **kwargs).stdout
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, timeout = None, check = True, popenargs = (['sensors'],)
kwargs = {'stdout': -1}, process = <subprocess.Popen object at 0x7f246215e320>
stdout = b'', stderr = None, retcode = 1

    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        The other arguments are the same as for the Popen constructor.
    
        If universal_newlines=True is passed, the "input" argument must be a
        string and stdout/stderr in the returned object will be strings rather than
        bytes.
        """
        if input is not None:
            if 'stdin' in kwargs:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired:
                process.kill()
                stdout, stderr = process.communicate()
                raise TimeoutExpired(process.args, timeout, output=stdout,
                                     stderr=stderr)
            except:
                process.kill()
                process.wait()
                raise
            retcode = process.poll()
            if check and retcode:
                raise CalledProcessError(retcode, process.args,
>                                        output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['sensors']' returned non-zero exit status 1.

/usr/lib/python3.6/subprocess.py:418: CalledProcessError
----------------------------- Captured stderr call -----------------------------
No sensors found!
Make sure you loaded all the kernel drivers you need.
Try sensors-detect to find out which these are.
========== 1 failed, 123 passed, 1 skipped, 57 error in 43.91 seconds ==========
E: pybuild pybuild:283: test: plugin distutils failed with: exit code=1: cd /<<PKGBUILDDIR>>/.pybuild/pythonX.Y_3.6/build; python3.6 -m pytest test
dh_auto_test: pybuild --test --test-pytest -i python{version} -p 3.6 returned exit code 13
debian/rules:4: recipe for target 'build-arch' failed
make: *** [build-arch] Error 25
dpkg-buildpackage: error: debian/rules build-arch subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2018-02-07T19:43:21Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: any
Build-Space: 9300
Build-Time: 48
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 21
Job: qtile_0.10.7-2
Machine Architecture: amd64
Package: qtile
Package-Time: 82
Source-Version: 0.10.7-2
Space: 9300
Status: attempted
Version: 0.10.7-2
--------------------------------------------------------------------------------
Finished at 2018-02-07T19:43:21Z
Build needed 00:01:22, 9300k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 83.028869824s
DC-Time-Estimation: 83.028869824 versus expected 1 (r/m: 82.028869824 ; m: 1.0)
