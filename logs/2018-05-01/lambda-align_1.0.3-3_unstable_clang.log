DC-Build-Header: lambda-align 1.0.3-3 / 2018-05-02 13:03:48 +0000
DC-Task: type:rebuild-binarch-only source:lambda-align version:1.0.3-3 chroot:unstable esttime:148 logfile:/tmp/lambda-align_1.0.3-3_unstable_clang60.log modes:clang60:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v  --chroot-setup-commands=/tmp/clang60 lambda-align_1.0.3-3'
sbuild (Debian sbuild) 0.73.0 (23 Dec 2016) on ip-172-31-1-38.eu-central-1.compute.internal

+==============================================================================+
| lambda-align 1.0.3-3 (amd64)                 Wed, 02 May 2018 13:03:48 +0000 |
+==============================================================================+

Package: lambda-align
Version: 1.0.3-3
Source Version: 1.0.3-3
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: any

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/unstable-amd64-sbuild-270b960d-c035-45f9-9161-ca0e14093641' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang60
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=6.0
+ echo 'Install of clang-6.0'
Install of clang-6.0
+ apt-get update
Get:1 http://127.0.0.1:9999/debian unstable InRelease [242 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-05-02-0830.09.pdiff [16.2 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main Sources 2018-05-02-0830.09.pdiff [16.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-05-02-0830.09.pdiff [1781 B]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 Packages 2018-05-02-0830.09.pdiff [1781 B]
Get:6 http://127.0.0.1:9999/debian unstable/main Translation-en [6016 kB]
Fetched 6332 kB in 2s (3411 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-6.0
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
Suggested packages:
  gnustep gnustep-devel clang-6.0-doc
Recommended packages:
  llvm-6.0-dev python libomp-dev libgpm2
The following NEW packages will be installed:
  clang-6.0 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-6.0-dev
  libclang1-6.0 libedit2 libjsoncpp1 libllvm6.0 libncurses5 libobjc-7-dev
  libobjc4
0 upgraded, 13 newly installed, 0 to remove and 0 not upgraded.
Need to get 37.7 MB of archives.
After this operation, 187 MB of additional disk space will be used.
Get:1 http://127.0.0.1:9999/debian unstable/main amd64 libjsoncpp1 amd64 1.7.4-3 [75.6 kB]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 libbsd0 amd64 0.8.7-1 [92.1 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 libncurses5 amd64 6.1+20180210-2 [95.7 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libedit2 amd64 3.1-20170329-1 [85.2 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 libllvm6.0 amd64 1:6.0-3 [14.5 MB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libobjc4 amd64 8-20180425-1 [52.4 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 libobjc-7-dev amd64 7.3.0-17 [204 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 libc6-i386 amd64 2.27-3 [2855 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 lib32gcc1 amd64 1:8-20180425-1 [47.8 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 lib32stdc++6 amd64 8-20180425-1 [406 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 libclang-common-6.0-dev amd64 1:6.0-3 [3102 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 libclang1-6.0 amd64 1:6.0-3 [6995 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 clang-6.0 amd64 1:6.0-3 [9175 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 37.7 MB in 0s (99.1 MB/s)
Selecting previously unselected package libjsoncpp1:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 10022 files and directories currently installed.)
Preparing to unpack .../00-libjsoncpp1_1.7.4-3_amd64.deb ...
Unpacking libjsoncpp1:amd64 (1.7.4-3) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../01-libbsd0_0.8.7-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.8.7-1) ...
Selecting previously unselected package libncurses5:amd64.
Preparing to unpack .../02-libncurses5_6.1+20180210-2_amd64.deb ...
Unpacking libncurses5:amd64 (6.1+20180210-2) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../03-libedit2_3.1-20170329-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20170329-1) ...
Selecting previously unselected package libllvm6.0:amd64.
Preparing to unpack .../04-libllvm6.0_1%3a6.0-3_amd64.deb ...
Unpacking libllvm6.0:amd64 (1:6.0-3) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../05-libobjc4_8-20180425-1_amd64.deb ...
Unpacking libobjc4:amd64 (8-20180425-1) ...
Selecting previously unselected package libobjc-7-dev:amd64.
Preparing to unpack .../06-libobjc-7-dev_7.3.0-17_amd64.deb ...
Unpacking libobjc-7-dev:amd64 (7.3.0-17) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../07-libc6-i386_2.27-3_amd64.deb ...
Unpacking libc6-i386 (2.27-3) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../08-lib32gcc1_1%3a8-20180425-1_amd64.deb ...
Unpacking lib32gcc1 (1:8-20180425-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../09-lib32stdc++6_8-20180425-1_amd64.deb ...
Unpacking lib32stdc++6 (8-20180425-1) ...
Selecting previously unselected package libclang-common-6.0-dev.
Preparing to unpack .../10-libclang-common-6.0-dev_1%3a6.0-3_amd64.deb ...
Unpacking libclang-common-6.0-dev (1:6.0-3) ...
Selecting previously unselected package libclang1-6.0:amd64.
Preparing to unpack .../11-libclang1-6.0_1%3a6.0-3_amd64.deb ...
Unpacking libclang1-6.0:amd64 (1:6.0-3) ...
Selecting previously unselected package clang-6.0.
Preparing to unpack .../12-clang-6.0_1%3a6.0-3_amd64.deb ...
Unpacking clang-6.0 (1:6.0-3) ...
Setting up libncurses5:amd64 (6.1+20180210-2) ...
Setting up libobjc4:amd64 (8-20180425-1) ...
Setting up libc6-i386 (2.27-3) ...
Setting up libbsd0:amd64 (0.8.7-1) ...
Setting up libobjc-7-dev:amd64 (7.3.0-17) ...
Processing triggers for libc-bin (2.27-3) ...
Setting up lib32gcc1 (1:8-20180425-1) ...
Setting up libjsoncpp1:amd64 (1.7.4-3) ...
Setting up libedit2:amd64 (3.1-20170329-1) ...
Setting up libllvm6.0:amd64 (1:6.0-3) ...
Setting up libclang1-6.0:amd64 (1:6.0-3) ...
Setting up lib32stdc++6 (8-20180425-1) ...
Setting up libclang-common-6.0-dev (1:6.0-3) ...
Setting up clang-6.0 (1:6.0-3) ...
Processing triggers for libc-bin (2.27-3) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-6.0 g++-4.6
+ ln -s clang-6.0 gcc-4.6
+ ln -s clang-6.0 cpp-4.6
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-6.0 g++-4.7
+ ln -s clang-6.0 gcc-4.7
+ ln -s clang-6.0 cpp-4.7
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-6.0 g++-4.8
+ ln -s clang-6.0 gcc-4.8
+ ln -s clang-6.0 cpp-4.8
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-6.0 g++-4.9
+ ln -s clang-6.0 gcc-4.9
+ ln -s clang-6.0 cpp-4.9
+ ln -s clang-6.0 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-6.0 g++-5
+ ln -s clang-6.0 gcc-5
+ ln -s clang-6.0 cpp-5
+ ln -s clang-6.0 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
+ echo 'g++-5 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-6.0 g++-6
+ ln -s clang-6.0 gcc-6
+ ln -s clang-6.0 cpp-6
+ ln -s clang-6.0 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-6.0 g++-7
+ ln -s clang-6.0 gcc-7
+ ln -s clang-6.0 cpp-7
+ ln -s clang-6.0 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
+ echo 'g++-7 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-6.0 g++-8
+ ln -s clang-6.0 gcc-8
+ ln -s clang-6.0 cpp-8
+ ln -s clang-6.0 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/lambda-align-icHlvp
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang60'.

Finished processing commands.
--------------------------------------------------------------------------------

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:9999/debian unstable InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'lambda-align' packaging is maintained in the 'Git' version control system at:
https://anonscm.debian.org/git/debian-med/lambda-align.git
Please use:
git clone https://anonscm.debian.org/git/debian-med/lambda-align.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 333 kB of source archives.
Get:1 http://127.0.0.1:9999/debian unstable/main lambda-align 1.0.3-3 (dsc) [2149 B]
Get:2 http://127.0.0.1:9999/debian unstable/main lambda-align 1.0.3-3 (tar) [323 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main lambda-align 1.0.3-3 (diff) [7724 B]
Fetched 333 kB in 0s (2960 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/lambda-align-icHlvp/lambda-align-1.0.3' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/lambda-align-icHlvp' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install build-essential                                                      |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-core-dummy' in '/<<BUILDDIR>>/resolver-kOHPrj/apt_archive/sbuild-build-depends-core-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-core-dummy
dpkg-scanpackages: info: Wrote 1 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Release [957 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Sources [349 B]
Get:5 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Packages [432 B]
Fetched 1738 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install core build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 852 B of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ sbuild-build-depends-core-dummy 0.invalid.0 [852 B]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 852 B in 0s (0 B/s)
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 10771 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 10), libseqan2-dev, cmake, zlib1g-dev, libbz2-dev, openssl
Filtered Build-Depends: debhelper (>= 10), libseqan2-dev, cmake, zlib1g-dev, libbz2-dev, openssl
dpkg-deb: building package 'sbuild-build-depends-lambda-align-dummy' in '/<<BUILDDIR>>/resolver-kOHPrj/apt_archive/sbuild-build-depends-lambda-align-dummy.deb'.
dpkg-scanpackages: warning: Packages in archive but missing from override file:
dpkg-scanpackages: warning:   sbuild-build-depends-core-dummy sbuild-build-depends-lambda-align-dummy
dpkg-scanpackages: info: Wrote 2 entries to output Packages file.
Ign:1 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ InRelease
Get:2 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Release [963 B]
Ign:3 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Release.gpg
Get:4 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Sources [524 B]
Get:5 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ Packages [604 B]
Fetched 2091 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install lambda-align build dependencies (apt-based resolver)
------------------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils cmake cmake-data
  debhelper dh-autoreconf dh-strip-nondeterminism file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libarchive13 libbz2-dev
  libcroco3 libcurl3 libexpat1 libfile-stripnondeterminism-perl libglib2.0-0
  libgssapi-krb5-2 libicu57 libk5crypto3 libkeyutils1 libkrb5-3
  libkrb5support0 libldap-2.4-2 libldap-common liblzo2-2 libmagic-mgc
  libmagic1 libnghttp2-14 libpipeline1 libprocps6 libpsl5 librhash0 librtmp1
  libsasl2-2 libsasl2-modules-db libseqan2-dev libsigsegv2 libssh2-1
  libssl1.0.2 libssl1.1 libtimedate-perl libtool libuv1 libxml2 lsb-base m4
  man-db openssl po-debconf procps zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation cmake-doc ninja-build dh-make dwz gettext-doc libasprintf-dev
  libgettextpo-dev groff lrzip krb5-doc krb5-user libtool-doc gfortran
  | fortran95-compiler gcj-jdk m4-doc apparmor less www-browser
  ca-certificates libmail-box-perl
Recommended packages:
  curl | wget | lynx bzip2-doc ca-certificates libarchive-cpio-perl
  libglib2.0-data shared-mime-info xdg-user-dirs krb5-locales publicsuffix
  libsasl2-modules libltdl-dev libmail-sendmail-perl psmisc
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils cmake cmake-data
  debhelper dh-autoreconf dh-strip-nondeterminism file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libarchive13 libbz2-dev
  libcroco3 libcurl3 libexpat1 libfile-stripnondeterminism-perl libglib2.0-0
  libgssapi-krb5-2 libicu57 libk5crypto3 libkeyutils1 libkrb5-3
  libkrb5support0 libldap-2.4-2 libldap-common liblzo2-2 libmagic-mgc
  libmagic1 libnghttp2-14 libpipeline1 libprocps6 libpsl5 librhash0 librtmp1
  libsasl2-2 libsasl2-modules-db libseqan2-dev libsigsegv2 libssh2-1
  libssl1.0.2 libssl1.1 libtimedate-perl libtool libuv1 libxml2 lsb-base m4
  man-db openssl po-debconf procps sbuild-build-depends-lambda-align-dummy
  zlib1g-dev
0 upgraded, 59 newly installed, 0 to remove and 0 not upgraded.
Need to get 32.0 MB of archives.
After this operation, 120 MB of additional disk space will be used.
Get:1 copy:/<<BUILDDIR>>/resolver-kOHPrj/apt_archive ./ sbuild-build-depends-lambda-align-dummy 0.invalid.0 [896 B]
Get:2 http://127.0.0.1:9999/debian unstable/main amd64 bsdmainutils amd64 11.1.2 [190 kB]
Get:3 http://127.0.0.1:9999/debian unstable/main amd64 groff-base amd64 1.22.3-10 [1176 kB]
Get:4 http://127.0.0.1:9999/debian unstable/main amd64 libpipeline1 amd64 1.5.0-1 [29.0 kB]
Get:5 http://127.0.0.1:9999/debian unstable/main amd64 man-db amd64 2.8.3-2 [1180 kB]
Get:6 http://127.0.0.1:9999/debian unstable/main amd64 libprocps6 amd64 2:3.3.14-1 [60.4 kB]
Get:7 http://127.0.0.1:9999/debian unstable/main amd64 lsb-base all 9.20170808 [28.1 kB]
Get:8 http://127.0.0.1:9999/debian unstable/main amd64 procps amd64 2:3.3.14-1 [257 kB]
Get:9 http://127.0.0.1:9999/debian unstable/main amd64 libmagic-mgc amd64 1:5.33-2 [234 kB]
Get:10 http://127.0.0.1:9999/debian unstable/main amd64 libmagic1 amd64 1:5.33-2 [113 kB]
Get:11 http://127.0.0.1:9999/debian unstable/main amd64 file amd64 1:5.33-2 [65.6 kB]
Get:12 http://127.0.0.1:9999/debian unstable/main amd64 gettext-base amd64 0.19.8.1-6 [122 kB]
Get:13 http://127.0.0.1:9999/debian unstable/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:14 http://127.0.0.1:9999/debian unstable/main amd64 m4 amd64 1.4.18-1 [202 kB]
Get:15 http://127.0.0.1:9999/debian unstable/main amd64 autoconf all 2.69-11 [341 kB]
Get:16 http://127.0.0.1:9999/debian unstable/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:17 http://127.0.0.1:9999/debian unstable/main amd64 automake all 1:1.15.1-3.1 [736 kB]
Get:18 http://127.0.0.1:9999/debian unstable/main amd64 autopoint all 0.19.8.1-6 [434 kB]
Get:19 http://127.0.0.1:9999/debian unstable/main amd64 cmake-data all 3.11.1-1 [1386 kB]
Get:20 http://127.0.0.1:9999/debian unstable/main amd64 liblzo2-2 amd64 2.08-1.2+b2 [55.0 kB]
Get:21 http://127.0.0.1:9999/debian unstable/main amd64 libicu57 amd64 57.1-9 [7698 kB]
Get:22 http://127.0.0.1:9999/debian unstable/main amd64 libxml2 amd64 2.9.4+dfsg1-6.1 [725 kB]
Get:23 http://127.0.0.1:9999/debian unstable/main amd64 libarchive13 amd64 3.2.2-3.1 [296 kB]
Get:24 http://127.0.0.1:9999/debian unstable/main amd64 libkeyutils1 amd64 1.5.9-9.2 [12.9 kB]
Get:25 http://127.0.0.1:9999/debian unstable/main amd64 libkrb5support0 amd64 1.16-2 [62.8 kB]
Get:26 http://127.0.0.1:9999/debian unstable/main amd64 libk5crypto3 amd64 1.16-2 [121 kB]
Get:27 http://127.0.0.1:9999/debian unstable/main amd64 libkrb5-3 amd64 1.16-2 [316 kB]
Get:28 http://127.0.0.1:9999/debian unstable/main amd64 libgssapi-krb5-2 amd64 1.16-2 [158 kB]
Get:29 http://127.0.0.1:9999/debian unstable/main amd64 libsasl2-modules-db amd64 2.1.27~101-g0780600+dfsg-3.1 [68.6 kB]
Get:30 http://127.0.0.1:9999/debian unstable/main amd64 libsasl2-2 amd64 2.1.27~101-g0780600+dfsg-3.1 [105 kB]
Get:31 http://127.0.0.1:9999/debian unstable/main amd64 libldap-common all 2.4.45+dfsg-1 [87.0 kB]
Get:32 http://127.0.0.1:9999/debian unstable/main amd64 libldap-2.4-2 amd64 2.4.45+dfsg-1 [223 kB]
Get:33 http://127.0.0.1:9999/debian unstable/main amd64 libnghttp2-14 amd64 1.31.1-1 [80.7 kB]
Get:34 http://127.0.0.1:9999/debian unstable/main amd64 libpsl5 amd64 0.20.1-1 [52.6 kB]
Get:35 http://127.0.0.1:9999/debian unstable/main amd64 librtmp1 amd64 2.4+20151223.gitfa8646d.1-1+b1 [60.4 kB]
Get:36 http://127.0.0.1:9999/debian unstable/main amd64 libssh2-1 amd64 1.8.0-1 [138 kB]
Get:37 http://127.0.0.1:9999/debian unstable/main amd64 libssl1.0.2 amd64 1.0.2o-1 [1296 kB]
Get:38 http://127.0.0.1:9999/debian unstable/main amd64 libcurl3 amd64 7.58.0-2 [312 kB]
Get:39 http://127.0.0.1:9999/debian unstable/main amd64 libexpat1 amd64 2.2.5-3 [96.8 kB]
Get:40 http://127.0.0.1:9999/debian unstable/main amd64 librhash0 amd64 1.3.6-2 [87.1 kB]
Get:41 http://127.0.0.1:9999/debian unstable/main amd64 libuv1 amd64 1.18.0-3 [98.5 kB]
Get:42 http://127.0.0.1:9999/debian unstable/main amd64 cmake amd64 3.11.1-1 [3190 kB]
Get:43 http://127.0.0.1:9999/debian unstable/main amd64 libtool all 2.4.6-2.1 [547 kB]
Get:44 http://127.0.0.1:9999/debian unstable/main amd64 dh-autoreconf all 17 [16.5 kB]
Get:45 http://127.0.0.1:9999/debian unstable/main amd64 libarchive-zip-perl all 1.60-1 [95.6 kB]
Get:46 http://127.0.0.1:9999/debian unstable/main amd64 libfile-stripnondeterminism-perl all 0.041-1 [19.9 kB]
Get:47 http://127.0.0.1:9999/debian unstable/main amd64 libtimedate-perl all 2.3000-2 [42.2 kB]
Get:48 http://127.0.0.1:9999/debian unstable/main amd64 dh-strip-nondeterminism all 0.041-1 [12.0 kB]
Get:49 http://127.0.0.1:9999/debian unstable/main amd64 libglib2.0-0 amd64 2.56.1-2 [2928 kB]
Get:50 http://127.0.0.1:9999/debian unstable/main amd64 libcroco3 amd64 0.6.12-2 [144 kB]
Get:51 http://127.0.0.1:9999/debian unstable/main amd64 gettext amd64 0.19.8.1-6 [1302 kB]
Get:52 http://127.0.0.1:9999/debian unstable/main amd64 intltool-debian all 0.35.0+20060710.4 [26.3 kB]
Get:53 http://127.0.0.1:9999/debian unstable/main amd64 po-debconf all 1.0.20 [247 kB]
Get:54 http://127.0.0.1:9999/debian unstable/main amd64 debhelper all 11.2.1 [1013 kB]
Get:55 http://127.0.0.1:9999/debian unstable/main amd64 libbz2-dev amd64 1.0.6-8.1 [29.4 kB]
Get:56 http://127.0.0.1:9999/debian unstable/main amd64 libseqan2-dev all 2.4.0+dfsg-8 [1219 kB]
Get:57 http://127.0.0.1:9999/debian unstable/main amd64 libssl1.1 amd64 1.1.0h-2 [1352 kB]
Get:58 http://127.0.0.1:9999/debian unstable/main amd64 openssl amd64 1.1.0h-2 [744 kB]
Get:59 http://127.0.0.1:9999/debian unstable/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-1 [214 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 32.0 MB in 0s (73.3 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 10771 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2_amd64.deb ...
Unpacking bsdmainutils (11.1.2) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../01-groff-base_1.22.3-10_amd64.deb ...
Unpacking groff-base (1.22.3-10) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../02-libpipeline1_1.5.0-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.0-1) ...
Selecting previously unselected package man-db.
Preparing to unpack .../03-man-db_2.8.3-2_amd64.deb ...
Unpacking man-db (2.8.3-2) ...
Selecting previously unselected package libprocps6:amd64.
Preparing to unpack .../04-libprocps6_2%3a3.3.14-1_amd64.deb ...
Unpacking libprocps6:amd64 (2:3.3.14-1) ...
Selecting previously unselected package lsb-base.
Preparing to unpack .../05-lsb-base_9.20170808_all.deb ...
Unpacking lsb-base (9.20170808) ...
Selecting previously unselected package procps.
Preparing to unpack .../06-procps_2%3a3.3.14-1_amd64.deb ...
Unpacking procps (2:3.3.14-1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../07-libmagic-mgc_1%3a5.33-2_amd64.deb ...
Unpacking libmagic-mgc (1:5.33-2) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../08-libmagic1_1%3a5.33-2_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.33-2) ...
Selecting previously unselected package file.
Preparing to unpack .../09-file_1%3a5.33-2_amd64.deb ...
Unpacking file (1:5.33-2) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../10-gettext-base_0.19.8.1-6_amd64.deb ...
Unpacking gettext-base (0.19.8.1-6) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../11-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../12-m4_1.4.18-1_amd64.deb ...
Unpacking m4 (1.4.18-1) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../13-autoconf_2.69-11_all.deb ...
Unpacking autoconf (2.69-11) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../14-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../15-automake_1%3a1.15.1-3.1_all.deb ...
Unpacking automake (1:1.15.1-3.1) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../16-autopoint_0.19.8.1-6_all.deb ...
Unpacking autopoint (0.19.8.1-6) ...
Selecting previously unselected package cmake-data.
Preparing to unpack .../17-cmake-data_3.11.1-1_all.deb ...
Unpacking cmake-data (3.11.1-1) ...
Selecting previously unselected package liblzo2-2:amd64.
Preparing to unpack .../18-liblzo2-2_2.08-1.2+b2_amd64.deb ...
Unpacking liblzo2-2:amd64 (2.08-1.2+b2) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../19-libicu57_57.1-9_amd64.deb ...
Unpacking libicu57:amd64 (57.1-9) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../20-libxml2_2.9.4+dfsg1-6.1_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Selecting previously unselected package libarchive13:amd64.
Preparing to unpack .../21-libarchive13_3.2.2-3.1_amd64.deb ...
Unpacking libarchive13:amd64 (3.2.2-3.1) ...
Selecting previously unselected package libkeyutils1:amd64.
Preparing to unpack .../22-libkeyutils1_1.5.9-9.2_amd64.deb ...
Unpacking libkeyutils1:amd64 (1.5.9-9.2) ...
Selecting previously unselected package libkrb5support0:amd64.
Preparing to unpack .../23-libkrb5support0_1.16-2_amd64.deb ...
Unpacking libkrb5support0:amd64 (1.16-2) ...
Selecting previously unselected package libk5crypto3:amd64.
Preparing to unpack .../24-libk5crypto3_1.16-2_amd64.deb ...
Unpacking libk5crypto3:amd64 (1.16-2) ...
Selecting previously unselected package libkrb5-3:amd64.
Preparing to unpack .../25-libkrb5-3_1.16-2_amd64.deb ...
Unpacking libkrb5-3:amd64 (1.16-2) ...
Selecting previously unselected package libgssapi-krb5-2:amd64.
Preparing to unpack .../26-libgssapi-krb5-2_1.16-2_amd64.deb ...
Unpacking libgssapi-krb5-2:amd64 (1.16-2) ...
Selecting previously unselected package libsasl2-modules-db:amd64.
Preparing to unpack .../27-libsasl2-modules-db_2.1.27~101-g0780600+dfsg-3.1_amd64.deb ...
Unpacking libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3.1) ...
Selecting previously unselected package libsasl2-2:amd64.
Preparing to unpack .../28-libsasl2-2_2.1.27~101-g0780600+dfsg-3.1_amd64.deb ...
Unpacking libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3.1) ...
Selecting previously unselected package libldap-common.
Preparing to unpack .../29-libldap-common_2.4.45+dfsg-1_all.deb ...
Unpacking libldap-common (2.4.45+dfsg-1) ...
Selecting previously unselected package libldap-2.4-2:amd64.
Preparing to unpack .../30-libldap-2.4-2_2.4.45+dfsg-1_amd64.deb ...
Unpacking libldap-2.4-2:amd64 (2.4.45+dfsg-1) ...
Selecting previously unselected package libnghttp2-14:amd64.
Preparing to unpack .../31-libnghttp2-14_1.31.1-1_amd64.deb ...
Unpacking libnghttp2-14:amd64 (1.31.1-1) ...
Selecting previously unselected package libpsl5:amd64.
Preparing to unpack .../32-libpsl5_0.20.1-1_amd64.deb ...
Unpacking libpsl5:amd64 (0.20.1-1) ...
Selecting previously unselected package librtmp1:amd64.
Preparing to unpack .../33-librtmp1_2.4+20151223.gitfa8646d.1-1+b1_amd64.deb ...
Unpacking librtmp1:amd64 (2.4+20151223.gitfa8646d.1-1+b1) ...
Selecting previously unselected package libssh2-1:amd64.
Preparing to unpack .../34-libssh2-1_1.8.0-1_amd64.deb ...
Unpacking libssh2-1:amd64 (1.8.0-1) ...
Selecting previously unselected package libssl1.0.2:amd64.
Preparing to unpack .../35-libssl1.0.2_1.0.2o-1_amd64.deb ...
Unpacking libssl1.0.2:amd64 (1.0.2o-1) ...
Selecting previously unselected package libcurl3:amd64.
Preparing to unpack .../36-libcurl3_7.58.0-2_amd64.deb ...
Unpacking libcurl3:amd64 (7.58.0-2) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../37-libexpat1_2.2.5-3_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.5-3) ...
Selecting previously unselected package librhash0:amd64.
Preparing to unpack .../38-librhash0_1.3.6-2_amd64.deb ...
Unpacking librhash0:amd64 (1.3.6-2) ...
Selecting previously unselected package libuv1:amd64.
Preparing to unpack .../39-libuv1_1.18.0-3_amd64.deb ...
Unpacking libuv1:amd64 (1.18.0-3) ...
Selecting previously unselected package cmake.
Preparing to unpack .../40-cmake_3.11.1-1_amd64.deb ...
Unpacking cmake (3.11.1-1) ...
Selecting previously unselected package libtool.
Preparing to unpack .../41-libtool_2.4.6-2.1_all.deb ...
Unpacking libtool (2.4.6-2.1) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../42-dh-autoreconf_17_all.deb ...
Unpacking dh-autoreconf (17) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../43-libarchive-zip-perl_1.60-1_all.deb ...
Unpacking libarchive-zip-perl (1.60-1) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../44-libfile-stripnondeterminism-perl_0.041-1_all.deb ...
Unpacking libfile-stripnondeterminism-perl (0.041-1) ...
Selecting previously unselected package libtimedate-perl.
Preparing to unpack .../45-libtimedate-perl_2.3000-2_all.deb ...
Unpacking libtimedate-perl (2.3000-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../46-dh-strip-nondeterminism_0.041-1_all.deb ...
Unpacking dh-strip-nondeterminism (0.041-1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../47-libglib2.0-0_2.56.1-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.56.1-2) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../48-libcroco3_0.6.12-2_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.12-2) ...
Selecting previously unselected package gettext.
Preparing to unpack .../49-gettext_0.19.8.1-6_amd64.deb ...
Unpacking gettext (0.19.8.1-6) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../50-intltool-debian_0.35.0+20060710.4_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.4) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../51-po-debconf_1.0.20_all.deb ...
Unpacking po-debconf (1.0.20) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../52-debhelper_11.2.1_all.deb ...
Unpacking debhelper (11.2.1) ...
Selecting previously unselected package libbz2-dev:amd64.
Preparing to unpack .../53-libbz2-dev_1.0.6-8.1_amd64.deb ...
Unpacking libbz2-dev:amd64 (1.0.6-8.1) ...
Selecting previously unselected package libseqan2-dev.
Preparing to unpack .../54-libseqan2-dev_2.4.0+dfsg-8_all.deb ...
Unpacking libseqan2-dev (2.4.0+dfsg-8) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../55-libssl1.1_1.1.0h-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.0h-2) ...
Selecting previously unselected package openssl.
Preparing to unpack .../56-openssl_1.1.0h-2_amd64.deb ...
Unpacking openssl (1.1.0h-2) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../57-zlib1g-dev_1%3a1.2.11.dfsg-1_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-1) ...
Selecting previously unselected package sbuild-build-depends-lambda-align-dummy.
Preparing to unpack .../58-sbuild-build-depends-lambda-align-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-lambda-align-dummy (0.invalid.0) ...
Setting up libexpat1:amd64 (2.2.5-3) ...
Setting up libbz2-dev:amd64 (1.0.6-8.1) ...
Setting up libarchive-zip-perl (1.60-1) ...
Setting up libnghttp2-14:amd64 (1.31.1-1) ...
Setting up libtimedate-perl (2.3000-2) ...
Setting up libseqan2-dev (2.4.0+dfsg-8) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up libldap-common (2.4.45+dfsg-1) ...
Setting up libuv1:amd64 (1.18.0-3) ...
Setting up libpsl5:amd64 (0.20.1-1) ...
Setting up groff-base (1.22.3-10) ...
Setting up libglib2.0-0:amd64 (2.56.1-2) ...
No schema files found: doing nothing.
Setting up libsasl2-modules-db:amd64 (2.1.27~101-g0780600+dfsg-3.1) ...
Setting up libsasl2-2:amd64 (2.1.27~101-g0780600+dfsg-3.1) ...
Setting up gettext-base (0.19.8.1-6) ...
Setting up cmake-data (3.11.1-1) ...
Setting up libpipeline1:amd64 (1.5.0-1) ...
Setting up librtmp1:amd64 (2.4+20151223.gitfa8646d.1-1+b1) ...
Setting up m4 (1.4.18-1) ...
Setting up libicu57:amd64 (57.1-9) ...
Setting up libprocps6:amd64 (2:3.3.14-1) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-6.1) ...
Setting up libmagic-mgc (1:5.33-2) ...
Setting up libmagic1:amd64 (1:5.33-2) ...
Setting up lsb-base (9.20170808) ...
Setting up librhash0:amd64 (1.3.6-2) ...
Setting up procps (2:3.3.14-1) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode
Setting up libcroco3:amd64 (0.6.12-2) ...
Setting up libssl1.0.2:amd64 (1.0.2o-1) ...
Setting up libssh2-1:amd64 (1.8.0-1) ...
Processing triggers for libc-bin (2.27-3) ...
Setting up autotools-dev (20180224.1) ...
Setting up libldap-2.4-2:amd64 (2.4.45+dfsg-1) ...
Setting up libssl1.1:amd64 (1.1.0h-2) ...
Setting up openssl (1.1.0h-2) ...
Setting up libkeyutils1:amd64 (1.5.9-9.2) ...
Setting up bsdmainutils (11.1.2) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-6) ...
Setting up liblzo2-2:amd64 (2.08-1.2+b2) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-1) ...
Setting up libfile-stripnondeterminism-perl (0.041-1) ...
Setting up gettext (0.19.8.1-6) ...
Setting up libarchive13:amd64 (3.2.2-3.1) ...
Setting up autoconf (2.69-11) ...
Setting up file (1:5.33-2) ...
Setting up libkrb5support0:amd64 (1.16-2) ...
Setting up intltool-debian (0.35.0+20060710.4) ...
Setting up automake (1:1.15.1-3.1) ...
update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode
Setting up man-db (2.8.3-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libtool (2.4.6-2.1) ...
Setting up libk5crypto3:amd64 (1.16-2) ...
Setting up po-debconf (1.0.20) ...
Setting up libkrb5-3:amd64 (1.16-2) ...
Setting up libgssapi-krb5-2:amd64 (1.16-2) ...
Setting up libcurl3:amd64 (7.58.0-2) ...
Setting up cmake (3.11.1-1) ...
Setting up debhelper (11.2.1) ...
Setting up dh-autoreconf (17) ...
Setting up dh-strip-nondeterminism (0.041-1) ...
Setting up sbuild-build-depends-lambda-align-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.27-3) ...

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.9.0-5-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.30-16 dpkg-dev_1.19.0.5 g++-7_7.3.0-17 gcc-7_7.3.0-17 libc6-dev_2.27-3 libstdc++-7-dev_7.3.0-17 libstdc++6_8-20180425-1 linux-libc-dev_4.15.17-1
Package versions: adduser_3.117 apt_1.6.1 autoconf_2.69-11 automake_1:1.15.1-3.1 autopoint_0.19.8.1-6 autotools-dev_20180224.1 base-files_10.1 base-passwd_3.5.45 bash_4.4.18-2 binutils_2.30-16 binutils-common_2.30-16 binutils-x86-64-linux-gnu_2.30-16 bsdmainutils_11.1.2 bsdutils_1:2.31.1-0.5 build-essential_12.5 bzip2_1.0.6-8.1 clang-6.0_1:6.0-3 cmake_3.11.1-1 cmake-data_3.11.1-1 coreutils_8.28-1 cpp_4:7.3.0-3 cpp-7_7.3.0-17 dash_0.5.8-2.10 debconf_1.5.66 debfoster_2.7-2.1+b1 debhelper_11.2.1 debian-archive-keyring_2017.7 debianutils_4.8.4 dh-autoreconf_17 dh-strip-nondeterminism_0.041-1 diffutils_1:3.6-1 dpkg_1.19.0.5 dpkg-dev_1.19.0.5 e2fslibs_1.44.1-2 e2fsprogs_1.44.1-2 eatmydata_105-6 fakeroot_1.22-2 fdisk_2.31.1-0.5 file_1:5.33-2 findutils_4.6.0+git+20171230-2 g++_4:7.3.0-3 g++-7_7.3.0-17 gcc_4:7.3.0-3 gcc-6-base_6.4.0-17 gcc-7_7.3.0-17 gcc-7-base_7.3.0-17 gcc-8-base_8-20180425-1 gettext_0.19.8.1-6 gettext-base_0.19.8.1-6 gpgv_2.2.5-1 grep_3.1-2 groff-base_1.22.3-10 gzip_1.6-5+b1 hostname_3.20 init-system-helpers_1.51 intltool-debian_0.35.0+20060710.4 lib32gcc1_1:8-20180425-1 lib32stdc++6_8-20180425-1 libacl1_2.2.52-3+b1 libapt-pkg5.0_1.6.1 libarchive-zip-perl_1.60-1 libarchive13_3.2.2-3.1 libasan4_7.3.0-17 libatomic1_8-20180425-1 libattr1_1:2.4.47-2+b2 libaudit-common_1:2.8.3-1 libaudit1_1:2.8.3-1 libbinutils_2.30-16 libblkid1_2.31.1-0.5 libbsd0_0.8.7-1 libbz2-1.0_1.0.6-8.1 libbz2-dev_1.0.6-8.1 libc-bin_2.27-3 libc-dev-bin_2.27-3 libc6_2.27-3 libc6-dev_2.27-3 libc6-i386_2.27-3 libcap-ng0_0.7.9-1 libcc1-0_8-20180425-1 libcilkrts5_7.3.0-17 libclang-common-6.0-dev_1:6.0-3 libclang1-6.0_1:6.0-3 libcom-err2_1.44.1-2 libcomerr2_1.44.1-2 libcroco3_0.6.12-2 libcurl3_7.58.0-2 libdb5.3_5.3.28-13.1+b1 libdebconfclient0_0.243 libdpkg-perl_1.19.0.5 libeatmydata1_105-6 libedit2_3.1-20170329-1 libexpat1_2.2.5-3 libext2fs2_1.44.1-2 libfakeroot_1.22-2 libfdisk1_2.31.1-0.5 libffi6_3.2.1-8 libfile-stripnondeterminism-perl_0.041-1 libgc1c2_1:7.4.2-8.2 libgcc-7-dev_7.3.0-17 libgcc1_1:8-20180425-1 libgcrypt20_1.8.2-2 libgdbm-compat4_1.14.1-6 libgdbm3_1.8.3-14 libgdbm5_1.14.1-6 libglib2.0-0_2.56.1-2 libgmp10_2:6.1.2+dfsg-3 libgnutls30_3.5.18-1 libgomp1_8-20180425-1 libgpg-error0_1.29-4 libgssapi-krb5-2_1.16-2 libhogweed4_3.4-1 libicu57_57.1-9 libidn2-0_2.0.4-1.1 libisl15_0.18-4 libisl19_0.19-1 libitm1_8-20180425-1 libjsoncpp1_1.7.4-3 libk5crypto3_1.16-2 libkeyutils1_1.5.9-9.2 libkrb5-3_1.16-2 libkrb5support0_1.16-2 libldap-2.4-2_2.4.45+dfsg-1 libldap-common_2.4.45+dfsg-1 libllvm6.0_1:6.0-3 liblsan0_8-20180425-1 liblz4-1_1.8.1.2-1 liblzma5_5.2.2-1.3 liblzo2-2_2.08-1.2+b2 libmagic-mgc_1:5.33-2 libmagic1_1:5.33-2 libmount1_2.31.1-0.5 libmpc3_1.1.0-1 libmpfr4_3.1.6-1 libmpfr6_4.0.1-1 libmpx2_8-20180425-1 libncurses5_6.1+20180210-2 libncursesw5_6.1+20180210-2 libnettle6_3.4-1 libnghttp2-14_1.31.1-1 libobjc-7-dev_7.3.0-17 libobjc4_8-20180425-1 libp11-kit0_0.23.10-2 libpam-modules_1.1.8-3.7 libpam-modules-bin_1.1.8-3.7 libpam-runtime_1.1.8-3.7 libpam0g_1.1.8-3.7 libpcre3_2:8.39-9 libperl5.26_5.26.2-3 libpipeline1_1.5.0-1 libprocps6_2:3.3.14-1 libpsl5_0.20.1-1 libquadmath0_8-20180425-1 librhash0_1.3.6-2 librtmp1_2.4+20151223.gitfa8646d.1-1+b1 libsasl2-2_2.1.27~101-g0780600+dfsg-3.1 libsasl2-modules-db_2.1.27~101-g0780600+dfsg-3.1 libseccomp2_2.3.3-1 libselinux1_2.7-2+b2 libsemanage-common_2.7-2 libsemanage1_2.7-2+b2 libsepol1_2.7-1 libseqan2-dev_2.4.0+dfsg-8 libsigsegv2_2.12-2 libsmartcols1_2.31.1-0.5 libss2_1.44.1-2 libssh2-1_1.8.0-1 libssl1.0.2_1.0.2o-1 libssl1.1_1.1.0h-2 libstdc++-7-dev_7.3.0-17 libstdc++6_8-20180425-1 libsystemd0_238-4 libtasn1-6_4.13-2 libtimedate-perl_2.3000-2 libtinfo5_6.1+20180210-2 libtinfo6_6.1+20180210-2 libtool_2.4.6-2.1 libtsan0_8-20180425-1 libubsan0_7.3.0-17 libudev1_238-4 libunistring2_0.9.8-1 libustr-1.0-1_1.0.4-6 libuuid1_2.31.1-0.5 libuv1_1.18.0-3 libxml2_2.9.4+dfsg1-6.1 libzstd1_1.3.4+dfsg-1 linux-libc-dev_4.15.17-1 login_1:4.5-1 lsb-base_9.20170808 m4_1.4.18-1 make_4.2.1-1 man-db_2.8.3-2 mawk_1.3.3-17+b3 mount_2.31.1-0.5 multiarch-support_2.27-3 ncurses-base_6.1+20180210-2 ncurses-bin_6.1+20180210-2 openssl_1.1.0h-2 passwd_1:4.5-1 patch_2.7.6-2 perl_5.26.2-3 perl-base_5.26.2-3 perl-modules-5.26_5.26.2-3 po-debconf_1.0.20 procps_2:3.3.14-1 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-lambda-align-dummy_0.invalid.0 sed_4.4-2 sensible-utils_0.0.12 sysvinit-utils_2.88dsf-59.10 tar_1.30+dfsg-1 util-linux_2.31.1-0.5 xz-utils_5.2.2-1.3 zlib1g_1:1.2.11.dfsg-1 zlib1g-dev_1:1.2.11.dfsg-1

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Wed Feb 21 11:49:53 2018 UTC
gpgv:                using RSA key 724D609337113C710550D7473C26763F6C67E6E2
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./lambda-align_1.0.3-3.dsc
dpkg-source: info: extracting lambda-align in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking lambda-align_1.0.3.orig.tar.gz
dpkg-source: info: unpacking lambda-align_1.0.3-3.debian.tar.xz
dpkg-source: info: applying set-seqan-cmake-dir.patch
dpkg-source: info: applying force-link-rt-pthread.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=en_US.UTF-8
LC_ALL=POSIX
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=unstable-amd64-sbuild-270b960d-c035-45f9-9161-ca0e14093641
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

dpkg-buildpackage: info: source package lambda-align
dpkg-buildpackage: info: source version 1.0.3-3
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Michael R. Crusoe <michael.crusoe@gmail.com>
 dpkg-source --before-build lambda-align-1.0.3
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean --builddirectory=build
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/<<PKGBUILDDIR>>'
rm -f *.1
dh_auto_clean --
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_clean -O--builddirectory=build
 debian/rules build-arch
dh build-arch --builddirectory=build
   dh_update_autotools_config -a -O--builddirectory=build
   dh_autoreconf -a -O--builddirectory=build
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_configure -- -DLAMBDA_NATIVE_BUILD=OFF -DLAMBDA_MMAPPED_DB=ON -DCMAKE_BUILD_TYPE=Release
	cd build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=None -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_INSTALL_LOCALSTATEDIR=/var -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON "-GUnix Makefiles" -DLAMBDA_NATIVE_BUILD=OFF -DLAMBDA_MMAPPED_DB=ON -DCMAKE_BUILD_TYPE=Release
[1mCompiler Detection[m
-- The CXX compiler identification is Clang 6.0.0
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done

[1mDependency detection[m
-- These dependencies where found:
     OPENMP     FALSE      NOTFOUND
     ZLIB       TRUE      1.2.11
     BZIP2      TRUE      1.0.6
     SEQAN      TRUE      2.4.0
CMake Warning at src/CMakeLists.txt:41 (message):
  WARNING WARNING WARNING

  WARNING: OpenMP not found.  Lambda will be built without multi-threading!
  This is probably not what you want! Use GCC >= 4.9.1, Clang >= 3.8.0 or ICC
  >= 16.0.2

  WARNING WARNING WARNING


-- The requirements where met.

[1mBuild configuration[m
-- LAMBDA version is: 1.0.2
-- The following options are selected for the build:
     LAMBDA_FASTBUILD         OFF
     LAMBDA_LINGAPS_OPT       OFF
     LAMBDA_MMAPPED_DB        ON
     LAMBDA_NATIVE_BUILD      OFF
     LAMBDA_STATIC_BUILD      OFF
-- Run 'cmake -LH' to get a comment on each option.
-- Remove CMakeCache.txt and re-run cmake with -DOPTIONNAME=ON|OFF to change an option.

[1mSetting up unit tests[m
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_EXPORT_NO_PACKAGE_REGISTRY
    CMAKE_INSTALL_LOCALSTATEDIR
    CMAKE_INSTALL_SYSCONFDIR


-- Build files have been written to: /<<PKGBUILDDIR>>/build
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_build -a -O--builddirectory=build
	cd build && make -j8 -Oline
make[1]: Entering directory '/<<PKGBUILDDIR>>/build'
/usr/bin/cmake -H/<<PKGBUILDDIR>> -B/<<PKGBUILDDIR>>/build --check-build-system CMakeFiles/Makefile.cmake 0
make[1]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[1]: Entering directory '/<<PKGBUILDDIR>>/build'
/usr/bin/cmake -E cmake_progress_start /<<PKGBUILDDIR>>/build/CMakeFiles /<<PKGBUILDDIR>>/build/CMakeFiles/progress.marks
make[1]: Leaving directory '/<<PKGBUILDDIR>>/build'
make -f CMakeFiles/Makefile2 all
make -f src/CMakeFiles/lambda_indexer.dir/build.make src/CMakeFiles/lambda_indexer.dir/depend
make -f src/CMakeFiles/lambda.dir/build.make src/CMakeFiles/lambda.dir/depend
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /<<PKGBUILDDIR>> /<<PKGBUILDDIR>>/src /<<PKGBUILDDIR>>/build /<<PKGBUILDDIR>>/build/src /<<PKGBUILDDIR>>/build/src/CMakeFiles/lambda_indexer.dir/DependInfo.cmake --color=
Scanning dependencies of target lambda_indexer
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make -f src/CMakeFiles/lambda_indexer.dir/build.make src/CMakeFiles/lambda_indexer.dir/build
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build && /usr/bin/cmake -E cmake_depends "Unix Makefiles" /<<PKGBUILDDIR>> /<<PKGBUILDDIR>>/src /<<PKGBUILDDIR>>/build /<<PKGBUILDDIR>>/build/src /<<PKGBUILDDIR>>/build/src/CMakeFiles/lambda.dir/DependInfo.cmake --color=
Scanning dependencies of target lambda
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make -f src/CMakeFiles/lambda.dir/build.make src/CMakeFiles/lambda.dir/build
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
[ 25%] Building CXX object src/CMakeFiles/lambda_indexer.dir/lambda_indexer.cpp.o
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
[ 50%] Building CXX object src/CMakeFiles/lambda.dir/lambda.cpp.o
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build/src && /usr/bin/c++  -DCMAKE_BUILD_TYPE=\"Release\" -DLAMBDA_MMAPPED_DB=1 -DSEQAN_APP_VERSION=\"1.0.2\" -DSEQAN_DATE=\"\" -DSEQAN_HAS_BZIP2="1 -DSEQAN_GLOBAL_EXCEPTION_HANDLER" -DSEQAN_HAS_EXECINFO=1 -DSEQAN_HAS_ZLIB=1 -DSEQAN_REVISION=\"\" -DSEQAN_VERSION_STRING=\"2.4.0\" -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -O3 -DNDEBUG -s   -o CMakeFiles/lambda_indexer.dir/lambda_indexer.cpp.o -c /<<PKGBUILDDIR>>/src/lambda_indexer.cpp
clang: warning: argument unused during compilation: '-s' [-Wunused-command-line-argument]
In file included from /<<PKGBUILDDIR>>/src/lambda_indexer.cpp:31:
In file included from /<<PKGBUILDDIR>>/src/lambda_indexer.hpp:35:
In file included from /<<PKGBUILDDIR>>/src/misc.hpp:34:
/<<PKGBUILDDIR>>/src/options.hpp:173:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    getcwd(cwd, 1000);
    ^~~~~~ ~~~~~~~~~
/<<PKGBUILDDIR>>/src/options.hpp:323:21: warning: expansion of date or time macro is not reproducible [-Wdate-time]
    setDate(parser, __DATE__);
                    ^
/<<PKGBUILDDIR>>/src/options.hpp:173:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    getcwd(cwd, 1000);
    ^~~~~~ ~~~~~~~~~
/<<PKGBUILDDIR>>/src/options.hpp:1132:5: note: in instantiation of function template specialization 'getCwd<std::__cxx11::basic_string<char> >' requested here
    getCwd(tmpdir);
    ^
3 warnings generated.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
[ 75%] Linking CXX executable ../bin/lambda_indexer
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/lambda_indexer.dir/link.txt --verbose=1
/usr/bin/c++  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -O3 -DNDEBUG -s  -Wl,-z,relro -Wl,-z,now -Wl,--whole-archive -lpthread -Wl,--no-whole-archive -rdynamic CMakeFiles/lambda_indexer.dir/lambda_indexer.cpp.o  -o ../bin/lambda_indexer -lrt -lz -lbz2 -lrt -lpthread -lz -lbz2 -lpthread 
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[2]: Entering directory '/<<PKGBUILDDIR>>/build'
[ 75%] Built target lambda_indexer
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build/src && /usr/bin/c++  -DCMAKE_BUILD_TYPE=\"Release\" -DLAMBDA_MMAPPED_DB=1 -DSEQAN_APP_VERSION=\"1.0.2\" -DSEQAN_DATE=\"\" -DSEQAN_HAS_BZIP2="1 -DSEQAN_GLOBAL_EXCEPTION_HANDLER" -DSEQAN_HAS_EXECINFO=1 -DSEQAN_HAS_ZLIB=1 -DSEQAN_REVISION=\"\" -DSEQAN_VERSION_STRING=\"2.4.0\" -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -O3 -DNDEBUG -s   -o CMakeFiles/lambda.dir/lambda.cpp.o -c /<<PKGBUILDDIR>>/src/lambda.cpp
clang: warning: argument unused during compilation: '-s' [-Wunused-command-line-argument]
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:32:
/<<PKGBUILDDIR>>/src/options.hpp:173:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    getcwd(cwd, 1000);
    ^~~~~~ ~~~~~~~~~
/<<PKGBUILDDIR>>/src/options.hpp:323:21: warning: expansion of date or time macro is not reproducible [-Wdate-time]
    setDate(parser, __DATE__);
                    ^
/<<PKGBUILDDIR>>/src/options.hpp:173:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    getcwd(cwd, 1000);
    ^~~~~~ ~~~~~~~~~
/<<PKGBUILDDIR>>/src/options.hpp:1132:5: note: in instantiation of function template specialization 'getCwd<std::__cxx11::basic_string<char> >' requested here
    getCwd(tmpdir);
    ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastReport_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastReport_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:145:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastReport_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastReport(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:147:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::NO_COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::NO_COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::NO_COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:168:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTN>' requested here
            return argConv3(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::Dna5_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::Tag<seqan::Simple_> >, seqan::BlastProgram::BLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:175:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTP>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTP, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:180:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::BLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::BLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:186:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTN>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTN, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:219:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), AminoAcid());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::IndexSa<void>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:316:16: note: in instantiation of function template specialization 'realMain<seqan::IndexSa<void>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<IndexSa<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
In file included from /<<PKGBUILDDIR>>/src/lambda.cpp:34:
/<<PKGBUILDDIR>>/src/lambda.hpp:1282:9: warning: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' is deprecated: Use the interface with an explicit query length parameter instead (use the record's member). [-Wdeprecated-declarations]
        computeEValue(bm, context(lH.gH.outfile));
        ^
/<<PKGBUILDDIR>>/src/lambda.hpp:1513:28: note: in instantiation of function template specialization 'computeBlastMatch<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
                int lret = computeBlastMatch(bm, *it, lH);
                           ^
/<<PKGBUILDDIR>>/src/lambda.cpp:462:19: note: in instantiation of function template specialization 'iterateMatches<LocalDataHolder<GlobalDataHolder<seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>, seqan::Tag<seqan::AffineGaps_> > >' requested here
            res = iterateMatches(localHolder);
                  ^
/<<PKGBUILDDIR>>/src/lambda.cpp:323:16: note: in instantiation of function template specialization 'realMain<seqan::FMIndex<void, LambdaFMIndexConfig>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::Tag<seqan::BlastTabular_>, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' requested here
        return realMain<TFMIndex<>>(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:266:16: note: in instantiation of function template specialization 'argConv4<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::Tag<seqan::AffineGaps_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
        return argConv4(options,
               ^
/<<PKGBUILDDIR>>/src/lambda.cpp:221:20: note: in instantiation of function template specialization 'argConv3<seqan::Tag<seqan::BlastTabular_>, seqan::SimpleType<unsigned char, seqan::ReducedAminoAcid_<seqan::Tag<seqan::Murphy10_> > >, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv3(options, TOutFormat(), Th(), Tp(), ReducedAminoAcid<Murphy10>());
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:191:20: note: in instantiation of function template specialization 'argConv2<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS, seqan::BlastProgram::TBLASTX>' requested here
            return argConv2(options,
                   ^
/<<PKGBUILDDIR>>/src/lambda.cpp:149:16: note: in instantiation of function template specialization 'argConv1<seqan::Tag<seqan::BlastTabular_>, seqan::BlastTabularSpec::COMMENTS>' requested here
        return argConv1(options, BlastTabular(), BlastTabularSpecSelector<BlastTabularSpec::COMMENTS>());
               ^
/usr/include/seqan/blast/blast_statistics.h:1174:3: note: 'computeEValue<seqan::BlastMatch<seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, seqan::Gaps<seqan::Segment<seqan::String<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, seqan::Tag<seqan::ArrayGaps_> >, unsigned int, seqan::Segment<seqan::String<char, seqan::Alloc<void> >, seqan::InfixSegment>, seqan::Segment<seqan::String<char, seqan::MMap<seqan::MMapConfig<seqan::File<seqan::Async<void> >, unsigned long> > >, seqan::InfixSegment>, std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, seqan::String<unsigned int, seqan::Alloc<void> > >, seqan::Score<int, seqan::ScoreMatrix<seqan::SimpleType<unsigned char, seqan::AminoAcid_>, seqan::ScoreSpecSelectable> >, seqan::BlastProgram::TBLASTX, seqan::BlastTabularSpec::COMMENTS>' has been explicitly marked deprecated here
[[deprecated("Use the interface with an explicit query length parameter instead (use the record's member).")]]
  ^
57 warnings generated.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
[100%] Linking CXX executable ../bin/lambda
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[3]: Entering directory '/<<PKGBUILDDIR>>/build'
cd /<<PKGBUILDDIR>>/build/src && /usr/bin/cmake -E cmake_link_script CMakeFiles/lambda.dir/link.txt --verbose=1
/usr/bin/c++  -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -O3 -DNDEBUG -s  -Wl,-z,relro -Wl,-z,now -Wl,--whole-archive -lpthread -Wl,--no-whole-archive -rdynamic CMakeFiles/lambda.dir/lambda.cpp.o  -o ../bin/lambda -lrt -lz -lbz2 -lrt -lpthread -lz -lbz2 -lpthread 
make[3]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[2]: Entering directory '/<<PKGBUILDDIR>>/build'
[100%] Built target lambda
make[2]: Leaving directory '/<<PKGBUILDDIR>>/build'
make[1]: Entering directory '/<<PKGBUILDDIR>>/build'
/usr/bin/cmake -E cmake_progress_start /<<PKGBUILDDIR>>/build/CMakeFiles 0
make[1]: Leaving directory '/<<PKGBUILDDIR>>/build'
   debian/rules override_dh_auto_test
make[1]: Entering directory '/<<PKGBUILDDIR>>'
cd build/tests && ctest --parallel 8
Test project /<<PKGBUILDDIR>>/build/tests
      Start  1: test_mkindex_blastn_sa
      Start  2: test_mkindex_blastn_fm
      Start  3: test_mkindex_blastp_sa
      Start  4: test_mkindex_blastp_fm
      Start  5: test_mkindex_blastx_sa
      Start  6: test_mkindex_blastx_fm
      Start  7: test_mkindex_tblastn_sa
      Start  8: test_mkindex_tblastn_fm
 1/80 Test  #5: test_mkindex_blastx_sa ...........   Passed    0.08 sec
      Start  9: test_mkindex_tblastx_sa
 2/80 Test  #3: test_mkindex_blastp_sa ...........   Passed    0.08 sec
      Start 10: test_mkindex_tblastx_fm
 3/80 Test  #4: test_mkindex_blastp_fm ...........   Passed    0.09 sec
      Start 11: test_search_blastn_sa_m0
 4/80 Test  #6: test_mkindex_blastx_fm ...........   Passed    0.09 sec
      Start 12: test_search_blastn_sa_m8
 5/80 Test  #1: test_mkindex_blastn_sa ...........   Passed    0.45 sec
      Start 13: test_search_blastn_sa_m9
 6/80 Test  #2: test_mkindex_blastn_fm ...........   Passed    0.47 sec
      Start 14: test_search_blastn_sa_sam
 7/80 Test  #7: test_mkindex_tblastn_sa ..........***Failed    0.62 sec
      Start 15: test_search_blastn_sa_bam
 8/80 Test  #8: test_mkindex_tblastn_fm ..........***Failed    0.63 sec
      Start 16: test_search_blastn_sa_m9.gz
 9/80 Test  #9: test_mkindex_tblastx_sa ..........***Failed    0.58 sec
      Start 17: test_search_blastn_sa_sam.bz2
10/80 Test #10: test_mkindex_tblastx_fm ..........***Failed    0.62 sec
      Start 18: test_search_blastn_fm_m0
11/80 Test #12: test_search_blastn_sa_m8 .........   Passed    2.40 sec
      Start 19: test_search_blastn_fm_m8
12/80 Test #13: test_search_blastn_sa_m9 .........   Passed    2.41 sec
      Start 20: test_search_blastn_fm_m9
13/80 Test #14: test_search_blastn_sa_sam ........   Passed    2.54 sec
      Start 21: test_search_blastn_fm_sam
14/80 Test #15: test_search_blastn_sa_bam ........***Failed    2.41 sec
      Start 22: test_search_blastn_fm_bam
15/80 Test #11: test_search_blastn_sa_m0 .........   Passed    2.98 sec
      Start 23: test_search_blastn_fm_m9.gz
16/80 Test #16: test_search_blastn_sa_m9.gz ......   Passed    2.56 sec
      Start 24: test_search_blastn_fm_sam.bz2
17/80 Test #18: test_search_blastn_fm_m0 .........   Passed    2.97 sec
      Start 25: test_search_blastp_sa_m0
18/80 Test #25: test_search_blastp_sa_m0 .........   Passed    0.31 sec
      Start 26: test_search_blastp_sa_m8
19/80 Test #17: test_search_blastn_sa_sam.bz2 ....   Passed    3.44 sec
      Start 27: test_search_blastp_sa_m9
20/80 Test #26: test_search_blastp_sa_m8 .........   Passed    0.28 sec
      Start 28: test_search_blastp_sa_sam
21/80 Test #27: test_search_blastp_sa_m9 .........   Passed    0.28 sec
      Start 29: test_search_blastp_sa_bam
22/80 Test #28: test_search_blastp_sa_sam ........   Passed    0.28 sec
      Start 30: test_search_blastp_sa_m9.gz
23/80 Test #29: test_search_blastp_sa_bam ........***Failed    0.28 sec
      Start 31: test_search_blastp_sa_sam.bz2
24/80 Test #30: test_search_blastp_sa_m9.gz ......   Passed    0.30 sec
      Start 32: test_search_blastp_fm_m0
25/80 Test #19: test_search_blastn_fm_m8 .........   Passed    2.44 sec
      Start 33: test_search_blastp_fm_m8
26/80 Test #31: test_search_blastp_sa_sam.bz2 ....   Passed    0.33 sec
      Start 34: test_search_blastp_fm_m9
27/80 Test #32: test_search_blastp_fm_m0 .........   Passed    0.30 sec
      Start 35: test_search_blastp_fm_sam
28/80 Test #33: test_search_blastp_fm_m8 .........   Passed    0.26 sec
      Start 36: test_search_blastp_fm_bam
29/80 Test #20: test_search_blastn_fm_m9 .........   Passed    2.41 sec
      Start 37: test_search_blastp_fm_m9.gz
30/80 Test #34: test_search_blastp_fm_m9 .........   Passed    0.27 sec
      Start 38: test_search_blastp_fm_sam.bz2
31/80 Test #35: test_search_blastp_fm_sam ........   Passed    0.26 sec
      Start 39: test_search_blastx_sa_m0
32/80 Test #36: test_search_blastp_fm_bam ........***Failed    0.25 sec
      Start 40: test_search_blastx_sa_m8
33/80 Test #22: test_search_blastn_fm_bam ........***Failed    2.45 sec
      Start 41: test_search_blastx_sa_m9
34/80 Test #21: test_search_blastn_fm_sam ........   Passed    2.55 sec
      Start 42: test_search_blastx_sa_sam
35/80 Test #37: test_search_blastp_fm_m9.gz ......   Passed    0.30 sec
      Start 43: test_search_blastx_sa_bam
36/80 Test #38: test_search_blastp_fm_sam.bz2 ....   Passed    0.37 sec
      Start 44: test_search_blastx_sa_m9.gz
37/80 Test #23: test_search_blastn_fm_m9.gz ......   Passed    2.59 sec
      Start 45: test_search_blastx_sa_sam.bz2
38/80 Test #40: test_search_blastx_sa_m8 .........***Failed    1.08 sec
      Start 46: test_search_blastx_fm_m0
39/80 Test #41: test_search_blastx_sa_m9 .........***Failed    1.07 sec
      Start 47: test_search_blastx_fm_m8
40/80 Test #43: test_search_blastx_sa_bam ........***Failed    1.02 sec
      Start 48: test_search_blastx_fm_m9
41/80 Test #39: test_search_blastx_sa_m0 .........***Failed    1.19 sec
      Start 49: test_search_blastx_fm_sam
42/80 Test #42: test_search_blastx_sa_sam ........***Failed    1.09 sec
      Start 50: test_search_blastx_fm_bam
43/80 Test #24: test_search_blastn_fm_sam.bz2 ....   Passed    3.48 sec
      Start 51: test_search_blastx_fm_m9.gz
44/80 Test #44: test_search_blastx_sa_m9.gz ......***Failed    1.18 sec
      Start 52: test_search_blastx_fm_sam.bz2
45/80 Test #45: test_search_blastx_sa_sam.bz2 ....***Failed    1.76 sec
      Start 53: test_search_tblastn_sa_m0
46/80 Test #48: test_search_blastx_fm_m9 .........***Failed    1.00 sec
      Start 54: test_search_tblastn_sa_m8
47/80 Test #47: test_search_blastx_fm_m8 .........***Failed    1.02 sec
      Start 55: test_search_tblastn_sa_m9
48/80 Test #49: test_search_blastx_fm_sam ........***Failed    1.06 sec
      Start 56: test_search_tblastn_sa_sam
49/80 Test #50: test_search_blastx_fm_bam ........***Failed    1.05 sec
      Start 57: test_search_tblastn_sa_bam
50/80 Test #46: test_search_blastx_fm_m0 .........***Failed    1.21 sec
      Start 58: test_search_tblastn_sa_m9.gz
51/80 Test #51: test_search_blastx_fm_m9.gz ......***Failed    1.13 sec
      Start 59: test_search_tblastn_sa_sam.bz2
52/80 Test #53: test_search_tblastn_sa_m0 ........***Failed    0.60 sec
      Start 60: test_search_tblastn_fm_m0
53/80 Test #55: test_search_tblastn_sa_m9 ........***Failed    0.59 sec
      Start 61: test_search_tblastn_fm_m8
54/80 Test #54: test_search_tblastn_sa_m8 ........***Failed    0.60 sec
      Start 62: test_search_tblastn_fm_m9
55/80 Test #56: test_search_tblastn_sa_sam .......***Failed    0.61 sec
      Start 63: test_search_tblastn_fm_sam
56/80 Test #57: test_search_tblastn_sa_bam .......***Failed    0.60 sec
      Start 64: test_search_tblastn_fm_bam
57/80 Test #58: test_search_tblastn_sa_m9.gz .....***Failed    0.60 sec
      Start 65: test_search_tblastn_fm_m9.gz
58/80 Test #59: test_search_tblastn_sa_sam.bz2 ...***Failed    0.57 sec
      Start 66: test_search_tblastn_fm_sam.bz2
59/80 Test #52: test_search_blastx_fm_sam.bz2 ....***Failed    1.71 sec
      Start 67: test_search_tblastx_sa_m0
60/80 Test #60: test_search_tblastn_fm_m0 ........***Failed    0.64 sec
      Start 68: test_search_tblastx_sa_m8
61/80 Test #62: test_search_tblastn_fm_m9 ........***Failed    0.63 sec
      Start 69: test_search_tblastx_sa_m9
62/80 Test #61: test_search_tblastn_fm_m8 ........***Failed    0.65 sec
      Start 70: test_search_tblastx_sa_sam
63/80 Test #63: test_search_tblastn_fm_sam .......***Failed    0.66 sec
      Start 71: test_search_tblastx_sa_bam
64/80 Test #65: test_search_tblastn_fm_m9.gz .....***Failed    0.61 sec
      Start 72: test_search_tblastx_sa_m9.gz
65/80 Test #64: test_search_tblastn_fm_bam .......***Failed    0.67 sec
      Start 73: test_search_tblastx_sa_sam.bz2
66/80 Test #66: test_search_tblastn_fm_sam.bz2 ...***Failed    0.63 sec
      Start 74: test_search_tblastx_fm_m0
67/80 Test #67: test_search_tblastx_sa_m0 ........***Failed    0.60 sec
      Start 75: test_search_tblastx_fm_m8
68/80 Test #68: test_search_tblastx_sa_m8 ........***Failed    0.62 sec
      Start 76: test_search_tblastx_fm_m9
69/80 Test #69: test_search_tblastx_sa_m9 ........***Failed    0.56 sec
      Start 77: test_search_tblastx_fm_sam
70/80 Test #70: test_search_tblastx_sa_sam .......***Failed    0.63 sec
      Start 78: test_search_tblastx_fm_bam
71/80 Test #71: test_search_tblastx_sa_bam .......***Failed    0.59 sec
      Start 79: test_search_tblastx_fm_m9.gz
72/80 Test #72: test_search_tblastx_sa_m9.gz .....***Failed    0.61 sec
      Start 80: test_search_tblastx_fm_sam.bz2
73/80 Test #73: test_search_tblastx_sa_sam.bz2 ...***Failed    0.60 sec
74/80 Test #74: test_search_tblastx_fm_m0 ........***Failed    0.63 sec
75/80 Test #75: test_search_tblastx_fm_m8 ........***Failed    0.59 sec
76/80 Test #76: test_search_tblastx_fm_m9 ........***Failed    0.56 sec
77/80 Test #77: test_search_tblastx_fm_sam .......***Failed    0.51 sec
78/80 Test #78: test_search_tblastx_fm_bam .......***Failed    0.51 sec
79/80 Test #79: test_search_tblastx_fm_m9.gz .....***Failed    0.46 sec
80/80 Test #80: test_search_tblastx_fm_sam.bz2 ...***Failed    0.52 sec

38% tests passed, 50 tests failed out of 80

Total Test time (real) =  10.08 sec

The following tests FAILED:
	  7 - test_mkindex_tblastn_sa (Failed)
	  8 - test_mkindex_tblastn_fm (Failed)
	  9 - test_mkindex_tblastx_sa (Failed)
	 10 - test_mkindex_tblastx_fm (Failed)
	 15 - test_search_blastn_sa_bam (Failed)
	 22 - test_search_blastn_fm_bam (Failed)
	 29 - test_search_blastp_sa_bam (Failed)
	 36 - test_search_blastp_fm_bam (Failed)
	 39 - test_search_blastx_sa_m0 (Failed)
	 40 - test_search_blastx_sa_m8 (Failed)
	 41 - test_search_blastx_sa_m9 (Failed)
	 42 - test_search_blastx_sa_sam (Failed)
	 43 - test_search_blastx_sa_bam (Failed)
	 44 - test_search_blastx_sa_m9.gz (Failed)
	 45 - test_search_blastx_sa_sam.bz2 (Failed)
	 46 - test_search_blastx_fm_m0 (Failed)
	 47 - test_search_blastx_fm_m8 (Failed)
	 48 - test_search_blastx_fm_m9 (Failed)
	 49 - test_search_blastx_fm_sam (Failed)
	 50 - test_search_blastx_fm_bam (Failed)
	 51 - test_search_blastx_fm_m9.gz (Failed)
	 52 - test_search_blastx_fm_sam.bz2 (Failed)
	 53 - test_search_tblastn_sa_m0 (Failed)
	 54 - test_search_tblastn_sa_m8 (Failed)
	 55 - test_search_tblastn_sa_m9 (Failed)
	 56 - test_search_tblastn_sa_sam (Failed)
	 57 - test_search_tblastn_sa_bam (Failed)
	 58 - test_search_tblastn_sa_m9.gz (Failed)
	 59 - test_search_tblastn_sa_sam.bz2 (Failed)
	 60 - test_search_tblastn_fm_m0 (Failed)
	 61 - test_search_tblastn_fm_m8 (Failed)
	 62 - test_search_tblastn_fm_m9 (Failed)
	 63 - test_search_tblastn_fm_sam (Failed)
	 64 - test_search_tblastn_fm_bam (Failed)
	 65 - test_search_tblastn_fm_m9.gz (Failed)
	 66 - test_search_tblastn_fm_sam.bz2 (Failed)
	 67 - test_search_tblastx_sa_m0 (Failed)
	 68 - test_search_tblastx_sa_m8 (Failed)
	 69 - test_search_tblastx_sa_m9 (Failed)
	 70 - test_search_tblastx_sa_sam (Failed)
	 71 - test_search_tblastx_sa_bam (Failed)
	 72 - test_search_tblastx_sa_m9.gz (Failed)
	 73 - test_search_tblastx_sa_sam.bz2 (Failed)
	 74 - test_search_tblastx_fm_m0 (Failed)
	 75 - test_search_tblastx_fm_m8 (Failed)
	 76 - test_search_tblastx_fm_m9 (Failed)
	 77 - test_search_tblastx_fm_sam (Failed)
	 78 - test_search_tblastx_fm_bam (Failed)
	 79 - test_search_tblastx_fm_m9.gz (Failed)
	 80 - test_search_tblastx_fm_sam.bz2 (Failed)
Errors while running CTest
make[1]: *** [debian/rules:32: override_dh_auto_test] Error 8
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
make: *** [debian/rules:7: build-arch] Error 2
dpkg-buildpackage: error: debian/rules build-arch subprocess returned exit status 2
--------------------------------------------------------------------------------
Build finished at 2018-05-02T13:08:50Z

Finished
--------


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use
E: Build failure (dpkg-buildpackage died)

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: any
Build-Space: 233908
Build-Time: 280
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 8
Job: lambda-align_1.0.3-3
Machine Architecture: amd64
Package: lambda-align
Package-Time: 302
Source-Version: 1.0.3-3
Space: 233908
Status: attempted
Version: 1.0.3-3
--------------------------------------------------------------------------------
Finished at 2018-05-02T13:08:50Z
Build needed 00:05:02, 233908k disk space
E: Build failure (dpkg-buildpackage died)
DC-Status: Failed 302.926427005s
DC-Time-Estimation: 302.926427005 versus expected 148 (r/m: 1.046800182466216 ; m: 148.0)
