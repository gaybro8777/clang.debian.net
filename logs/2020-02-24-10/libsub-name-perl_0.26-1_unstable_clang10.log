DC-Build-Header: libsub-name-perl 0.26-1 / 2020-02-25 06:57:10 +0000
DC-Task: type:rebuild-binarch-only source:libsub-name-perl version:0.26-1 chroot:unstable esttime:44 logfile:/tmp/libsub-name-perl_0.26-1_unstable_clang10.log modes:clang10:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang10 libsub-name-perl_0.26-1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-2-44.eu-central-1.compute.internal

+==============================================================================+
| libsub-name-perl 0.26-1 (amd64)              Tue, 25 Feb 2020 06:57:10 +0000 |
+==============================================================================+

Package: libsub-name-perl
Version: 0.26-1
Source Version: 0.26-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-aca001c8-c3ae-42f1-91e8-25b89c47a95d' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang10
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=10
+ echo 'Install of clang-10'
Install of clang-10
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6572 kB in 2s (3416 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-10 libomp-10-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-10-dev
  libclang-cpp10 libclang1-10 libedit2 libgc1c2 libllvm10 libobjc4 libomp5-10
  libz3-4
Suggested packages:
  clang-10-doc libomp-10-doc
Recommended packages:
  llvm-10-dev python3
The following NEW packages will be installed:
  clang-10 lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-10-dev libclang-cpp10 libclang1-10 libedit2 libgc1c2
  libllvm10 libobjc-9-dev libobjc4 libomp-10-dev libomp5-10 libz3-4
0 upgraded, 17 newly installed, 0 to remove and 2 not upgraded.
Need to get 46.4 MB of archives.
After this operation, 238 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm10 amd64 1:10.0.0~+rc2-1 [15.5 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp10 amd64 1:10.0.0~+rc2-1 [9069 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-10-dev amd64 1:10.0.0~+rc2-1 [2782 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 libclang1-10 amd64 1:10.0.0~+rc2-1 [7607 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 clang-10 amd64 1:10.0.0~+rc2-1 [103 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libomp5-10 amd64 1:10.0.0~+rc2-1 [337 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libomp-10-dev amd64 1:10.0.0~+rc2-1 [84.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 46.4 MB in 1s (87.3 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm10:amd64.
Preparing to unpack .../03-libllvm10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang-cpp10.
Preparing to unpack .../04-libclang-cpp10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-cpp10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../05-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../06-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../07-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../08-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../09-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../10-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../11-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-10-dev.
Preparing to unpack .../12-libclang-common-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang1-10.
Preparing to unpack .../13-libclang1-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang1-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package clang-10.
Preparing to unpack .../14-clang-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking clang-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp5-10:amd64.
Preparing to unpack .../15-libomp5-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp-10-dev.
Preparing to unpack .../16-libomp-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libclang1-10 (1:10.0.0~+rc2-1) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libclang-cpp10 (1:10.0.0~+rc2-1) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Setting up clang-10 (1:10.0.0~+rc2-1) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-10 g++-4.6
+ ln -s clang-10 gcc-4.6
+ ln -s clang-10 cpp-4.6
+ ln -s clang-10 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-10 g++-4.7
+ ln -s clang-10 gcc-4.7
+ ln -s clang-10 cpp-4.7
+ ln -s clang-10 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-10 g++-4.8
+ ln -s clang-10 gcc-4.8
+ ln -s clang-10 cpp-4.8
+ ln -s clang-10 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-10 g++-4.9
+ ln -s clang-10 gcc-4.9
+ ln -s clang-10 cpp-4.9
+ ln -s clang-10 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-10 g++-5
+ ln -s clang-10 gcc-5
+ ln -s clang-10 cpp-5
+ ln -s clang-10 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-10 g++-6
+ ln -s clang-10 gcc-6
+ ln -s clang-10 cpp-6
+ ln -s clang-10 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-10 g++-7
+ ln -s clang-10 gcc-7
+ ln -s clang-10 cpp-7
+ ln -s clang-10 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-10 g++-8
+ ln -s clang-10 gcc-8
+ ln -s clang-10 cpp-8
+ ln -s clang-10 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-10 g++-9
+ ln -s clang-10 gcc-9
+ ln -s clang-10 cpp-9
+ ln -s clang-10 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-10 g++-10
+ ln -s clang-10 gcc-10
+ ln -s clang-10 cpp-10
+ ln -s clang-10 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/libsub-name-perl-EnXGYl
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang10'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/libsub-name-perl-EnXGYl/resolver-z97kYx' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (3573 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'libsub-name-perl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/perl-team/modules/packages/libsub-name-perl.git
Please use:
git clone https://salsa.debian.org/perl-team/modules/packages/libsub-name-perl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 90.5 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main libsub-name-perl 0.26-1 (dsc) [2254 B]
Get:2 http://127.0.0.1:12990/debian sid/main libsub-name-perl 0.26-1 (tar) [84.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main libsub-name-perl 0.26-1 (diff) [3324 B]
Fetched 90.5 kB in 0s (966 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/libsub-name-perl-EnXGYl/libsub-name-perl-0.26' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/libsub-name-perl-EnXGYl' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 12), libdevel-checkbin-perl, libtest-simple-perl, perl, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 12), libdevel-checkbin-perl, libtest-simple-perl, perl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [392 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [476 B]
Fetched 1825 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libdevel-checkbin-perl libelf1 libfile-stripnondeterminism-perl libglib2.0-0
  libicu63 libmagic-mgc libmagic1 libpipeline1 libsigsegv2
  libsub-override-perl libtool libuchardet0 libxml2 m4 man-db po-debconf
  sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff
  libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc apparmor less
  www-browser libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libdevel-checkbin-perl libelf1 libfile-stripnondeterminism-perl libglib2.0-0
  libicu63 libmagic-mgc libmagic1 libpipeline1 libsigsegv2
  libsub-override-perl libtool libuchardet0 libxml2 m4 man-db po-debconf
  sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 35 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.2 MB of archives.
After this operation, 70.4 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [904 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libdevel-checkbin-perl all 0.04-1 [5418 B]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 19.2 MB in 0s (78.5 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../16-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../17-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../18-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../25-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../26-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../27-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../28-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../29-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../30-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../31-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../32-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package libdevel-checkbin-perl.
Preparing to unpack .../33-libdevel-checkbin-perl_0.04-1_all.deb ...
Unpacking libdevel-checkbin-perl (0.04-1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../34-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libdevel-checkbin-perl (0.04-1) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up m4 (1.4.18-4) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.19.8.1-10) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up po-debconf (1.0.21) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-10_1:10.0.0~+rc2-1 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-10-dev_1:10.0.0~+rc2-1 libclang-cpp10_1:10.0.0~+rc2-1 libclang1-10_1:10.0.0~+rc2-1 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdevel-checkbin-perl_0.04-1 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm10_1:10.0.0~+rc2-1 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpfr6_4.0.2-1 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-10-dev_1:10.0.0~+rc2-1 libomp5-10_1:10.0.0~+rc2-1 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libquadmath0_10-20200222-1 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libss2_1.45.5-2 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: libsub-name-perl
Binary: libsub-name-perl
Architecture: any
Version: 0.26-1
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Ansgar Burchardt <ansgar@debian.org>
Homepage: https://metacpan.org/release/Sub-Name
Standards-Version: 4.4.1
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libsub-name-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libsub-name-perl.git
Testsuite: autopkgtest-pkg-perl
Build-Depends: debhelper-compat (= 12), libdevel-checkbin-perl, libtest-simple-perl, perl
Package-List:
 libsub-name-perl deb perl optional arch=any
Checksums-Sha1:
 c4afefebab1e69ecaaeef9ceb314e15c04e8eef1 84898 libsub-name-perl_0.26.orig.tar.gz
 e53b2289bd2109584ba681b6fc425f8a5417caea 3324 libsub-name-perl_0.26-1.debian.tar.xz
Checksums-Sha256:
 2d2f2d697d516c89547e7c4307f1e79441641cae2c7395e7319b306d390df105 84898 libsub-name-perl_0.26.orig.tar.gz
 3fdda61bab2a814cd5e7f0f72b56acfb79abf7843d8f1bf3028c3283ed071c44 3324 libsub-name-perl_0.26-1.debian.tar.xz
Files:
 0eb109dfa223e056c07d84c9fbda1762 84898 libsub-name-perl_0.26.orig.tar.gz
 95810c7ad8fd62bbea239c47dafa169d 3324 libsub-name-perl_0.26-1.debian.tar.xz
Dgit: 80d4ffb41501fa11875928635e1631e0892645d2 debian archive/debian/0.26-1 https://git.dgit.debian.org/libsub-name-perl

-----BEGIN PGP SIGNATURE-----

iQJJBAEBCgAzFiEEHRt1x6SY9ZXd6PxEAfr306of05kFAl2iwN4VHGludHJpZ2Vy
aUBkZWJpYW4ub3JnAAoJEAH699OqH9OZD+QP/Ru/aPCeI7gONVdthxtF7rXSEQ7l
VkJg61Rw/USSUjHG6Iz/09nyxf75BbR2vkdSJKyVR1y13DagktbTrVuayjLeGaTW
cqVGVtn+bchMRDtu8pN3fmU/ReFzAvhOBGg4wiXJH+wqSidi3RqQHfQn+n9+mrFi
fFdX3164X3vAT9/KX5zVsk5wBl37hag1jcr4k7YVw7FtN+ez4SXvpSNl+LoS/2Ma
5PhzmhSLiVttcexytAyOtZkZegp2zXpsJdIcfoNl/bfBp56ka8HNeX0VgRXWrqIy
qJDY/5mObyaBQmss7b0PCbHwiDrQcgSUaomxD2p6bL9ScUlUBp2UWAXzvNsFT2sO
Bz9kC/sLAw6/bTd/ejdV+MFm7Aq8dC83za9pJZ4J9ViZB7PAmGc1t/N8U2xUdEr7
8noUzqPkHugfSpwc6h4tOCc0B3q5U1qy9g4yggEgGk2KCEV6VKGauPHcFmSSCCfs
tXdui7W/gpbBsr73TF0smkAoeX3I3+yg1cE/eclnHcelLOHtwnOtM0RrpdaKCZ2Y
zMNtd+TX6D7sQ8MjVGQ48TNo0GEd79l/TM63Q5HquPH94jrReSQD4VeIgU261pnS
2stMyLeZe5+zbSxONN5wQ1/BZe4CTRELZFlLhTnvDA75T0B7wzcylRGTMGC4l6a7
NDply5RKXdHTJwMd
=AoeG
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Sun Oct 13 06:14:54 2019 UTC
gpgv:                using RSA key 1D1B75C7A498F595DDE8FC4401FAF7D3AA1FD399
gpgv:                issuer "intrigeri@debian.org"
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./libsub-name-perl_0.26-1.dsc
dpkg-source: info: extracting libsub-name-perl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking libsub-name-perl_0.26.orig.tar.gz
dpkg-source: info: unpacking libsub-name-perl_0.26-1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-aca001c8-c3ae-42f1-91e8-25b89c47a95d
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package libsub-name-perl
dpkg-buildpackage: info: source version 0.26-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by intrigeri <intrigeri@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 debian/rules clean
dh clean
   dh_clean
 debian/rules binary
dh binary
   dh_update_autotools_config
   dh_autoreconf
   dh_auto_configure
	perl Makefile.PL INSTALLDIRS=vendor "OPTIMIZE=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2" "LD=x86_64-linux-gnu-gcc -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now"
Checking if your kit is complete...
Looks good
Generating a Unix-style Makefile
Writing Makefile for Sub::Name
Writing MYMETA.yml and MYMETA.json
   dh_auto_build
	make -j4
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Running Mkbootstrap for Name ()
"/usr/bin/perl" "/usr/share/perl/5.30/ExtUtils/xsubpp"  -typemap '/usr/share/perl/5.30/ExtUtils/typemap'  Name.xs > Name.xsc
chmod 644 "Name.bs"
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- Name.bs blib/arch/auto/Sub/Name/Name.bs 644
cp lib/Sub/Name.pm blib/lib/Sub/Name.pm
mv Name.xsc Name.c
x86_64-linux-gnu-gcc -c   -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -DVERSION=\"0.26\" -DXS_VERSION=\"0.26\" -fPIC "-I/usr/lib/x86_64-linux-gnu/perl/5.30/CORE"   Name.c
rm -f blib/arch/auto/Sub/Name/Name.so
x86_64-linux-gnu-gcc -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -Wl,-z,now  -shared -L/usr/local/lib -fstack-protector-strong  Name.o  -o blib/arch/auto/Sub/Name/Name.so  \
      \
  
chmod 755 blib/arch/auto/Sub/Name/Name.so
Manifying 1 pod document
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 test TEST_VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- Name.bs blib/arch/auto/Sub/Name/Name.bs 644
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(1, 'blib/lib', 'blib/arch')" t/*.t
# 
# Versions for all modules listed in MYMETA.json (including optional ones):
# 
# === Configure Requires ===
# 
#     Module              Want Have
#     ------------------- ---- ----
#     ExtUtils::MakeMaker  any 7.34
# 
# === Configure Suggests ===
# 
#     Module      Want Have
#     -------- ------- ----
#     JSON::PP 2.27300 4.02
# 
# === Build Requires ===
# 
#     Module              Want Have
#     ------------------- ---- ----
#     ExtUtils::MakeMaker  any 7.34
# 
# === Test Requires ===
# 
#     Module              Want     Have
#     ------------------- ---- --------
#     B                    any     1.76
#     B::Deparse           any     1.49
#     Carp                 any     1.50
#     ExtUtils::MakeMaker  any     7.34
#     File::Spec           any     3.78
#     Test::More           any 1.302162
#     if                   any   0.0608
# 
# === Test Recommends ===
# 
#     Module         Want     Have
#     ---------- -------- --------
#     CPAN::Meta 2.120900 2.150010
# 
# === Test Suggests ===
# 
#     Module          Want    Have
#     --------------- ---- -------
#     B::C            1.48 missing
#     Devel::CheckBin  any    0.04
# 
# === Runtime Requires ===
# 
#     Module   Want Have
#     -------- ---- ----
#     Exporter  any 5.73
#     XSLoader  any 0.30
#     strict    any 1.11
#     warnings  any 1.44
# 
# === Other Modules ===
# 
#     Module             Have
#     --------------- -------
#     DynaLoader         1.45
#     Encode             3.01
#     File::Temp       0.2309
#     JSON::PP           4.02
#     Module::Runtime missing
#     Pod::Coverage   missing
#     Sub::Name          0.26
#     YAML            missing
#     autodie            2.29
# 
t/00-report-prereqs.t .. 
1..1
ok 1
ok
t/exotic_names.t ....... 
1..1560
ok 1 - stash name for renamed closure is correct when it contains \x00 ( \0 )
ok 2 - caller() in renamed closure returns correct name when it contains \x00 ( \0 )
ok 3 - %DB::sub entry for renamed closure is correct when it contains \x00 ( \0 )
ok 4 - stash name for natively compiled sub is correct when it contains \x00 ( \0 )
ok 5 - caller() in natively compiled sub returns correct name when it contains \x00 ( \0 )
ok 6 - %DB::sub entry for natively compiled sub is correct when it contains \x00 ( \0 )
ok 7 - stash name for renamed closure is correct when it contains \x01 ( \1 )
ok 8 - caller() in renamed closure returns correct name when it contains \x01 ( \1 )
ok 9 - %DB::sub entry for renamed closure is correct when it contains \x01 ( \1 )
ok 10 - stash name for natively compiled sub is correct when it contains \x01 ( \1 )
ok 11 - caller() in natively compiled sub returns correct name when it contains \x01 ( \1 )
ok 12 - %DB::sub entry for natively compiled sub is correct when it contains \x01 ( \1 )
ok 13 - stash name for renamed closure is correct when it contains \x02 ( \2 )
ok 14 - caller() in renamed closure returns correct name when it contains \x02 ( \2 )
ok 15 - %DB::sub entry for renamed closure is correct when it contains \x02 ( \2 )
ok 16 - stash name for natively compiled sub is correct when it contains \x02 ( \2 )
ok 17 - caller() in natively compiled sub returns correct name when it contains \x02 ( \2 )
ok 18 - %DB::sub entry for natively compiled sub is correct when it contains \x02 ( \2 )
ok 19 - stash name for renamed closure is correct when it contains \x03 ( \3 )
ok 20 - caller() in renamed closure returns correct name when it contains \x03 ( \3 )
ok 21 - %DB::sub entry for renamed closure is correct when it contains \x03 ( \3 )
ok 22 - stash name for natively compiled sub is correct when it contains \x03 ( \3 )
ok 23 - caller() in natively compiled sub returns correct name when it contains \x03 ( \3 )
ok 24 - %DB::sub entry for natively compiled sub is correct when it contains \x03 ( \3 )
ok 25 - stash name for renamed closure is correct when it contains \x04 ( \4 )
ok 26 - caller() in renamed closure returns correct name when it contains \x04 ( \4 )
ok 27 - %DB::sub entry for renamed closure is correct when it contains \x04 ( \4 )
ok 28 - stash name for natively compiled sub is correct when it contains \x04 ( \4 )
ok 29 - caller() in natively compiled sub returns correct name when it contains \x04 ( \4 )
ok 30 - %DB::sub entry for natively compiled sub is correct when it contains \x04 ( \4 )
ok 31 - stash name for renamed closure is correct when it contains \x05 ( \5 )
ok 32 - caller() in renamed closure returns correct name when it contains \x05 ( \5 )
ok 33 - %DB::sub entry for renamed closure is correct when it contains \x05 ( \5 )
ok 34 - stash name for natively compiled sub is correct when it contains \x05 ( \5 )
ok 35 - caller() in natively compiled sub returns correct name when it contains \x05 ( \5 )
ok 36 - %DB::sub entry for natively compiled sub is correct when it contains \x05 ( \5 )
ok 37 - stash name for renamed closure is correct when it contains \x06 ( \6 )
ok 38 - caller() in renamed closure returns correct name when it contains \x06 ( \6 )
ok 39 - %DB::sub entry for renamed closure is correct when it contains \x06 ( \6 )
ok 40 - stash name for natively compiled sub is correct when it contains \x06 ( \6 )
ok 41 - caller() in natively compiled sub returns correct name when it contains \x06 ( \6 )
ok 42 - %DB::sub entry for natively compiled sub is correct when it contains \x06 ( \6 )
ok 43 - stash name for renamed closure is correct when it contains \x07 ( \7 )
ok 44 - caller() in renamed closure returns correct name when it contains \x07 ( \7 )
ok 45 - %DB::sub entry for renamed closure is correct when it contains \x07 ( \7 )
ok 46 - stash name for natively compiled sub is correct when it contains \x07 ( \7 )
ok 47 - caller() in natively compiled sub returns correct name when it contains \x07 ( \7 )
ok 48 - %DB::sub entry for natively compiled sub is correct when it contains \x07 ( \7 )
ok 49 - stash name for renamed closure is correct when it contains \x08 ( \10 )
ok 50 - caller() in renamed closure returns correct name when it contains \x08 ( \10 )
ok 51 - %DB::sub entry for renamed closure is correct when it contains \x08 ( \10 )
ok 52 - stash name for natively compiled sub is correct when it contains \x08 ( \10 )
ok 53 - caller() in natively compiled sub returns correct name when it contains \x08 ( \10 )
ok 54 - %DB::sub entry for natively compiled sub is correct when it contains \x08 ( \10 )
ok 55 - stash name for renamed closure is correct when it contains \x09 ( \11 )
ok 56 - caller() in renamed closure returns correct name when it contains \x09 ( \11 )
ok 57 - %DB::sub entry for renamed closure is correct when it contains \x09 ( \11 )
ok 58 - stash name for natively compiled sub is correct when it contains \x09 ( \11 )
ok 59 - caller() in natively compiled sub returns correct name when it contains \x09 ( \11 )
ok 60 - %DB::sub entry for natively compiled sub is correct when it contains \x09 ( \11 )
ok 61 - stash name for renamed closure is correct when it contains \x0A ( \12 )
ok 62 - caller() in renamed closure returns correct name when it contains \x0A ( \12 )
ok 63 - %DB::sub entry for renamed closure is correct when it contains \x0A ( \12 )
ok 64 - stash name for natively compiled sub is correct when it contains \x0A ( \12 )
ok 65 - caller() in natively compiled sub returns correct name when it contains \x0A ( \12 )
ok 66 - %DB::sub entry for natively compiled sub is correct when it contains \x0A ( \12 )
ok 67 - stash name for renamed closure is correct when it contains \x0B ( \13 )
ok 68 - caller() in renamed closure returns correct name when it contains \x0B ( \13 )
ok 69 - %DB::sub entry for renamed closure is correct when it contains \x0B ( \13 )
ok 70 - stash name for natively compiled sub is correct when it contains \x0B ( \13 )
ok 71 - caller() in natively compiled sub returns correct name when it contains \x0B ( \13 )
ok 72 - %DB::sub entry for natively compiled sub is correct when it contains \x0B ( \13 )
ok 73 - stash name for renamed closure is correct when it contains \x0C ( \14 )
ok 74 - caller() in renamed closure returns correct name when it contains \x0C ( \14 )
ok 75 - %DB::sub entry for renamed closure is correct when it contains \x0C ( \14 )
ok 76 - stash name for natively compiled sub is correct when it contains \x0C ( \14 )
ok 77 - caller() in natively compiled sub returns correct name when it contains \x0C ( \14 )
ok 78 - %DB::sub entry for natively compiled sub is correct when it contains \x0C ( \14 )
ok 79 - stash name for renamed closure is correct when it contains \x0D ( \15 )
ok 80 - caller() in renamed closure returns correct name when it contains \x0D ( \15 )
ok 81 - %DB::sub entry for renamed closure is correct when it contains \x0D ( \15 )
ok 82 - stash name for natively compiled sub is correct when it contains \x0D ( \15 )
ok 83 - caller() in natively compiled sub returns correct name when it contains \x0D ( \15 )
ok 84 - %DB::sub entry for natively compiled sub is correct when it contains \x0D ( \15 )
ok 85 - stash name for renamed closure is correct when it contains \x0E ( \16 )
ok 86 - caller() in renamed closure returns correct name when it contains \x0E ( \16 )
ok 87 - %DB::sub entry for renamed closure is correct when it contains \x0E ( \16 )
ok 88 - stash name for natively compiled sub is correct when it contains \x0E ( \16 )
ok 89 - caller() in natively compiled sub returns correct name when it contains \x0E ( \16 )
ok 90 - %DB::sub entry for natively compiled sub is correct when it contains \x0E ( \16 )
ok 91 - stash name for renamed closure is correct when it contains \x0F ( \17 )
ok 92 - caller() in renamed closure returns correct name when it contains \x0F ( \17 )
ok 93 - %DB::sub entry for renamed closure is correct when it contains \x0F ( \17 )
ok 94 - stash name for natively compiled sub is correct when it contains \x0F ( \17 )
ok 95 - caller() in natively compiled sub returns correct name when it contains \x0F ( \17 )
ok 96 - %DB::sub entry for natively compiled sub is correct when it contains \x0F ( \17 )
ok 97 - stash name for renamed closure is correct when it contains \x10 ( \20 )
ok 98 - caller() in renamed closure returns correct name when it contains \x10 ( \20 )
ok 99 - %DB::sub entry for renamed closure is correct when it contains \x10 ( \20 )
ok 100 - stash name for natively compiled sub is correct when it contains \x10 ( \20 )
ok 101 - caller() in natively compiled sub returns correct name when it contains \x10 ( \20 )
ok 102 - %DB::sub entry for natively compiled sub is correct when it contains \x10 ( \20 )
ok 103 - stash name for renamed closure is correct when it contains \x11 ( \21 )
ok 104 - caller() in renamed closure returns correct name when it contains \x11 ( \21 )
ok 105 - %DB::sub entry for renamed closure is correct when it contains \x11 ( \21 )
ok 106 - stash name for natively compiled sub is correct when it contains \x11 ( \21 )
ok 107 - caller() in natively compiled sub returns correct name when it contains \x11 ( \21 )
ok 108 - %DB::sub entry for natively compiled sub is correct when it contains \x11 ( \21 )
ok 109 - stash name for renamed closure is correct when it contains \x12 ( \22 )
ok 110 - caller() in renamed closure returns correct name when it contains \x12 ( \22 )
ok 111 - %DB::sub entry for renamed closure is correct when it contains \x12 ( \22 )
ok 112 - stash name for natively compiled sub is correct when it contains \x12 ( \22 )
ok 113 - caller() in natively compiled sub returns correct name when it contains \x12 ( \22 )
ok 114 - %DB::sub entry for natively compiled sub is correct when it contains \x12 ( \22 )
ok 115 - stash name for renamed closure is correct when it contains \x13 ( \23 )
ok 116 - caller() in renamed closure returns correct name when it contains \x13 ( \23 )
ok 117 - %DB::sub entry for renamed closure is correct when it contains \x13 ( \23 )
ok 118 - stash name for natively compiled sub is correct when it contains \x13 ( \23 )
ok 119 - caller() in natively compiled sub returns correct name when it contains \x13 ( \23 )
ok 120 - %DB::sub entry for natively compiled sub is correct when it contains \x13 ( \23 )
ok 121 - stash name for renamed closure is correct when it contains \x14 ( \24 )
ok 122 - caller() in renamed closure returns correct name when it contains \x14 ( \24 )
ok 123 - %DB::sub entry for renamed closure is correct when it contains \x14 ( \24 )
ok 124 - stash name for natively compiled sub is correct when it contains \x14 ( \24 )
ok 125 - caller() in natively compiled sub returns correct name when it contains \x14 ( \24 )
ok 126 - %DB::sub entry for natively compiled sub is correct when it contains \x14 ( \24 )
ok 127 - stash name for renamed closure is correct when it contains \x15 ( \25 )
ok 128 - caller() in renamed closure returns correct name when it contains \x15 ( \25 )
ok 129 - %DB::sub entry for renamed closure is correct when it contains \x15 ( \25 )
ok 130 - stash name for natively compiled sub is correct when it contains \x15 ( \25 )
ok 131 - caller() in natively compiled sub returns correct name when it contains \x15 ( \25 )
ok 132 - %DB::sub entry for natively compiled sub is correct when it contains \x15 ( \25 )
ok 133 - stash name for renamed closure is correct when it contains \x16 ( \26 )
ok 134 - caller() in renamed closure returns correct name when it contains \x16 ( \26 )
ok 135 - %DB::sub entry for renamed closure is correct when it contains \x16 ( \26 )
ok 136 - stash name for natively compiled sub is correct when it contains \x16 ( \26 )
ok 137 - caller() in natively compiled sub returns correct name when it contains \x16 ( \26 )
ok 138 - %DB::sub entry for natively compiled sub is correct when it contains \x16 ( \26 )
ok 139 - stash name for renamed closure is correct when it contains \x17 ( \27 )
ok 140 - caller() in renamed closure returns correct name when it contains \x17 ( \27 )
ok 141 - %DB::sub entry for renamed closure is correct when it contains \x17 ( \27 )
ok 142 - stash name for natively compiled sub is correct when it contains \x17 ( \27 )
ok 143 - caller() in natively compiled sub returns correct name when it contains \x17 ( \27 )
ok 144 - %DB::sub entry for natively compiled sub is correct when it contains \x17 ( \27 )
ok 145 - stash name for renamed closure is correct when it contains \x18 ( \30 )
ok 146 - caller() in renamed closure returns correct name when it contains \x18 ( \30 )
ok 147 - %DB::sub entry for renamed closure is correct when it contains \x18 ( \30 )
ok 148 - stash name for natively compiled sub is correct when it contains \x18 ( \30 )
ok 149 - caller() in natively compiled sub returns correct name when it contains \x18 ( \30 )
ok 150 - %DB::sub entry for natively compiled sub is correct when it contains \x18 ( \30 )
ok 151 - stash name for renamed closure is correct when it contains \x19 ( \31 )
ok 152 - caller() in renamed closure returns correct name when it contains \x19 ( \31 )
ok 153 - %DB::sub entry for renamed closure is correct when it contains \x19 ( \31 )
ok 154 - stash name for natively compiled sub is correct when it contains \x19 ( \31 )
ok 155 - caller() in natively compiled sub returns correct name when it contains \x19 ( \31 )
ok 156 - %DB::sub entry for natively compiled sub is correct when it contains \x19 ( \31 )
ok 157 - stash name for renamed closure is correct when it contains \x1A ( \32 )
ok 158 - caller() in renamed closure returns correct name when it contains \x1A ( \32 )
ok 159 - %DB::sub entry for renamed closure is correct when it contains \x1A ( \32 )
ok 160 - stash name for natively compiled sub is correct when it contains \x1A ( \32 )
ok 161 - caller() in natively compiled sub returns correct name when it contains \x1A ( \32 )
ok 162 - %DB::sub entry for natively compiled sub is correct when it contains \x1A ( \32 )
ok 163 - stash name for renamed closure is correct when it contains \x1B ( \33 )
ok 164 - caller() in renamed closure returns correct name when it contains \x1B ( \33 )
ok 165 - %DB::sub entry for renamed closure is correct when it contains \x1B ( \33 )
ok 166 - stash name for natively compiled sub is correct when it contains \x1B ( \33 )
ok 167 - caller() in natively compiled sub returns correct name when it contains \x1B ( \33 )
ok 168 - %DB::sub entry for natively compiled sub is correct when it contains \x1B ( \33 )
ok 169 - stash name for renamed closure is correct when it contains \x1C ( \34 )
ok 170 - caller() in renamed closure returns correct name when it contains \x1C ( \34 )
ok 171 - %DB::sub entry for renamed closure is correct when it contains \x1C ( \34 )
ok 172 - stash name for natively compiled sub is correct when it contains \x1C ( \34 )
ok 173 - caller() in natively compiled sub returns correct name when it contains \x1C ( \34 )
ok 174 - %DB::sub entry for natively compiled sub is correct when it contains \x1C ( \34 )
ok 175 - stash name for renamed closure is correct when it contains \x1D ( \35 )
ok 176 - caller() in renamed closure returns correct name when it contains \x1D ( \35 )
ok 177 - %DB::sub entry for renamed closure is correct when it contains \x1D ( \35 )
ok 178 - stash name for natively compiled sub is correct when it contains \x1D ( \35 )
ok 179 - caller() in natively compiled sub returns correct name when it contains \x1D ( \35 )
ok 180 - %DB::sub entry for natively compiled sub is correct when it contains \x1D ( \35 )
ok 181 - stash name for renamed closure is correct when it contains \x1E ( \36 )
ok 182 - caller() in renamed closure returns correct name when it contains \x1E ( \36 )
ok 183 - %DB::sub entry for renamed closure is correct when it contains \x1E ( \36 )
ok 184 - stash name for natively compiled sub is correct when it contains \x1E ( \36 )
ok 185 - caller() in natively compiled sub returns correct name when it contains \x1E ( \36 )
ok 186 - %DB::sub entry for natively compiled sub is correct when it contains \x1E ( \36 )
ok 187 - stash name for renamed closure is correct when it contains \x1F ( \37 )
ok 188 - caller() in renamed closure returns correct name when it contains \x1F ( \37 )
ok 189 - %DB::sub entry for renamed closure is correct when it contains \x1F ( \37 )
ok 190 - stash name for natively compiled sub is correct when it contains \x1F ( \37 )
ok 191 - caller() in natively compiled sub returns correct name when it contains \x1F ( \37 )
ok 192 - %DB::sub entry for natively compiled sub is correct when it contains \x1F ( \37 )
ok 193 - stash name for renamed closure is correct when it contains \x20 (   )
ok 194 - caller() in renamed closure returns correct name when it contains \x20 (   )
ok 195 - %DB::sub entry for renamed closure is correct when it contains \x20 (   )
ok 196 - stash name for natively compiled sub is correct when it contains \x20 (   )
ok 197 - caller() in natively compiled sub returns correct name when it contains \x20 (   )
ok 198 - %DB::sub entry for natively compiled sub is correct when it contains \x20 (   )
ok 199 - stash name for renamed closure is correct when it contains \x21 ( ! )
ok 200 - caller() in renamed closure returns correct name when it contains \x21 ( ! )
ok 201 - %DB::sub entry for renamed closure is correct when it contains \x21 ( ! )
ok 202 - stash name for natively compiled sub is correct when it contains \x21 ( ! )
ok 203 - caller() in natively compiled sub returns correct name when it contains \x21 ( ! )
ok 204 - %DB::sub entry for natively compiled sub is correct when it contains \x21 ( ! )
ok 205 - stash name for renamed closure is correct when it contains \x22 ( " )
ok 206 - caller() in renamed closure returns correct name when it contains \x22 ( " )
ok 207 - %DB::sub entry for renamed closure is correct when it contains \x22 ( " )
ok 208 - stash name for natively compiled sub is correct when it contains \x22 ( " )
ok 209 - caller() in natively compiled sub returns correct name when it contains \x22 ( " )
ok 210 - %DB::sub entry for natively compiled sub is correct when it contains \x22 ( " )
ok 211 - stash name for renamed closure is correct when it contains \\x23 ( \# )
ok 212 - caller() in renamed closure returns correct name when it contains \\x23 ( \# )
ok 213 - %DB::sub entry for renamed closure is correct when it contains \\x23 ( \# )
ok 214 - stash name for natively compiled sub is correct when it contains \\x23 ( \# )
ok 215 - caller() in natively compiled sub returns correct name when it contains \\x23 ( \# )
ok 216 - %DB::sub entry for natively compiled sub is correct when it contains \\x23 ( \# )
ok 217 - stash name for renamed closure is correct when it contains \x24 ( $ )
ok 218 - caller() in renamed closure returns correct name when it contains \x24 ( $ )
ok 219 - %DB::sub entry for renamed closure is correct when it contains \x24 ( $ )
ok 220 - stash name for natively compiled sub is correct when it contains \x24 ( $ )
ok 221 - caller() in natively compiled sub returns correct name when it contains \x24 ( $ )
ok 222 - %DB::sub entry for natively compiled sub is correct when it contains \x24 ( $ )
ok 223 - stash name for renamed closure is correct when it contains \x25 ( % )
ok 224 - caller() in renamed closure returns correct name when it contains \x25 ( % )
ok 225 - %DB::sub entry for renamed closure is correct when it contains \x25 ( % )
ok 226 - stash name for natively compiled sub is correct when it contains \x25 ( % )
ok 227 - caller() in natively compiled sub returns correct name when it contains \x25 ( % )
ok 228 - %DB::sub entry for natively compiled sub is correct when it contains \x25 ( % )
ok 229 - stash name for renamed closure is correct when it contains \x26 ( & )
ok 230 - caller() in renamed closure returns correct name when it contains \x26 ( & )
ok 231 - %DB::sub entry for renamed closure is correct when it contains \x26 ( & )
ok 232 - stash name for natively compiled sub is correct when it contains \x26 ( & )
ok 233 - caller() in natively compiled sub returns correct name when it contains \x26 ( & )
ok 234 - %DB::sub entry for natively compiled sub is correct when it contains \x26 ( & )
ok 235 - stash name for renamed closure is correct when it contains \x27 ( ' )
ok 236 - caller() in renamed closure returns correct name when it contains \x27 ( ' )
ok 237 - %DB::sub entry for renamed closure is correct when it contains \x27 ( ' )
ok 238 - stash name for natively compiled sub is correct when it contains \x27 ( ' )
ok 239 - caller() in natively compiled sub returns correct name when it contains \x27 ( ' )
ok 240 - %DB::sub entry for natively compiled sub is correct when it contains \x27 ( ' )
ok 241 - stash name for renamed closure is correct when it contains \x28 ( ( )
ok 242 - caller() in renamed closure returns correct name when it contains \x28 ( ( )
ok 243 - %DB::sub entry for renamed closure is correct when it contains \x28 ( ( )
ok 244 - stash name for natively compiled sub is correct when it contains \x28 ( ( )
ok 245 - caller() in natively compiled sub returns correct name when it contains \x28 ( ( )
ok 246 - %DB::sub entry for natively compiled sub is correct when it contains \x28 ( ( )
ok 247 - stash name for renamed closure is correct when it contains \x29 ( ) )
ok 248 - caller() in renamed closure returns correct name when it contains \x29 ( ) )
ok 249 - %DB::sub entry for renamed closure is correct when it contains \x29 ( ) )
ok 250 - stash name for natively compiled sub is correct when it contains \x29 ( ) )
ok 251 - caller() in natively compiled sub returns correct name when it contains \x29 ( ) )
ok 252 - %DB::sub entry for natively compiled sub is correct when it contains \x29 ( ) )
ok 253 - stash name for renamed closure is correct when it contains \x2A ( * )
ok 254 - caller() in renamed closure returns correct name when it contains \x2A ( * )
ok 255 - %DB::sub entry for renamed closure is correct when it contains \x2A ( * )
ok 256 - stash name for natively compiled sub is correct when it contains \x2A ( * )
ok 257 - caller() in natively compiled sub returns correct name when it contains \x2A ( * )
ok 258 - %DB::sub entry for natively compiled sub is correct when it contains \x2A ( * )
ok 259 - stash name for renamed closure is correct when it contains \x2B ( + )
ok 260 - caller() in renamed closure returns correct name when it contains \x2B ( + )
ok 261 - %DB::sub entry for renamed closure is correct when it contains \x2B ( + )
ok 262 - stash name for natively compiled sub is correct when it contains \x2B ( + )
ok 263 - caller() in natively compiled sub returns correct name when it contains \x2B ( + )
ok 264 - %DB::sub entry for natively compiled sub is correct when it contains \x2B ( + )
ok 265 - stash name for renamed closure is correct when it contains \x2C ( , )
ok 266 - caller() in renamed closure returns correct name when it contains \x2C ( , )
ok 267 - %DB::sub entry for renamed closure is correct when it contains \x2C ( , )
ok 268 - stash name for natively compiled sub is correct when it contains \x2C ( , )
ok 269 - caller() in natively compiled sub returns correct name when it contains \x2C ( , )
ok 270 - %DB::sub entry for natively compiled sub is correct when it contains \x2C ( , )
ok 271 - stash name for renamed closure is correct when it contains \x2D ( - )
ok 272 - caller() in renamed closure returns correct name when it contains \x2D ( - )
ok 273 - %DB::sub entry for renamed closure is correct when it contains \x2D ( - )
ok 274 - stash name for natively compiled sub is correct when it contains \x2D ( - )
ok 275 - caller() in natively compiled sub returns correct name when it contains \x2D ( - )
ok 276 - %DB::sub entry for natively compiled sub is correct when it contains \x2D ( - )
ok 277 - stash name for renamed closure is correct when it contains \x2E ( . )
ok 278 - caller() in renamed closure returns correct name when it contains \x2E ( . )
ok 279 - %DB::sub entry for renamed closure is correct when it contains \x2E ( . )
ok 280 - stash name for natively compiled sub is correct when it contains \x2E ( . )
ok 281 - caller() in natively compiled sub returns correct name when it contains \x2E ( . )
ok 282 - %DB::sub entry for natively compiled sub is correct when it contains \x2E ( . )
ok 283 - stash name for renamed closure is correct when it contains \x2F ( / )
ok 284 - caller() in renamed closure returns correct name when it contains \x2F ( / )
ok 285 - %DB::sub entry for renamed closure is correct when it contains \x2F ( / )
ok 286 - stash name for natively compiled sub is correct when it contains \x2F ( / )
ok 287 - caller() in natively compiled sub returns correct name when it contains \x2F ( / )
ok 288 - %DB::sub entry for natively compiled sub is correct when it contains \x2F ( / )
ok 289 - stash name for renamed closure is correct when it contains \x30 ( 0 )
ok 290 - caller() in renamed closure returns correct name when it contains \x30 ( 0 )
ok 291 - %DB::sub entry for renamed closure is correct when it contains \x30 ( 0 )
ok 292 - stash name for natively compiled sub is correct when it contains \x30 ( 0 )
ok 293 - caller() in natively compiled sub returns correct name when it contains \x30 ( 0 )
ok 294 - %DB::sub entry for natively compiled sub is correct when it contains \x30 ( 0 )
ok 295 - stash name for renamed closure is correct when it contains \x31 ( 1 )
ok 296 - caller() in renamed closure returns correct name when it contains \x31 ( 1 )
ok 297 - %DB::sub entry for renamed closure is correct when it contains \x31 ( 1 )
ok 298 - stash name for natively compiled sub is correct when it contains \x31 ( 1 )
ok 299 - caller() in natively compiled sub returns correct name when it contains \x31 ( 1 )
ok 300 - %DB::sub entry for natively compiled sub is correct when it contains \x31 ( 1 )
ok 301 - stash name for renamed closure is correct when it contains \x32 ( 2 )
ok 302 - caller() in renamed closure returns correct name when it contains \x32 ( 2 )
ok 303 - %DB::sub entry for renamed closure is correct when it contains \x32 ( 2 )
ok 304 - stash name for natively compiled sub is correct when it contains \x32 ( 2 )
ok 305 - caller() in natively compiled sub returns correct name when it contains \x32 ( 2 )
ok 306 - %DB::sub entry for natively compiled sub is correct when it contains \x32 ( 2 )
ok 307 - stash name for renamed closure is correct when it contains \x33 ( 3 )
ok 308 - caller() in renamed closure returns correct name when it contains \x33 ( 3 )
ok 309 - %DB::sub entry for renamed closure is correct when it contains \x33 ( 3 )
ok 310 - stash name for natively compiled sub is correct when it contains \x33 ( 3 )
ok 311 - caller() in natively compiled sub returns correct name when it contains \x33 ( 3 )
ok 312 - %DB::sub entry for natively compiled sub is correct when it contains \x33 ( 3 )
ok 313 - stash name for renamed closure is correct when it contains \x34 ( 4 )
ok 314 - caller() in renamed closure returns correct name when it contains \x34 ( 4 )
ok 315 - %DB::sub entry for renamed closure is correct when it contains \x34 ( 4 )
ok 316 - stash name for natively compiled sub is correct when it contains \x34 ( 4 )
ok 317 - caller() in natively compiled sub returns correct name when it contains \x34 ( 4 )
ok 318 - %DB::sub entry for natively compiled sub is correct when it contains \x34 ( 4 )
ok 319 - stash name for renamed closure is correct when it contains \x35 ( 5 )
ok 320 - caller() in renamed closure returns correct name when it contains \x35 ( 5 )
ok 321 - %DB::sub entry for renamed closure is correct when it contains \x35 ( 5 )
ok 322 - stash name for natively compiled sub is correct when it contains \x35 ( 5 )
ok 323 - caller() in natively compiled sub returns correct name when it contains \x35 ( 5 )
ok 324 - %DB::sub entry for natively compiled sub is correct when it contains \x35 ( 5 )
ok 325 - stash name for renamed closure is correct when it contains \x36 ( 6 )
ok 326 - caller() in renamed closure returns correct name when it contains \x36 ( 6 )
ok 327 - %DB::sub entry for renamed closure is correct when it contains \x36 ( 6 )
ok 328 - stash name for natively compiled sub is correct when it contains \x36 ( 6 )
ok 329 - caller() in natively compiled sub returns correct name when it contains \x36 ( 6 )
ok 330 - %DB::sub entry for natively compiled sub is correct when it contains \x36 ( 6 )
ok 331 - stash name for renamed closure is correct when it contains \x37 ( 7 )
ok 332 - caller() in renamed closure returns correct name when it contains \x37 ( 7 )
ok 333 - %DB::sub entry for renamed closure is correct when it contains \x37 ( 7 )
ok 334 - stash name for natively compiled sub is correct when it contains \x37 ( 7 )
ok 335 - caller() in natively compiled sub returns correct name when it contains \x37 ( 7 )
ok 336 - %DB::sub entry for natively compiled sub is correct when it contains \x37 ( 7 )
ok 337 - stash name for renamed closure is correct when it contains \x38 ( 8 )
ok 338 - caller() in renamed closure returns correct name when it contains \x38 ( 8 )
ok 339 - %DB::sub entry for renamed closure is correct when it contains \x38 ( 8 )
ok 340 - stash name for natively compiled sub is correct when it contains \x38 ( 8 )
ok 341 - caller() in natively compiled sub returns correct name when it contains \x38 ( 8 )
ok 342 - %DB::sub entry for natively compiled sub is correct when it contains \x38 ( 8 )
ok 343 - stash name for renamed closure is correct when it contains \x39 ( 9 )
ok 344 - caller() in renamed closure returns correct name when it contains \x39 ( 9 )
ok 345 - %DB::sub entry for renamed closure is correct when it contains \x39 ( 9 )
ok 346 - stash name for natively compiled sub is correct when it contains \x39 ( 9 )
ok 347 - caller() in natively compiled sub returns correct name when it contains \x39 ( 9 )
ok 348 - %DB::sub entry for natively compiled sub is correct when it contains \x39 ( 9 )
ok 349 - stash name for renamed closure is correct when it contains \x3A ( : )
ok 350 - caller() in renamed closure returns correct name when it contains \x3A ( : )
ok 351 - %DB::sub entry for renamed closure is correct when it contains \x3A ( : )
ok 352 - stash name for natively compiled sub is correct when it contains \x3A ( : )
ok 353 - caller() in natively compiled sub returns correct name when it contains \x3A ( : )
ok 354 - %DB::sub entry for natively compiled sub is correct when it contains \x3A ( : )
ok 355 - stash name for renamed closure is correct when it contains \x3B ( ; )
ok 356 - caller() in renamed closure returns correct name when it contains \x3B ( ; )
ok 357 - %DB::sub entry for renamed closure is correct when it contains \x3B ( ; )
ok 358 - stash name for natively compiled sub is correct when it contains \x3B ( ; )
ok 359 - caller() in natively compiled sub returns correct name when it contains \x3B ( ; )
ok 360 - %DB::sub entry for natively compiled sub is correct when it contains \x3B ( ; )
ok 361 - stash name for renamed closure is correct when it contains \x3C ( < )
ok 362 - caller() in renamed closure returns correct name when it contains \x3C ( < )
ok 363 - %DB::sub entry for renamed closure is correct when it contains \x3C ( < )
ok 364 - stash name for natively compiled sub is correct when it contains \x3C ( < )
ok 365 - caller() in natively compiled sub returns correct name when it contains \x3C ( < )
ok 366 - %DB::sub entry for natively compiled sub is correct when it contains \x3C ( < )
ok 367 - stash name for renamed closure is correct when it contains \x3D ( = )
ok 368 - caller() in renamed closure returns correct name when it contains \x3D ( = )
ok 369 - %DB::sub entry for renamed closure is correct when it contains \x3D ( = )
ok 370 - stash name for natively compiled sub is correct when it contains \x3D ( = )
ok 371 - caller() in natively compiled sub returns correct name when it contains \x3D ( = )
ok 372 - %DB::sub entry for natively compiled sub is correct when it contains \x3D ( = )
ok 373 - stash name for renamed closure is correct when it contains \x3E ( > )
ok 374 - caller() in renamed closure returns correct name when it contains \x3E ( > )
ok 375 - %DB::sub entry for renamed closure is correct when it contains \x3E ( > )
ok 376 - stash name for natively compiled sub is correct when it contains \x3E ( > )
ok 377 - caller() in natively compiled sub returns correct name when it contains \x3E ( > )
ok 378 - %DB::sub entry for natively compiled sub is correct when it contains \x3E ( > )
ok 379 - stash name for renamed closure is correct when it contains \x3F ( ? )
ok 380 - caller() in renamed closure returns correct name when it contains \x3F ( ? )
ok 381 - %DB::sub entry for renamed closure is correct when it contains \x3F ( ? )
ok 382 - stash name for natively compiled sub is correct when it contains \x3F ( ? )
ok 383 - caller() in natively compiled sub returns correct name when it contains \x3F ( ? )
ok 384 - %DB::sub entry for natively compiled sub is correct when it contains \x3F ( ? )
ok 385 - stash name for renamed closure is correct when it contains \x40 ( @ )
ok 386 - caller() in renamed closure returns correct name when it contains \x40 ( @ )
ok 387 - %DB::sub entry for renamed closure is correct when it contains \x40 ( @ )
ok 388 - stash name for natively compiled sub is correct when it contains \x40 ( @ )
ok 389 - caller() in natively compiled sub returns correct name when it contains \x40 ( @ )
ok 390 - %DB::sub entry for natively compiled sub is correct when it contains \x40 ( @ )
ok 391 - stash name for renamed closure is correct when it contains \x41 ( A )
ok 392 - caller() in renamed closure returns correct name when it contains \x41 ( A )
ok 393 - %DB::sub entry for renamed closure is correct when it contains \x41 ( A )
ok 394 - stash name for natively compiled sub is correct when it contains \x41 ( A )
ok 395 - caller() in natively compiled sub returns correct name when it contains \x41 ( A )
ok 396 - %DB::sub entry for natively compiled sub is correct when it contains \x41 ( A )
ok 397 - stash name for renamed closure is correct when it contains \x42 ( B )
ok 398 - caller() in renamed closure returns correct name when it contains \x42 ( B )
ok 399 - %DB::sub entry for renamed closure is correct when it contains \x42 ( B )
ok 400 - stash name for natively compiled sub is correct when it contains \x42 ( B )
ok 401 - caller() in natively compiled sub returns correct name when it contains \x42 ( B )
ok 402 - %DB::sub entry for natively compiled sub is correct when it contains \x42 ( B )
ok 403 - stash name for renamed closure is correct when it contains \x43 ( C )
ok 404 - caller() in renamed closure returns correct name when it contains \x43 ( C )
ok 405 - %DB::sub entry for renamed closure is correct when it contains \x43 ( C )
ok 406 - stash name for natively compiled sub is correct when it contains \x43 ( C )
ok 407 - caller() in natively compiled sub returns correct name when it contains \x43 ( C )
ok 408 - %DB::sub entry for natively compiled sub is correct when it contains \x43 ( C )
ok 409 - stash name for renamed closure is correct when it contains \x44 ( D )
ok 410 - caller() in renamed closure returns correct name when it contains \x44 ( D )
ok 411 - %DB::sub entry for renamed closure is correct when it contains \x44 ( D )
ok 412 - stash name for natively compiled sub is correct when it contains \x44 ( D )
ok 413 - caller() in natively compiled sub returns correct name when it contains \x44 ( D )
ok 414 - %DB::sub entry for natively compiled sub is correct when it contains \x44 ( D )
ok 415 - stash name for renamed closure is correct when it contains \x45 ( E )
ok 416 - caller() in renamed closure returns correct name when it contains \x45 ( E )
ok 417 - %DB::sub entry for renamed closure is correct when it contains \x45 ( E )
ok 418 - stash name for natively compiled sub is correct when it contains \x45 ( E )
ok 419 - caller() in natively compiled sub returns correct name when it contains \x45 ( E )
ok 420 - %DB::sub entry for natively compiled sub is correct when it contains \x45 ( E )
ok 421 - stash name for renamed closure is correct when it contains \x46 ( F )
ok 422 - caller() in renamed closure returns correct name when it contains \x46 ( F )
ok 423 - %DB::sub entry for renamed closure is correct when it contains \x46 ( F )
ok 424 - stash name for natively compiled sub is correct when it contains \x46 ( F )
ok 425 - caller() in natively compiled sub returns correct name when it contains \x46 ( F )
ok 426 - %DB::sub entry for natively compiled sub is correct when it contains \x46 ( F )
ok 427 - stash name for renamed closure is correct when it contains \x47 ( G )
ok 428 - caller() in renamed closure returns correct name when it contains \x47 ( G )
ok 429 - %DB::sub entry for renamed closure is correct when it contains \x47 ( G )
ok 430 - stash name for natively compiled sub is correct when it contains \x47 ( G )
ok 431 - caller() in natively compiled sub returns correct name when it contains \x47 ( G )
ok 432 - %DB::sub entry for natively compiled sub is correct when it contains \x47 ( G )
ok 433 - stash name for renamed closure is correct when it contains \x48 ( H )
ok 434 - caller() in renamed closure returns correct name when it contains \x48 ( H )
ok 435 - %DB::sub entry for renamed closure is correct when it contains \x48 ( H )
ok 436 - stash name for natively compiled sub is correct when it contains \x48 ( H )
ok 437 - caller() in natively compiled sub returns correct name when it contains \x48 ( H )
ok 438 - %DB::sub entry for natively compiled sub is correct when it contains \x48 ( H )
ok 439 - stash name for renamed closure is correct when it contains \x49 ( I )
ok 440 - caller() in renamed closure returns correct name when it contains \x49 ( I )
ok 441 - %DB::sub entry for renamed closure is correct when it contains \x49 ( I )
ok 442 - stash name for natively compiled sub is correct when it contains \x49 ( I )
ok 443 - caller() in natively compiled sub returns correct name when it contains \x49 ( I )
ok 444 - %DB::sub entry for natively compiled sub is correct when it contains \x49 ( I )
ok 445 - stash name for renamed closure is correct when it contains \x4A ( J )
ok 446 - caller() in renamed closure returns correct name when it contains \x4A ( J )
ok 447 - %DB::sub entry for renamed closure is correct when it contains \x4A ( J )
ok 448 - stash name for natively compiled sub is correct when it contains \x4A ( J )
ok 449 - caller() in natively compiled sub returns correct name when it contains \x4A ( J )
ok 450 - %DB::sub entry for natively compiled sub is correct when it contains \x4A ( J )
ok 451 - stash name for renamed closure is correct when it contains \x4B ( K )
ok 452 - caller() in renamed closure returns correct name when it contains \x4B ( K )
ok 453 - %DB::sub entry for renamed closure is correct when it contains \x4B ( K )
ok 454 - stash name for natively compiled sub is correct when it contains \x4B ( K )
ok 455 - caller() in natively compiled sub returns correct name when it contains \x4B ( K )
ok 456 - %DB::sub entry for natively compiled sub is correct when it contains \x4B ( K )
ok 457 - stash name for renamed closure is correct when it contains \x4C ( L )
ok 458 - caller() in renamed closure returns correct name when it contains \x4C ( L )
ok 459 - %DB::sub entry for renamed closure is correct when it contains \x4C ( L )
ok 460 - stash name for natively compiled sub is correct when it contains \x4C ( L )
ok 461 - caller() in natively compiled sub returns correct name when it contains \x4C ( L )
ok 462 - %DB::sub entry for natively compiled sub is correct when it contains \x4C ( L )
ok 463 - stash name for renamed closure is correct when it contains \x4D ( M )
ok 464 - caller() in renamed closure returns correct name when it contains \x4D ( M )
ok 465 - %DB::sub entry for renamed closure is correct when it contains \x4D ( M )
ok 466 - stash name for natively compiled sub is correct when it contains \x4D ( M )
ok 467 - caller() in natively compiled sub returns correct name when it contains \x4D ( M )
ok 468 - %DB::sub entry for natively compiled sub is correct when it contains \x4D ( M )
ok 469 - stash name for renamed closure is correct when it contains \x4E ( N )
ok 470 - caller() in renamed closure returns correct name when it contains \x4E ( N )
ok 471 - %DB::sub entry for renamed closure is correct when it contains \x4E ( N )
ok 472 - stash name for natively compiled sub is correct when it contains \x4E ( N )
ok 473 - caller() in natively compiled sub returns correct name when it contains \x4E ( N )
ok 474 - %DB::sub entry for natively compiled sub is correct when it contains \x4E ( N )
ok 475 - stash name for renamed closure is correct when it contains \x4F ( O )
ok 476 - caller() in renamed closure returns correct name when it contains \x4F ( O )
ok 477 - %DB::sub entry for renamed closure is correct when it contains \x4F ( O )
ok 478 - stash name for natively compiled sub is correct when it contains \x4F ( O )
ok 479 - caller() in natively compiled sub returns correct name when it contains \x4F ( O )
ok 480 - %DB::sub entry for natively compiled sub is correct when it contains \x4F ( O )
ok 481 - stash name for renamed closure is correct when it contains \x50 ( P )
ok 482 - caller() in renamed closure returns correct name when it contains \x50 ( P )
ok 483 - %DB::sub entry for renamed closure is correct when it contains \x50 ( P )
ok 484 - stash name for natively compiled sub is correct when it contains \x50 ( P )
ok 485 - caller() in natively compiled sub returns correct name when it contains \x50 ( P )
ok 486 - %DB::sub entry for natively compiled sub is correct when it contains \x50 ( P )
ok 487 - stash name for renamed closure is correct when it contains \x51 ( Q )
ok 488 - caller() in renamed closure returns correct name when it contains \x51 ( Q )
ok 489 - %DB::sub entry for renamed closure is correct when it contains \x51 ( Q )
ok 490 - stash name for natively compiled sub is correct when it contains \x51 ( Q )
ok 491 - caller() in natively compiled sub returns correct name when it contains \x51 ( Q )
ok 492 - %DB::sub entry for natively compiled sub is correct when it contains \x51 ( Q )
ok 493 - stash name for renamed closure is correct when it contains \x52 ( R )
ok 494 - caller() in renamed closure returns correct name when it contains \x52 ( R )
ok 495 - %DB::sub entry for renamed closure is correct when it contains \x52 ( R )
ok 496 - stash name for natively compiled sub is correct when it contains \x52 ( R )
ok 497 - caller() in natively compiled sub returns correct name when it contains \x52 ( R )
ok 498 - %DB::sub entry for natively compiled sub is correct when it contains \x52 ( R )
ok 499 - stash name for renamed closure is correct when it contains \x53 ( S )
ok 500 - caller() in renamed closure returns correct name when it contains \x53 ( S )
ok 501 - %DB::sub entry for renamed closure is correct when it contains \x53 ( S )
ok 502 - stash name for natively compiled sub is correct when it contains \x53 ( S )
ok 503 - caller() in natively compiled sub returns correct name when it contains \x53 ( S )
ok 504 - %DB::sub entry for natively compiled sub is correct when it contains \x53 ( S )
ok 505 - stash name for renamed closure is correct when it contains \x54 ( T )
ok 506 - caller() in renamed closure returns correct name when it contains \x54 ( T )
ok 507 - %DB::sub entry for renamed closure is correct when it contains \x54 ( T )
ok 508 - stash name for natively compiled sub is correct when it contains \x54 ( T )
ok 509 - caller() in natively compiled sub returns correct name when it contains \x54 ( T )
ok 510 - %DB::sub entry for natively compiled sub is correct when it contains \x54 ( T )
ok 511 - stash name for renamed closure is correct when it contains \x55 ( U )
ok 512 - caller() in renamed closure returns correct name when it contains \x55 ( U )
ok 513 - %DB::sub entry for renamed closure is correct when it contains \x55 ( U )
ok 514 - stash name for natively compiled sub is correct when it contains \x55 ( U )
ok 515 - caller() in natively compiled sub returns correct name when it contains \x55 ( U )
ok 516 - %DB::sub entry for natively compiled sub is correct when it contains \x55 ( U )
ok 517 - stash name for renamed closure is correct when it contains \x56 ( V )
ok 518 - caller() in renamed closure returns correct name when it contains \x56 ( V )
ok 519 - %DB::sub entry for renamed closure is correct when it contains \x56 ( V )
ok 520 - stash name for natively compiled sub is correct when it contains \x56 ( V )
ok 521 - caller() in natively compiled sub returns correct name when it contains \x56 ( V )
ok 522 - %DB::sub entry for natively compiled sub is correct when it contains \x56 ( V )
ok 523 - stash name for renamed closure is correct when it contains \x57 ( W )
ok 524 - caller() in renamed closure returns correct name when it contains \x57 ( W )
ok 525 - %DB::sub entry for renamed closure is correct when it contains \x57 ( W )
ok 526 - stash name for natively compiled sub is correct when it contains \x57 ( W )
ok 527 - caller() in natively compiled sub returns correct name when it contains \x57 ( W )
ok 528 - %DB::sub entry for natively compiled sub is correct when it contains \x57 ( W )
ok 529 - stash name for renamed closure is correct when it contains \x58 ( X )
ok 530 - caller() in renamed closure returns correct name when it contains \x58 ( X )
ok 531 - %DB::sub entry for renamed closure is correct when it contains \x58 ( X )
ok 532 - stash name for natively compiled sub is correct when it contains \x58 ( X )
ok 533 - caller() in natively compiled sub returns correct name when it contains \x58 ( X )
ok 534 - %DB::sub entry for natively compiled sub is correct when it contains \x58 ( X )
ok 535 - stash name for renamed closure is correct when it contains \x59 ( Y )
ok 536 - caller() in renamed closure returns correct name when it contains \x59 ( Y )
ok 537 - %DB::sub entry for renamed closure is correct when it contains \x59 ( Y )
ok 538 - stash name for natively compiled sub is correct when it contains \x59 ( Y )
ok 539 - caller() in natively compiled sub returns correct name when it contains \x59 ( Y )
ok 540 - %DB::sub entry for natively compiled sub is correct when it contains \x59 ( Y )
ok 541 - stash name for renamed closure is correct when it contains \x5A ( Z )
ok 542 - caller() in renamed closure returns correct name when it contains \x5A ( Z )
ok 543 - %DB::sub entry for renamed closure is correct when it contains \x5A ( Z )
ok 544 - stash name for natively compiled sub is correct when it contains \x5A ( Z )
ok 545 - caller() in natively compiled sub returns correct name when it contains \x5A ( Z )
ok 546 - %DB::sub entry for natively compiled sub is correct when it contains \x5A ( Z )
ok 547 - stash name for renamed closure is correct when it contains \x5B ( [ )
ok 548 - caller() in renamed closure returns correct name when it contains \x5B ( [ )
ok 549 - %DB::sub entry for renamed closure is correct when it contains \x5B ( [ )
ok 550 - stash name for natively compiled sub is correct when it contains \x5B ( [ )
ok 551 - caller() in natively compiled sub returns correct name when it contains \x5B ( [ )
ok 552 - %DB::sub entry for natively compiled sub is correct when it contains \x5B ( [ )
ok 553 - stash name for renamed closure is correct when it contains \x5C ( \ )
ok 554 - caller() in renamed closure returns correct name when it contains \x5C ( \ )
ok 555 - %DB::sub entry for renamed closure is correct when it contains \x5C ( \ )
ok 556 - stash name for natively compiled sub is correct when it contains \x5C ( \ )
ok 557 - caller() in natively compiled sub returns correct name when it contains \x5C ( \ )
ok 558 - %DB::sub entry for natively compiled sub is correct when it contains \x5C ( \ )
ok 559 - stash name for renamed closure is correct when it contains \x5D ( ] )
ok 560 - caller() in renamed closure returns correct name when it contains \x5D ( ] )
ok 561 - %DB::sub entry for renamed closure is correct when it contains \x5D ( ] )
ok 562 - stash name for natively compiled sub is correct when it contains \x5D ( ] )
ok 563 - caller() in natively compiled sub returns correct name when it contains \x5D ( ] )
ok 564 - %DB::sub entry for natively compiled sub is correct when it contains \x5D ( ] )
ok 565 - stash name for renamed closure is correct when it contains \x5E ( ^ )
ok 566 - caller() in renamed closure returns correct name when it contains \x5E ( ^ )
ok 567 - %DB::sub entry for renamed closure is correct when it contains \x5E ( ^ )
ok 568 - stash name for natively compiled sub is correct when it contains \x5E ( ^ )
ok 569 - caller() in natively compiled sub returns correct name when it contains \x5E ( ^ )
ok 570 - %DB::sub entry for natively compiled sub is correct when it contains \x5E ( ^ )
ok 571 - stash name for renamed closure is correct when it contains \x5F ( _ )
ok 572 - caller() in renamed closure returns correct name when it contains \x5F ( _ )
ok 573 - %DB::sub entry for renamed closure is correct when it contains \x5F ( _ )
ok 574 - stash name for natively compiled sub is correct when it contains \x5F ( _ )
ok 575 - caller() in natively compiled sub returns correct name when it contains \x5F ( _ )
ok 576 - %DB::sub entry for natively compiled sub is correct when it contains \x5F ( _ )
ok 577 - stash name for renamed closure is correct when it contains \x60 ( ` )
ok 578 - caller() in renamed closure returns correct name when it contains \x60 ( ` )
ok 579 - %DB::sub entry for renamed closure is correct when it contains \x60 ( ` )
ok 580 - stash name for natively compiled sub is correct when it contains \x60 ( ` )
ok 581 - caller() in natively compiled sub returns correct name when it contains \x60 ( ` )
ok 582 - %DB::sub entry for natively compiled sub is correct when it contains \x60 ( ` )
ok 583 - stash name for renamed closure is correct when it contains \x61 ( a )
ok 584 - caller() in renamed closure returns correct name when it contains \x61 ( a )
ok 585 - %DB::sub entry for renamed closure is correct when it contains \x61 ( a )
ok 586 - stash name for natively compiled sub is correct when it contains \x61 ( a )
ok 587 - caller() in natively compiled sub returns correct name when it contains \x61 ( a )
ok 588 - %DB::sub entry for natively compiled sub is correct when it contains \x61 ( a )
ok 589 - stash name for renamed closure is correct when it contains \x62 ( b )
ok 590 - caller() in renamed closure returns correct name when it contains \x62 ( b )
ok 591 - %DB::sub entry for renamed closure is correct when it contains \x62 ( b )
ok 592 - stash name for natively compiled sub is correct when it contains \x62 ( b )
ok 593 - caller() in natively compiled sub returns correct name when it contains \x62 ( b )
ok 594 - %DB::sub entry for natively compiled sub is correct when it contains \x62 ( b )
ok 595 - stash name for renamed closure is correct when it contains \x63 ( c )
ok 596 - caller() in renamed closure returns correct name when it contains \x63 ( c )
ok 597 - %DB::sub entry for renamed closure is correct when it contains \x63 ( c )
ok 598 - stash name for natively compiled sub is correct when it contains \x63 ( c )
ok 599 - caller() in natively compiled sub returns correct name when it contains \x63 ( c )
ok 600 - %DB::sub entry for natively compiled sub is correct when it contains \x63 ( c )
ok 601 - stash name for renamed closure is correct when it contains \x64 ( d )
ok 602 - caller() in renamed closure returns correct name when it contains \x64 ( d )
ok 603 - %DB::sub entry for renamed closure is correct when it contains \x64 ( d )
ok 604 - stash name for natively compiled sub is correct when it contains \x64 ( d )
ok 605 - caller() in natively compiled sub returns correct name when it contains \x64 ( d )
ok 606 - %DB::sub entry for natively compiled sub is correct when it contains \x64 ( d )
ok 607 - stash name for renamed closure is correct when it contains \x65 ( e )
ok 608 - caller() in renamed closure returns correct name when it contains \x65 ( e )
ok 609 - %DB::sub entry for renamed closure is correct when it contains \x65 ( e )
ok 610 - stash name for natively compiled sub is correct when it contains \x65 ( e )
ok 611 - caller() in natively compiled sub returns correct name when it contains \x65 ( e )
ok 612 - %DB::sub entry for natively compiled sub is correct when it contains \x65 ( e )
ok 613 - stash name for renamed closure is correct when it contains \x66 ( f )
ok 614 - caller() in renamed closure returns correct name when it contains \x66 ( f )
ok 615 - %DB::sub entry for renamed closure is correct when it contains \x66 ( f )
ok 616 - stash name for natively compiled sub is correct when it contains \x66 ( f )
ok 617 - caller() in natively compiled sub returns correct name when it contains \x66 ( f )
ok 618 - %DB::sub entry for natively compiled sub is correct when it contains \x66 ( f )
ok 619 - stash name for renamed closure is correct when it contains \x67 ( g )
ok 620 - caller() in renamed closure returns correct name when it contains \x67 ( g )
ok 621 - %DB::sub entry for renamed closure is correct when it contains \x67 ( g )
ok 622 - stash name for natively compiled sub is correct when it contains \x67 ( g )
ok 623 - caller() in natively compiled sub returns correct name when it contains \x67 ( g )
ok 624 - %DB::sub entry for natively compiled sub is correct when it contains \x67 ( g )
ok 625 - stash name for renamed closure is correct when it contains \x68 ( h )
ok 626 - caller() in renamed closure returns correct name when it contains \x68 ( h )
ok 627 - %DB::sub entry for renamed closure is correct when it contains \x68 ( h )
ok 628 - stash name for natively compiled sub is correct when it contains \x68 ( h )
ok 629 - caller() in natively compiled sub returns correct name when it contains \x68 ( h )
ok 630 - %DB::sub entry for natively compiled sub is correct when it contains \x68 ( h )
ok 631 - stash name for renamed closure is correct when it contains \x69 ( i )
ok 632 - caller() in renamed closure returns correct name when it contains \x69 ( i )
ok 633 - %DB::sub entry for renamed closure is correct when it contains \x69 ( i )
ok 634 - stash name for natively compiled sub is correct when it contains \x69 ( i )
ok 635 - caller() in natively compiled sub returns correct name when it contains \x69 ( i )
ok 636 - %DB::sub entry for natively compiled sub is correct when it contains \x69 ( i )
ok 637 - stash name for renamed closure is correct when it contains \x6A ( j )
ok 638 - caller() in renamed closure returns correct name when it contains \x6A ( j )
ok 639 - %DB::sub entry for renamed closure is correct when it contains \x6A ( j )
ok 640 - stash name for natively compiled sub is correct when it contains \x6A ( j )
ok 641 - caller() in natively compiled sub returns correct name when it contains \x6A ( j )
ok 642 - %DB::sub entry for natively compiled sub is correct when it contains \x6A ( j )
ok 643 - stash name for renamed closure is correct when it contains \x6B ( k )
ok 644 - caller() in renamed closure returns correct name when it contains \x6B ( k )
ok 645 - %DB::sub entry for renamed closure is correct when it contains \x6B ( k )
ok 646 - stash name for natively compiled sub is correct when it contains \x6B ( k )
ok 647 - caller() in natively compiled sub returns correct name when it contains \x6B ( k )
ok 648 - %DB::sub entry for natively compiled sub is correct when it contains \x6B ( k )
ok 649 - stash name for renamed closure is correct when it contains \x6C ( l )
ok 650 - caller() in renamed closure returns correct name when it contains \x6C ( l )
ok 651 - %DB::sub entry for renamed closure is correct when it contains \x6C ( l )
ok 652 - stash name for natively compiled sub is correct when it contains \x6C ( l )
ok 653 - caller() in natively compiled sub returns correct name when it contains \x6C ( l )
ok 654 - %DB::sub entry for natively compiled sub is correct when it contains \x6C ( l )
ok 655 - stash name for renamed closure is correct when it contains \x6D ( m )
ok 656 - caller() in renamed closure returns correct name when it contains \x6D ( m )
ok 657 - %DB::sub entry for renamed closure is correct when it contains \x6D ( m )
ok 658 - stash name for natively compiled sub is correct when it contains \x6D ( m )
ok 659 - caller() in natively compiled sub returns correct name when it contains \x6D ( m )
ok 660 - %DB::sub entry for natively compiled sub is correct when it contains \x6D ( m )
ok 661 - stash name for renamed closure is correct when it contains \x6E ( n )
ok 662 - caller() in renamed closure returns correct name when it contains \x6E ( n )
ok 663 - %DB::sub entry for renamed closure is correct when it contains \x6E ( n )
ok 664 - stash name for natively compiled sub is correct when it contains \x6E ( n )
ok 665 - caller() in natively compiled sub returns correct name when it contains \x6E ( n )
ok 666 - %DB::sub entry for natively compiled sub is correct when it contains \x6E ( n )
ok 667 - stash name for renamed closure is correct when it contains \x6F ( o )
ok 668 - caller() in renamed closure returns correct name when it contains \x6F ( o )
ok 669 - %DB::sub entry for renamed closure is correct when it contains \x6F ( o )
ok 670 - stash name for natively compiled sub is correct when it contains \x6F ( o )
ok 671 - caller() in natively compiled sub returns correct name when it contains \x6F ( o )
ok 672 - %DB::sub entry for natively compiled sub is correct when it contains \x6F ( o )
ok 673 - stash name for renamed closure is correct when it contains \x70 ( p )
ok 674 - caller() in renamed closure returns correct name when it contains \x70 ( p )
ok 675 - %DB::sub entry for renamed closure is correct when it contains \x70 ( p )
ok 676 - stash name for natively compiled sub is correct when it contains \x70 ( p )
ok 677 - caller() in natively compiled sub returns correct name when it contains \x70 ( p )
ok 678 - %DB::sub entry for natively compiled sub is correct when it contains \x70 ( p )
ok 679 - stash name for renamed closure is correct when it contains \x71 ( q )
ok 680 - caller() in renamed closure returns correct name when it contains \x71 ( q )
ok 681 - %DB::sub entry for renamed closure is correct when it contains \x71 ( q )
ok 682 - stash name for natively compiled sub is correct when it contains \x71 ( q )
ok 683 - caller() in natively compiled sub returns correct name when it contains \x71 ( q )
ok 684 - %DB::sub entry for natively compiled sub is correct when it contains \x71 ( q )
ok 685 - stash name for renamed closure is correct when it contains \x72 ( r )
ok 686 - caller() in renamed closure returns correct name when it contains \x72 ( r )
ok 687 - %DB::sub entry for renamed closure is correct when it contains \x72 ( r )
ok 688 - stash name for natively compiled sub is correct when it contains \x72 ( r )
ok 689 - caller() in natively compiled sub returns correct name when it contains \x72 ( r )
ok 690 - %DB::sub entry for natively compiled sub is correct when it contains \x72 ( r )
ok 691 - stash name for renamed closure is correct when it contains \x73 ( s )
ok 692 - caller() in renamed closure returns correct name when it contains \x73 ( s )
ok 693 - %DB::sub entry for renamed closure is correct when it contains \x73 ( s )
ok 694 - stash name for natively compiled sub is correct when it contains \x73 ( s )
ok 695 - caller() in natively compiled sub returns correct name when it contains \x73 ( s )
ok 696 - %DB::sub entry for natively compiled sub is correct when it contains \x73 ( s )
ok 697 - stash name for renamed closure is correct when it contains \x74 ( t )
ok 698 - caller() in renamed closure returns correct name when it contains \x74 ( t )
ok 699 - %DB::sub entry for renamed closure is correct when it contains \x74 ( t )
ok 700 - stash name for natively compiled sub is correct when it contains \x74 ( t )
ok 701 - caller() in natively compiled sub returns correct name when it contains \x74 ( t )
ok 702 - %DB::sub entry for natively compiled sub is correct when it contains \x74 ( t )
ok 703 - stash name for renamed closure is correct when it contains \x75 ( u )
ok 704 - caller() in renamed closure returns correct name when it contains \x75 ( u )
ok 705 - %DB::sub entry for renamed closure is correct when it contains \x75 ( u )
ok 706 - stash name for natively compiled sub is correct when it contains \x75 ( u )
ok 707 - caller() in natively compiled sub returns correct name when it contains \x75 ( u )
ok 708 - %DB::sub entry for natively compiled sub is correct when it contains \x75 ( u )
ok 709 - stash name for renamed closure is correct when it contains \x76 ( v )
ok 710 - caller() in renamed closure returns correct name when it contains \x76 ( v )
ok 711 - %DB::sub entry for renamed closure is correct when it contains \x76 ( v )
ok 712 - stash name for natively compiled sub is correct when it contains \x76 ( v )
ok 713 - caller() in natively compiled sub returns correct name when it contains \x76 ( v )
ok 714 - %DB::sub entry for natively compiled sub is correct when it contains \x76 ( v )
ok 715 - stash name for renamed closure is correct when it contains \x77 ( w )
ok 716 - caller() in renamed closure returns correct name when it contains \x77 ( w )
ok 717 - %DB::sub entry for renamed closure is correct when it contains \x77 ( w )
ok 718 - stash name for natively compiled sub is correct when it contains \x77 ( w )
ok 719 - caller() in natively compiled sub returns correct name when it contains \x77 ( w )
ok 720 - %DB::sub entry for natively compiled sub is correct when it contains \x77 ( w )
ok 721 - stash name for renamed closure is correct when it contains \x78 ( x )
ok 722 - caller() in renamed closure returns correct name when it contains \x78 ( x )
ok 723 - %DB::sub entry for renamed closure is correct when it contains \x78 ( x )
ok 724 - stash name for natively compiled sub is correct when it contains \x78 ( x )
ok 725 - caller() in natively compiled sub returns correct name when it contains \x78 ( x )
ok 726 - %DB::sub entry for natively compiled sub is correct when it contains \x78 ( x )
ok 727 - stash name for renamed closure is correct when it contains \x79 ( y )
ok 728 - caller() in renamed closure returns correct name when it contains \x79 ( y )
ok 729 - %DB::sub entry for renamed closure is correct when it contains \x79 ( y )
ok 730 - stash name for natively compiled sub is correct when it contains \x79 ( y )
ok 731 - caller() in natively compiled sub returns correct name when it contains \x79 ( y )
ok 732 - %DB::sub entry for natively compiled sub is correct when it contains \x79 ( y )
ok 733 - stash name for renamed closure is correct when it contains \x7A ( z )
ok 734 - caller() in renamed closure returns correct name when it contains \x7A ( z )
ok 735 - %DB::sub entry for renamed closure is correct when it contains \x7A ( z )
ok 736 - stash name for natively compiled sub is correct when it contains \x7A ( z )
ok 737 - caller() in natively compiled sub returns correct name when it contains \x7A ( z )
ok 738 - %DB::sub entry for natively compiled sub is correct when it contains \x7A ( z )
ok 739 - stash name for renamed closure is correct when it contains \x7B ( { )
ok 740 - caller() in renamed closure returns correct name when it contains \x7B ( { )
ok 741 - %DB::sub entry for renamed closure is correct when it contains \x7B ( { )
ok 742 - stash name for natively compiled sub is correct when it contains \x7B ( { )
ok 743 - caller() in natively compiled sub returns correct name when it contains \x7B ( { )
ok 744 - %DB::sub entry for natively compiled sub is correct when it contains \x7B ( { )
ok 745 - stash name for renamed closure is correct when it contains \x7C ( | )
ok 746 - caller() in renamed closure returns correct name when it contains \x7C ( | )
ok 747 - %DB::sub entry for renamed closure is correct when it contains \x7C ( | )
ok 748 - stash name for natively compiled sub is correct when it contains \x7C ( | )
ok 749 - caller() in natively compiled sub returns correct name when it contains \x7C ( | )
ok 750 - %DB::sub entry for natively compiled sub is correct when it contains \x7C ( | )
ok 751 - stash name for renamed closure is correct when it contains \x7D ( } )
ok 752 - caller() in renamed closure returns correct name when it contains \x7D ( } )
ok 753 - %DB::sub entry for renamed closure is correct when it contains \x7D ( } )
ok 754 - stash name for natively compiled sub is correct when it contains \x7D ( } )
ok 755 - caller() in natively compiled sub returns correct name when it contains \x7D ( } )
ok 756 - %DB::sub entry for natively compiled sub is correct when it contains \x7D ( } )
ok 757 - stash name for renamed closure is correct when it contains \x7E ( ~ )
ok 758 - caller() in renamed closure returns correct name when it contains \x7E ( ~ )
ok 759 - %DB::sub entry for renamed closure is correct when it contains \x7E ( ~ )
ok 760 - stash name for natively compiled sub is correct when it contains \x7E ( ~ )
ok 761 - caller() in natively compiled sub returns correct name when it contains \x7E ( ~ )
ok 762 - %DB::sub entry for natively compiled sub is correct when it contains \x7E ( ~ )
ok 763 - stash name for renamed closure is correct when it contains \x7F ( \177 )
ok 764 - caller() in renamed closure returns correct name when it contains \x7F ( \177 )
ok 765 - %DB::sub entry for renamed closure is correct when it contains \x7F ( \177 )
ok 766 - stash name for natively compiled sub is correct when it contains \x7F ( \177 )
ok 767 - caller() in natively compiled sub returns correct name when it contains \x7F ( \177 )
ok 768 - %DB::sub entry for natively compiled sub is correct when it contains \x7F ( \177 )
ok 769 - stash name for renamed closure is correct when it contains \x80 ( \200 )
ok 770 - caller() in renamed closure returns correct name when it contains \x80 ( \200 )
ok 771 - %DB::sub entry for renamed closure is correct when it contains \x80 ( \200 )
ok 772 - stash name for natively compiled sub is correct when it contains \x80 ( \200 )
ok 773 - caller() in natively compiled sub returns correct name when it contains \x80 ( \200 )
ok 774 - %DB::sub entry for natively compiled sub is correct when it contains \x80 ( \200 )
ok 775 - stash name for renamed closure is correct when it contains \x81 ( \201 )
ok 776 - caller() in renamed closure returns correct name when it contains \x81 ( \201 )
ok 777 - %DB::sub entry for renamed closure is correct when it contains \x81 ( \201 )
ok 778 - stash name for natively compiled sub is correct when it contains \x81 ( \201 )
ok 779 - caller() in natively compiled sub returns correct name when it contains \x81 ( \201 )
ok 780 - %DB::sub entry for natively compiled sub is correct when it contains \x81 ( \201 )
ok 781 - stash name for renamed closure is correct when it contains \x82 ( \202 )
ok 782 - caller() in renamed closure returns correct name when it contains \x82 ( \202 )
ok 783 - %DB::sub entry for renamed closure is correct when it contains \x82 ( \202 )
ok 784 - stash name for natively compiled sub is correct when it contains \x82 ( \202 )
ok 785 - caller() in natively compiled sub returns correct name when it contains \x82 ( \202 )
ok 786 - %DB::sub entry for natively compiled sub is correct when it contains \x82 ( \202 )
ok 787 - stash name for renamed closure is correct when it contains \x83 ( \203 )
ok 788 - caller() in renamed closure returns correct name when it contains \x83 ( \203 )
ok 789 - %DB::sub entry for renamed closure is correct when it contains \x83 ( \203 )
ok 790 - stash name for natively compiled sub is correct when it contains \x83 ( \203 )
ok 791 - caller() in natively compiled sub returns correct name when it contains \x83 ( \203 )
ok 792 - %DB::sub entry for natively compiled sub is correct when it contains \x83 ( \203 )
ok 793 - stash name for renamed closure is correct when it contains \x84 ( \204 )
ok 794 - caller() in renamed closure returns correct name when it contains \x84 ( \204 )
ok 795 - %DB::sub entry for renamed closure is correct when it contains \x84 ( \204 )
ok 796 - stash name for natively compiled sub is correct when it contains \x84 ( \204 )
ok 797 - caller() in natively compiled sub returns correct name when it contains \x84 ( \204 )
ok 798 - %DB::sub entry for natively compiled sub is correct when it contains \x84 ( \204 )
ok 799 - stash name for renamed closure is correct when it contains \x85 ( \205 )
ok 800 - caller() in renamed closure returns correct name when it contains \x85 ( \205 )
ok 801 - %DB::sub entry for renamed closure is correct when it contains \x85 ( \205 )
ok 802 - stash name for natively compiled sub is correct when it contains \x85 ( \205 )
ok 803 - caller() in natively compiled sub returns correct name when it contains \x85 ( \205 )
ok 804 - %DB::sub entry for natively compiled sub is correct when it contains \x85 ( \205 )
ok 805 - stash name for renamed closure is correct when it contains \x86 ( \206 )
ok 806 - caller() in renamed closure returns correct name when it contains \x86 ( \206 )
ok 807 - %DB::sub entry for renamed closure is correct when it contains \x86 ( \206 )
ok 808 - stash name for natively compiled sub is correct when it contains \x86 ( \206 )
ok 809 - caller() in natively compiled sub returns correct name when it contains \x86 ( \206 )
ok 810 - %DB::sub entry for natively compiled sub is correct when it contains \x86 ( \206 )
ok 811 - stash name for renamed closure is correct when it contains \x87 ( \207 )
ok 812 - caller() in renamed closure returns correct name when it contains \x87 ( \207 )
ok 813 - %DB::sub entry for renamed closure is correct when it contains \x87 ( \207 )
ok 814 - stash name for natively compiled sub is correct when it contains \x87 ( \207 )
ok 815 - caller() in natively compiled sub returns correct name when it contains \x87 ( \207 )
ok 816 - %DB::sub entry for natively compiled sub is correct when it contains \x87 ( \207 )
ok 817 - stash name for renamed closure is correct when it contains \x88 ( \210 )
ok 818 - caller() in renamed closure returns correct name when it contains \x88 ( \210 )
ok 819 - %DB::sub entry for renamed closure is correct when it contains \x88 ( \210 )
ok 820 - stash name for natively compiled sub is correct when it contains \x88 ( \210 )
ok 821 - caller() in natively compiled sub returns correct name when it contains \x88 ( \210 )
ok 822 - %DB::sub entry for natively compiled sub is correct when it contains \x88 ( \210 )
ok 823 - stash name for renamed closure is correct when it contains \x89 ( \211 )
ok 824 - caller() in renamed closure returns correct name when it contains \x89 ( \211 )
ok 825 - %DB::sub entry for renamed closure is correct when it contains \x89 ( \211 )
ok 826 - stash name for natively compiled sub is correct when it contains \x89 ( \211 )
ok 827 - caller() in natively compiled sub returns correct name when it contains \x89 ( \211 )
ok 828 - %DB::sub entry for natively compiled sub is correct when it contains \x89 ( \211 )
ok 829 - stash name for renamed closure is correct when it contains \x8A ( \212 )
ok 830 - caller() in renamed closure returns correct name when it contains \x8A ( \212 )
ok 831 - %DB::sub entry for renamed closure is correct when it contains \x8A ( \212 )
ok 832 - stash name for natively compiled sub is correct when it contains \x8A ( \212 )
ok 833 - caller() in natively compiled sub returns correct name when it contains \x8A ( \212 )
ok 834 - %DB::sub entry for natively compiled sub is correct when it contains \x8A ( \212 )
ok 835 - stash name for renamed closure is correct when it contains \x8B ( \213 )
ok 836 - caller() in renamed closure returns correct name when it contains \x8B ( \213 )
ok 837 - %DB::sub entry for renamed closure is correct when it contains \x8B ( \213 )
ok 838 - stash name for natively compiled sub is correct when it contains \x8B ( \213 )
ok 839 - caller() in natively compiled sub returns correct name when it contains \x8B ( \213 )
ok 840 - %DB::sub entry for natively compiled sub is correct when it contains \x8B ( \213 )
ok 841 - stash name for renamed closure is correct when it contains \x8C ( \214 )
ok 842 - caller() in renamed closure returns correct name when it contains \x8C ( \214 )
ok 843 - %DB::sub entry for renamed closure is correct when it contains \x8C ( \214 )
ok 844 - stash name for natively compiled sub is correct when it contains \x8C ( \214 )
ok 845 - caller() in natively compiled sub returns correct name when it contains \x8C ( \214 )
ok 846 - %DB::sub entry for natively compiled sub is correct when it contains \x8C ( \214 )
ok 847 - stash name for renamed closure is correct when it contains \x8D ( \215 )
ok 848 - caller() in renamed closure returns correct name when it contains \x8D ( \215 )
ok 849 - %DB::sub entry for renamed closure is correct when it contains \x8D ( \215 )
ok 850 - stash name for natively compiled sub is correct when it contains \x8D ( \215 )
ok 851 - caller() in natively compiled sub returns correct name when it contains \x8D ( \215 )
ok 852 - %DB::sub entry for natively compiled sub is correct when it contains \x8D ( \215 )
ok 853 - stash name for renamed closure is correct when it contains \x8E ( \216 )
ok 854 - caller() in renamed closure returns correct name when it contains \x8E ( \216 )
ok 855 - %DB::sub entry for renamed closure is correct when it contains \x8E ( \216 )
ok 856 - stash name for natively compiled sub is correct when it contains \x8E ( \216 )
ok 857 - caller() in natively compiled sub returns correct name when it contains \x8E ( \216 )
ok 858 - %DB::sub entry for natively compiled sub is correct when it contains \x8E ( \216 )
ok 859 - stash name for renamed closure is correct when it contains \x8F ( \217 )
ok 860 - caller() in renamed closure returns correct name when it contains \x8F ( \217 )
ok 861 - %DB::sub entry for renamed closure is correct when it contains \x8F ( \217 )
ok 862 - stash name for natively compiled sub is correct when it contains \x8F ( \217 )
ok 863 - caller() in natively compiled sub returns correct name when it contains \x8F ( \217 )
ok 864 - %DB::sub entry for natively compiled sub is correct when it contains \x8F ( \217 )
ok 865 - stash name for renamed closure is correct when it contains \x90 ( \220 )
ok 866 - caller() in renamed closure returns correct name when it contains \x90 ( \220 )
ok 867 - %DB::sub entry for renamed closure is correct when it contains \x90 ( \220 )
ok 868 - stash name for natively compiled sub is correct when it contains \x90 ( \220 )
ok 869 - caller() in natively compiled sub returns correct name when it contains \x90 ( \220 )
ok 870 - %DB::sub entry for natively compiled sub is correct when it contains \x90 ( \220 )
ok 871 - stash name for renamed closure is correct when it contains \x91 ( \221 )
ok 872 - caller() in renamed closure returns correct name when it contains \x91 ( \221 )
ok 873 - %DB::sub entry for renamed closure is correct when it contains \x91 ( \221 )
ok 874 - stash name for natively compiled sub is correct when it contains \x91 ( \221 )
ok 875 - caller() in natively compiled sub returns correct name when it contains \x91 ( \221 )
ok 876 - %DB::sub entry for natively compiled sub is correct when it contains \x91 ( \221 )
ok 877 - stash name for renamed closure is correct when it contains \x92 ( \222 )
ok 878 - caller() in renamed closure returns correct name when it contains \x92 ( \222 )
ok 879 - %DB::sub entry for renamed closure is correct when it contains \x92 ( \222 )
ok 880 - stash name for natively compiled sub is correct when it contains \x92 ( \222 )
ok 881 - caller() in natively compiled sub returns correct name when it contains \x92 ( \222 )
ok 882 - %DB::sub entry for natively compiled sub is correct when it contains \x92 ( \222 )
ok 883 - stash name for renamed closure is correct when it contains \x93 ( \223 )
ok 884 - caller() in renamed closure returns correct name when it contains \x93 ( \223 )
ok 885 - %DB::sub entry for renamed closure is correct when it contains \x93 ( \223 )
ok 886 - stash name for natively compiled sub is correct when it contains \x93 ( \223 )
ok 887 - caller() in natively compiled sub returns correct name when it contains \x93 ( \223 )
ok 888 - %DB::sub entry for natively compiled sub is correct when it contains \x93 ( \223 )
ok 889 - stash name for renamed closure is correct when it contains \x94 ( \224 )
ok 890 - caller() in renamed closure returns correct name when it contains \x94 ( \224 )
ok 891 - %DB::sub entry for renamed closure is correct when it contains \x94 ( \224 )
ok 892 - stash name for natively compiled sub is correct when it contains \x94 ( \224 )
ok 893 - caller() in natively compiled sub returns correct name when it contains \x94 ( \224 )
ok 894 - %DB::sub entry for natively compiled sub is correct when it contains \x94 ( \224 )
ok 895 - stash name for renamed closure is correct when it contains \x95 ( \225 )
ok 896 - caller() in renamed closure returns correct name when it contains \x95 ( \225 )
ok 897 - %DB::sub entry for renamed closure is correct when it contains \x95 ( \225 )
ok 898 - stash name for natively compiled sub is correct when it contains \x95 ( \225 )
ok 899 - caller() in natively compiled sub returns correct name when it contains \x95 ( \225 )
ok 900 - %DB::sub entry for natively compiled sub is correct when it contains \x95 ( \225 )
ok 901 - stash name for renamed closure is correct when it contains \x96 ( \226 )
ok 902 - caller() in renamed closure returns correct name when it contains \x96 ( \226 )
ok 903 - %DB::sub entry for renamed closure is correct when it contains \x96 ( \226 )
ok 904 - stash name for natively compiled sub is correct when it contains \x96 ( \226 )
ok 905 - caller() in natively compiled sub returns correct name when it contains \x96 ( \226 )
ok 906 - %DB::sub entry for natively compiled sub is correct when it contains \x96 ( \226 )
ok 907 - stash name for renamed closure is correct when it contains \x97 ( \227 )
ok 908 - caller() in renamed closure returns correct name when it contains \x97 ( \227 )
ok 909 - %DB::sub entry for renamed closure is correct when it contains \x97 ( \227 )
ok 910 - stash name for natively compiled sub is correct when it contains \x97 ( \227 )
ok 911 - caller() in natively compiled sub returns correct name when it contains \x97 ( \227 )
ok 912 - %DB::sub entry for natively compiled sub is correct when it contains \x97 ( \227 )
ok 913 - stash name for renamed closure is correct when it contains \x98 ( \230 )
ok 914 - caller() in renamed closure returns correct name when it contains \x98 ( \230 )
ok 915 - %DB::sub entry for renamed closure is correct when it contains \x98 ( \230 )
ok 916 - stash name for natively compiled sub is correct when it contains \x98 ( \230 )
ok 917 - caller() in natively compiled sub returns correct name when it contains \x98 ( \230 )
ok 918 - %DB::sub entry for natively compiled sub is correct when it contains \x98 ( \230 )
ok 919 - stash name for renamed closure is correct when it contains \x99 ( \231 )
ok 920 - caller() in renamed closure returns correct name when it contains \x99 ( \231 )
ok 921 - %DB::sub entry for renamed closure is correct when it contains \x99 ( \231 )
ok 922 - stash name for natively compiled sub is correct when it contains \x99 ( \231 )
ok 923 - caller() in natively compiled sub returns correct name when it contains \x99 ( \231 )
ok 924 - %DB::sub entry for natively compiled sub is correct when it contains \x99 ( \231 )
ok 925 - stash name for renamed closure is correct when it contains \x9A ( \232 )
ok 926 - caller() in renamed closure returns correct name when it contains \x9A ( \232 )
ok 927 - %DB::sub entry for renamed closure is correct when it contains \x9A ( \232 )
ok 928 - stash name for natively compiled sub is correct when it contains \x9A ( \232 )
ok 929 - caller() in natively compiled sub returns correct name when it contains \x9A ( \232 )
ok 930 - %DB::sub entry for natively compiled sub is correct when it contains \x9A ( \232 )
ok 931 - stash name for renamed closure is correct when it contains \x9B ( \233 )
ok 932 - caller() in renamed closure returns correct name when it contains \x9B ( \233 )
ok 933 - %DB::sub entry for renamed closure is correct when it contains \x9B ( \233 )
ok 934 - stash name for natively compiled sub is correct when it contains \x9B ( \233 )
ok 935 - caller() in natively compiled sub returns correct name when it contains \x9B ( \233 )
ok 936 - %DB::sub entry for natively compiled sub is correct when it contains \x9B ( \233 )
ok 937 - stash name for renamed closure is correct when it contains \x9C ( \234 )
ok 938 - caller() in renamed closure returns correct name when it contains \x9C ( \234 )
ok 939 - %DB::sub entry for renamed closure is correct when it contains \x9C ( \234 )
ok 940 - stash name for natively compiled sub is correct when it contains \x9C ( \234 )
ok 941 - caller() in natively compiled sub returns correct name when it contains \x9C ( \234 )
ok 942 - %DB::sub entry for natively compiled sub is correct when it contains \x9C ( \234 )
ok 943 - stash name for renamed closure is correct when it contains \x9D ( \235 )
ok 944 - caller() in renamed closure returns correct name when it contains \x9D ( \235 )
ok 945 - %DB::sub entry for renamed closure is correct when it contains \x9D ( \235 )
ok 946 - stash name for natively compiled sub is correct when it contains \x9D ( \235 )
ok 947 - caller() in natively compiled sub returns correct name when it contains \x9D ( \235 )
ok 948 - %DB::sub entry for natively compiled sub is correct when it contains \x9D ( \235 )
ok 949 - stash name for renamed closure is correct when it contains \x9E ( \236 )
ok 950 - caller() in renamed closure returns correct name when it contains \x9E ( \236 )
ok 951 - %DB::sub entry for renamed closure is correct when it contains \x9E ( \236 )
ok 952 - stash name for natively compiled sub is correct when it contains \x9E ( \236 )
ok 953 - caller() in natively compiled sub returns correct name when it contains \x9E ( \236 )
ok 954 - %DB::sub entry for natively compiled sub is correct when it contains \x9E ( \236 )
ok 955 - stash name for renamed closure is correct when it contains \x9F ( \237 )
ok 956 - caller() in renamed closure returns correct name when it contains \x9F ( \237 )
ok 957 - %DB::sub entry for renamed closure is correct when it contains \x9F ( \237 )
ok 958 - stash name for natively compiled sub is correct when it contains \x9F ( \237 )
ok 959 - caller() in natively compiled sub returns correct name when it contains \x9F ( \237 )
ok 960 - %DB::sub entry for natively compiled sub is correct when it contains \x9F ( \237 )
ok 961 - stash name for renamed closure is correct when it contains \xA0 ( \240 )
ok 962 - caller() in renamed closure returns correct name when it contains \xA0 ( \240 )
ok 963 - %DB::sub entry for renamed closure is correct when it contains \xA0 ( \240 )
ok 964 - stash name for natively compiled sub is correct when it contains \xA0 ( \240 )
ok 965 - caller() in natively compiled sub returns correct name when it contains \xA0 ( \240 )
ok 966 - %DB::sub entry for natively compiled sub is correct when it contains \xA0 ( \240 )
ok 967 - stash name for renamed closure is correct when it contains \xA1 ( \241 )
ok 968 - caller() in renamed closure returns correct name when it contains \xA1 ( \241 )
ok 969 - %DB::sub entry for renamed closure is correct when it contains \xA1 ( \241 )
ok 970 - stash name for natively compiled sub is correct when it contains \xA1 ( \241 )
ok 971 - caller() in natively compiled sub returns correct name when it contains \xA1 ( \241 )
ok 972 - %DB::sub entry for natively compiled sub is correct when it contains \xA1 ( \241 )
ok 973 - stash name for renamed closure is correct when it contains \xA2 ( \242 )
ok 974 - caller() in renamed closure returns correct name when it contains \xA2 ( \242 )
ok 975 - %DB::sub entry for renamed closure is correct when it contains \xA2 ( \242 )
ok 976 - stash name for natively compiled sub is correct when it contains \xA2 ( \242 )
ok 977 - caller() in natively compiled sub returns correct name when it contains \xA2 ( \242 )
ok 978 - %DB::sub entry for natively compiled sub is correct when it contains \xA2 ( \242 )
ok 979 - stash name for renamed closure is correct when it contains \xA3 ( \243 )
ok 980 - caller() in renamed closure returns correct name when it contains \xA3 ( \243 )
ok 981 - %DB::sub entry for renamed closure is correct when it contains \xA3 ( \243 )
ok 982 - stash name for natively compiled sub is correct when it contains \xA3 ( \243 )
ok 983 - caller() in natively compiled sub returns correct name when it contains \xA3 ( \243 )
ok 984 - %DB::sub entry for natively compiled sub is correct when it contains \xA3 ( \243 )
ok 985 - stash name for renamed closure is correct when it contains \xA4 ( \244 )
ok 986 - caller() in renamed closure returns correct name when it contains \xA4 ( \244 )
ok 987 - %DB::sub entry for renamed closure is correct when it contains \xA4 ( \244 )
ok 988 - stash name for natively compiled sub is correct when it contains \xA4 ( \244 )
ok 989 - caller() in natively compiled sub returns correct name when it contains \xA4 ( \244 )
ok 990 - %DB::sub entry for natively compiled sub is correct when it contains \xA4 ( \244 )
ok 991 - stash name for renamed closure is correct when it contains \xA5 ( \245 )
ok 992 - caller() in renamed closure returns correct name when it contains \xA5 ( \245 )
ok 993 - %DB::sub entry for renamed closure is correct when it contains \xA5 ( \245 )
ok 994 - stash name for natively compiled sub is correct when it contains \xA5 ( \245 )
ok 995 - caller() in natively compiled sub returns correct name when it contains \xA5 ( \245 )
ok 996 - %DB::sub entry for natively compiled sub is correct when it contains \xA5 ( \245 )
ok 997 - stash name for renamed closure is correct when it contains \xA6 ( \246 )
ok 998 - caller() in renamed closure returns correct name when it contains \xA6 ( \246 )
ok 999 - %DB::sub entry for renamed closure is correct when it contains \xA6 ( \246 )
ok 1000 - stash name for natively compiled sub is correct when it contains \xA6 ( \246 )
ok 1001 - caller() in natively compiled sub returns correct name when it contains \xA6 ( \246 )
ok 1002 - %DB::sub entry for natively compiled sub is correct when it contains \xA6 ( \246 )
ok 1003 - stash name for renamed closure is correct when it contains \xA7 ( \247 )
ok 1004 - caller() in renamed closure returns correct name when it contains \xA7 ( \247 )
ok 1005 - %DB::sub entry for renamed closure is correct when it contains \xA7 ( \247 )
ok 1006 - stash name for natively compiled sub is correct when it contains \xA7 ( \247 )
ok 1007 - caller() in natively compiled sub returns correct name when it contains \xA7 ( \247 )
ok 1008 - %DB::sub entry for natively compiled sub is correct when it contains \xA7 ( \247 )
ok 1009 - stash name for renamed closure is correct when it contains \xA8 ( \250 )
ok 1010 - caller() in renamed closure returns correct name when it contains \xA8 ( \250 )
ok 1011 - %DB::sub entry for renamed closure is correct when it contains \xA8 ( \250 )
ok 1012 - stash name for natively compiled sub is correct when it contains \xA8 ( \250 )
ok 1013 - caller() in natively compiled sub returns correct name when it contains \xA8 ( \250 )
ok 1014 - %DB::sub entry for natively compiled sub is correct when it contains \xA8 ( \250 )
ok 1015 - stash name for renamed closure is correct when it contains \xA9 ( \251 )
ok 1016 - caller() in renamed closure returns correct name when it contains \xA9 ( \251 )
ok 1017 - %DB::sub entry for renamed closure is correct when it contains \xA9 ( \251 )
ok 1018 - stash name for natively compiled sub is correct when it contains \xA9 ( \251 )
ok 1019 - caller() in natively compiled sub returns correct name when it contains \xA9 ( \251 )
ok 1020 - %DB::sub entry for natively compiled sub is correct when it contains \xA9 ( \251 )
ok 1021 - stash name for renamed closure is correct when it contains \xAA ( \252 )
ok 1022 - caller() in renamed closure returns correct name when it contains \xAA ( \252 )
ok 1023 - %DB::sub entry for renamed closure is correct when it contains \xAA ( \252 )
ok 1024 - stash name for natively compiled sub is correct when it contains \xAA ( \252 )
ok 1025 - caller() in natively compiled sub returns correct name when it contains \xAA ( \252 )
ok 1026 - %DB::sub entry for natively compiled sub is correct when it contains \xAA ( \252 )
ok 1027 - stash name for renamed closure is correct when it contains \xAB ( \253 )
ok 1028 - caller() in renamed closure returns correct name when it contains \xAB ( \253 )
ok 1029 - %DB::sub entry for renamed closure is correct when it contains \xAB ( \253 )
ok 1030 - stash name for natively compiled sub is correct when it contains \xAB ( \253 )
ok 1031 - caller() in natively compiled sub returns correct name when it contains \xAB ( \253 )
ok 1032 - %DB::sub entry for natively compiled sub is correct when it contains \xAB ( \253 )
ok 1033 - stash name for renamed closure is correct when it contains \xAC ( \254 )
ok 1034 - caller() in renamed closure returns correct name when it contains \xAC ( \254 )
ok 1035 - %DB::sub entry for renamed closure is correct when it contains \xAC ( \254 )
ok 1036 - stash name for natively compiled sub is correct when it contains \xAC ( \254 )
ok 1037 - caller() in natively compiled sub returns correct name when it contains \xAC ( \254 )
ok 1038 - %DB::sub entry for natively compiled sub is correct when it contains \xAC ( \254 )
ok 1039 - stash name for renamed closure is correct when it contains \xAD ( \255 )
ok 1040 - caller() in renamed closure returns correct name when it contains \xAD ( \255 )
ok 1041 - %DB::sub entry for renamed closure is correct when it contains \xAD ( \255 )
ok 1042 - stash name for natively compiled sub is correct when it contains \xAD ( \255 )
ok 1043 - caller() in natively compiled sub returns correct name when it contains \xAD ( \255 )
ok 1044 - %DB::sub entry for natively compiled sub is correct when it contains \xAD ( \255 )
ok 1045 - stash name for renamed closure is correct when it contains \xAE ( \256 )
ok 1046 - caller() in renamed closure returns correct name when it contains \xAE ( \256 )
ok 1047 - %DB::sub entry for renamed closure is correct when it contains \xAE ( \256 )
ok 1048 - stash name for natively compiled sub is correct when it contains \xAE ( \256 )
ok 1049 - caller() in natively compiled sub returns correct name when it contains \xAE ( \256 )
ok 1050 - %DB::sub entry for natively compiled sub is correct when it contains \xAE ( \256 )
ok 1051 - stash name for renamed closure is correct when it contains \xAF ( \257 )
ok 1052 - caller() in renamed closure returns correct name when it contains \xAF ( \257 )
ok 1053 - %DB::sub entry for renamed closure is correct when it contains \xAF ( \257 )
ok 1054 - stash name for natively compiled sub is correct when it contains \xAF ( \257 )
ok 1055 - caller() in natively compiled sub returns correct name when it contains \xAF ( \257 )
ok 1056 - %DB::sub entry for natively compiled sub is correct when it contains \xAF ( \257 )
ok 1057 - stash name for renamed closure is correct when it contains \xB0 ( \260 )
ok 1058 - caller() in renamed closure returns correct name when it contains \xB0 ( \260 )
ok 1059 - %DB::sub entry for renamed closure is correct when it contains \xB0 ( \260 )
ok 1060 - stash name for natively compiled sub is correct when it contains \xB0 ( \260 )
ok 1061 - caller() in natively compiled sub returns correct name when it contains \xB0 ( \260 )
ok 1062 - %DB::sub entry for natively compiled sub is correct when it contains \xB0 ( \260 )
ok 1063 - stash name for renamed closure is correct when it contains \xB1 ( \261 )
ok 1064 - caller() in renamed closure returns correct name when it contains \xB1 ( \261 )
ok 1065 - %DB::sub entry for renamed closure is correct when it contains \xB1 ( \261 )
ok 1066 - stash name for natively compiled sub is correct when it contains \xB1 ( \261 )
ok 1067 - caller() in natively compiled sub returns correct name when it contains \xB1 ( \261 )
ok 1068 - %DB::sub entry for natively compiled sub is correct when it contains \xB1 ( \261 )
ok 1069 - stash name for renamed closure is correct when it contains \xB2 ( \262 )
ok 1070 - caller() in renamed closure returns correct name when it contains \xB2 ( \262 )
ok 1071 - %DB::sub entry for renamed closure is correct when it contains \xB2 ( \262 )
ok 1072 - stash name for natively compiled sub is correct when it contains \xB2 ( \262 )
ok 1073 - caller() in natively compiled sub returns correct name when it contains \xB2 ( \262 )
ok 1074 - %DB::sub entry for natively compiled sub is correct when it contains \xB2 ( \262 )
ok 1075 - stash name for renamed closure is correct when it contains \xB3 ( \263 )
ok 1076 - caller() in renamed closure returns correct name when it contains \xB3 ( \263 )
ok 1077 - %DB::sub entry for renamed closure is correct when it contains \xB3 ( \263 )
ok 1078 - stash name for natively compiled sub is correct when it contains \xB3 ( \263 )
ok 1079 - caller() in natively compiled sub returns correct name when it contains \xB3 ( \263 )
ok 1080 - %DB::sub entry for natively compiled sub is correct when it contains \xB3 ( \263 )
ok 1081 - stash name for renamed closure is correct when it contains \xB4 ( \264 )
ok 1082 - caller() in renamed closure returns correct name when it contains \xB4 ( \264 )
ok 1083 - %DB::sub entry for renamed closure is correct when it contains \xB4 ( \264 )
ok 1084 - stash name for natively compiled sub is correct when it contains \xB4 ( \264 )
ok 1085 - caller() in natively compiled sub returns correct name when it contains \xB4 ( \264 )
ok 1086 - %DB::sub entry for natively compiled sub is correct when it contains \xB4 ( \264 )
ok 1087 - stash name for renamed closure is correct when it contains \xB5 ( \265 )
ok 1088 - caller() in renamed closure returns correct name when it contains \xB5 ( \265 )
ok 1089 - %DB::sub entry for renamed closure is correct when it contains \xB5 ( \265 )
ok 1090 - stash name for natively compiled sub is correct when it contains \xB5 ( \265 )
ok 1091 - caller() in natively compiled sub returns correct name when it contains \xB5 ( \265 )
ok 1092 - %DB::sub entry for natively compiled sub is correct when it contains \xB5 ( \265 )
ok 1093 - stash name for renamed closure is correct when it contains \xB6 ( \266 )
ok 1094 - caller() in renamed closure returns correct name when it contains \xB6 ( \266 )
ok 1095 - %DB::sub entry for renamed closure is correct when it contains \xB6 ( \266 )
ok 1096 - stash name for natively compiled sub is correct when it contains \xB6 ( \266 )
ok 1097 - caller() in natively compiled sub returns correct name when it contains \xB6 ( \266 )
ok 1098 - %DB::sub entry for natively compiled sub is correct when it contains \xB6 ( \266 )
ok 1099 - stash name for renamed closure is correct when it contains \xB7 ( \267 )
ok 1100 - caller() in renamed closure returns correct name when it contains \xB7 ( \267 )
ok 1101 - %DB::sub entry for renamed closure is correct when it contains \xB7 ( \267 )
ok 1102 - stash name for natively compiled sub is correct when it contains \xB7 ( \267 )
ok 1103 - caller() in natively compiled sub returns correct name when it contains \xB7 ( \267 )
ok 1104 - %DB::sub entry for natively compiled sub is correct when it contains \xB7 ( \267 )
ok 1105 - stash name for renamed closure is correct when it contains \xB8 ( \270 )
ok 1106 - caller() in renamed closure returns correct name when it contains \xB8 ( \270 )
ok 1107 - %DB::sub entry for renamed closure is correct when it contains \xB8 ( \270 )
ok 1108 - stash name for natively compiled sub is correct when it contains \xB8 ( \270 )
ok 1109 - caller() in natively compiled sub returns correct name when it contains \xB8 ( \270 )
ok 1110 - %DB::sub entry for natively compiled sub is correct when it contains \xB8 ( \270 )
ok 1111 - stash name for renamed closure is correct when it contains \xB9 ( \271 )
ok 1112 - caller() in renamed closure returns correct name when it contains \xB9 ( \271 )
ok 1113 - %DB::sub entry for renamed closure is correct when it contains \xB9 ( \271 )
ok 1114 - stash name for natively compiled sub is correct when it contains \xB9 ( \271 )
ok 1115 - caller() in natively compiled sub returns correct name when it contains \xB9 ( \271 )
ok 1116 - %DB::sub entry for natively compiled sub is correct when it contains \xB9 ( \271 )
ok 1117 - stash name for renamed closure is correct when it contains \xBA ( \272 )
ok 1118 - caller() in renamed closure returns correct name when it contains \xBA ( \272 )
ok 1119 - %DB::sub entry for renamed closure is correct when it contains \xBA ( \272 )
ok 1120 - stash name for natively compiled sub is correct when it contains \xBA ( \272 )
ok 1121 - caller() in natively compiled sub returns correct name when it contains \xBA ( \272 )
ok 1122 - %DB::sub entry for natively compiled sub is correct when it contains \xBA ( \272 )
ok 1123 - stash name for renamed closure is correct when it contains \xBB ( \273 )
ok 1124 - caller() in renamed closure returns correct name when it contains \xBB ( \273 )
ok 1125 - %DB::sub entry for renamed closure is correct when it contains \xBB ( \273 )
ok 1126 - stash name for natively compiled sub is correct when it contains \xBB ( \273 )
ok 1127 - caller() in natively compiled sub returns correct name when it contains \xBB ( \273 )
ok 1128 - %DB::sub entry for natively compiled sub is correct when it contains \xBB ( \273 )
ok 1129 - stash name for renamed closure is correct when it contains \xBC ( \274 )
ok 1130 - caller() in renamed closure returns correct name when it contains \xBC ( \274 )
ok 1131 - %DB::sub entry for renamed closure is correct when it contains \xBC ( \274 )
ok 1132 - stash name for natively compiled sub is correct when it contains \xBC ( \274 )
ok 1133 - caller() in natively compiled sub returns correct name when it contains \xBC ( \274 )
ok 1134 - %DB::sub entry for natively compiled sub is correct when it contains \xBC ( \274 )
ok 1135 - stash name for renamed closure is correct when it contains \xBD ( \275 )
ok 1136 - caller() in renamed closure returns correct name when it contains \xBD ( \275 )
ok 1137 - %DB::sub entry for renamed closure is correct when it contains \xBD ( \275 )
ok 1138 - stash name for natively compiled sub is correct when it contains \xBD ( \275 )
ok 1139 - caller() in natively compiled sub returns correct name when it contains \xBD ( \275 )
ok 1140 - %DB::sub entry for natively compiled sub is correct when it contains \xBD ( \275 )
ok 1141 - stash name for renamed closure is correct when it contains \xBE ( \276 )
ok 1142 - caller() in renamed closure returns correct name when it contains \xBE ( \276 )
ok 1143 - %DB::sub entry for renamed closure is correct when it contains \xBE ( \276 )
ok 1144 - stash name for natively compiled sub is correct when it contains \xBE ( \276 )
ok 1145 - caller() in natively compiled sub returns correct name when it contains \xBE ( \276 )
ok 1146 - %DB::sub entry for natively compiled sub is correct when it contains \xBE ( \276 )
ok 1147 - stash name for renamed closure is correct when it contains \xBF ( \277 )
ok 1148 - caller() in renamed closure returns correct name when it contains \xBF ( \277 )
ok 1149 - %DB::sub entry for renamed closure is correct when it contains \xBF ( \277 )
ok 1150 - stash name for natively compiled sub is correct when it contains \xBF ( \277 )
ok 1151 - caller() in natively compiled sub returns correct name when it contains \xBF ( \277 )
ok 1152 - %DB::sub entry for natively compiled sub is correct when it contains \xBF ( \277 )
ok 1153 - stash name for renamed closure is correct when it contains \xC0 ( \300 )
ok 1154 - caller() in renamed closure returns correct name when it contains \xC0 ( \300 )
ok 1155 - %DB::sub entry for renamed closure is correct when it contains \xC0 ( \300 )
ok 1156 - stash name for natively compiled sub is correct when it contains \xC0 ( \300 )
ok 1157 - caller() in natively compiled sub returns correct name when it contains \xC0 ( \300 )
ok 1158 - %DB::sub entry for natively compiled sub is correct when it contains \xC0 ( \300 )
ok 1159 - stash name for renamed closure is correct when it contains \xC1 ( \301 )
ok 1160 - caller() in renamed closure returns correct name when it contains \xC1 ( \301 )
ok 1161 - %DB::sub entry for renamed closure is correct when it contains \xC1 ( \301 )
ok 1162 - stash name for natively compiled sub is correct when it contains \xC1 ( \301 )
ok 1163 - caller() in natively compiled sub returns correct name when it contains \xC1 ( \301 )
ok 1164 - %DB::sub entry for natively compiled sub is correct when it contains \xC1 ( \301 )
ok 1165 - stash name for renamed closure is correct when it contains \xC2 ( \302 )
ok 1166 - caller() in renamed closure returns correct name when it contains \xC2 ( \302 )
ok 1167 - %DB::sub entry for renamed closure is correct when it contains \xC2 ( \302 )
ok 1168 - stash name for natively compiled sub is correct when it contains \xC2 ( \302 )
ok 1169 - caller() in natively compiled sub returns correct name when it contains \xC2 ( \302 )
ok 1170 - %DB::sub entry for natively compiled sub is correct when it contains \xC2 ( \302 )
ok 1171 - stash name for renamed closure is correct when it contains \xC3 ( \303 )
ok 1172 - caller() in renamed closure returns correct name when it contains \xC3 ( \303 )
ok 1173 - %DB::sub entry for renamed closure is correct when it contains \xC3 ( \303 )
ok 1174 - stash name for natively compiled sub is correct when it contains \xC3 ( \303 )
ok 1175 - caller() in natively compiled sub returns correct name when it contains \xC3 ( \303 )
ok 1176 - %DB::sub entry for natively compiled sub is correct when it contains \xC3 ( \303 )
ok 1177 - stash name for renamed closure is correct when it contains \xC4 ( \304 )
ok 1178 - caller() in renamed closure returns correct name when it contains \xC4 ( \304 )
ok 1179 - %DB::sub entry for renamed closure is correct when it contains \xC4 ( \304 )
ok 1180 - stash name for natively compiled sub is correct when it contains \xC4 ( \304 )
ok 1181 - caller() in natively compiled sub returns correct name when it contains \xC4 ( \304 )
ok 1182 - %DB::sub entry for natively compiled sub is correct when it contains \xC4 ( \304 )
ok 1183 - stash name for renamed closure is correct when it contains \xC5 ( \305 )
ok 1184 - caller() in renamed closure returns correct name when it contains \xC5 ( \305 )
ok 1185 - %DB::sub entry for renamed closure is correct when it contains \xC5 ( \305 )
ok 1186 - stash name for natively compiled sub is correct when it contains \xC5 ( \305 )
ok 1187 - caller() in natively compiled sub returns correct name when it contains \xC5 ( \305 )
ok 1188 - %DB::sub entry for natively compiled sub is correct when it contains \xC5 ( \305 )
ok 1189 - stash name for renamed closure is correct when it contains \xC6 ( \306 )
ok 1190 - caller() in renamed closure returns correct name when it contains \xC6 ( \306 )
ok 1191 - %DB::sub entry for renamed closure is correct when it contains \xC6 ( \306 )
ok 1192 - stash name for natively compiled sub is correct when it contains \xC6 ( \306 )
ok 1193 - caller() in natively compiled sub returns correct name when it contains \xC6 ( \306 )
ok 1194 - %DB::sub entry for natively compiled sub is correct when it contains \xC6 ( \306 )
ok 1195 - stash name for renamed closure is correct when it contains \xC7 ( \307 )
ok 1196 - caller() in renamed closure returns correct name when it contains \xC7 ( \307 )
ok 1197 - %DB::sub entry for renamed closure is correct when it contains \xC7 ( \307 )
ok 1198 - stash name for natively compiled sub is correct when it contains \xC7 ( \307 )
ok 1199 - caller() in natively compiled sub returns correct name when it contains \xC7 ( \307 )
ok 1200 - %DB::sub entry for natively compiled sub is correct when it contains \xC7 ( \307 )
ok 1201 - stash name for renamed closure is correct when it contains \xC8 ( \310 )
ok 1202 - caller() in renamed closure returns correct name when it contains \xC8 ( \310 )
ok 1203 - %DB::sub entry for renamed closure is correct when it contains \xC8 ( \310 )
ok 1204 - stash name for natively compiled sub is correct when it contains \xC8 ( \310 )
ok 1205 - caller() in natively compiled sub returns correct name when it contains \xC8 ( \310 )
ok 1206 - %DB::sub entry for natively compiled sub is correct when it contains \xC8 ( \310 )
ok 1207 - stash name for renamed closure is correct when it contains \xC9 ( \311 )
ok 1208 - caller() in renamed closure returns correct name when it contains \xC9 ( \311 )
ok 1209 - %DB::sub entry for renamed closure is correct when it contains \xC9 ( \311 )
ok 1210 - stash name for natively compiled sub is correct when it contains \xC9 ( \311 )
ok 1211 - caller() in natively compiled sub returns correct name when it contains \xC9 ( \311 )
ok 1212 - %DB::sub entry for natively compiled sub is correct when it contains \xC9 ( \311 )
ok 1213 - stash name for renamed closure is correct when it contains \xCA ( \312 )
ok 1214 - caller() in renamed closure returns correct name when it contains \xCA ( \312 )
ok 1215 - %DB::sub entry for renamed closure is correct when it contains \xCA ( \312 )
ok 1216 - stash name for natively compiled sub is correct when it contains \xCA ( \312 )
ok 1217 - caller() in natively compiled sub returns correct name when it contains \xCA ( \312 )
ok 1218 - %DB::sub entry for natively compiled sub is correct when it contains \xCA ( \312 )
ok 1219 - stash name for renamed closure is correct when it contains \xCB ( \313 )
ok 1220 - caller() in renamed closure returns correct name when it contains \xCB ( \313 )
ok 1221 - %DB::sub entry for renamed closure is correct when it contains \xCB ( \313 )
ok 1222 - stash name for natively compiled sub is correct when it contains \xCB ( \313 )
ok 1223 - caller() in natively compiled sub returns correct name when it contains \xCB ( \313 )
ok 1224 - %DB::sub entry for natively compiled sub is correct when it contains \xCB ( \313 )
ok 1225 - stash name for renamed closure is correct when it contains \xCC ( \314 )
ok 1226 - caller() in renamed closure returns correct name when it contains \xCC ( \314 )
ok 1227 - %DB::sub entry for renamed closure is correct when it contains \xCC ( \314 )
ok 1228 - stash name for natively compiled sub is correct when it contains \xCC ( \314 )
ok 1229 - caller() in natively compiled sub returns correct name when it contains \xCC ( \314 )
ok 1230 - %DB::sub entry for natively compiled sub is correct when it contains \xCC ( \314 )
ok 1231 - stash name for renamed closure is correct when it contains \xCD ( \315 )
ok 1232 - caller() in renamed closure returns correct name when it contains \xCD ( \315 )
ok 1233 - %DB::sub entry for renamed closure is correct when it contains \xCD ( \315 )
ok 1234 - stash name for natively compiled sub is correct when it contains \xCD ( \315 )
ok 1235 - caller() in natively compiled sub returns correct name when it contains \xCD ( \315 )
ok 1236 - %DB::sub entry for natively compiled sub is correct when it contains \xCD ( \315 )
ok 1237 - stash name for renamed closure is correct when it contains \xCE ( \316 )
ok 1238 - caller() in renamed closure returns correct name when it contains \xCE ( \316 )
ok 1239 - %DB::sub entry for renamed closure is correct when it contains \xCE ( \316 )
ok 1240 - stash name for natively compiled sub is correct when it contains \xCE ( \316 )
ok 1241 - caller() in natively compiled sub returns correct name when it contains \xCE ( \316 )
ok 1242 - %DB::sub entry for natively compiled sub is correct when it contains \xCE ( \316 )
ok 1243 - stash name for renamed closure is correct when it contains \xCF ( \317 )
ok 1244 - caller() in renamed closure returns correct name when it contains \xCF ( \317 )
ok 1245 - %DB::sub entry for renamed closure is correct when it contains \xCF ( \317 )
ok 1246 - stash name for natively compiled sub is correct when it contains \xCF ( \317 )
ok 1247 - caller() in natively compiled sub returns correct name when it contains \xCF ( \317 )
ok 1248 - %DB::sub entry for natively compiled sub is correct when it contains \xCF ( \317 )
ok 1249 - stash name for renamed closure is correct when it contains \xD0 ( \320 )
ok 1250 - caller() in renamed closure returns correct name when it contains \xD0 ( \320 )
ok 1251 - %DB::sub entry for renamed closure is correct when it contains \xD0 ( \320 )
ok 1252 - stash name for natively compiled sub is correct when it contains \xD0 ( \320 )
ok 1253 - caller() in natively compiled sub returns correct name when it contains \xD0 ( \320 )
ok 1254 - %DB::sub entry for natively compiled sub is correct when it contains \xD0 ( \320 )
ok 1255 - stash name for renamed closure is correct when it contains \xD1 ( \321 )
ok 1256 - caller() in renamed closure returns correct name when it contains \xD1 ( \321 )
ok 1257 - %DB::sub entry for renamed closure is correct when it contains \xD1 ( \321 )
ok 1258 - stash name for natively compiled sub is correct when it contains \xD1 ( \321 )
ok 1259 - caller() in natively compiled sub returns correct name when it contains \xD1 ( \321 )
ok 1260 - %DB::sub entry for natively compiled sub is correct when it contains \xD1 ( \321 )
ok 1261 - stash name for renamed closure is correct when it contains \xD2 ( \322 )
ok 1262 - caller() in renamed closure returns correct name when it contains \xD2 ( \322 )
ok 1263 - %DB::sub entry for renamed closure is correct when it contains \xD2 ( \322 )
ok 1264 - stash name for natively compiled sub is correct when it contains \xD2 ( \322 )
ok 1265 - caller() in natively compiled sub returns correct name when it contains \xD2 ( \322 )
ok 1266 - %DB::sub entry for natively compiled sub is correct when it contains \xD2 ( \322 )
ok 1267 - stash name for renamed closure is correct when it contains \xD3 ( \323 )
ok 1268 - caller() in renamed closure returns correct name when it contains \xD3 ( \323 )
ok 1269 - %DB::sub entry for renamed closure is correct when it contains \xD3 ( \323 )
ok 1270 - stash name for natively compiled sub is correct when it contains \xD3 ( \323 )
ok 1271 - caller() in natively compiled sub returns correct name when it contains \xD3 ( \323 )
ok 1272 - %DB::sub entry for natively compiled sub is correct when it contains \xD3 ( \323 )
ok 1273 - stash name for renamed closure is correct when it contains \xD4 ( \324 )
ok 1274 - caller() in renamed closure returns correct name when it contains \xD4 ( \324 )
ok 1275 - %DB::sub entry for renamed closure is correct when it contains \xD4 ( \324 )
ok 1276 - stash name for natively compiled sub is correct when it contains \xD4 ( \324 )
ok 1277 - caller() in natively compiled sub returns correct name when it contains \xD4 ( \324 )
ok 1278 - %DB::sub entry for natively compiled sub is correct when it contains \xD4 ( \324 )
ok 1279 - stash name for renamed closure is correct when it contains \xD5 ( \325 )
ok 1280 - caller() in renamed closure returns correct name when it contains \xD5 ( \325 )
ok 1281 - %DB::sub entry for renamed closure is correct when it contains \xD5 ( \325 )
ok 1282 - stash name for natively compiled sub is correct when it contains \xD5 ( \325 )
ok 1283 - caller() in natively compiled sub returns correct name when it contains \xD5 ( \325 )
ok 1284 - %DB::sub entry for natively compiled sub is correct when it contains \xD5 ( \325 )
ok 1285 - stash name for renamed closure is correct when it contains \xD6 ( \326 )
ok 1286 - caller() in renamed closure returns correct name when it contains \xD6 ( \326 )
ok 1287 - %DB::sub entry for renamed closure is correct when it contains \xD6 ( \326 )
ok 1288 - stash name for natively compiled sub is correct when it contains \xD6 ( \326 )
ok 1289 - caller() in natively compiled sub returns correct name when it contains \xD6 ( \326 )
ok 1290 - %DB::sub entry for natively compiled sub is correct when it contains \xD6 ( \326 )
ok 1291 - stash name for renamed closure is correct when it contains \xD7 ( \327 )
ok 1292 - caller() in renamed closure returns correct name when it contains \xD7 ( \327 )
ok 1293 - %DB::sub entry for renamed closure is correct when it contains \xD7 ( \327 )
ok 1294 - stash name for natively compiled sub is correct when it contains \xD7 ( \327 )
ok 1295 - caller() in natively compiled sub returns correct name when it contains \xD7 ( \327 )
ok 1296 - %DB::sub entry for natively compiled sub is correct when it contains \xD7 ( \327 )
ok 1297 - stash name for renamed closure is correct when it contains \xD8 ( \330 )
ok 1298 - caller() in renamed closure returns correct name when it contains \xD8 ( \330 )
ok 1299 - %DB::sub entry for renamed closure is correct when it contains \xD8 ( \330 )
ok 1300 - stash name for natively compiled sub is correct when it contains \xD8 ( \330 )
ok 1301 - caller() in natively compiled sub returns correct name when it contains \xD8 ( \330 )
ok 1302 - %DB::sub entry for natively compiled sub is correct when it contains \xD8 ( \330 )
ok 1303 - stash name for renamed closure is correct when it contains \xD9 ( \331 )
ok 1304 - caller() in renamed closure returns correct name when it contains \xD9 ( \331 )
ok 1305 - %DB::sub entry for renamed closure is correct when it contains \xD9 ( \331 )
ok 1306 - stash name for natively compiled sub is correct when it contains \xD9 ( \331 )
ok 1307 - caller() in natively compiled sub returns correct name when it contains \xD9 ( \331 )
ok 1308 - %DB::sub entry for natively compiled sub is correct when it contains \xD9 ( \331 )
ok 1309 - stash name for renamed closure is correct when it contains \xDA ( \332 )
ok 1310 - caller() in renamed closure returns correct name when it contains \xDA ( \332 )
ok 1311 - %DB::sub entry for renamed closure is correct when it contains \xDA ( \332 )
ok 1312 - stash name for natively compiled sub is correct when it contains \xDA ( \332 )
ok 1313 - caller() in natively compiled sub returns correct name when it contains \xDA ( \332 )
ok 1314 - %DB::sub entry for natively compiled sub is correct when it contains \xDA ( \332 )
ok 1315 - stash name for renamed closure is correct when it contains \xDB ( \333 )
ok 1316 - caller() in renamed closure returns correct name when it contains \xDB ( \333 )
ok 1317 - %DB::sub entry for renamed closure is correct when it contains \xDB ( \333 )
ok 1318 - stash name for natively compiled sub is correct when it contains \xDB ( \333 )
ok 1319 - caller() in natively compiled sub returns correct name when it contains \xDB ( \333 )
ok 1320 - %DB::sub entry for natively compiled sub is correct when it contains \xDB ( \333 )
ok 1321 - stash name for renamed closure is correct when it contains \xDC ( \334 )
ok 1322 - caller() in renamed closure returns correct name when it contains \xDC ( \334 )
ok 1323 - %DB::sub entry for renamed closure is correct when it contains \xDC ( \334 )
ok 1324 - stash name for natively compiled sub is correct when it contains \xDC ( \334 )
ok 1325 - caller() in natively compiled sub returns correct name when it contains \xDC ( \334 )
ok 1326 - %DB::sub entry for natively compiled sub is correct when it contains \xDC ( \334 )
ok 1327 - stash name for renamed closure is correct when it contains \xDD ( \335 )
ok 1328 - caller() in renamed closure returns correct name when it contains \xDD ( \335 )
ok 1329 - %DB::sub entry for renamed closure is correct when it contains \xDD ( \335 )
ok 1330 - stash name for natively compiled sub is correct when it contains \xDD ( \335 )
ok 1331 - caller() in natively compiled sub returns correct name when it contains \xDD ( \335 )
ok 1332 - %DB::sub entry for natively compiled sub is correct when it contains \xDD ( \335 )
ok 1333 - stash name for renamed closure is correct when it contains \xDE ( \336 )
ok 1334 - caller() in renamed closure returns correct name when it contains \xDE ( \336 )
ok 1335 - %DB::sub entry for renamed closure is correct when it contains \xDE ( \336 )
ok 1336 - stash name for natively compiled sub is correct when it contains \xDE ( \336 )
ok 1337 - caller() in natively compiled sub returns correct name when it contains \xDE ( \336 )
ok 1338 - %DB::sub entry for natively compiled sub is correct when it contains \xDE ( \336 )
ok 1339 - stash name for renamed closure is correct when it contains \xDF ( \337 )
ok 1340 - caller() in renamed closure returns correct name when it contains \xDF ( \337 )
ok 1341 - %DB::sub entry for renamed closure is correct when it contains \xDF ( \337 )
ok 1342 - stash name for natively compiled sub is correct when it contains \xDF ( \337 )
ok 1343 - caller() in natively compiled sub returns correct name when it contains \xDF ( \337 )
ok 1344 - %DB::sub entry for natively compiled sub is correct when it contains \xDF ( \337 )
ok 1345 - stash name for renamed closure is correct when it contains \xE0 ( \340 )
ok 1346 - caller() in renamed closure returns correct name when it contains \xE0 ( \340 )
ok 1347 - %DB::sub entry for renamed closure is correct when it contains \xE0 ( \340 )
ok 1348 - stash name for natively compiled sub is correct when it contains \xE0 ( \340 )
ok 1349 - caller() in natively compiled sub returns correct name when it contains \xE0 ( \340 )
ok 1350 - %DB::sub entry for natively compiled sub is correct when it contains \xE0 ( \340 )
ok 1351 - stash name for renamed closure is correct when it contains \xE1 ( \341 )
ok 1352 - caller() in renamed closure returns correct name when it contains \xE1 ( \341 )
ok 1353 - %DB::sub entry for renamed closure is correct when it contains \xE1 ( \341 )
ok 1354 - stash name for natively compiled sub is correct when it contains \xE1 ( \341 )
ok 1355 - caller() in natively compiled sub returns correct name when it contains \xE1 ( \341 )
ok 1356 - %DB::sub entry for natively compiled sub is correct when it contains \xE1 ( \341 )
ok 1357 - stash name for renamed closure is correct when it contains \xE2 ( \342 )
ok 1358 - caller() in renamed closure returns correct name when it contains \xE2 ( \342 )
ok 1359 - %DB::sub entry for renamed closure is correct when it contains \xE2 ( \342 )
ok 1360 - stash name for natively compiled sub is correct when it contains \xE2 ( \342 )
ok 1361 - caller() in natively compiled sub returns correct name when it contains \xE2 ( \342 )
ok 1362 - %DB::sub entry for natively compiled sub is correct when it contains \xE2 ( \342 )
ok 1363 - stash name for renamed closure is correct when it contains \xE3 ( \343 )
ok 1364 - caller() in renamed closure returns correct name when it contains \xE3 ( \343 )
ok 1365 - %DB::sub entry for renamed closure is correct when it contains \xE3 ( \343 )
ok 1366 - stash name for natively compiled sub is correct when it contains \xE3 ( \343 )
ok 1367 - caller() in natively compiled sub returns correct name when it contains \xE3 ( \343 )
ok 1368 - %DB::sub entry for natively compiled sub is correct when it contains \xE3 ( \343 )
ok 1369 - stash name for renamed closure is correct when it contains \xE4 ( \344 )
ok 1370 - caller() in renamed closure returns correct name when it contains \xE4 ( \344 )
ok 1371 - %DB::sub entry for renamed closure is correct when it contains \xE4 ( \344 )
ok 1372 - stash name for natively compiled sub is correct when it contains \xE4 ( \344 )
ok 1373 - caller() in natively compiled sub returns correct name when it contains \xE4 ( \344 )
ok 1374 - %DB::sub entry for natively compiled sub is correct when it contains \xE4 ( \344 )
ok 1375 - stash name for renamed closure is correct when it contains \xE5 ( \345 )
ok 1376 - caller() in renamed closure returns correct name when it contains \xE5 ( \345 )
ok 1377 - %DB::sub entry for renamed closure is correct when it contains \xE5 ( \345 )
ok 1378 - stash name for natively compiled sub is correct when it contains \xE5 ( \345 )
ok 1379 - caller() in natively compiled sub returns correct name when it contains \xE5 ( \345 )
ok 1380 - %DB::sub entry for natively compiled sub is correct when it contains \xE5 ( \345 )
ok 1381 - stash name for renamed closure is correct when it contains \xE6 ( \346 )
ok 1382 - caller() in renamed closure returns correct name when it contains \xE6 ( \346 )
ok 1383 - %DB::sub entry for renamed closure is correct when it contains \xE6 ( \346 )
ok 1384 - stash name for natively compiled sub is correct when it contains \xE6 ( \346 )
ok 1385 - caller() in natively compiled sub returns correct name when it contains \xE6 ( \346 )
ok 1386 - %DB::sub entry for natively compiled sub is correct when it contains \xE6 ( \346 )
ok 1387 - stash name for renamed closure is correct when it contains \xE7 ( \347 )
ok 1388 - caller() in renamed closure returns correct name when it contains \xE7 ( \347 )
ok 1389 - %DB::sub entry for renamed closure is correct when it contains \xE7 ( \347 )
ok 1390 - stash name for natively compiled sub is correct when it contains \xE7 ( \347 )
ok 1391 - caller() in natively compiled sub returns correct name when it contains \xE7 ( \347 )
ok 1392 - %DB::sub entry for natively compiled sub is correct when it contains \xE7 ( \347 )
ok 1393 - stash name for renamed closure is correct when it contains \xE8 ( \350 )
ok 1394 - caller() in renamed closure returns correct name when it contains \xE8 ( \350 )
ok 1395 - %DB::sub entry for renamed closure is correct when it contains \xE8 ( \350 )
ok 1396 - stash name for natively compiled sub is correct when it contains \xE8 ( \350 )
ok 1397 - caller() in natively compiled sub returns correct name when it contains \xE8 ( \350 )
ok 1398 - %DB::sub entry for natively compiled sub is correct when it contains \xE8 ( \350 )
ok 1399 - stash name for renamed closure is correct when it contains \xE9 ( \351 )
ok 1400 - caller() in renamed closure returns correct name when it contains \xE9 ( \351 )
ok 1401 - %DB::sub entry for renamed closure is correct when it contains \xE9 ( \351 )
ok 1402 - stash name for natively compiled sub is correct when it contains \xE9 ( \351 )
ok 1403 - caller() in natively compiled sub returns correct name when it contains \xE9 ( \351 )
ok 1404 - %DB::sub entry for natively compiled sub is correct when it contains \xE9 ( \351 )
ok 1405 - stash name for renamed closure is correct when it contains \xEA ( \352 )
ok 1406 - caller() in renamed closure returns correct name when it contains \xEA ( \352 )
ok 1407 - %DB::sub entry for renamed closure is correct when it contains \xEA ( \352 )
ok 1408 - stash name for natively compiled sub is correct when it contains \xEA ( \352 )
ok 1409 - caller() in natively compiled sub returns correct name when it contains \xEA ( \352 )
ok 1410 - %DB::sub entry for natively compiled sub is correct when it contains \xEA ( \352 )
ok 1411 - stash name for renamed closure is correct when it contains \xEB ( \353 )
ok 1412 - caller() in renamed closure returns correct name when it contains \xEB ( \353 )
ok 1413 - %DB::sub entry for renamed closure is correct when it contains \xEB ( \353 )
ok 1414 - stash name for natively compiled sub is correct when it contains \xEB ( \353 )
ok 1415 - caller() in natively compiled sub returns correct name when it contains \xEB ( \353 )
ok 1416 - %DB::sub entry for natively compiled sub is correct when it contains \xEB ( \353 )
ok 1417 - stash name for renamed closure is correct when it contains \xEC ( \354 )
ok 1418 - caller() in renamed closure returns correct name when it contains \xEC ( \354 )
ok 1419 - %DB::sub entry for renamed closure is correct when it contains \xEC ( \354 )
ok 1420 - stash name for natively compiled sub is correct when it contains \xEC ( \354 )
ok 1421 - caller() in natively compiled sub returns correct name when it contains \xEC ( \354 )
ok 1422 - %DB::sub entry for natively compiled sub is correct when it contains \xEC ( \354 )
ok 1423 - stash name for renamed closure is correct when it contains \xED ( \355 )
ok 1424 - caller() in renamed closure returns correct name when it contains \xED ( \355 )
ok 1425 - %DB::sub entry for renamed closure is correct when it contains \xED ( \355 )
ok 1426 - stash name for natively compiled sub is correct when it contains \xED ( \355 )
ok 1427 - caller() in natively compiled sub returns correct name when it contains \xED ( \355 )
ok 1428 - %DB::sub entry for natively compiled sub is correct when it contains \xED ( \355 )
ok 1429 - stash name for renamed closure is correct when it contains \xEE ( \356 )
ok 1430 - caller() in renamed closure returns correct name when it contains \xEE ( \356 )
ok 1431 - %DB::sub entry for renamed closure is correct when it contains \xEE ( \356 )
ok 1432 - stash name for natively compiled sub is correct when it contains \xEE ( \356 )
ok 1433 - caller() in natively compiled sub returns correct name when it contains \xEE ( \356 )
ok 1434 - %DB::sub entry for natively compiled sub is correct when it contains \xEE ( \356 )
ok 1435 - stash name for renamed closure is correct when it contains \xEF ( \357 )
ok 1436 - caller() in renamed closure returns correct name when it contains \xEF ( \357 )
ok 1437 - %DB::sub entry for renamed closure is correct when it contains \xEF ( \357 )
ok 1438 - stash name for natively compiled sub is correct when it contains \xEF ( \357 )
ok 1439 - caller() in natively compiled sub returns correct name when it contains \xEF ( \357 )
ok 1440 - %DB::sub entry for natively compiled sub is correct when it contains \xEF ( \357 )
ok 1441 - stash name for renamed closure is correct when it contains \xF0 ( \360 )
ok 1442 - caller() in renamed closure returns correct name when it contains \xF0 ( \360 )
ok 1443 - %DB::sub entry for renamed closure is correct when it contains \xF0 ( \360 )
ok 1444 - stash name for natively compiled sub is correct when it contains \xF0 ( \360 )
ok 1445 - caller() in natively compiled sub returns correct name when it contains \xF0 ( \360 )
ok 1446 - %DB::sub entry for natively compiled sub is correct when it contains \xF0 ( \360 )
ok 1447 - stash name for renamed closure is correct when it contains \xF1 ( \361 )
ok 1448 - caller() in renamed closure returns correct name when it contains \xF1 ( \361 )
ok 1449 - %DB::sub entry for renamed closure is correct when it contains \xF1 ( \361 )
ok 1450 - stash name for natively compiled sub is correct when it contains \xF1 ( \361 )
ok 1451 - caller() in natively compiled sub returns correct name when it contains \xF1 ( \361 )
ok 1452 - %DB::sub entry for natively compiled sub is correct when it contains \xF1 ( \361 )
ok 1453 - stash name for renamed closure is correct when it contains \xF2 ( \362 )
ok 1454 - caller() in renamed closure returns correct name when it contains \xF2 ( \362 )
ok 1455 - %DB::sub entry for renamed closure is correct when it contains \xF2 ( \362 )
ok 1456 - stash name for natively compiled sub is correct when it contains \xF2 ( \362 )
ok 1457 - caller() in natively compiled sub returns correct name when it contains \xF2 ( \362 )
ok 1458 - %DB::sub entry for natively compiled sub is correct when it contains \xF2 ( \362 )
ok 1459 - stash name for renamed closure is correct when it contains \xF3 ( \363 )
ok 1460 - caller() in renamed closure returns correct name when it contains \xF3 ( \363 )
ok 1461 - %DB::sub entry for renamed closure is correct when it contains \xF3 ( \363 )
ok 1462 - stash name for natively compiled sub is correct when it contains \xF3 ( \363 )
ok 1463 - caller() in natively compiled sub returns correct name when it contains \xF3 ( \363 )
ok 1464 - %DB::sub entry for natively compiled sub is correct when it contains \xF3 ( \363 )
ok 1465 - stash name for renamed closure is correct when it contains \xF4 ( \364 )
ok 1466 - caller() in renamed closure returns correct name when it contains \xF4 ( \364 )
ok 1467 - %DB::sub entry for renamed closure is correct when it contains \xF4 ( \364 )
ok 1468 - stash name for natively compiled sub is correct when it contains \xF4 ( \364 )
ok 1469 - caller() in natively compiled sub returns correct name when it contains \xF4 ( \364 )
ok 1470 - %DB::sub entry for natively compiled sub is correct when it contains \xF4 ( \364 )
ok 1471 - stash name for renamed closure is correct when it contains \xF5 ( \365 )
ok 1472 - caller() in renamed closure returns correct name when it contains \xF5 ( \365 )
ok 1473 - %DB::sub entry for renamed closure is correct when it contains \xF5 ( \365 )
ok 1474 - stash name for natively compiled sub is correct when it contains \xF5 ( \365 )
ok 1475 - caller() in natively compiled sub returns correct name when it contains \xF5 ( \365 )
ok 1476 - %DB::sub entry for natively compiled sub is correct when it contains \xF5 ( \365 )
ok 1477 - stash name for renamed closure is correct when it contains \xF6 ( \366 )
ok 1478 - caller() in renamed closure returns correct name when it contains \xF6 ( \366 )
ok 1479 - %DB::sub entry for renamed closure is correct when it contains \xF6 ( \366 )
ok 1480 - stash name for natively compiled sub is correct when it contains \xF6 ( \366 )
ok 1481 - caller() in natively compiled sub returns correct name when it contains \xF6 ( \366 )
ok 1482 - %DB::sub entry for natively compiled sub is correct when it contains \xF6 ( \366 )
ok 1483 - stash name for renamed closure is correct when it contains \xF7 ( \367 )
ok 1484 - caller() in renamed closure returns correct name when it contains \xF7 ( \367 )
ok 1485 - %DB::sub entry for renamed closure is correct when it contains \xF7 ( \367 )
ok 1486 - stash name for natively compiled sub is correct when it contains \xF7 ( \367 )
ok 1487 - caller() in natively compiled sub returns correct name when it contains \xF7 ( \367 )
ok 1488 - %DB::sub entry for natively compiled sub is correct when it contains \xF7 ( \367 )
ok 1489 - stash name for renamed closure is correct when it contains \xF8 ( \370 )
ok 1490 - caller() in renamed closure returns correct name when it contains \xF8 ( \370 )
ok 1491 - %DB::sub entry for renamed closure is correct when it contains \xF8 ( \370 )
ok 1492 - stash name for natively compiled sub is correct when it contains \xF8 ( \370 )
ok 1493 - caller() in natively compiled sub returns correct name when it contains \xF8 ( \370 )
ok 1494 - %DB::sub entry for natively compiled sub is correct when it contains \xF8 ( \370 )
ok 1495 - stash name for renamed closure is correct when it contains \xF9 ( \371 )
ok 1496 - caller() in renamed closure returns correct name when it contains \xF9 ( \371 )
ok 1497 - %DB::sub entry for renamed closure is correct when it contains \xF9 ( \371 )
ok 1498 - stash name for natively compiled sub is correct when it contains \xF9 ( \371 )
ok 1499 - caller() in natively compiled sub returns correct name when it contains \xF9 ( \371 )
ok 1500 - %DB::sub entry for natively compiled sub is correct when it contains \xF9 ( \371 )
ok 1501 - stash name for renamed closure is correct when it contains \xFA ( \372 )
ok 1502 - caller() in renamed closure returns correct name when it contains \xFA ( \372 )
ok 1503 - %DB::sub entry for renamed closure is correct when it contains \xFA ( \372 )
ok 1504 - stash name for natively compiled sub is correct when it contains \xFA ( \372 )
ok 1505 - caller() in natively compiled sub returns correct name when it contains \xFA ( \372 )
ok 1506 - %DB::sub entry for natively compiled sub is correct when it contains \xFA ( \372 )
ok 1507 - stash name for renamed closure is correct when it contains \xFB ( \373 )
ok 1508 - caller() in renamed closure returns correct name when it contains \xFB ( \373 )
ok 1509 - %DB::sub entry for renamed closure is correct when it contains \xFB ( \373 )
ok 1510 - stash name for natively compiled sub is correct when it contains \xFB ( \373 )
ok 1511 - caller() in natively compiled sub returns correct name when it contains \xFB ( \373 )
ok 1512 - %DB::sub entry for natively compiled sub is correct when it contains \xFB ( \373 )
ok 1513 - stash name for renamed closure is correct when it contains \xFC ( \374 )
ok 1514 - caller() in renamed closure returns correct name when it contains \xFC ( \374 )
ok 1515 - %DB::sub entry for renamed closure is correct when it contains \xFC ( \374 )
ok 1516 - stash name for natively compiled sub is correct when it contains \xFC ( \374 )
ok 1517 - caller() in natively compiled sub returns correct name when it contains \xFC ( \374 )
ok 1518 - %DB::sub entry for natively compiled sub is correct when it contains \xFC ( \374 )
ok 1519 - stash name for renamed closure is correct when it contains \xFD ( \375 )
ok 1520 - caller() in renamed closure returns correct name when it contains \xFD ( \375 )
ok 1521 - %DB::sub entry for renamed closure is correct when it contains \xFD ( \375 )
ok 1522 - stash name for natively compiled sub is correct when it contains \xFD ( \375 )
ok 1523 - caller() in natively compiled sub returns correct name when it contains \xFD ( \375 )
ok 1524 - %DB::sub entry for natively compiled sub is correct when it contains \xFD ( \375 )
ok 1525 - stash name for renamed closure is correct when it contains \xFE ( \376 )
ok 1526 - caller() in renamed closure returns correct name when it contains \xFE ( \376 )
ok 1527 - %DB::sub entry for renamed closure is correct when it contains \xFE ( \376 )
ok 1528 - stash name for natively compiled sub is correct when it contains \xFE ( \376 )
ok 1529 - caller() in natively compiled sub returns correct name when it contains \xFE ( \376 )
ok 1530 - %DB::sub entry for natively compiled sub is correct when it contains \xFE ( \376 )
ok 1531 - stash name for renamed closure is correct when it contains \xFF ( \377 )
ok 1532 - caller() in renamed closure returns correct name when it contains \xFF ( \377 )
ok 1533 - %DB::sub entry for renamed closure is correct when it contains \xFF ( \377 )
ok 1534 - stash name for natively compiled sub is correct when it contains \xFF ( \377 )
ok 1535 - caller() in natively compiled sub returns correct name when it contains \xFF ( \377 )
ok 1536 - %DB::sub entry for natively compiled sub is correct when it contains \xFF ( \377 )
ok 1537 - stash name for renamed closure is correct when it contains \x{100} ( c480 )
ok 1538 - caller() in renamed closure returns correct name when it contains \x{100} ( c480 )
ok 1539 - %DB::sub entry for renamed closure is correct when it contains \x{100} ( c480 )
ok 1540 - stash name for natively compiled sub is correct when it contains \x{100} ( c480 )
ok 1541 - caller() in natively compiled sub returns correct name when it contains \x{100} ( c480 )
ok 1542 - %DB::sub entry for natively compiled sub is correct when it contains \x{100} ( c480 )
ok 1543 - stash name for renamed closure is correct when it contains \x{498} ( d298 )
ok 1544 - caller() in renamed closure returns correct name when it contains \x{498} ( d298 )
ok 1545 - %DB::sub entry for renamed closure is correct when it contains \x{498} ( d298 )
ok 1546 - stash name for natively compiled sub is correct when it contains \x{498} ( d298 )
ok 1547 - caller() in natively compiled sub returns correct name when it contains \x{498} ( d298 )
ok 1548 - %DB::sub entry for natively compiled sub is correct when it contains \x{498} ( d298 )
ok 1549 - stash name for renamed closure is correct when it contains \x{2122} ( e284a2 )
ok 1550 - caller() in renamed closure returns correct name when it contains \x{2122} ( e284a2 )
ok 1551 - %DB::sub entry for renamed closure is correct when it contains \x{2122} ( e284a2 )
ok 1552 - stash name for natively compiled sub is correct when it contains \x{2122} ( e284a2 )
ok 1553 - caller() in natively compiled sub returns correct name when it contains \x{2122} ( e284a2 )
ok 1554 - %DB::sub entry for natively compiled sub is correct when it contains \x{2122} ( e284a2 )
ok 1555 - stash name for renamed closure is correct when it contains \x{1F4A9} ( f09f92a9 )
ok 1556 - caller() in renamed closure returns correct name when it contains \x{1F4A9} ( f09f92a9 )
ok 1557 - %DB::sub entry for renamed closure is correct when it contains \x{1F4A9} ( f09f92a9 )
ok 1558 - stash name for natively compiled sub is correct when it contains \x{1F4A9} ( f09f92a9 )
ok 1559 - caller() in natively compiled sub returns correct name when it contains \x{1F4A9} ( f09f92a9 )
ok 1560 - %DB::sub entry for natively compiled sub is correct when it contains \x{1F4A9} ( f09f92a9 )
ok
t/lexical.t ............ 
ok 1 - lexical subs can be named
ok 2 - lexical closure subs can be named
1..2
ok
t/quotes-bug.t ......... 
1..1
ok 1 - correctly parsed single quote from name where the last separator is ::
ok
t/RT42725_deparse.t .... 
1..2
ok 1
ok 2
ok
t/RT96893_perlcc.t ..... skipped: B::C required for testing perlcc -O3
t/smoke.t .............. 
1..10
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok
All tests successful.
Files=7, Tests=1576,  1 wallclock secs ( 0.13 usr  0.01 sys +  0.84 cusr  0.06 csys =  1.04 CPU)
Result: PASS
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
   dh_testroot
   dh_prep
   dh_auto_install
	make -j4 install DESTDIR=/<<PKGBUILDDIR>>/debian/libsub-name-perl AM_UPDATE_INFO_DIR=no PREFIX=/usr
make[1]: Entering directory '/<<PKGBUILDDIR>>'
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- Name.bs blib/arch/auto/Sub/Name/Name.bs 644
Manifying 1 pod document
Files found in blib/arch: installing files in blib/lib into architecture dependent library tree
Installing /<<PKGBUILDDIR>>/debian/libsub-name-perl/usr/lib/x86_64-linux-gnu/perl5/5.30/auto/Sub/Name/Name.so
Installing /<<PKGBUILDDIR>>/debian/libsub-name-perl/usr/lib/x86_64-linux-gnu/perl5/5.30/Sub/Name.pm
Installing /<<PKGBUILDDIR>>/debian/libsub-name-perl/usr/share/man/man3/Sub::Name.3pm
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installdocs
   dh_installchangelogs
   dh_installman
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
   dh_fixperms
   dh_missing
   dh_dwz
   dh_strip
   dh_makeshlibs
   dh_shlibdeps
   dh_installdeb
   dh_gencontrol
   dh_md5sums
   dh_builddeb
dpkg-deb: building package 'libsub-name-perl' in '../libsub-name-perl_0.26-1_amd64.deb'.
dpkg-deb: building package 'libsub-name-perl-dbgsym' in '../libsub-name-perl-dbgsym_0.26-1_amd64.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../libsub-name-perl_0.26-1_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T06:57:35Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


libsub-name-perl_0.26-1_amd64.changes:
--------------------------------------

Format: 1.8
Date: Sun, 13 Oct 2019 06:12:44 +0000
Source: libsub-name-perl
Binary: libsub-name-perl libsub-name-perl-dbgsym
Architecture: amd64
Version: 0.26-1
Distribution: unstable
Urgency: medium
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Changed-By: intrigeri <intrigeri@debian.org>
Description:
 libsub-name-perl - module for assigning a new name to referenced sub
Changes:
 libsub-name-perl (0.26-1) unstable; urgency=medium
 .
   * Team upload
 .
   [ Alex Muntada ]
   * Remove inactive pkg-perl members from Uploaders.
 .
   [ Salvatore Bonaccorso ]
   * Update Vcs-* headers for switch to salsa.debian.org
 .
   [ intrigeri ]
   * New upstream version 0.26
   * Bump debhelper compatibility level to 12
   * Declare compliance with policy 4.4.1
   * Explicitly declare dependencies provided by perl
   * Declare that debian/rules does not need (fake)root
   * Remove unused Lintian override
Checksums-Sha1:
 abc93060abb4c3a8970f2cb6208d358177e23666 21184 libsub-name-perl-dbgsym_0.26-1_amd64.deb
 5b77de340b3b7edd7dbea6b61cbba570add21ffa 5212 libsub-name-perl_0.26-1_amd64.buildinfo
 eb3aefe925d3a58436e3d8b313a57b34b0e5b4d8 13344 libsub-name-perl_0.26-1_amd64.deb
Checksums-Sha256:
 00dff8aa2ce80adfa0a1a80e0ce95e0f3c566f45d62bbcf1703f43eed6b5fe42 21184 libsub-name-perl-dbgsym_0.26-1_amd64.deb
 6612aa4e0b0d57a6937849fc10b749d6c9661fc790c4c7f76c27ed5519372627 5212 libsub-name-perl_0.26-1_amd64.buildinfo
 195667a1b4ea8b33ca04445f8c2776dcb4f0ac44973d8b2b39f037e0d8874b9a 13344 libsub-name-perl_0.26-1_amd64.deb
Files:
 5364e296ec16d340228526589285f156 21184 debug optional libsub-name-perl-dbgsym_0.26-1_amd64.deb
 671a460d3910b8e7a760d4d58ba93c4c 5212 perl optional libsub-name-perl_0.26-1_amd64.buildinfo
 a1bec30fa475a526cabb750eb5f99231 13344 perl optional libsub-name-perl_0.26-1_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: libsub-name-perl
Binary: libsub-name-perl
Architecture: amd64
Version: 0.26-1
Checksums-Md5:
 5364e296ec16d340228526589285f156 21184 libsub-name-perl-dbgsym_0.26-1_amd64.deb
 a1bec30fa475a526cabb750eb5f99231 13344 libsub-name-perl_0.26-1_amd64.deb
Checksums-Sha1:
 abc93060abb4c3a8970f2cb6208d358177e23666 21184 libsub-name-perl-dbgsym_0.26-1_amd64.deb
 eb3aefe925d3a58436e3d8b313a57b34b0e5b4d8 13344 libsub-name-perl_0.26-1_amd64.deb
Checksums-Sha256:
 00dff8aa2ce80adfa0a1a80e0ce95e0f3c566f45d62bbcf1703f43eed6b5fe42 21184 libsub-name-perl-dbgsym_0.26-1_amd64.deb
 195667a1b4ea8b33ca04445f8c2776dcb4f0ac44973d8b2b39f037e0d8874b9a 13344 libsub-name-perl_0.26-1_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 06:57:34 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-10 (= 1:10.0.0~+rc2-1),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-10-dev (= 1:10.0.0~+rc2-1),
 libclang-cpp10 (= 1:10.0.0~+rc2-1),
 libclang1-10 (= 1:10.0.0~+rc2-1),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdevel-checkbin-perl (= 0.04-1),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm10 (= 1:10.0.0~+rc2-1),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpfr6 (= 4.0.2-1),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-9-dev (= 9.2.1-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libquadmath0 (= 10-20200222-1),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1570947164"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


libsub-name-perl-dbgsym_0.26-1_amd64.deb
----------------------------------------

 new Debian package, version 2.0.
 size 21184 bytes: control archive=540 bytes.
     395 bytes,    12 lines      control              
     106 bytes,     1 lines      md5sums              
 Package: libsub-name-perl-dbgsym
 Source: libsub-name-perl
 Version: 0.26-1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
 Installed-Size: 35
 Depends: libsub-name-perl (= 0.26-1)
 Section: debug
 Priority: optional
 Description: debug symbols for libsub-name-perl
 Build-Ids: 44a2789edc791573215302e5599c65e540279dcf

drwxr-xr-x root/root         0 2019-10-13 06:12 ./
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/debug/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/debug/.build-id/44/
-rw-r--r-- root/root     24600 2019-10-13 06:12 ./usr/lib/debug/.build-id/44/a2789edc791573215302e5599c65e540279dcf.debug
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/doc/
lrwxrwxrwx root/root         0 2019-10-13 06:12 ./usr/share/doc/libsub-name-perl-dbgsym -> libsub-name-perl


libsub-name-perl_0.26-1_amd64.deb
---------------------------------

 new Debian package, version 2.0.
 size 13344 bytes: control archive=1000 bytes.
     807 bytes,    21 lines      control              
     482 bytes,     6 lines      md5sums              
 Package: libsub-name-perl
 Version: 0.26-1
 Architecture: amd64
 Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
 Installed-Size: 44
 Depends: perl (>= 5.30.0-9), perlapi-5.30.0, libc6 (>= 2.4)
 Section: perl
 Priority: optional
 Homepage: https://metacpan.org/release/Sub-Name
 Description: module for assigning a new name to referenced sub
  Sub::Name has only one function, which is also exported by default:
  .
  subname NAME, CODEREF
  .
  Assigns a new name to referenced sub. If package specification is
  omitted in the name, then the current package is used. The return
  value is the sub.
  .
  The name is only used for informative routines (caller, Carp, etc).
  You won't be able to actually invoke the sub by the given name. To
  allow that, you need to do glob-assignment yourself.

drwxr-xr-x root/root         0 2019-10-13 06:12 ./
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/Sub/
-rw-r--r-- root/root      4329 2019-10-05 22:23 ./usr/lib/x86_64-linux-gnu/perl5/5.30/Sub/Name.pm
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/Sub/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/Sub/Name/
-rw-r--r-- root/root     14240 2019-10-13 06:12 ./usr/lib/x86_64-linux-gnu/perl5/5.30/auto/Sub/Name/Name.so
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/doc/libsub-name-perl/
-rw-r--r-- root/root      1933 2019-10-13 06:12 ./usr/share/doc/libsub-name-perl/changelog.Debian.gz
-rw-r--r-- root/root      1814 2019-10-05 22:23 ./usr/share/doc/libsub-name-perl/changelog.gz
-rw-r--r-- root/root      1444 2019-10-13 06:12 ./usr/share/doc/libsub-name-perl/copyright
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/man/
drwxr-xr-x root/root         0 2019-10-13 06:12 ./usr/share/man/man3/
-rw-r--r-- root/root      2253 2019-10-13 06:12 ./usr/share/man/man3/Sub::Name.3pm.gz


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 1168
Build-Time: 5
Distribution: unstable
Host Architecture: amd64
Install-Time: 5
Job: libsub-name-perl_0.26-1
Machine Architecture: amd64
Package: libsub-name-perl
Package-Time: 25
Source-Version: 0.26-1
Space: 1168
Status: successful
Version: 0.26-1
--------------------------------------------------------------------------------
Finished at 2020-02-25T06:57:35Z
Build needed 00:00:25, 1168k disk space
DC-Status: OK 25.499691459s
