DC-Build-Header: pywavelets 0.5.1-1.3 / 2020-02-25 14:43:12 +0000
DC-Task: type:rebuild-binarch-only source:pywavelets version:0.5.1-1.3 chroot:unstable esttime:313 logfile:/tmp/pywavelets_0.5.1-1.3_unstable_clang10.log modes:clang10:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang10 pywavelets_0.5.1-1.3'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-8-228.eu-central-1.compute.internal

+==============================================================================+
| pywavelets 0.5.1-1.3 (amd64)                 Tue, 25 Feb 2020 14:43:12 +0000 |
+==============================================================================+

Package: pywavelets
Version: 0.5.1-1.3
Source Version: 0.5.1-1.3
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-d79b1000-a736-4391-be7a-8f1c33fc7b98' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang10
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=10
+ echo 'Install of clang-10'
Install of clang-10
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0815.22.pdiff [9222 B]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:8 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0815.22.pdiff [9222 B]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0815.22.pdiff [20.1 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0815.22.pdiff [20.1 kB]
Get:14 http://127.0.0.1:12990/debian sid/main Translation-en [6195 kB]
Fetched 6604 kB in 2s (3797 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-10 libomp-10-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  cpp-9 g++-9 gcc-9 gcc-9-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libasan5
  libbsd0 libc6-i386 libclang-common-10-dev libclang-cpp10 libclang1-10
  libedit2 libgc1c2 libgcc-9-dev libllvm10 libobjc4 libomp5-10 libstdc++-9-dev
  libz3-4
Suggested packages:
  clang-10-doc gcc-9-locales g++-9-multilib gcc-9-doc gcc-9-multilib
  libomp-10-doc libstdc++-9-doc
Recommended packages:
  llvm-10-dev python3
The following NEW packages will be installed:
  clang-10 lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-10-dev libclang-cpp10 libclang1-10 libedit2 libgc1c2
  libllvm10 libobjc-9-dev libobjc4 libomp-10-dev libomp5-10 libz3-4
The following packages will be upgraded:
  cpp-9 g++-9 gcc-9 gcc-9-base libasan5 libgcc-9-dev libstdc++-9-dev
7 upgraded, 17 newly installed, 0 to remove and 2 not upgraded.
Need to get 81.5 MB of archives.
After this operation, 238 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libasan5 amd64 9.2.1-30 [389 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 g++-9 amd64 9.2.1-30 [10.7 MB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 gcc-9 amd64 9.2.1-30 [10.0 MB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-9-dev amd64 9.2.1-30 [1697 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libgcc-9-dev amd64 9.2.1-30 [2349 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 cpp-9 amd64 9.2.1-30 [9711 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 gcc-9-base amd64 9.2.1-30 [196 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libllvm10 amd64 1:10.0.0~+rc2-1 [15.5 MB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp10 amd64 1:10.0.0~+rc2-1 [9069 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-30 [219 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-10-dev amd64 1:10.0.0~+rc2-1 [2782 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libclang1-10 amd64 1:10.0.0~+rc2-1 [7607 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 clang-10 amd64 1:10.0.0~+rc2-1 [103 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libomp5-10 amd64 1:10.0.0~+rc2-1 [337 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libomp-10-dev amd64 1:10.0.0~+rc2-1 [84.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 81.5 MB in 1s (98.6 MB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libasan5_9.2.1-30_amd64.deb ...
Unpacking libasan5:amd64 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../01-g++-9_9.2.1-30_amd64.deb ...
Unpacking g++-9 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../02-gcc-9_9.2.1-30_amd64.deb ...
Unpacking gcc-9 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../03-libstdc++-9-dev_9.2.1-30_amd64.deb ...
Unpacking libstdc++-9-dev:amd64 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../04-libgcc-9-dev_9.2.1-30_amd64.deb ...
Unpacking libgcc-9-dev:amd64 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../05-cpp-9_9.2.1-30_amd64.deb ...
Unpacking cpp-9 (9.2.1-30) over (9.2.1-29) ...
Preparing to unpack .../06-gcc-9-base_9.2.1-30_amd64.deb ...
Unpacking gcc-9-base:amd64 (9.2.1-30) over (9.2.1-29) ...
Selecting previously unselected package libbsd0:amd64.
Preparing to unpack .../07-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../08-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../09-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm10:amd64.
Preparing to unpack .../10-libllvm10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang-cpp10.
Preparing to unpack .../11-libclang-cpp10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-cpp10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../12-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../13-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../14-libobjc-9-dev_9.2.1-30_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-30) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../15-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../16-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../17-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../18-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-10-dev.
Preparing to unpack .../19-libclang-common-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang1-10.
Preparing to unpack .../20-libclang1-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang1-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package clang-10.
Preparing to unpack .../21-clang-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking clang-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp5-10:amd64.
Preparing to unpack .../22-libomp5-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp-10-dev.
Preparing to unpack .../23-libomp-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up gcc-9-base:amd64 (9.2.1-30) ...
Setting up libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Setting up libasan5:amd64 (9.2.1-30) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libclang1-10 (1:10.0.0~+rc2-1) ...
Setting up cpp-9 (9.2.1-30) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libclang-cpp10 (1:10.0.0~+rc2-1) ...
Setting up libgcc-9-dev:amd64 (9.2.1-30) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libobjc-9-dev:amd64 (9.2.1-30) ...
Setting up gcc-9 (9.2.1-30) ...
Setting up libstdc++-9-dev:amd64 (9.2.1-30) ...
Setting up libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Setting up g++-9 (9.2.1-30) ...
Setting up clang-10 (1:10.0.0~+rc2-1) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-10 g++-4.6
+ ln -s clang-10 gcc-4.6
+ ln -s clang-10 cpp-4.6
+ ln -s clang-10 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-10 g++-4.7
+ ln -s clang-10 gcc-4.7
+ ln -s clang-10 cpp-4.7
+ ln -s clang-10 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-10 g++-4.8
+ ln -s clang-10 gcc-4.8
+ ln -s clang-10 cpp-4.8
+ ln -s clang-10 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-10 g++-4.9
+ ln -s clang-10 gcc-4.9
+ ln -s clang-10 cpp-4.9
+ ln -s clang-10 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-10 g++-5
+ ln -s clang-10 gcc-5
+ ln -s clang-10 cpp-5
+ ln -s clang-10 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-10 g++-6
+ ln -s clang-10 gcc-6
+ ln -s clang-10 cpp-6
+ ln -s clang-10 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-10 g++-7
+ ln -s clang-10 gcc-7
+ ln -s clang-10 cpp-7
+ ln -s clang-10 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-10 g++-8
+ ln -s clang-10 gcc-8
+ ln -s clang-10 cpp-8
+ ln -s clang-10 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-10 g++-9
+ ln -s clang-10 gcc-9
+ ln -s clang-10 cpp-9
+ ln -s clang-10 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-10 g++-10
+ ln -s clang-10 gcc-10
+ ln -s clang-10 cpp-10
+ ln -s clang-10 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/pywavelets-YiAmyn
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang10'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/pywavelets-YiAmyn/resolver-rayAIe' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (6513 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'pywavelets' packaging is maintained in the 'Git' version control system at:
https://anonscm.debian.org/git/python-modules/packages/pywavelets.git
Please use:
git clone https://anonscm.debian.org/git/python-modules/packages/pywavelets.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 4440 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main pywavelets 0.5.1-1.3 (dsc) [2199 B]
Get:2 http://127.0.0.1:12990/debian sid/main pywavelets 0.5.1-1.3 (tar) [4429 kB]
Get:3 http://127.0.0.1:12990/debian sid/main pywavelets 0.5.1-1.3 (diff) [8060 B]
Fetched 4440 kB in 0s (22.7 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/pywavelets-YiAmyn/pywavelets-0.5.1' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/pywavelets-YiAmyn' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: cython3 (>= 0.16), debhelper (>= 9), dh-python, python3-numpydoc, python3-sphinx (>= 1.0.7+dfsg), python3-all-dev, python3-nose, python3-numpy, python3-setuptools, build-essential, fakeroot
Filtered Build-Depends: cython3 (>= 0.16), debhelper (>= 9), dh-python, python3-numpydoc, python3-sphinx (>= 1.0.7+dfsg), python3-all-dev, python3-nose, python3-numpy, python3-setuptools, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [427 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [513 B]
Fetched 1897 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils ca-certificates
  cython3 debhelper dh-autoreconf dh-python dh-strip-nondeterminism
  docutils-common dwz file gettext gettext-base groff-base intltool-debian
  libarchive-zip-perl libblas3 libcroco3 libdebhelper-perl libelf1 libexpat1
  libexpat1-dev libfile-stripnondeterminism-perl libgfortran5 libglib2.0-0
  libicu63 libjs-jquery libjs-sphinxdoc libjs-underscore liblapack3
  libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpython3-all-dev
  libpython3-dev libpython3-stdlib libpython3.7 libpython3.7-dev
  libpython3.7-minimal libpython3.7-stdlib libpython3.8 libpython3.8-dev
  libpython3.8-minimal libpython3.8-stdlib libreadline8 libsigsegv2
  libsqlite3-0 libssl1.1 libsub-override-perl libtool libuchardet0 libxml2 m4
  man-db mime-support openssl po-debconf python-babel-localedata python3
  python3-alabaster python3-all python3-all-dev python3-attr python3-babel
  python3-certifi python3-chardet python3-dev python3-distutils
  python3-docutils python3-idna python3-imagesize python3-jinja2
  python3-lib2to3 python3-markupsafe python3-minimal python3-nose
  python3-numpy python3-numpydoc python3-packaging python3-pkg-resources
  python3-pygments python3-pyparsing python3-requests python3-roman
  python3-setuptools python3-six python3-sphinx python3-tz python3-urllib3
  python3.7 python3.7-dev python3.7-minimal python3.8 python3.8-dev
  python3.8-minimal readline-common sensible-utils sgml-base sphinx-common
  xml-core zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation cython-doc dh-make gettext-doc libasprintf-dev libgettextpo-dev
  groff libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc apparmor less
  www-browser libmail-box-perl python3-doc python3-tk python3-venv
  python-attr-doc docutils-doc fonts-linuxlibertine | ttf-linux-libertine
  texlive-lang-french texlive-latex-base texlive-latex-recommended
  python-jinja2-doc python-nose-doc gfortran python-numpy-doc python3-pytest
  python3-numpy-dbg python-pygments-doc ttf-bitstream-vera
  python-pyparsing-doc python3-cryptography python3-openssl python3-socks
  python-setuptools-doc dvipng imagemagick-6.q16 latexmk libjs-mathjax
  python3-sphinx-rtd-theme python3-stemmer sphinx-doc
  texlive-fonts-recommended texlive-latex-extra texlive-plain-generic
  python3.7-venv python3.7-doc binfmt-support python3.8-venv python3.8-doc
  readline-doc sgml-base-doc
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs javascript-common libltdl-dev libmail-sendmail-perl
  libpaper-utils python3-pil
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils ca-certificates
  cython3 debhelper dh-autoreconf dh-python dh-strip-nondeterminism
  docutils-common dwz file gettext gettext-base groff-base intltool-debian
  libarchive-zip-perl libblas3 libcroco3 libdebhelper-perl libelf1 libexpat1
  libexpat1-dev libfile-stripnondeterminism-perl libgfortran5 libglib2.0-0
  libicu63 libjs-jquery libjs-sphinxdoc libjs-underscore liblapack3
  libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpython3-all-dev
  libpython3-dev libpython3-stdlib libpython3.7 libpython3.7-dev
  libpython3.7-minimal libpython3.7-stdlib libpython3.8 libpython3.8-dev
  libpython3.8-minimal libpython3.8-stdlib libreadline8 libsigsegv2
  libsqlite3-0 libssl1.1 libsub-override-perl libtool libuchardet0 libxml2 m4
  man-db mime-support openssl po-debconf python-babel-localedata python3
  python3-alabaster python3-all python3-all-dev python3-attr python3-babel
  python3-certifi python3-chardet python3-dev python3-distutils
  python3-docutils python3-idna python3-imagesize python3-jinja2
  python3-lib2to3 python3-markupsafe python3-minimal python3-nose
  python3-numpy python3-numpydoc python3-packaging python3-pkg-resources
  python3-pygments python3-pyparsing python3-requests python3-roman
  python3-setuptools python3-six python3-sphinx python3-tz python3-urllib3
  python3.7 python3.7-dev python3.7-minimal python3.8 python3.8-dev
  python3.8-minimal readline-common sbuild-build-depends-main-dummy
  sensible-utils sgml-base sphinx-common xml-core zlib1g-dev
0 upgraded, 106 newly installed, 0 to remove and 0 not upgraded.
Need to get 146 MB of archives.
After this operation, 396 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [940 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libssl1.1 amd64 1.1.1d-2 [1540 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-minimal amd64 3.7.6-1+b1 [591 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.2.9-1 [94.3 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 python3.7-minimal amd64 3.7.6-1+b1 [1813 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.7.5-3 [36.8 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 mime-support all 3.64 [37.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libmpdec2 amd64 2.4.2-2 [87.2 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.0-3 [72.5 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.0-3 [160 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.31.1-3 [661 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-stdlib amd64 3.7.6-1+b1 [1735 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 python3.7 amd64 3.7.6-1+b1 [351 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.7.5-3 [20.2 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.7.5-3 [62.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-minimal amd64 3.8.2~rc2-2 [750 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 python3.8-minimal amd64 3.8.2~rc2-2 [1939 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 sgml-base all 1.29.1 [15.0 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 openssl amd64 1.1.1d-2 [840 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 ca-certificates all 20190110 [157 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 cython3 amd64 0.29.14-0.1+b1 [2117 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.8.0-1 [78.3 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.8.0-1 [145 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 4.20191017 [94.4 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 xml-core all 0.18+nmu1 [23.8 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 docutils-common all 0.16+dfsg-1 [129 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libblas3 amd64 3.9.0-1 [153 kB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.2.9-1 [136 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libgfortran5 amd64 10-20200222-1 [721 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libjs-jquery all 3.3.1~dfsg-3 [332 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libjs-underscore all 1.9.1~dfsg-1 [99.4 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libjs-sphinxdoc all 1.8.5-5 [96.7 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 liblapack3 amd64 3.9.0-1 [2168 kB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7 amd64 3.7.6-1+b1 [1484 kB]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-dev amd64 3.7.6-1+b1 [41.4 MB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dev amd64 3.7.5-3 [20.3 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-stdlib amd64 3.8.2~rc2-2 [1665 kB]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8 amd64 3.8.2~rc2-2 [1619 kB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-dev amd64 3.8.2~rc2-2 [47.3 MB]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dev amd64 3.7.5-3 [1072 B]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 python-babel-localedata all 2.8.0+dfsg.1-2 [4399 kB]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 python3-alabaster all 0.7.8-1 [18.4 kB]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 python3.8 amd64 3.8.2~rc2-2 [409 kB]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 python3-all amd64 3.7.5-3 [1060 B]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2 [190 kB]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 python3.7-dev amd64 3.7.6-1+b1 [518 kB]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 python3-dev amd64 3.7.5-3 [1260 B]
Get:81 http://127.0.0.1:12990/debian sid/main amd64 python3.8-dev amd64 3.8.2~rc2-2 [515 kB]
Get:82 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dev amd64 3.7.5-3 [1076 B]
Get:83 http://127.0.0.1:12990/debian sid/main amd64 python3-attr all 19.3.0-1 [43.1 kB]
Get:84 http://127.0.0.1:12990/debian sid/main amd64 python3-pkg-resources all 44.0.0-1 [155 kB]
Get:85 http://127.0.0.1:12990/debian sid/main amd64 python3-tz all 2019.3-1 [27.2 kB]
Get:86 http://127.0.0.1:12990/debian sid/main amd64 python3-babel all 2.8.0+dfsg.1-2 [99.8 kB]
Get:87 http://127.0.0.1:12990/debian sid/main amd64 python3-certifi all 2019.11.28-1 [149 kB]
Get:88 http://127.0.0.1:12990/debian sid/main amd64 python3-chardet all 3.0.4-4 [80.8 kB]
Get:89 http://127.0.0.1:12990/debian sid/main amd64 python3-roman all 2.0.0-3 [8768 B]
Get:90 http://127.0.0.1:12990/debian sid/main amd64 python3-docutils all 0.16+dfsg-1 [383 kB]
Get:91 http://127.0.0.1:12990/debian sid/main amd64 python3-idna all 2.6-2 [34.4 kB]
Get:92 http://127.0.0.1:12990/debian sid/main amd64 python3-imagesize all 1.2.0-1 [5764 B]
Get:93 http://127.0.0.1:12990/debian sid/main amd64 python3-markupsafe amd64 1.1.0-1+b2 [15.5 kB]
Get:94 http://127.0.0.1:12990/debian sid/main amd64 python3-jinja2 all 2.10.1-1 [107 kB]
Get:95 http://127.0.0.1:12990/debian sid/main amd64 python3-nose all 1.3.7-5 [133 kB]
Get:96 http://127.0.0.1:12990/debian sid/main amd64 python3-numpy amd64 1:1.17.4-5 [6150 kB]
Get:97 http://127.0.0.1:12990/debian sid/main amd64 sphinx-common all 1.8.5-5 [491 kB]
Get:98 http://127.0.0.1:12990/debian sid/main amd64 python3-pyparsing all 2.4.6-1 [109 kB]
Get:99 http://127.0.0.1:12990/debian sid/main amd64 python3-six all 1.14.0-2 [16.7 kB]
Get:100 http://127.0.0.1:12990/debian sid/main amd64 python3-packaging all 19.1-2 [23.9 kB]
Get:101 http://127.0.0.1:12990/debian sid/main amd64 python3-pygments all 2.3.1+dfsg-1 [594 kB]
Get:102 http://127.0.0.1:12990/debian sid/main amd64 python3-urllib3 all 1.25.8-1 [104 kB]
Get:103 http://127.0.0.1:12990/debian sid/main amd64 python3-requests all 2.22.0-2 [67.0 kB]
Get:104 http://127.0.0.1:12990/debian sid/main amd64 python3-sphinx all 1.8.5-5 [482 kB]
Get:105 http://127.0.0.1:12990/debian sid/main amd64 python3-numpydoc all 0.7.0-2 [18.5 kB]
Get:106 http://127.0.0.1:12990/debian sid/main amd64 python3-setuptools all 44.0.0-1 [313 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 146 MB in 2s (92.2 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../0-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../1-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../2-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../3-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../4-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../5-libssl1.1_1.1.1d-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.1d-2) ...
Selecting previously unselected package libpython3.7-minimal:amd64.
Preparing to unpack .../6-libpython3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../7-libexpat1_2.2.9-1_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.9-1) ...
Selecting previously unselected package python3.7-minimal.
Preparing to unpack .../8-python3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-minimal (3.7.6-1+b1) ...
Setting up libssl1.1:amd64 (1.1.1d-2) ...
Setting up libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Setting up libexpat1:amd64 (2.2.9-1) ...
Setting up python3.7-minimal (3.7.6-1+b1) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 13869 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.7.5-3_amd64.deb ...
Unpacking python3-minimal (3.7.5-3) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../1-mime-support_3.64_all.deb ...
Unpacking mime-support (3.64) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../2-libmpdec2_2.4.2-2_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-2) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../3-readline-common_8.0-3_all.deb ...
Unpacking readline-common (8.0-3) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../4-libreadline8_8.0-3_amd64.deb ...
Unpacking libreadline8:amd64 (8.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../5-libsqlite3-0_3.31.1-3_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.31.1-3) ...
Selecting previously unselected package libpython3.7-stdlib:amd64.
Preparing to unpack .../6-libpython3.7-stdlib_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package python3.7.
Preparing to unpack .../7-python3.7_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../8-libpython3-stdlib_3.7.5-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3-minimal (3.7.5-3) ...
Selecting previously unselected package python3.
(Reading database ... 14340 files and directories currently installed.)
Preparing to unpack .../00-python3_3.7.5-3_amd64.deb ...
Unpacking python3 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-minimal:amd64.
Preparing to unpack .../01-libpython3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package python3.8-minimal.
Preparing to unpack .../02-python3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-minimal (3.8.2~rc2-2) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../03-sgml-base_1.29.1_all.deb ...
Unpacking sgml-base (1.29.1) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../04-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../05-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../06-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../07-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../08-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../09-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../10-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../11-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../12-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../13-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../14-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package openssl.
Preparing to unpack .../15-openssl_1.1.1d-2_amd64.deb ...
Unpacking openssl (1.1.1d-2) ...
Selecting previously unselected package ca-certificates.
Preparing to unpack .../16-ca-certificates_20190110_all.deb ...
Unpacking ca-certificates (20190110) ...
Selecting previously unselected package cython3.
Preparing to unpack .../17-cython3_0.29.14-0.1+b1_amd64.deb ...
Unpacking cython3 (0.29.14-0.1+b1) ...
Selecting previously unselected package libtool.
Preparing to unpack .../18-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../19-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../20-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../21-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../22-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../23-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../24-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../25-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../26-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../27-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../28-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../29-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../30-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../31-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../32-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../33-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../34-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../35-python3-lib2to3_3.8.0-1_all.deb ...
Unpacking python3-lib2to3 (3.8.0-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../36-python3-distutils_3.8.0-1_all.deb ...
Unpacking python3-distutils (3.8.0-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../37-dh-python_4.20191017_all.deb ...
Unpacking dh-python (4.20191017) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../38-xml-core_0.18+nmu1_all.deb ...
Unpacking xml-core (0.18+nmu1) ...
Selecting previously unselected package docutils-common.
Preparing to unpack .../39-docutils-common_0.16+dfsg-1_all.deb ...
Unpacking docutils-common (0.16+dfsg-1) ...
Selecting previously unselected package libblas3:amd64.
Preparing to unpack .../40-libblas3_3.9.0-1_amd64.deb ...
Unpacking libblas3:amd64 (3.9.0-1) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../41-libexpat1-dev_2.2.9-1_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.2.9-1) ...
Selecting previously unselected package libgfortran5:amd64.
Preparing to unpack .../42-libgfortran5_10-20200222-1_amd64.deb ...
Unpacking libgfortran5:amd64 (10-20200222-1) ...
Selecting previously unselected package libjs-jquery.
Preparing to unpack .../43-libjs-jquery_3.3.1~dfsg-3_all.deb ...
Unpacking libjs-jquery (3.3.1~dfsg-3) ...
Selecting previously unselected package libjs-underscore.
Preparing to unpack .../44-libjs-underscore_1.9.1~dfsg-1_all.deb ...
Unpacking libjs-underscore (1.9.1~dfsg-1) ...
Selecting previously unselected package libjs-sphinxdoc.
Preparing to unpack .../45-libjs-sphinxdoc_1.8.5-5_all.deb ...
Unpacking libjs-sphinxdoc (1.8.5-5) ...
Selecting previously unselected package liblapack3:amd64.
Preparing to unpack .../46-liblapack3_3.9.0-1_amd64.deb ...
Unpacking liblapack3:amd64 (3.9.0-1) ...
Selecting previously unselected package libpython3.7:amd64.
Preparing to unpack .../47-libpython3.7_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3.7-dev:amd64.
Preparing to unpack .../48-libpython3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../49-libpython3-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-stdlib:amd64.
Preparing to unpack .../50-libpython3.8-stdlib_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8:amd64.
Preparing to unpack .../51-libpython3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8-dev:amd64.
Preparing to unpack .../52-libpython3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../53-libpython3-all-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package python-babel-localedata.
Preparing to unpack .../54-python-babel-localedata_2.8.0+dfsg.1-2_all.deb ...
Unpacking python-babel-localedata (2.8.0+dfsg.1-2) ...
Selecting previously unselected package python3-alabaster.
Preparing to unpack .../55-python3-alabaster_0.7.8-1_all.deb ...
Unpacking python3-alabaster (0.7.8-1) ...
Selecting previously unselected package python3.8.
Preparing to unpack .../56-python3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8 (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../57-python3-all_3.7.5-3_amd64.deb ...
Unpacking python3-all (3.7.5-3) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../58-zlib1g-dev_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Selecting previously unselected package python3.7-dev.
Preparing to unpack .../59-python3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-dev (3.7.6-1+b1) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../60-python3-dev_3.7.5-3_amd64.deb ...
Unpacking python3-dev (3.7.5-3) ...
Selecting previously unselected package python3.8-dev.
Preparing to unpack .../61-python3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-dev (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../62-python3-all-dev_3.7.5-3_amd64.deb ...
Unpacking python3-all-dev (3.7.5-3) ...
Selecting previously unselected package python3-attr.
Preparing to unpack .../63-python3-attr_19.3.0-1_all.deb ...
Unpacking python3-attr (19.3.0-1) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../64-python3-pkg-resources_44.0.0-1_all.deb ...
Unpacking python3-pkg-resources (44.0.0-1) ...
Selecting previously unselected package python3-tz.
Preparing to unpack .../65-python3-tz_2019.3-1_all.deb ...
Unpacking python3-tz (2019.3-1) ...
Selecting previously unselected package python3-babel.
Preparing to unpack .../66-python3-babel_2.8.0+dfsg.1-2_all.deb ...
Unpacking python3-babel (2.8.0+dfsg.1-2) ...
Selecting previously unselected package python3-certifi.
Preparing to unpack .../67-python3-certifi_2019.11.28-1_all.deb ...
Unpacking python3-certifi (2019.11.28-1) ...
Selecting previously unselected package python3-chardet.
Preparing to unpack .../68-python3-chardet_3.0.4-4_all.deb ...
Unpacking python3-chardet (3.0.4-4) ...
Selecting previously unselected package python3-roman.
Preparing to unpack .../69-python3-roman_2.0.0-3_all.deb ...
Unpacking python3-roman (2.0.0-3) ...
Selecting previously unselected package python3-docutils.
Preparing to unpack .../70-python3-docutils_0.16+dfsg-1_all.deb ...
Unpacking python3-docutils (0.16+dfsg-1) ...
Selecting previously unselected package python3-idna.
Preparing to unpack .../71-python3-idna_2.6-2_all.deb ...
Unpacking python3-idna (2.6-2) ...
Selecting previously unselected package python3-imagesize.
Preparing to unpack .../72-python3-imagesize_1.2.0-1_all.deb ...
Unpacking python3-imagesize (1.2.0-1) ...
Selecting previously unselected package python3-markupsafe.
Preparing to unpack .../73-python3-markupsafe_1.1.0-1+b2_amd64.deb ...
Unpacking python3-markupsafe (1.1.0-1+b2) ...
Selecting previously unselected package python3-jinja2.
Preparing to unpack .../74-python3-jinja2_2.10.1-1_all.deb ...
Unpacking python3-jinja2 (2.10.1-1) ...
Selecting previously unselected package python3-nose.
Preparing to unpack .../75-python3-nose_1.3.7-5_all.deb ...
Unpacking python3-nose (1.3.7-5) ...
Selecting previously unselected package python3-numpy.
Preparing to unpack .../76-python3-numpy_1%3a1.17.4-5_amd64.deb ...
Unpacking python3-numpy (1:1.17.4-5) ...
Selecting previously unselected package sphinx-common.
Preparing to unpack .../77-sphinx-common_1.8.5-5_all.deb ...
Unpacking sphinx-common (1.8.5-5) ...
Selecting previously unselected package python3-pyparsing.
Preparing to unpack .../78-python3-pyparsing_2.4.6-1_all.deb ...
Unpacking python3-pyparsing (2.4.6-1) ...
Selecting previously unselected package python3-six.
Preparing to unpack .../79-python3-six_1.14.0-2_all.deb ...
Unpacking python3-six (1.14.0-2) ...
Selecting previously unselected package python3-packaging.
Preparing to unpack .../80-python3-packaging_19.1-2_all.deb ...
Unpacking python3-packaging (19.1-2) ...
Selecting previously unselected package python3-pygments.
Preparing to unpack .../81-python3-pygments_2.3.1+dfsg-1_all.deb ...
Unpacking python3-pygments (2.3.1+dfsg-1) ...
Selecting previously unselected package python3-urllib3.
Preparing to unpack .../82-python3-urllib3_1.25.8-1_all.deb ...
Unpacking python3-urllib3 (1.25.8-1) ...
Selecting previously unselected package python3-requests.
Preparing to unpack .../83-python3-requests_2.22.0-2_all.deb ...
Unpacking python3-requests (2.22.0-2) ...
Selecting previously unselected package python3-sphinx.
Preparing to unpack .../84-python3-sphinx_1.8.5-5_all.deb ...
Unpacking python3-sphinx (1.8.5-5) ...
Selecting previously unselected package python3-numpydoc.
Preparing to unpack .../85-python3-numpydoc_0.7.0-2_all.deb ...
Unpacking python3-numpydoc (0.7.0-2) ...
Selecting previously unselected package python3-setuptools.
Preparing to unpack .../86-python3-setuptools_44.0.0-1_all.deb ...
Unpacking python3-setuptools (44.0.0-1) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../87-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Setting up mime-support (3.64) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libsqlite3-0:amd64 (3.31.1-3) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up python-babel-localedata (2.8.0+dfsg.1-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libblas3:amd64 (3.9.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 to provide /usr/lib/x86_64-linux-gnu/libblas.so.3 (libblas.so.3-x86_64-linux-gnu) in auto mode
Setting up libexpat1-dev:amd64 (2.2.9-1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up libgfortran5:amd64 (10-20200222-1) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Setting up python3.8-minimal (3.8.2~rc2-2) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up sgml-base (1.29.1) ...
Setting up libmpdec2:amd64 (2.4.2-2) ...
Setting up libjs-jquery (3.3.1~dfsg-3) ...
Setting up openssl (1.1.1d-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up readline-common (8.0-3) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libjs-underscore (1.9.1~dfsg-1) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up liblapack3:amd64 (3.9.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 to provide /usr/lib/x86_64-linux-gnu/liblapack.so.3 (liblapack.so.3-x86_64-linux-gnu) in auto mode
Setting up libtool (2.4.6-13) ...
Setting up libreadline8:amd64 (8.0-3) ...
Setting up m4 (1.4.18-4) ...
Setting up ca-certificates (20190110) ...
Updating certificates in /etc/ssl/certs...
128 added, 0 removed; done.
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up libjs-sphinxdoc (1.8.5-5) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up xml-core (0.18+nmu1) ...
Setting up libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Setting up python3.8 (3.8.2~rc2-2) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Setting up gettext (0.19.8.1-10) ...
Setting up libpython3.7:amd64 (3.7.6-1+b1) ...
Setting up libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libpython3.8:amd64 (3.8.2~rc2-2) ...
Setting up sphinx-common (1.8.5-5) ...
Setting up libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3.7 (3.7.6-1+b1) ...
Setting up libpython3-dev:amd64 (3.7.5-3) ...
Setting up po-debconf (1.0.21) ...
Setting up python3 (3.7.5-3) ...
Setting up python3-markupsafe (1.1.0-1+b2) ...
Setting up python3.7-dev (3.7.6-1+b1) ...
Setting up python3-tz (2019.3-1) ...
Setting up python3-six (1.14.0-2) ...
Setting up python3-roman (2.0.0-3) ...
Setting up python3-jinja2 (2.10.1-1) ...
Setting up python3-pygments (2.3.1+dfsg-1) ...
Setting up python3-pyparsing (2.4.6-1) ...
Setting up python3-certifi (2019.11.28-1) ...
Setting up libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Setting up libpython3-all-dev:amd64 (3.7.5-3) ...
Setting up python3-idna (2.6-2) ...
Setting up cython3 (0.29.14-0.1+b1) ...
Setting up python3-urllib3 (1.25.8-1) ...
Setting up python3.8-dev (3.8.2~rc2-2) ...
Setting up python3-lib2to3 (3.8.0-1) ...
Setting up python3-imagesize (1.2.0-1) ...
Setting up python3-pkg-resources (44.0.0-1) ...
Setting up python3-distutils (3.8.0-1) ...
Setting up dh-python (4.20191017) ...
Setting up python3-attr (19.3.0-1) ...
Setting up python3-setuptools (44.0.0-1) ...
Setting up python3-babel (2.8.0+dfsg.1-2) ...
update-alternatives: using /usr/bin/pybabel-python3 to provide /usr/bin/pybabel (pybabel) in auto mode
Setting up python3-alabaster (0.7.8-1) ...
Setting up python3-all (3.7.5-3) ...
Setting up python3-nose (1.3.7-5) ...
Setting up python3-packaging (19.1-2) ...
Setting up python3-chardet (3.0.4-4) ...
Setting up python3-dev (3.7.5-3) ...
Setting up python3-requests (2.22.0-2) ...
Setting up python3-numpy (1:1.17.4-5) ...
Setting up python3-all-dev (3.7.5-3) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Processing triggers for libc-bin (2.29-10) ...
Processing triggers for sgml-base (1.29.1) ...
Setting up docutils-common (0.16+dfsg-1) ...
Processing triggers for sgml-base (1.29.1) ...
Setting up python3-docutils (0.16+dfsg-1) ...
update-alternatives: using /usr/share/docutils/scripts/python3/rst-buildhtml to provide /usr/bin/rst-buildhtml (rst-buildhtml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html to provide /usr/bin/rst2html (rst2html) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html4 to provide /usr/bin/rst2html4 (rst2html4) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html5 to provide /usr/bin/rst2html5 (rst2html5) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2latex to provide /usr/bin/rst2latex (rst2latex) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2man to provide /usr/bin/rst2man (rst2man) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2odt to provide /usr/bin/rst2odt (rst2odt) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2odt_prepstyles to provide /usr/bin/rst2odt_prepstyles (rst2odt_prepstyles) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2pseudoxml to provide /usr/bin/rst2pseudoxml (rst2pseudoxml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2s5 to provide /usr/bin/rst2s5 (rst2s5) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2xetex to provide /usr/bin/rst2xetex (rst2xetex) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2xml to provide /usr/bin/rst2xml (rst2xml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rstpep2html to provide /usr/bin/rstpep2html (rstpep2html) in auto mode
Setting up python3-sphinx (1.8.5-5) ...
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-apidoc to provide /usr/bin/sphinx-apidoc (sphinx-apidoc) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-autogen to provide /usr/bin/sphinx-autogen (sphinx-autogen) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-build to provide /usr/bin/sphinx-build (sphinx-build) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-quickstart to provide /usr/bin/sphinx-quickstart (sphinx-quickstart) in auto mode
Setting up python3-numpydoc (0.7.0-2) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for ca-certificates (20190110) ...
Updating certificates in /etc/ssl/certs...
0 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d...
done.

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-30 gcc-9_9.2.1-30 libc6-dev_2.29-10 libstdc++-9-dev_9.2.1-30 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 ca-certificates_20190110 clang-10_1:10.0.0~+rc2-1 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-30 cython3_0.29.14-0.1+b1 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-python_4.20191017 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 docutils-common_0.16+dfsg-1 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-30 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-9_9.2.1-30 gcc-9-base_9.2.1-30 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-30 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblas3_3.9.0-1 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-10-dev_1:10.0.0~+rc2-1 libclang-cpp10_1:10.0.0~+rc2-1 libclang1-10_1:10.0.0~+rc2-1 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libexpat1_2.2.9-1 libexpat1-dev_2.2.9-1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-9-dev_9.2.1-30 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libgfortran5_10-20200222-1 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libjs-jquery_3.3.1~dfsg-3 libjs-sphinxdoc_1.8.5-5 libjs-underscore_1.9.1~dfsg-1 liblapack3_3.9.0-1 libllvm10_1:10.0.0~+rc2-1 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpdec2_2.4.2-2 libmpfr6_4.0.2-1 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-9-dev_9.2.1-30 libobjc4_10-20200222-1 libomp-10-dev_1:10.0.0~+rc2-1 libomp5-10_1:10.0.0~+rc2-1 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libpython3-all-dev_3.7.5-3 libpython3-dev_3.7.5-3 libpython3-stdlib_3.7.5-3 libpython3.7_3.7.6-1+b1 libpython3.7-dev_3.7.6-1+b1 libpython3.7-minimal_3.7.6-1+b1 libpython3.7-stdlib_3.7.6-1+b1 libpython3.8_3.8.2~rc2-2 libpython3.8-dev_3.8.2~rc2-2 libpython3.8-minimal_3.8.2~rc2-2 libpython3.8-stdlib_3.8.2~rc2-2 libquadmath0_10-20200222-1 libreadline8_8.0-3 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libsqlite3-0_3.31.1-3 libss2_1.45.5-2 libssl1.1_1.1.1d-2 libstdc++-9-dev_9.2.1-30 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mime-support_3.64 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 openssl_1.1.1d-2 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 python-babel-localedata_2.8.0+dfsg.1-2 python3_3.7.5-3 python3-alabaster_0.7.8-1 python3-all_3.7.5-3 python3-all-dev_3.7.5-3 python3-attr_19.3.0-1 python3-babel_2.8.0+dfsg.1-2 python3-certifi_2019.11.28-1 python3-chardet_3.0.4-4 python3-dev_3.7.5-3 python3-distutils_3.8.0-1 python3-docutils_0.16+dfsg-1 python3-idna_2.6-2 python3-imagesize_1.2.0-1 python3-jinja2_2.10.1-1 python3-lib2to3_3.8.0-1 python3-markupsafe_1.1.0-1+b2 python3-minimal_3.7.5-3 python3-nose_1.3.7-5 python3-numpy_1:1.17.4-5 python3-numpydoc_0.7.0-2 python3-packaging_19.1-2 python3-pkg-resources_44.0.0-1 python3-pygments_2.3.1+dfsg-1 python3-pyparsing_2.4.6-1 python3-requests_2.22.0-2 python3-roman_2.0.0-3 python3-setuptools_44.0.0-1 python3-six_1.14.0-2 python3-sphinx_1.8.5-5 python3-tz_2019.3-1 python3-urllib3_1.25.8-1 python3.7_3.7.6-1+b1 python3.7-dev_3.7.6-1+b1 python3.7-minimal_3.7.6-1+b1 python3.8_3.8.2~rc2-2 python3.8-dev_3.8.2~rc2-2 python3.8-minimal_3.8.2~rc2-2 readline-common_8.0-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sgml-base_1.29.1 sphinx-common_1.8.5-5 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xml-core_0.18+nmu1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2 zlib1g-dev_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: pywavelets
Binary: python3-pywt, python-pywt-doc
Architecture: any all
Version: 0.5.1-1.3
Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
Uploaders: Daniele Tricoli <eriol@mornie.org>
Homepage: https://github.com/PyWavelets/pywt
Standards-Version: 3.9.8
Vcs-Browser: https://anonscm.debian.org/cgit/python-modules/packages/pywavelets.git
Vcs-Git: https://anonscm.debian.org/git/python-modules/packages/pywavelets.git
Build-Depends: cython3 (>= 0.16), debhelper (>= 9), dh-python, python3-numpydoc, python3-sphinx (>= 1.0.7+dfsg), python3-all-dev, python3-nose, python3-numpy, python3-setuptools
Package-List:
 python-pywt-doc deb doc optional arch=all
 python3-pywt deb python optional arch=any
Checksums-Sha1:
 2c071c772579e6e8a310c36ee763f477798e2a7b 4429280 pywavelets_0.5.1.orig.tar.gz
 af8a88ef47778d7c9a6afbfa7ce6e7ad2d5ee06b 8060 pywavelets_0.5.1-1.3.debian.tar.xz
Checksums-Sha256:
 7b0634e3588f1d1f9c8bceaf366c8d61bb7e2869096652eb3ca66f723659c9a6 4429280 pywavelets_0.5.1.orig.tar.gz
 ad19bfd4918464742b88a972f4da2da203ff96ffbfadbb08adcf28df2d1a1e17 8060 pywavelets_0.5.1-1.3.debian.tar.xz
Files:
 7a0388f56dbbbea037c779bc3fd32c33 4429280 pywavelets_0.5.1.orig.tar.gz
 712069411254f05696cc21b67e3aa8cb 8060 pywavelets_0.5.1-1.3.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEkpeKbhleSSGCX3/w808JdE6fXdkFAl36ObgACgkQ808JdE6f
XdkyuxAAu0fBlKzsmPBuqWZ5BVYtLtQ9F/j2qU2WHo/IA8oFS8zdfpVOgHQ3BdiE
p3qFfWKbRW0SMxzSsQiNgHdRrsztKMOLp1X61uxPUnfKQSncXXJizDCZtpz59z+1
8pm1sv4ZvB06M0n0D9cOrZM7tJQDhz4AEq5EEzTl7qggZ/bNu/yqmDpnUIp200sZ
pvxSZxnuA5TDDoH9H0ja4h2emKp2SwseO2EIv47p4Kn4uXLQ1Z4cQPEvjWH+QIL/
uE+Cb+G2vLScWSVicooBbNBX2XmSxJ0KJOsmES2az4pmaFi3q7ILO6PJggV9Ay01
uTGEM8Pb+S/5PcNi5Mo4TZSypKgNBZEw7LtyYPwk4enpJH7IKTrWXVqheaSe1un/
Ebxgvc4vqBXqEK+gKoZrwg4aEg3UQkIV6uoHN9eWCwshxxbELlTo5D67+yyw9KI+
Ikejl95zJso1zy0rOkzmmMbQWMr5+kX+zxhCgscEjTcMpUIYNaS4fcxDkmiUjrwb
sZ8Ey7YwQtQxef9zPRIShEY0/cRh0ckoxGN2AloGTgWFtgOmAfyEdogQKGENyDPw
MKSOnDAIEQQB+I8EEp5/KVGuXvu9cPTEhJ6HXP9K0Eldt+mju2o75NGbM44PyxeI
fIbEi2kq+cYSp+1uRZ52wKRVUYxbtQJCdZw5ZAD1EzN4WKy5dsw=
=12Ka
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Wed Dec 18 14:37:44 2019 UTC
gpgv:                using RSA key 92978A6E195E4921825F7FF0F34F09744E9F5DD9
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./pywavelets_0.5.1-1.3.dsc
dpkg-source: info: extracting pywavelets in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking pywavelets_0.5.1.orig.tar.gz
dpkg-source: info: unpacking pywavelets_0.5.1-1.3.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying 01-get_version_from_source.patch
dpkg-source: info: applying 02-remove_privacy_offenders.patch
dpkg-source: info: applying 03-Explicity-align-data-records-in-test_byte_offset.patch
dpkg-source: info: applying do_not_rewrite_git_revision_on_build.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-d79b1000-a736-4391-be7a-8f1c33fc7b98
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package pywavelets
dpkg-buildpackage: info: source version 0.5.1-1.3
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Gianfranco Costamagna <locutusofborg@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean --with python3,sphinxdoc --buildsystem=pybuild
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_clean
I: pybuild base:217: python3.8 setup.py clean 
Compiling pywt/_extensions/_pywt.pyx because it depends on /usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd.
Compiling pywt/_extensions/_dwt.pyx because it depends on /usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd.
Compiling pywt/_extensions/_swt.pyx because it depends on /usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd.
Compiling pywt/_extensions/_cwt.pyx because it depends on /usr/lib/python3/dist-packages/Cython/Includes/numpy/__init__.pxd.
[1/4] Cythonizing pywt/_extensions/_cwt.pyx
[2/4] Cythonizing pywt/_extensions/_dwt.pyx
[3/4] Cythonizing pywt/_extensions/_swt.pyx
[4/4] Cythonizing pywt/_extensions/_pywt.pyx
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build' (and everything under it)
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_cwt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_dwt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_swt.pyx
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_pywt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.8' does not exist -- can't clean it
I: pybuild base:217: python3.7 setup.py clean 
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build' (and everything under it)
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.7' does not exist -- can't clean it
# remove re-generated files
rm -f ./pywt/_extensions/_pywt.c ./pywt/_extensions/_dwt.c ./pywt/_extensions/_pywt.h ./pywt/_extensions/_swt.c ./pywt/_extensions/_cwt.c
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_clean -O--buildsystem=pybuild
 debian/rules build
dh build --with python3,sphinxdoc --buildsystem=pybuild
   dh_update_autotools_config -O--buildsystem=pybuild
   dh_auto_configure -O--buildsystem=pybuild
I: pybuild base:217: python3.8 setup.py config 
Compiling pywt/_extensions/_pywt.pyx because it changed.
Compiling pywt/_extensions/_dwt.pyx because it changed.
Compiling pywt/_extensions/_swt.pyx because it changed.
Compiling pywt/_extensions/_cwt.pyx because it changed.
[1/4] Cythonizing pywt/_extensions/_cwt.pyx
[2/4] Cythonizing pywt/_extensions/_dwt.pyx
[3/4] Cythonizing pywt/_extensions/_pywt.pyx
[4/4] Cythonizing pywt/_extensions/_swt.pyx
running config
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_cwt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_dwt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_pywt.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pywt/_extensions/_swt.pyx
  tree = Parsing.p_module(s, pxd, full_module_name)
I: pybuild base:217: python3.7 setup.py config 
running config
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
   debian/rules override_dh_auto_build
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_build
I: pybuild base:217: /usr/bin/python3.8 setup.py build 
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_swt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_wavelet_packets.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_cwt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_dwt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_thresholding.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_multilevel.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_functions.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
copying pywt/_multidim.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions
copying pywt/_extensions/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/create_dat.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/_readers.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/ecg.npy -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/aero.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/camera.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/sst_nino3.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
copying pywt/data/ascent.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data
running build_clib
building 'c_wt' library
creating build
creating build/temp.linux-amd64-3.8
creating build/temp.linux-amd64-3.8/pywt
creating build/temp.linux-amd64-3.8/pywt/_extensions
creating build/temp.linux-amd64-3.8/pywt/_extensions/c
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.8 -c pywt/_extensions/c/common.c -o build/temp.linux-amd64-3.8/pywt/_extensions/c/common.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.8 -c pywt/_extensions/c/convolution.c -o build/temp.linux-amd64-3.8/pywt/_extensions/c/convolution.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.8 -c pywt/_extensions/c/wt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/c/wt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:133:39: warning: passing 'const float *' to parameter of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_a)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:67:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_a)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:134:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:68:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:139:39: warning: passing 'const float *' to parameter of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_d)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:72:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_d)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:140:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:73:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:459:19: warning: comparison of integers of different signs: 'pywt_index_t' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]
    if(output_len != swt_buffer_length(input_len))
       ~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:133:39: warning: passing 'const double *' to parameter of type 'double *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_a)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:67:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_a)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:134:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:68:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:139:39: warning: passing 'const double *' to parameter of type 'double *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_d)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:72:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_d)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:140:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:73:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:459:19: warning: comparison of integers of different signs: 'pywt_index_t' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]
    if(output_len != swt_buffer_length(input_len))
       ~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.8 -c pywt/_extensions/c/wavelets.c -o build/temp.linux-amd64-3.8/pywt/_extensions/c/wavelets.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.8 -c pywt/_extensions/c/cwt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/c/cwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc-ar rcs build/temp.linux-amd64-3.8/libc_wt.a build/temp.linux-amd64-3.8/pywt/_extensions/c/common.o build/temp.linux-amd64-3.8/pywt/_extensions/c/convolution.o build/temp.linux-amd64-3.8/pywt/_extensions/c/wt.o build/temp.linux-amd64-3.8/pywt/_extensions/c/wavelets.o build/temp.linux-amd64-3.8/pywt/_extensions/c/cwt.o
running build_ext
building 'pywt._extensions._pywt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.8 -c pywt/_extensions/_pywt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/_pywt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_pywt.c:650:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_pywt.c:31398:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:31705:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:31894:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:32013:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:32274:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:32420:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_pywt.c:39059:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
8 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pywt/_extensions/_pywt.o -Lbuild/temp.linux-amd64-3.8 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_pywt.cpython-38-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._dwt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.8 -c pywt/_extensions/_dwt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/_dwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_dwt.c:649:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_dwt.c:8500:31: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  __pyx_t_13 = ((__pyx_v_take < __pyx_v_rec_len) != 0);
                 ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
pywt/_extensions/_dwt.c:9195:31: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  __pyx_t_13 = ((__pyx_v_take < __pyx_v_rec_len) != 0);
                 ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
pywt/_extensions/_dwt.c:26911:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_dwt.c:27030:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_dwt.c:27291:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_dwt.c:27437:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_dwt.c:31939:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_dwt.c:32299:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
9 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pywt/_extensions/_dwt.o -Lbuild/temp.linux-amd64-3.8 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_dwt.cpython-38-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._swt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.8 -c pywt/_extensions/_swt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/_swt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_swt.c:651:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_swt.c:3943:57: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_8 = (__pyx_v_start_level + 1); __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
                                              ~~~~~~~~~ ^ ~~~~~~~~~
pywt/_extensions/_swt.c:4725:57: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_8 = (__pyx_v_start_level + 1); __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
                                              ~~~~~~~~~ ^ ~~~~~~~~~
pywt/_extensions/_swt.c:5599:59: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_12 = (__pyx_v_start_level + 1); __pyx_t_12 < __pyx_t_16; __pyx_t_12+=1) {
                                               ~~~~~~~~~~ ^ ~~~~~~~~~~
pywt/_extensions/_swt.c:22163:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_swt.c:22282:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_swt.c:22543:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_swt.c:22689:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_swt.c:27144:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_swt.c:27504:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
10 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pywt/_extensions/_swt.o -Lbuild/temp.linux-amd64-3.8 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_swt.cpython-38-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._cwt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.8 -c pywt/_extensions/_cwt.c -o build/temp.linux-amd64-3.8/pywt/_extensions/_cwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_cwt.c:649:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_cwt.c:22192:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_cwt.c:22311:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_cwt.c:22572:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_cwt.c:22718:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_cwt.c:26945:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
pywt/_extensions/_cwt.c:27305:5: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
    0,
    ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
7 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pywt/_extensions/_cwt.o -Lbuild/temp.linux-amd64-3.8 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_cwt.cpython-38-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
I: pybuild base:217: /usr/bin/python3 setup.py build 
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_swt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_wavelet_packets.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_cwt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_dwt.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_thresholding.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_multilevel.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_functions.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
copying pywt/_multidim.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions
copying pywt/_extensions/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/create_dat.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/_readers.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/ecg.npy -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/aero.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/camera.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/sst_nino3.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
copying pywt/data/ascent.npz -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data
running build_clib
building 'c_wt' library
creating build/temp.linux-amd64-3.7
creating build/temp.linux-amd64-3.7/pywt
creating build/temp.linux-amd64-3.7/pywt/_extensions
creating build/temp.linux-amd64-3.7/pywt/_extensions/c
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.7m -c pywt/_extensions/c/common.c -o build/temp.linux-amd64-3.7/pywt/_extensions/c/common.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.7m -c pywt/_extensions/c/convolution.c -o build/temp.linux-amd64-3.7/pywt/_extensions/c/convolution.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.7m -c pywt/_extensions/c/wt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/c/wt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:133:39: warning: passing 'const float *' to parameter of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_a)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:67:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_a)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:134:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:68:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:139:39: warning: passing 'const float *' to parameter of type 'float *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_d)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:72:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_d)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:140:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:73:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:8:
pywt/_extensions/c/wt.template.c:459:19: warning: comparison of integers of different signs: 'pywt_index_t' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]
    if(output_len != swt_buffer_length(input_len))
       ~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:133:39: warning: passing 'const double *' to parameter of type 'double *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_a)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:67:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_a)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:134:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:68:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:139:39: warning: passing 'const double *' to parameter of type 'double *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    CAT(TYPE, _swt_d)(input_row, input_info.shape[axis],
                                      ^~~~~~~~~
pywt/_extensions/c/wt.template.h:72:28: note: passing argument to parameter 'input' here
int CAT(TYPE, _swt_d)(TYPE input[], pywt_index_t input_len,
                           ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:140:39: warning: passing 'const DiscreteWavelet *const restrict' to parameter of type 'DiscreteWavelet *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                      wavelet,
                                      ^~~~~~~
pywt/_extensions/c/wt.template.h:73:40: note: passing argument to parameter 'wavelet' here
                      DiscreteWavelet* wavelet,
                                       ^
In file included from pywt/_extensions/c/wt.c:12:
pywt/_extensions/c/wt.template.c:459:19: warning: comparison of integers of different signs: 'pywt_index_t' (aka 'long') and 'size_t' (aka 'unsigned long') [-Wsign-compare]
    if(output_len != swt_buffer_length(input_len))
       ~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.7m -c pywt/_extensions/c/wavelets.c -o build/temp.linux-amd64-3.7/pywt/_extensions/c/wavelets.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions/c -I/usr/include/python3.7m -c pywt/_extensions/c/cwt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/c/cwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
x86_64-linux-gnu-gcc-ar rcs build/temp.linux-amd64-3.7/libc_wt.a build/temp.linux-amd64-3.7/pywt/_extensions/c/common.o build/temp.linux-amd64-3.7/pywt/_extensions/c/convolution.o build/temp.linux-amd64-3.7/pywt/_extensions/c/wt.o build/temp.linux-amd64-3.7/pywt/_extensions/c/wavelets.o build/temp.linux-amd64-3.7/pywt/_extensions/c/cwt.o
running build_ext
building 'pywt._extensions._pywt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -Ipywt/_extensions -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.7m -c pywt/_extensions/_pywt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/_pywt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_pywt.c:650:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.7/pywt/_extensions/_pywt.o -Lbuild/temp.linux-amd64-3.7 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_pywt.cpython-37m-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._dwt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.7m -c pywt/_extensions/_dwt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/_dwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_dwt.c:649:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_dwt.c:8500:31: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  __pyx_t_13 = ((__pyx_v_take < __pyx_v_rec_len) != 0);
                 ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
pywt/_extensions/_dwt.c:9195:31: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  __pyx_t_13 = ((__pyx_v_take < __pyx_v_rec_len) != 0);
                 ~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~
3 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.7/pywt/_extensions/_dwt.o -Lbuild/temp.linux-amd64-3.7 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_dwt.cpython-37m-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._swt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.7m -c pywt/_extensions/_swt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/_swt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_swt.c:651:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pywt/_extensions/_swt.c:3943:57: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_8 = (__pyx_v_start_level + 1); __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
                                              ~~~~~~~~~ ^ ~~~~~~~~~
pywt/_extensions/_swt.c:4725:57: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_8 = (__pyx_v_start_level + 1); __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
                                              ~~~~~~~~~ ^ ~~~~~~~~~
pywt/_extensions/_swt.c:5599:59: warning: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Wsign-compare]
  for (__pyx_t_12 = (__pyx_v_start_level + 1); __pyx_t_12 < __pyx_t_16; __pyx_t_12+=1) {
                                               ~~~~~~~~~~ ^ ~~~~~~~~~~
4 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.7/pywt/_extensions/_swt.o -Lbuild/temp.linux-amd64-3.7 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_swt.cpython-37m-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
building 'pywt._extensions._cwt' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DPY_EXTENSION -I./pywt/_extensions -Ipywt/_extensions/c -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include/python3.7m -c pywt/_extensions/_cwt.c -o build/temp.linux-amd64-3.7/pywt/_extensions/_cwt.o
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
In file included from pywt/_extensions/_cwt.c:649:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/arrayobject.h:4:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarrayobject.h:12:
In file included from /usr/lib/python3/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1830:
/usr/lib/python3/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.7/pywt/_extensions/_cwt.o -Lbuild/temp.linux-amd64-3.7 -lc_wt -lc_wt -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_cwt.cpython-37m-x86_64-linux-gnu.so
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-link.specs' [-Wunused-command-line-argument]
clang: warning: argument unused during compilation: '-specs=/usr/share/dpkg/no-pie-compile.specs' [-Wunused-command-line-argument]
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
PYTHONPATH=. http_proxy='127.0.0.1:9' python3 -m sphinx -D html_last_updated_fmt="December 18, 2019" -N -bhtml doc/source doc/build/html
Running Sphinx v1.8.5
PyWavelets (VERSION 0.5.1)
making output directory...
building [mo]: targets for 0 po files that are out of date
building [html]: targets for 39 source files that are out of date
updating environment: 39 added, 0 changed, 0 removed
reading sources... [  2%] contents
reading sources... [  5%] dev/building_extension
reading sources... [  7%] dev/how_to_release
reading sources... [ 10%] dev/index
reading sources... [ 12%] dev/installing_build_dependencies
reading sources... [ 15%] dev/preparing_linux_build_environment
reading sources... [ 17%] dev/preparing_windows_build_environment
reading sources... [ 20%] dev/testing
reading sources... [ 23%] index
reading sources... [ 25%] overview
reading sources... [ 28%] ref/2d-dwt-and-idwt
reading sources... [ 30%] ref/cwt
reading sources... [ 33%] ref/dwt-coefficient-handling
reading sources... [ 35%] ref/dwt-discrete-wavelet-transform
reading sources... [ 38%] ref/idwt-inverse-discrete-wavelet-transform
reading sources... [ 41%] ref/index
reading sources... [ 43%] ref/iswt-inverse-stationary-wavelet-transform
reading sources... [ 46%] ref/nd-dwt-and-idwt
reading sources... [ 48%] ref/other-functions
reading sources... [ 51%] ref/signal-extension-modes
reading sources... [ 53%] ref/swt-stationary-wavelet-transform
reading sources... [ 56%] ref/thresholding-functions
reading sources... [ 58%] ref/wavelet-packets
reading sources... [ 61%] ref/wavelets
reading sources... [ 64%] regression/dwt-idwt
reading sources... [ 66%] regression/gotchas
reading sources... [ 69%] regression/index
reading sources... [ 71%] regression/modes
reading sources... [ 74%] regression/multilevel
reading sources... [ 76%] regression/wavelet
reading sources... [ 79%] regression/wp
reading sources... [ 82%] regression/wp2d
reading sources... [ 84%] release.0.3.0
reading sources... [ 87%] release.0.4.0
reading sources... [ 89%] release.0.5.0
reading sources... [ 92%] release.0.5.1
reading sources... [ 94%] releasenotes
reading sources... [ 97%] resources
reading sources... [100%] substitutions

/usr/lib/python3/dist-packages/jinja2/utils.py:485: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import MutableMapping
/usr/lib/python3/dist-packages/jinja2/runtime.py:318: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import Mapping
/usr/lib/python3/dist-packages/jinja2/sandbox.py:82: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import MutableSet, MutableMapping, MutableSequence
WARNING: autodoc: failed to import function 'dwt2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'idwt2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'wavedec2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'waverec2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'cwt' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'coeffs_to_array' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'array_to_coeffs' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'dwt' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'wavedec' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'downcoef' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'dwt_max_level' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'dwt_coeff_len' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'idwt' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'waverec' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'upcoef' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'iswt' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'iswt2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'dwtn' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'idwtn' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'wavedecn' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'waverecn' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'integrate_wavelet' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'central_frequency' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'scale2frequency' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'qmf' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'orthogonal_filter_bank' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'swt' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'swt2' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'swtn' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'swt_max_level' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'threshold' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'families' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
WARNING: autodoc: failed to import function 'wavelist' from module 'pywt'; the following exception was raised:
No module named 'pywt._extensions._pywt'
looking for now-outdated files... none found
pickling environment... done
checking consistency... /<<PKGBUILDDIR>>/doc/source/overview.rst: WARNING: document isn't included in any toctree
done
preparing documents... done
writing output... [  2%] contents
writing output... [  5%] dev/building_extension
writing output... [  7%] dev/how_to_release
writing output... [ 10%] dev/index
writing output... [ 12%] dev/installing_build_dependencies
writing output... [ 15%] dev/preparing_linux_build_environment
writing output... [ 17%] dev/preparing_windows_build_environment
writing output... [ 20%] dev/testing
writing output... [ 23%] index
writing output... [ 25%] overview
writing output... [ 28%] ref/2d-dwt-and-idwt
writing output... [ 30%] ref/cwt
writing output... [ 33%] ref/dwt-coefficient-handling
writing output... [ 35%] ref/dwt-discrete-wavelet-transform
writing output... [ 38%] ref/idwt-inverse-discrete-wavelet-transform
writing output... [ 41%] ref/index
writing output... [ 43%] ref/iswt-inverse-stationary-wavelet-transform
writing output... [ 46%] ref/nd-dwt-and-idwt
writing output... [ 48%] ref/other-functions
writing output... [ 51%] ref/signal-extension-modes
writing output... [ 53%] ref/swt-stationary-wavelet-transform
writing output... [ 56%] ref/thresholding-functions
writing output... [ 58%] ref/wavelet-packets
writing output... [ 61%] ref/wavelets
writing output... [ 64%] regression/dwt-idwt
writing output... [ 66%] regression/gotchas
writing output... [ 69%] regression/index
writing output... [ 71%] regression/modes
writing output... [ 74%] regression/multilevel
writing output... [ 76%] regression/wavelet
writing output... [ 79%] regression/wp
writing output... [ 82%] regression/wp2d
writing output... [ 84%] release.0.3.0
writing output... [ 87%] release.0.4.0
writing output... [ 89%] release.0.5.0
writing output... [ 92%] release.0.5.1
writing output... [ 94%] releasenotes
writing output... [ 97%] resources
writing output... [100%] substitutions

generating indices... genindex
writing additional pages... search opensearch
copying static files... WARNING: favicon file 'favicon.ico' does not exist
done
copying extra files... done
dumping search index in English (code: en) ... done
dumping object inventory... done
build succeeded, 35 warnings.

The HTML pages are in doc/build/html.
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
 fakeroot debian/rules binary
dh binary --with python3,sphinxdoc --buildsystem=pybuild
   dh_testroot -O--buildsystem=pybuild
   dh_prep -O--buildsystem=pybuild
   debian/rules override_dh_auto_install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_install
I: pybuild base:217: /usr/bin/python3.8 setup.py install --root /<<PKGBUILDDIR>>/debian/python3-pywt 
running install
running build
running build_py
copying pywt/version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt
running build_clib
building 'c_wt' library
running build_ext
running install_lib
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_pywt.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_swt.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_cwt.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_extensions/_dwt.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_swt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/aero.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/camera.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/ecg.npy -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/sst_nino3.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/ascent.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/create_dat.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/data/_readers.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_wavelet_packets.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_cwt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_dwt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_thresholding.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_multilevel.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/version.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_functions.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pywt/build/pywt/_multidim.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_extensions/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_swt.py to _swt.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data/create_dat.py to create_dat.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/data/_readers.py to _readers.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_wavelet_packets.py to _wavelet_packets.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_cwt.py to _cwt.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_dwt.py to _dwt.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_thresholding.py to _thresholding.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py to _multilevel.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/version.py to version.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_functions.py to _functions.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multidim.py to _multidim.cpython-38.pyc
running install_egg_info
running egg_info
writing PyWavelets.egg-info/PKG-INFO
writing dependency_links to PyWavelets.egg-info/dependency_links.txt
writing requirements to PyWavelets.egg-info/requires.txt
writing top-level names to PyWavelets.egg-info/top_level.txt
reading manifest file 'PyWavelets.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
warning: no files found matching 'cythonize.dat'
no previously-included directories found matching 'build'
warning: no previously-included files matching '*.egg' found anywhere in distribution
warning: no previously-included files matching '*.egg-info' found anywhere in distribution
warning: no previously-included files matching '*~' found anywhere in distribution
warning: no previously-included files matching '*.bak' found anywhere in distribution
warning: no previously-included files matching '*.swp' found anywhere in distribution
writing manifest file 'PyWavelets.egg-info/SOURCES.txt'
Copying PyWavelets.egg-info to /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/PyWavelets-0.5.1.egg-info
Skipping SOURCES.txt
running install_scripts
/usr/lib/python3.8/distutils/dist.py:858: DeprecationWarning: bdist_wininst command is deprecated since Python 3.8, use bdist_wheel (wheel packages) instead
  cmd_obj = self.command_obj[command] = klass(self)
I: pybuild base:217: /usr/bin/python3 setup.py install --root /<<PKGBUILDDIR>>/debian/python3-pywt 
running install
running build
running build_py
copying pywt/version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt
running build_clib
building 'c_wt' library
running build_ext
running install_lib
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_cwt.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_pywt.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_dwt.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_extensions/_swt.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_swt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
creating /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/aero.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/camera.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/ecg.npy -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/sst_nino3.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/ascent.npz -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/create_dat.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/data/_readers.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_wavelet_packets.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_cwt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_dwt.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_thresholding.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_multilevel.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/version.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_functions.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pywt/build/pywt/_multidim.py -> /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_extensions/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_swt.py to _swt.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data/create_dat.py to create_dat.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/data/_readers.py to _readers.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_wavelet_packets.py to _wavelet_packets.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_cwt.py to _cwt.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_dwt.py to _dwt.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_thresholding.py to _thresholding.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py to _multilevel.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/version.py to version.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_functions.py to _functions.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multidim.py to _multidim.cpython-37.pyc
running install_egg_info
running egg_info
writing PyWavelets.egg-info/PKG-INFO
writing dependency_links to PyWavelets.egg-info/dependency_links.txt
writing requirements to PyWavelets.egg-info/requires.txt
writing top-level names to PyWavelets.egg-info/top_level.txt
reading manifest file 'PyWavelets.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
setup.py:67: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/usr/lib/python3/dist-packages/Cython/Build/Dependencies.py:752: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  elif isinstance(patterns, basestring) or not isinstance(patterns, collections.Iterable):
warning: no files found matching 'cythonize.dat'
no previously-included directories found matching 'build'
warning: no previously-included files matching '*.egg' found anywhere in distribution
warning: no previously-included files matching '*.egg-info' found anywhere in distribution
warning: no previously-included files matching '*~' found anywhere in distribution
warning: no previously-included files matching '*.bak' found anywhere in distribution
warning: no previously-included files matching '*.swp' found anywhere in distribution
writing manifest file 'PyWavelets.egg-info/SOURCES.txt'
Copying PyWavelets.egg-info to /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/PyWavelets-0.5.1.egg-info
Skipping SOURCES.txt
running install_scripts
# Unfortunately, we need to run tests after install because numpy does not
# let you run them from the source directory.
PYBUILD_SYSTEM=custom \
PYBUILD_TEST_ARGS="{interpreter} -c \"import sys ; sys.path.insert(0, '{destdir}/usr/lib/python{version}/dist-packages/') ; import pywt ; pywt.test(verbose=5)\"" dh_auto_test
I: pybuild pybuild:272: cp -r /<<PKGBUILDDIR>>/pywt/tests /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt
I: pybuild base:217: python3.8 -c "import sys ; sys.path.insert(0, '/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/') ; import pywt ; pywt.test(verbose=5)"
/usr/lib/python3/dist-packages/nose/importer.py:12: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  from imp import find_module, load_module, acquire_lock, release_lock
nose.config: INFO: Ignoring files matching ['(?:^\\.|^util)']
nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module
test__pywt.test_upcoef_reconstruct ... ok
test__pywt.test_downcoef_multilevel ... ok
test__pywt.test_downcoef_complex ... ok
test__pywt.test_downcoef_errs ... ok
test__pywt.test_compare_downcoef_coeffs ... ok
test__pywt.test_upcoef_multilevel ... ok
test__pywt.test_upcoef_complex ... ok
test__pywt.test_upcoef_errs ... ok
test__pywt.test_wavelet_repr ... ok
test__pywt.test_dwt_max_level ... ok
test__pywt.test_ContinuousWavelet_errs ... ok
test__pywt.test_ContinuousWavelet_repr ... ok
test__pywt.test_wavelist ... ok
test_cwt_wavelets.test_gaus ... ok
test_cwt_wavelets.test_cgau ... ok
test_cwt_wavelets.test_shan ... ok
test_cwt_wavelets.test_cmor ... ok
test_cwt_wavelets.test_fbsp ... ok
test_cwt_wavelets.test_morl ... ok
test_cwt_wavelets.test_mexh ... ok
test_data.test_data_aero ... ok
test_data.test_data_ascent ... ok
test_data.test_data_camera ... ok
test_data.test_data_ecg ... ok
test_deprecations.test_intwave_deprecation ... ok
test_deprecations.test_centrfrq_deprecation ... ok
test_deprecations.test_scal2frq_deprecation ... ok
test_deprecations.test_orthfilt_deprecation ... ok
test_deprecations.test_integrate_wave_tuple ... ok
test_deprecations.test_MODES_from_object_deprecation ... ok
test_deprecations.test_MODES_attributes_deprecation ... ok
test_deprecations.test_MODES_attributes_usage_deprecation ... ok
test_deprecations.test_MODES_deprecation_new ... ok
test_deprecations.test_MODES_deprecation_old ... ok
test_deprecations.test_MODES_deprecation_getattr ... ok
test_deprecations.test_mode_equivalence ... ok
test_dwt_idwt.test_dwt_idwt_basic ... ok
test_dwt_idwt.test_dwt_idwt_dtypes ... ok
test_dwt_idwt.test_dwt_idwt_basic_complex ... ok
test_dwt_idwt.test_dwt_idwt_partial_complex ... ok
test_dwt_idwt.test_dwt_wavelet_kwd ... ok
test_dwt_idwt.test_dwt_coeff_len ... ok
test_dwt_idwt.test_idwt_none_input ... ok
test_dwt_idwt.test_idwt_invalid_input ... ok
test_dwt_idwt.test_dwt_single_axis ... ok
test_dwt_idwt.test_idwt_single_axis ... ok
test_dwt_idwt.test_dwt_axis_arg ... ok
test_dwt_idwt.test_idwt_axis_arg ... ok
test_dwt_idwt.test_dwt_idwt_axis_excess ... ok
test_functions.test_centrfreq ... ok
test_functions.test_scal2frq_scale ... ok
test_functions.test_intwave_orthogonal ... ok
test_modes.test_available_modes ... ok
test_modes.test_invalid_modes ... ok
test_modes.test_dwt_idwt_allmodes ... ok
test_modes.test_dwt_short_input_allmodes ... ok
test_modes.test_default_mode ... ok
test_multidim.test_dwtn_input ... ok
test_multidim.test_3D_reconstruct ... ok
test_multidim.test_dwdtn_idwtn_allwavelets ... ok
test_multidim.test_stride ... ok
test_multidim.test_byte_offset ... ERROR
test_multidim.test_3D_reconstruct_complex ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/tests/test_multidim.py:115: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  assert_allclose(data, pywt.idwtn(d, wavelet)[original_shape],
ok
test_multidim.test_idwtn_idwt2 ... ok
test_multidim.test_idwtn_idwt2_complex ... ok
test_multidim.test_idwtn_missing ... ok
test_multidim.test_idwtn_all_coeffs_None ... ok
test_multidim.test_error_on_invalid_keys ... ok
test_multidim.test_error_mismatched_size ... ok
test_multidim.test_dwt2_idwt2_dtypes ... ok
test_multidim.test_dwtn_axes ... ok
test_multidim.test_idwtn_axes ... ok
test_multidim.test_idwt2_axes ... ok
test_multidim.test_idwt2_axes_subsets ... ok
test_multidim.test_idwtn_axes_subsets ... ok
test_multidim.test_negative_axes ... ok
test_multidim.test_dwtn_idwtn_dtypes ... ok
test_multidim.test_idwt2_size_mismatch_error ... ok
test_multidim.test_dwt2_dimension_error ... ok
test_multilevel.test_wavedec ... ok
test_multilevel.test_waverec_invalid_inputs ... ok
test_multilevel.test_waverec_accuracies ... ok
test_multilevel.test_waverec_none ... ok
test_multilevel.test_waverec_odd_length ... ok
test_multilevel.test_waverec_complex ... ok
test_multilevel.test_multilevel_dtypes_1d ... ok
test_multilevel.test_waverec_all_wavelets_modes ... ok
test_multilevel.test_waverec2_accuracies ... ok
test_multilevel.test_multilevel_dtypes_2d ... ok
test_multilevel.test_wavedec2_complex ... ok
test_multilevel.test_wavedec2_invalid_inputs ... ok
test_multilevel.test_waverec2_invalid_inputs ... ok
test_multilevel.test_waverec2_coeff_shape_mismatch ... ok
test_multilevel.test_waverec2_odd_length ... ok
test_multilevel.test_waverec2_none_coeffs ... ok
test_multilevel.test_waverecn ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:402: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  return a_coeff[[slice(s) for s in d_coeff.shape]]
ok
test_multilevel.test_waverecn_empty_coeff ... ok
test_multilevel.test_waverecn_invalid_coeffs ... ok
test_multilevel.test_waverecn_lists ... ok
test_multilevel.test_waverecn_invalid_coeffs2 ... ok
test_multilevel.test_wavedecn_invalid_inputs ... ok
test_multilevel.test_waverecn_accuracies ... ok
test_multilevel.test_multilevel_dtypes_nd ... ok
test_multilevel.test_wavedecn_complex ... ok
test_multilevel.test_waverecn_dtypes ... ok
test_multilevel.test_coeffs_to_array ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/tests/test_multilevel.py:345: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  assert_allclose(arr, arr[arr_slices[0]])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:658: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeff_arr[a_slices] = a_coeffs
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:684: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeff_arr[slice_array] = d
ok
test_multilevel.test_wavedecn_coeff_reshape_even ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:757: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeffs.append(arr[coeff_slices[0]])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:762: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d = arr[coeff_slices[n]['d']]
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:764: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d = (arr[coeff_slices[n]['da']],
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:765: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  arr[coeff_slices[n]['ad']],
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:766: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  arr[coeff_slices[n]['dd']])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/_multilevel.py:770: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d[k] = arr[v]
ok
test_multilevel.test_wavedecn_coeff_reshape_axes_subset ... ok
test_multilevel.test_coeffs_to_array_padding ... ok
test_multilevel.test_waverecn_coeff_reshape_odd ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/tests/test_multilevel.py:464: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  x1r = x1r[[slice(s) for s in x1.shape]]
ok
test_multilevel.test_array_to_coeffs_invalid_inputs ... ok
test_multilevel.test_waverec_axes_subsets ... ok
test_multilevel.test_waverec2_axes_subsets ... ok
test_multilevel.test_waverecn_axes_subsets ... ok
test_multilevel.test_waverecn_int_axis ... ok
test_multilevel.test_wavedec_axis_error ... ok
test_multilevel.test_waverec_axis_error ... ok
test_multilevel.test_wavedec2_axes_errors ... ok
test_multilevel.test_waverec2_axes_errors ... ok
test_multilevel.test_wavedecn_axes_errors ... ok
test_multilevel.test_waverecn_axes_errors ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_swt.test_swt_decomposition ... ok
test_swt.test_swt_axis ... ok
test_swt.test_swt_iswt_integration ... ok
test_swt.test_swt_dtypes ... ok
test_swt.test_swt2_ndim_error ... ok
test_swt.test_swt2_iswt2_integration ... ok
test_swt.test_swt2_axes ... ok
test_swt.test_swtn_axes ... ok
test_thresholding.test_threshold ... ok
test_wavelet.test_wavelet_properties ... ok
test_wavelet.test_wavelet_coefficients('db1',) ... ok
test_wavelet.test_wavelet_coefficients('db2',) ... ok
test_wavelet.test_wavelet_coefficients('db3',) ... ok
test_wavelet.test_wavelet_coefficients('db4',) ... ok
test_wavelet.test_wavelet_coefficients('db5',) ... ok
test_wavelet.test_wavelet_coefficients('db6',) ... ok
test_wavelet.test_wavelet_coefficients('db7',) ... ok
test_wavelet.test_wavelet_coefficients('db8',) ... ok
test_wavelet.test_wavelet_coefficients('db9',) ... ok
test_wavelet.test_wavelet_coefficients('db10',) ... ok
test_wavelet.test_wavelet_coefficients('db11',) ... ok
test_wavelet.test_wavelet_coefficients('db12',) ... ok
test_wavelet.test_wavelet_coefficients('db13',) ... ok
test_wavelet.test_wavelet_coefficients('db14',) ... ok
test_wavelet.test_wavelet_coefficients('db15',) ... ok
test_wavelet.test_wavelet_coefficients('db16',) ... ok
test_wavelet.test_wavelet_coefficients('db17',) ... ok
test_wavelet.test_wavelet_coefficients('db18',) ... ok
test_wavelet.test_wavelet_coefficients('db19',) ... ok
test_wavelet.test_wavelet_coefficients('db20',) ... ok
test_wavelet.test_wavelet_coefficients('db21',) ... ok
test_wavelet.test_wavelet_coefficients('db22',) ... ok
test_wavelet.test_wavelet_coefficients('db23',) ... ok
test_wavelet.test_wavelet_coefficients('db24',) ... ok
test_wavelet.test_wavelet_coefficients('db25',) ... ok
test_wavelet.test_wavelet_coefficients('db26',) ... ok
test_wavelet.test_wavelet_coefficients('db27',) ... ok
test_wavelet.test_wavelet_coefficients('db28',) ... ok
test_wavelet.test_wavelet_coefficients('db29',) ... ok
test_wavelet.test_wavelet_coefficients('db30',) ... ok
test_wavelet.test_wavelet_coefficients('db31',) ... ok
test_wavelet.test_wavelet_coefficients('db32',) ... ok
test_wavelet.test_wavelet_coefficients('db33',) ... ok
test_wavelet.test_wavelet_coefficients('db34',) ... ok
test_wavelet.test_wavelet_coefficients('db35',) ... ok
test_wavelet.test_wavelet_coefficients('db36',) ... ok
test_wavelet.test_wavelet_coefficients('db37',) ... ok
test_wavelet.test_wavelet_coefficients('db38',) ... ok
test_wavelet.test_wavelet_coefficients('sym2',) ... ok
test_wavelet.test_wavelet_coefficients('sym3',) ... ok
test_wavelet.test_wavelet_coefficients('sym4',) ... ok
test_wavelet.test_wavelet_coefficients('sym5',) ... ok
test_wavelet.test_wavelet_coefficients('sym6',) ... ok
test_wavelet.test_wavelet_coefficients('sym7',) ... ok
test_wavelet.test_wavelet_coefficients('sym8',) ... ok
test_wavelet.test_wavelet_coefficients('sym9',) ... ok
test_wavelet.test_wavelet_coefficients('sym10',) ... ok
test_wavelet.test_wavelet_coefficients('sym11',) ... ok
test_wavelet.test_wavelet_coefficients('sym12',) ... ok
test_wavelet.test_wavelet_coefficients('sym13',) ... ok
test_wavelet.test_wavelet_coefficients('sym14',) ... ok
test_wavelet.test_wavelet_coefficients('sym15',) ... ok
test_wavelet.test_wavelet_coefficients('sym16',) ... ok
test_wavelet.test_wavelet_coefficients('sym17',) ... ok
test_wavelet.test_wavelet_coefficients('sym18',) ... ok
test_wavelet.test_wavelet_coefficients('sym19',) ... ok
test_wavelet.test_wavelet_coefficients('sym20',) ... ok
test_wavelet.test_wavelet_coefficients('coif1',) ... ok
test_wavelet.test_wavelet_coefficients('coif2',) ... ok
test_wavelet.test_wavelet_coefficients('coif3',) ... ok
test_wavelet.test_wavelet_coefficients('coif4',) ... ok
test_wavelet.test_wavelet_coefficients('coif5',) ... ok
test_wavelet.test_wavelet_coefficients('coif6',) ... ok
test_wavelet.test_wavelet_coefficients('coif7',) ... ok
test_wavelet.test_wavelet_coefficients('coif8',) ... ok
test_wavelet.test_wavelet_coefficients('coif9',) ... ok
test_wavelet.test_wavelet_coefficients('coif10',) ... ok
test_wavelet.test_wavelet_coefficients('coif11',) ... ok
test_wavelet.test_wavelet_coefficients('coif12',) ... ok
test_wavelet.test_wavelet_coefficients('coif13',) ... ok
test_wavelet.test_wavelet_coefficients('coif14',) ... ok
test_wavelet.test_wavelet_coefficients('coif15',) ... ok
test_wavelet.test_wavelet_coefficients('coif16',) ... ok
test_wavelet.test_wavelet_coefficients('coif17',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.1',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.3',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.2',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.4',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.6',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.8',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.1',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.3',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.7',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.9',) ... ok
test_wavelet.test_wavelet_coefficients('bior4.4',) ... ok
test_wavelet.test_wavelet_coefficients('bior5.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior6.8',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.1',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.3',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.2',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.4',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.6',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.8',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.1',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.3',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.7',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.9',) ... ok
test_wavelet.test_wavelet_coefficients('rbio4.4',) ... ok
test_wavelet.test_wavelet_coefficients('rbio5.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio6.8',) ... ok
test_wavelet.test_custom_wavelet ... ok
test_wavelet.test_wavefun_sym3 ... ok
test_wavelet.test_wavefun_bior13 ... ok
test_wp.test_wavelet_packet_structure ... ok
test_wp.test_traversing_wp_tree ... ok
test_wp.test_acess_path ... ok
test_wp.test_access_node_atributes ... ok
test_wp.test_collecting_nodes ... ok
test_wp.test_reconstructing_data ... ok
test_wp.test_removing_nodes ... ok
test_wp2d.test_traversing_tree_2d ... ok
test_wp2d.test_accessing_node_atributes_2d ... ok
test_wp2d.test_collecting_nodes_2d ... ok
test_wp2d.test_data_reconstruction_2d ... ok
test_wp2d.test_data_reconstruction_delete_nodes_2d ... ok
test_wp2d.test_lazy_evaluation_2D ... ok

======================================================================
ERROR: test_multidim.test_byte_offset
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/tests/test_multidim.py", line 93, in test_byte_offset
    padded_dwtn = pywt.dwtn(padded['data'], wavelet)
ValueError: no field of name data

----------------------------------------------------------------------
Ran 1499 tests in 29.850s

FAILED (errors=1)
Running unit tests for pywt
NumPy version 1.17.4
NumPy relaxed strides checking option: True
NumPy is installed in /usr/lib/python3/dist-packages/numpy
Python version 3.8.2rc2 (default, Feb 21 2020, 11:37:41) [GCC 9.2.1 20200203]
nose version 1.3.7
I: pybuild pybuild:298: rm -rf /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.8/dist-packages/pywt/tests
I: pybuild pybuild:272: cp -r /<<PKGBUILDDIR>>/pywt/tests /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt
I: pybuild base:217: python3.7 -c "import sys ; sys.path.insert(0, '/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/') ; import pywt ; pywt.test(verbose=5)"
/usr/lib/python3/dist-packages/nose/importer.py:12: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  from imp import find_module, load_module, acquire_lock, release_lock
nose.config: INFO: Ignoring files matching ['(?:^\\.|^util)']
nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module
test__pywt.test_upcoef_reconstruct ... ok
test__pywt.test_downcoef_multilevel ... ok
test__pywt.test_downcoef_complex ... ok
test__pywt.test_downcoef_errs ... ok
test__pywt.test_compare_downcoef_coeffs ... ok
test__pywt.test_upcoef_multilevel ... ok
test__pywt.test_upcoef_complex ... ok
test__pywt.test_upcoef_errs ... ok
test__pywt.test_wavelet_repr ... ok
test__pywt.test_dwt_max_level ... ok
test__pywt.test_ContinuousWavelet_errs ... ok
test__pywt.test_ContinuousWavelet_repr ... ok
test__pywt.test_wavelist ... ok
test_cwt_wavelets.test_gaus ... ok
test_cwt_wavelets.test_cgau ... ok
test_cwt_wavelets.test_shan ... ok
test_cwt_wavelets.test_cmor ... ok
test_cwt_wavelets.test_fbsp ... ok
test_cwt_wavelets.test_morl ... ok
test_cwt_wavelets.test_mexh ... ok
test_data.test_data_aero ... ok
test_data.test_data_ascent ... ok
test_data.test_data_camera ... ok
test_data.test_data_ecg ... ok
test_deprecations.test_intwave_deprecation ... ok
test_deprecations.test_centrfrq_deprecation ... ok
test_deprecations.test_scal2frq_deprecation ... ok
test_deprecations.test_orthfilt_deprecation ... ok
test_deprecations.test_integrate_wave_tuple ... ok
test_deprecations.test_MODES_from_object_deprecation ... ok
test_deprecations.test_MODES_attributes_deprecation ... ok
test_deprecations.test_MODES_attributes_usage_deprecation ... ok
test_deprecations.test_MODES_deprecation_new ... ok
test_deprecations.test_MODES_deprecation_old ... ok
test_deprecations.test_MODES_deprecation_getattr ... ok
test_deprecations.test_mode_equivalence ... ok
test_dwt_idwt.test_dwt_idwt_basic ... ok
test_dwt_idwt.test_dwt_idwt_dtypes ... ok
test_dwt_idwt.test_dwt_idwt_basic_complex ... ok
test_dwt_idwt.test_dwt_idwt_partial_complex ... ok
test_dwt_idwt.test_dwt_wavelet_kwd ... ok
test_dwt_idwt.test_dwt_coeff_len ... ok
test_dwt_idwt.test_idwt_none_input ... ok
test_dwt_idwt.test_idwt_invalid_input ... ok
test_dwt_idwt.test_dwt_single_axis ... ok
test_dwt_idwt.test_idwt_single_axis ... ok
test_dwt_idwt.test_dwt_axis_arg ... ok
test_dwt_idwt.test_idwt_axis_arg ... ok
test_dwt_idwt.test_dwt_idwt_axis_excess ... ok
test_functions.test_centrfreq ... ok
test_functions.test_scal2frq_scale ... ok
test_functions.test_intwave_orthogonal ... ok
test_modes.test_available_modes ... ok
test_modes.test_invalid_modes ... ok
test_modes.test_dwt_idwt_allmodes ... ok
test_modes.test_dwt_short_input_allmodes ... ok
test_modes.test_default_mode ... ok
test_multidim.test_dwtn_input ... ok
test_multidim.test_3D_reconstruct ... ok
test_multidim.test_dwdtn_idwtn_allwavelets ... ok
test_multidim.test_stride ... ok
test_multidim.test_byte_offset ... ERROR
test_multidim.test_3D_reconstruct_complex ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/tests/test_multidim.py:115: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  assert_allclose(data, pywt.idwtn(d, wavelet)[original_shape],
ok
test_multidim.test_idwtn_idwt2 ... ok
test_multidim.test_idwtn_idwt2_complex ... ok
test_multidim.test_idwtn_missing ... ok
test_multidim.test_idwtn_all_coeffs_None ... ok
test_multidim.test_error_on_invalid_keys ... ok
test_multidim.test_error_mismatched_size ... ok
test_multidim.test_dwt2_idwt2_dtypes ... ok
test_multidim.test_dwtn_axes ... ok
test_multidim.test_idwtn_axes ... ok
test_multidim.test_idwt2_axes ... ok
test_multidim.test_idwt2_axes_subsets ... ok
test_multidim.test_idwtn_axes_subsets ... ok
test_multidim.test_negative_axes ... ok
test_multidim.test_dwtn_idwtn_dtypes ... ok
test_multidim.test_idwt2_size_mismatch_error ... ok
test_multidim.test_dwt2_dimension_error ... ok
test_multilevel.test_wavedec ... ok
test_multilevel.test_waverec_invalid_inputs ... ok
test_multilevel.test_waverec_accuracies ... ok
test_multilevel.test_waverec_none ... ok
test_multilevel.test_waverec_odd_length ... ok
test_multilevel.test_waverec_complex ... ok
test_multilevel.test_multilevel_dtypes_1d ... ok
test_multilevel.test_waverec_all_wavelets_modes ... ok
test_multilevel.test_waverec2_accuracies ... ok
test_multilevel.test_multilevel_dtypes_2d ... ok
test_multilevel.test_wavedec2_complex ... ok
test_multilevel.test_wavedec2_invalid_inputs ... ok
test_multilevel.test_waverec2_invalid_inputs ... ok
test_multilevel.test_waverec2_coeff_shape_mismatch ... ok
test_multilevel.test_waverec2_odd_length ... ok
test_multilevel.test_waverec2_none_coeffs ... ok
test_multilevel.test_waverecn ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:402: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  return a_coeff[[slice(s) for s in d_coeff.shape]]
ok
test_multilevel.test_waverecn_empty_coeff ... ok
test_multilevel.test_waverecn_invalid_coeffs ... ok
test_multilevel.test_waverecn_lists ... ok
test_multilevel.test_waverecn_invalid_coeffs2 ... ok
test_multilevel.test_wavedecn_invalid_inputs ... ok
test_multilevel.test_waverecn_accuracies ... ok
test_multilevel.test_multilevel_dtypes_nd ... ok
test_multilevel.test_wavedecn_complex ... ok
test_multilevel.test_waverecn_dtypes ... ok
test_multilevel.test_coeffs_to_array ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/tests/test_multilevel.py:345: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  assert_allclose(arr, arr[arr_slices[0]])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:658: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeff_arr[a_slices] = a_coeffs
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:684: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeff_arr[slice_array] = d
ok
test_multilevel.test_wavedecn_coeff_reshape_even ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:757: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  coeffs.append(arr[coeff_slices[0]])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:762: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d = arr[coeff_slices[n]['d']]
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:764: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d = (arr[coeff_slices[n]['da']],
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:765: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  arr[coeff_slices[n]['ad']],
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:766: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  arr[coeff_slices[n]['dd']])
/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/_multilevel.py:770: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  d[k] = arr[v]
ok
test_multilevel.test_wavedecn_coeff_reshape_axes_subset ... ok
test_multilevel.test_coeffs_to_array_padding ... ok
test_multilevel.test_waverecn_coeff_reshape_odd ... /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/tests/test_multilevel.py:464: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  x1r = x1r[[slice(s) for s in x1.shape]]
ok
test_multilevel.test_array_to_coeffs_invalid_inputs ... ok
test_multilevel.test_waverec_axes_subsets ... ok
test_multilevel.test_waverec2_axes_subsets ... ok
test_multilevel.test_waverecn_axes_subsets ... ok
test_multilevel.test_waverecn_int_axis ... ok
test_multilevel.test_wavedec_axis_error ... ok
test_multilevel.test_waverec_axis_error ... ok
test_multilevel.test_wavedec2_axes_errors ... ok
test_multilevel.test_waverec2_axes_errors ... ok
test_multilevel.test_wavedecn_axes_errors ... ok
test_multilevel.test_waverecn_axes_errors ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db21', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db21', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db22', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db22', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db23', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db23', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db24', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db24', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db25', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db25', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db26', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db26', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db27', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db27', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db28', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db28', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db29', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db29', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db30', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db30', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db31', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db31', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db32', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db32', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db33', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db33', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db34', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db34', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db35', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db35', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db36', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db36', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db37', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db37', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db38', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'db38', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym18', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym18', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym19', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym19', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym20', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'sym20', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif10', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif10', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif11', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif11', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif12', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif12', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif13', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif13', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif14', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif14', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif15', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif15', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif16', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif16', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif17', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'coif17', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'bior6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio1.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.2', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.2', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.6', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.6', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio2.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.1', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.1', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.3', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.3', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.7', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.7', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.9', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio3.9', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio4.4', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio4.4', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio5.5', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio5.5', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('zero', 'zpd', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('constant', 'sp0', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('symmetric', 'sym', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodic', 'ppd', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('smooth', 'sp1', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio6.8', <class 'numpy.float32'>) ... ok
test_perfect_reconstruction.test_perfect_reconstruction('periodization', 'per', 'rbio6.8', <class 'numpy.float64'>) ... ok
test_swt.test_swt_decomposition ... ok
test_swt.test_swt_axis ... ok
test_swt.test_swt_iswt_integration ... ok
test_swt.test_swt_dtypes ... ok
test_swt.test_swt2_ndim_error ... ok
test_swt.test_swt2_iswt2_integration ... ok
test_swt.test_swt2_axes ... ok
test_swt.test_swtn_axes ... ok
test_thresholding.test_threshold ... ok
test_wavelet.test_wavelet_properties ... ok
test_wavelet.test_wavelet_coefficients('db1',) ... ok
test_wavelet.test_wavelet_coefficients('db2',) ... ok
test_wavelet.test_wavelet_coefficients('db3',) ... ok
test_wavelet.test_wavelet_coefficients('db4',) ... ok
test_wavelet.test_wavelet_coefficients('db5',) ... ok
test_wavelet.test_wavelet_coefficients('db6',) ... ok
test_wavelet.test_wavelet_coefficients('db7',) ... ok
test_wavelet.test_wavelet_coefficients('db8',) ... ok
test_wavelet.test_wavelet_coefficients('db9',) ... ok
test_wavelet.test_wavelet_coefficients('db10',) ... ok
test_wavelet.test_wavelet_coefficients('db11',) ... ok
test_wavelet.test_wavelet_coefficients('db12',) ... ok
test_wavelet.test_wavelet_coefficients('db13',) ... ok
test_wavelet.test_wavelet_coefficients('db14',) ... ok
test_wavelet.test_wavelet_coefficients('db15',) ... ok
test_wavelet.test_wavelet_coefficients('db16',) ... ok
test_wavelet.test_wavelet_coefficients('db17',) ... ok
test_wavelet.test_wavelet_coefficients('db18',) ... ok
test_wavelet.test_wavelet_coefficients('db19',) ... ok
test_wavelet.test_wavelet_coefficients('db20',) ... ok
test_wavelet.test_wavelet_coefficients('db21',) ... ok
test_wavelet.test_wavelet_coefficients('db22',) ... ok
test_wavelet.test_wavelet_coefficients('db23',) ... ok
test_wavelet.test_wavelet_coefficients('db24',) ... ok
test_wavelet.test_wavelet_coefficients('db25',) ... ok
test_wavelet.test_wavelet_coefficients('db26',) ... ok
test_wavelet.test_wavelet_coefficients('db27',) ... ok
test_wavelet.test_wavelet_coefficients('db28',) ... ok
test_wavelet.test_wavelet_coefficients('db29',) ... ok
test_wavelet.test_wavelet_coefficients('db30',) ... ok
test_wavelet.test_wavelet_coefficients('db31',) ... ok
test_wavelet.test_wavelet_coefficients('db32',) ... ok
test_wavelet.test_wavelet_coefficients('db33',) ... ok
test_wavelet.test_wavelet_coefficients('db34',) ... ok
test_wavelet.test_wavelet_coefficients('db35',) ... ok
test_wavelet.test_wavelet_coefficients('db36',) ... ok
test_wavelet.test_wavelet_coefficients('db37',) ... ok
test_wavelet.test_wavelet_coefficients('db38',) ... ok
test_wavelet.test_wavelet_coefficients('sym2',) ... ok
test_wavelet.test_wavelet_coefficients('sym3',) ... ok
test_wavelet.test_wavelet_coefficients('sym4',) ... ok
test_wavelet.test_wavelet_coefficients('sym5',) ... ok
test_wavelet.test_wavelet_coefficients('sym6',) ... ok
test_wavelet.test_wavelet_coefficients('sym7',) ... ok
test_wavelet.test_wavelet_coefficients('sym8',) ... ok
test_wavelet.test_wavelet_coefficients('sym9',) ... ok
test_wavelet.test_wavelet_coefficients('sym10',) ... ok
test_wavelet.test_wavelet_coefficients('sym11',) ... ok
test_wavelet.test_wavelet_coefficients('sym12',) ... ok
test_wavelet.test_wavelet_coefficients('sym13',) ... ok
test_wavelet.test_wavelet_coefficients('sym14',) ... ok
test_wavelet.test_wavelet_coefficients('sym15',) ... ok
test_wavelet.test_wavelet_coefficients('sym16',) ... ok
test_wavelet.test_wavelet_coefficients('sym17',) ... ok
test_wavelet.test_wavelet_coefficients('sym18',) ... ok
test_wavelet.test_wavelet_coefficients('sym19',) ... ok
test_wavelet.test_wavelet_coefficients('sym20',) ... ok
test_wavelet.test_wavelet_coefficients('coif1',) ... ok
test_wavelet.test_wavelet_coefficients('coif2',) ... ok
test_wavelet.test_wavelet_coefficients('coif3',) ... ok
test_wavelet.test_wavelet_coefficients('coif4',) ... ok
test_wavelet.test_wavelet_coefficients('coif5',) ... ok
test_wavelet.test_wavelet_coefficients('coif6',) ... ok
test_wavelet.test_wavelet_coefficients('coif7',) ... ok
test_wavelet.test_wavelet_coefficients('coif8',) ... ok
test_wavelet.test_wavelet_coefficients('coif9',) ... ok
test_wavelet.test_wavelet_coefficients('coif10',) ... ok
test_wavelet.test_wavelet_coefficients('coif11',) ... ok
test_wavelet.test_wavelet_coefficients('coif12',) ... ok
test_wavelet.test_wavelet_coefficients('coif13',) ... ok
test_wavelet.test_wavelet_coefficients('coif14',) ... ok
test_wavelet.test_wavelet_coefficients('coif15',) ... ok
test_wavelet.test_wavelet_coefficients('coif16',) ... ok
test_wavelet.test_wavelet_coefficients('coif17',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.1',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.3',) ... ok
test_wavelet.test_wavelet_coefficients('bior1.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.2',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.4',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.6',) ... ok
test_wavelet.test_wavelet_coefficients('bior2.8',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.1',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.3',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.7',) ... ok
test_wavelet.test_wavelet_coefficients('bior3.9',) ... ok
test_wavelet.test_wavelet_coefficients('bior4.4',) ... ok
test_wavelet.test_wavelet_coefficients('bior5.5',) ... ok
test_wavelet.test_wavelet_coefficients('bior6.8',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.1',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.3',) ... ok
test_wavelet.test_wavelet_coefficients('rbio1.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.2',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.4',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.6',) ... ok
test_wavelet.test_wavelet_coefficients('rbio2.8',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.1',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.3',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.7',) ... ok
test_wavelet.test_wavelet_coefficients('rbio3.9',) ... ok
test_wavelet.test_wavelet_coefficients('rbio4.4',) ... ok
test_wavelet.test_wavelet_coefficients('rbio5.5',) ... ok
test_wavelet.test_wavelet_coefficients('rbio6.8',) ... ok
test_wavelet.test_custom_wavelet ... ok
test_wavelet.test_wavefun_sym3 ... ok
test_wavelet.test_wavefun_bior13 ... ok
test_wp.test_wavelet_packet_structure ... ok
test_wp.test_traversing_wp_tree ... ok
test_wp.test_acess_path ... ok
test_wp.test_access_node_atributes ... ok
test_wp.test_collecting_nodes ... ok
test_wp.test_reconstructing_data ... ok
test_wp.test_removing_nodes ... ok
test_wp2d.test_traversing_tree_2d ... ok
test_wp2d.test_accessing_node_atributes_2d ... ok
test_wp2d.test_collecting_nodes_2d ... ok
test_wp2d.test_data_reconstruction_2d ... ok
test_wp2d.test_data_reconstruction_delete_nodes_2d ... ok
test_wp2d.test_lazy_evaluation_2D ... ok

======================================================================
ERROR: test_multidim.test_byte_offset
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/tests/test_multidim.py", line 93, in test_byte_offset
    padded_dwtn = pywt.dwtn(padded['data'], wavelet)
ValueError: no field of name data

----------------------------------------------------------------------
Ran 1499 tests in 30.191s

FAILED (errors=1)
Running unit tests for pywt
NumPy version 1.17.4
NumPy relaxed strides checking option: True
NumPy is installed in /usr/lib/python3/dist-packages/numpy
Python version 3.7.6 (default, Jan 19 2020, 22:34:52) [GCC 9.2.1 20200117]
nose version 1.3.7
I: pybuild pybuild:298: rm -rf /<<PKGBUILDDIR>>/debian/python3-pywt/usr/lib/python3.7/dist-packages/pywt/tests
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installdocs -O--buildsystem=pybuild
   dh_sphinxdoc -O--buildsystem=pybuild
   dh_installchangelogs -O--buildsystem=pybuild
   dh_installexamples -O--buildsystem=pybuild
   dh_python3 -O--buildsystem=pybuild
   dh_installinit -O--buildsystem=pybuild
   dh_perl -O--buildsystem=pybuild
   dh_link -O--buildsystem=pybuild
   dh_strip_nondeterminism -O--buildsystem=pybuild
   dh_compress -O--buildsystem=pybuild
   dh_fixperms -O--buildsystem=pybuild
   dh_missing -O--buildsystem=pybuild
   dh_strip -O--buildsystem=pybuild
   dh_makeshlibs -O--buildsystem=pybuild
   dh_shlibdeps -O--buildsystem=pybuild
dpkg-shlibdeps: warning: package could avoid a useless dependency if debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_cwt.cpython-38-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_pywt.cpython-38-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_cwt.cpython-37m-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_swt.cpython-37m-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_swt.cpython-38-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_dwt.cpython-38-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_dwt.cpython-37m-x86_64-linux-gnu.so debian/python3-pywt/usr/lib/python3/dist-packages/pywt/_extensions/_pywt.cpython-37m-x86_64-linux-gnu.so were not linked against libpthread.so.0 (they use none of the library's symbols)
   dh_installdeb -O--buildsystem=pybuild
   dh_gencontrol -O--buildsystem=pybuild
dpkg-gencontrol: warning: package python-pywt-doc: substitution variable ${sphinxdoc:Built-Using} unused, but is defined
dpkg-gencontrol: warning: package python3-pywt: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pywt: substitution variable ${python3:Versions} unused, but is defined
dpkg-gencontrol: warning: package python3-pywt: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pywt: substitution variable ${python3:Versions} unused, but is defined
   dh_md5sums -O--buildsystem=pybuild
   dh_builddeb -O--buildsystem=pybuild
dpkg-deb: building package 'python3-pywt' in '../python3-pywt_0.5.1-1.3_amd64.deb'.
dpkg-deb: building package 'python3-pywt-dbgsym' in '../python3-pywt-dbgsym_0.5.1-1.3_amd64.deb'.
dpkg-deb: building package 'python-pywt-doc' in '../python-pywt-doc_0.5.1-1.3_all.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../pywavelets_0.5.1-1.3_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T14:46:07Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


pywavelets_0.5.1-1.3_amd64.changes:
-----------------------------------

Format: 1.8
Date: Wed, 18 Dec 2019 15:36:45 +0100
Source: pywavelets
Binary: python-pywt-doc python3-pywt python3-pywt-dbgsym
Architecture: all amd64
Version: 0.5.1-1.3
Distribution: unstable
Urgency: medium
Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
Changed-By: Gianfranco Costamagna <locutusofborg@debian.org>
Description:
 python-pywt-doc - Python extension implementing of wavelet transformations (Documen
 python3-pywt - Python3 extension implementing of wavelet transformations
Closes: 917652
Changes:
 pywavelets (0.5.1-1.3) unstable; urgency=medium
 .
   * Non-maintainer upload.
   * Grab patch from Ubuntu and Balint Reczey to fix an aligment problem on
     armhf (Closes: #917652)
Checksums-Sha1:
 0e3391721870eeab6c55efb129af19fb12632203 99320 python-pywt-doc_0.5.1-1.3_all.deb
 f14c1e64bbacbcda19b0a95dd8f6c9a21c61afa9 2106356 python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 e9051c406691ddb278c01ed2b73d015f2509e996 1084548 python3-pywt_0.5.1-1.3_amd64.deb
 ab32157314301231a7a7f6cc1c3813778f2953b1 7661 pywavelets_0.5.1-1.3_amd64.buildinfo
Checksums-Sha256:
 e8b89f6848740f10eafc6a65bd30e51b4bd9123c8f500c73879d44a075abbc41 99320 python-pywt-doc_0.5.1-1.3_all.deb
 5c722e8b1a57756deefc78cb72e51e2dd0b47763951cc638246989c433c84a16 2106356 python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 00443edaa4b8a3fed22e82cd1ec7646853763f3212f94b620bd5748f5402f33e 1084548 python3-pywt_0.5.1-1.3_amd64.deb
 8015359433f1f305092ef1b8feaca88b633ecfddb817baec78b7e1a6d853b053 7661 pywavelets_0.5.1-1.3_amd64.buildinfo
Files:
 d789fdf1ebe87e6bd02c32699bc9aa1f 99320 doc optional python-pywt-doc_0.5.1-1.3_all.deb
 f3b148d2418d5a68940b8a76aebef0b1 2106356 debug optional python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 cea8835622182e8f19f854ec6fa94343 1084548 python optional python3-pywt_0.5.1-1.3_amd64.deb
 65d584a18025c5bdead2511d74c3167e 7661 python optional pywavelets_0.5.1-1.3_amd64.buildinfo

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: pywavelets
Binary: python3-pywt python-pywt-doc
Architecture: all amd64
Version: 0.5.1-1.3
Checksums-Md5:
 d789fdf1ebe87e6bd02c32699bc9aa1f 99320 python-pywt-doc_0.5.1-1.3_all.deb
 f3b148d2418d5a68940b8a76aebef0b1 2106356 python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 cea8835622182e8f19f854ec6fa94343 1084548 python3-pywt_0.5.1-1.3_amd64.deb
Checksums-Sha1:
 0e3391721870eeab6c55efb129af19fb12632203 99320 python-pywt-doc_0.5.1-1.3_all.deb
 f14c1e64bbacbcda19b0a95dd8f6c9a21c61afa9 2106356 python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 e9051c406691ddb278c01ed2b73d015f2509e996 1084548 python3-pywt_0.5.1-1.3_amd64.deb
Checksums-Sha256:
 e8b89f6848740f10eafc6a65bd30e51b4bd9123c8f500c73879d44a075abbc41 99320 python-pywt-doc_0.5.1-1.3_all.deb
 5c722e8b1a57756deefc78cb72e51e2dd0b47763951cc638246989c433c84a16 2106356 python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
 00443edaa4b8a3fed22e82cd1ec7646853763f3212f94b620bd5748f5402f33e 1084548 python3-pywt_0.5.1-1.3_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 14:46:07 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 ca-certificates (= 20190110),
 clang-10 (= 1:10.0.0~+rc2-1),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-30),
 cython3 (= 0.29.14-0.1+b1),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-python (= 4.20191017),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 docutils-common (= 0.16+dfsg-1),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-30),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-9 (= 9.2.1-30),
 gcc-9-base (= 9.2.1-30),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-30),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblas3 (= 3.9.0-1),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-10-dev (= 1:10.0.0~+rc2-1),
 libclang-cpp10 (= 1:10.0.0~+rc2-1),
 libclang1-10 (= 1:10.0.0~+rc2-1),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libexpat1 (= 2.2.9-1),
 libexpat1-dev (= 2.2.9-1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-9-dev (= 9.2.1-30),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libgfortran5 (= 10-20200222-1),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libjs-jquery (= 3.3.1~dfsg-3),
 libjs-sphinxdoc (= 1.8.5-5),
 libjs-underscore (= 1.9.1~dfsg-1),
 liblapack3 (= 3.9.0-1),
 libllvm10 (= 1:10.0.0~+rc2-1),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpdec2 (= 2.4.2-2),
 libmpfr6 (= 4.0.2-1),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-9-dev (= 9.2.1-30),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libpython3-all-dev (= 3.7.5-3),
 libpython3-dev (= 3.7.5-3),
 libpython3-stdlib (= 3.7.5-3),
 libpython3.7 (= 3.7.6-1+b1),
 libpython3.7-dev (= 3.7.6-1+b1),
 libpython3.7-minimal (= 3.7.6-1+b1),
 libpython3.7-stdlib (= 3.7.6-1+b1),
 libpython3.8 (= 3.8.2~rc2-2),
 libpython3.8-dev (= 3.8.2~rc2-2),
 libpython3.8-minimal (= 3.8.2~rc2-2),
 libpython3.8-stdlib (= 3.8.2~rc2-2),
 libquadmath0 (= 10-20200222-1),
 libreadline8 (= 8.0-3),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libsqlite3-0 (= 3.31.1-3),
 libssl1.1 (= 1.1.1d-2),
 libstdc++-9-dev (= 9.2.1-30),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 mime-support (= 3.64),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 openssl (= 1.1.1d-2),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 python-babel-localedata (= 2.8.0+dfsg.1-2),
 python3 (= 3.7.5-3),
 python3-alabaster (= 0.7.8-1),
 python3-all (= 3.7.5-3),
 python3-all-dev (= 3.7.5-3),
 python3-attr (= 19.3.0-1),
 python3-babel (= 2.8.0+dfsg.1-2),
 python3-certifi (= 2019.11.28-1),
 python3-chardet (= 3.0.4-4),
 python3-dev (= 3.7.5-3),
 python3-distutils (= 3.8.0-1),
 python3-docutils (= 0.16+dfsg-1),
 python3-idna (= 2.6-2),
 python3-imagesize (= 1.2.0-1),
 python3-jinja2 (= 2.10.1-1),
 python3-lib2to3 (= 3.8.0-1),
 python3-markupsafe (= 1.1.0-1+b2),
 python3-minimal (= 3.7.5-3),
 python3-nose (= 1.3.7-5),
 python3-numpy (= 1:1.17.4-5),
 python3-numpydoc (= 0.7.0-2),
 python3-packaging (= 19.1-2),
 python3-pkg-resources (= 44.0.0-1),
 python3-pygments (= 2.3.1+dfsg-1),
 python3-pyparsing (= 2.4.6-1),
 python3-requests (= 2.22.0-2),
 python3-roman (= 2.0.0-3),
 python3-setuptools (= 44.0.0-1),
 python3-six (= 1.14.0-2),
 python3-sphinx (= 1.8.5-5),
 python3-tz (= 2019.3-1),
 python3-urllib3 (= 1.25.8-1),
 python3.7 (= 3.7.6-1+b1),
 python3.7-dev (= 3.7.6-1+b1),
 python3.7-minimal (= 3.7.6-1+b1),
 python3.8 (= 3.8.2~rc2-2),
 python3.8-dev (= 3.8.2~rc2-2),
 python3.8-minimal (= 3.8.2~rc2-2),
 readline-common (= 8.0-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sgml-base (= 1.29.1),
 sphinx-common (= 1.8.5-5),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 tzdata (= 2019c-3),
 util-linux (= 2.34-0.1),
 xml-core (= 0.18+nmu1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2),
 zlib1g-dev (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1576679805"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


python-pywt-doc_0.5.1-1.3_all.deb
---------------------------------

 new Debian package, version 2.0.
 size 99320 bytes: control archive=3772 bytes.
     668 bytes,    17 lines      control              
   11080 bytes,   115 lines      md5sums              
 Package: python-pywt-doc
 Source: pywavelets
 Version: 0.5.1-1.3
 Architecture: all
 Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
 Installed-Size: 956
 Depends: libjs-sphinxdoc (>= 1.0)
 Section: doc
 Priority: optional
 Homepage: https://github.com/PyWavelets/pywt
 Description: Python extension implementing of wavelet transformations (Documentation)
  PyWavelets implements the discrete wavelet transform (DWT) popular in
  numerical harmonic analysis for numerous families of wavelets, including
  Haar, Daubechies, Symlet, Coiflet, biorthogonal wavelets in one and two
  dimensions.
  .
  This package contains documentation and examples.

drwxr-xr-x root/root         0 2019-12-18 14:36 ./
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc-base/
-rw-r--r-- root/root       373 2015-10-18 21:29 ./usr/share/doc-base/python-pywt-doc
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/
-rw-r--r-- root/root      3319 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/changelog.Debian.gz
-rw-r--r-- root/root       980 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/changelog.gz
-rw-r--r-- root/root      1736 2016-12-22 23:28 ./usr/share/doc/python-pywt-doc/copyright
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/examples/
-rwxr-xr-x root/root      1250 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/_dwt_decompose.c
-rwxr-xr-x root/root      3455 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/batch_processing.py
-rwxr-xr-x root/root      1912 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/benchmark.py
-rwxr-xr-x root/root       934 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/cwt_analysis.py
-rwxr-xr-x root/root      1732 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/dwt2_dwtn_image.py
-rwxr-xr-x root/root      1792 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/dwt_signal_decomposition.py
-rwxr-xr-x root/root      2469 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/dwt_swt_show_coeffs.py
-rw-r--r-- root/root      2060 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/image_blender.py.gz
-rwxr-xr-x root/root      2656 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/plot_wavelets.py
-rwxr-xr-x root/root       710 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/swt2.py
-rwxr-xr-x root/root      1957 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/waveinfo.py
-rwxr-xr-x root/root      1310 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/wp_2d.py
-rwxr-xr-x root/root      1431 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/wp_scalogram.py
-rwxr-xr-x root/root       840 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/examples/wp_visualize_coeffs_distribution.py
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_sources/
-rw-r--r-- root/root       217 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/contents.rst.txt
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_sources/dev/
-rw-r--r-- root/root      1110 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/building_extension.rst.txt
-rw-r--r-- root/root      3292 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/how_to_release.rst.txt
-rw-r--r-- root/root       732 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/index.rst.txt
-rw-r--r-- root/root      1587 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/installing_build_dependencies.rst.txt
-rw-r--r-- root/root       701 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/preparing_linux_build_environment.rst.txt
-rw-r--r-- root/root      4088 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/dev/preparing_windows_build_environment.rst.txt
-rw-r--r-- root/root       943 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_sources/dev/testing.rst.txt
-rw-r--r-- root/root      4526 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/index.rst.txt
-rw-r--r-- root/root        34 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/overview.rst.txt
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_sources/ref/
-rw-r--r-- root/root      2173 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/2d-dwt-and-idwt.rst.txt
-rw-r--r-- root/root       335 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/cwt.rst.txt
-rw-r--r-- root/root       654 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/dwt-coefficient-handling.rst.txt
-rw-r--r-- root/root      1798 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/dwt-discrete-wavelet-transform.rst.txt
-rw-r--r-- root/root      1290 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/idwt-inverse-discrete-wavelet-transform.rst.txt
-rw-r--r-- root/root       408 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/index.rst.txt
-rw-r--r-- root/root       656 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/iswt-inverse-stationary-wavelet-transform.rst.txt
-rw-r--r-- root/root       589 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/nd-dwt-and-idwt.rst.txt
-rw-r--r-- root/root      1609 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/other-functions.rst.txt
-rw-r--r-- root/root      3825 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/signal-extension-modes.rst.txt
-rw-r--r-- root/root       809 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/swt-stationary-wavelet-transform.rst.txt
-rw-r--r-- root/root       254 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/thresholding-functions.rst.txt
-rw-r--r-- root/root     11322 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/wavelet-packets.rst.txt
-rw-r--r-- root/root     10592 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/ref/wavelets.rst.txt
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_sources/regression/
-rw-r--r-- root/root      5464 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/dwt-idwt.rst.txt
-rw-r--r-- root/root       590 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/gotchas.rst.txt
-rw-r--r-- root/root       398 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/index.rst.txt
-rw-r--r-- root/root      1988 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/modes.rst.txt
-rw-r--r-- root/root      1484 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/multilevel.rst.txt
-rw-r--r-- root/root      8003 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/wavelet.rst.txt
-rw-r--r-- root/root      7418 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/wp.rst.txt
-rw-r--r-- root/root     12996 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/regression/wp2d.rst.txt
-rw-r--r-- root/root        40 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/release.0.3.0.rst.txt
-rw-r--r-- root/root        40 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/release.0.4.0.rst.txt
-rw-r--r-- root/root        40 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/release.0.5.0.rst.txt
-rw-r--r-- root/root        40 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/release.0.5.1.rst.txt
-rw-r--r-- root/root       127 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/releasenotes.rst.txt
-rw-r--r-- root/root      1050 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/resources.rst.txt
-rw-r--r-- root/root       758 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_sources/substitutions.rst.txt
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/
-rw-r--r-- root/root     10912 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/basic.css
-rw-r--r-- root/root       557 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_static/comments.png
lrwxrwxrwx root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/doctools.js -> ../../../../javascript/sphinxdoc/1.0/doctools.js
-rw-r--r-- root/root       309 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/documentation_options.js
-rw-r--r-- root/root      1406 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_static/favicon.ico
-rw-r--r-- root/root       286 2019-03-09 14:07 ./usr/share/doc/python-pywt-doc/html/_static/file.png
-rw-r--r-- root/root       453 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/github.png
lrwxrwxrwx root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/jquery.js -> ../../../../javascript/sphinxdoc/1.0/jquery.js
-rw-r--r-- root/root     10847 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/language_data.js
-rw-r--r-- root/root        90 2019-03-09 14:07 ./usr/share/doc/python-pywt-doc/html/_static/minus.png
-rw-r--r-- root/root      4307 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/nature.css
-rw-r--r-- root/root       478 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/opensearch.xml
-rw-r--r-- root/root       807 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_static/page_edit.png
-rw-r--r-- root/root        90 2019-03-09 14:07 ./usr/share/doc/python-pywt-doc/html/_static/plus.png
-rw-r--r-- root/root      4395 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/pygments.css
lrwxrwxrwx root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/searchtools.js -> ../../../../javascript/sphinxdoc/1.0/searchtools.js
-rw-r--r-- root/root       760 2016-11-29 22:06 ./usr/share/doc/python-pywt-doc/html/_static/twitter.png
lrwxrwxrwx root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/underscore.js -> ../../../../javascript/sphinxdoc/1.0/underscore.js
-rw-r--r-- root/root       353 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/_static/wave.png
-rw-r--r-- root/root     12452 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/contents.html
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/
-rw-r--r-- root/root     11584 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/building_extension.html
-rw-r--r-- root/root     14881 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/how_to_release.html
-rw-r--r-- root/root     12559 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/index.html
-rw-r--r-- root/root     12475 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/installing_build_dependencies.html
-rw-r--r-- root/root      9427 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/preparing_linux_build_environment.html
-rw-r--r-- root/root     16039 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/preparing_windows_build_environment.html
-rw-r--r-- root/root     10020 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/dev/testing.html
-rw-r--r-- root/root     18188 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/genindex.html
-rw-r--r-- root/root     15693 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/index.html
-rw-r--r-- root/root      1865 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/objects.inv
-rw-r--r-- root/root      5936 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/overview.html
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/
-rw-r--r-- root/root     13878 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/2d-dwt-and-idwt.html
-rw-r--r-- root/root      8040 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/cwt.html
-rw-r--r-- root/root      9053 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/dwt-coefficient-handling.html
-rw-r--r-- root/root     12400 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/dwt-discrete-wavelet-transform.html
-rw-r--r-- root/root      9252 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/idwt-inverse-discrete-wavelet-transform.html
-rw-r--r-- root/root     16947 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/index.html
-rw-r--r-- root/root      9125 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/iswt-inverse-stationary-wavelet-transform.html
-rw-r--r-- root/root      9618 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/nd-dwt-and-idwt.html
-rw-r--r-- root/root     11932 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/other-functions.html
-rw-r--r-- root/root     17534 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/signal-extension-modes.html
-rw-r--r-- root/root      9941 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/swt-stationary-wavelet-transform.html
-rw-r--r-- root/root      7894 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/thresholding-functions.html
-rw-r--r-- root/root     44760 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/wavelet-packets.html
-rw-r--r-- root/root     46909 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/ref/wavelets.html
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/
-rw-r--r-- root/root     28937 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/dwt-idwt.html
-rw-r--r-- root/root     10164 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/gotchas.html
-rw-r--r-- root/root      8029 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/index.html
-rw-r--r-- root/root     16481 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/modes.html
-rw-r--r-- root/root     16653 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/multilevel.html
-rw-r--r-- root/root     35003 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/wavelet.html
-rw-r--r-- root/root     47874 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/wp.html
-rw-r--r-- root/root     59254 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/regression/wp2d.html
-rw-r--r-- root/root     20646 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/release.0.3.0.html
-rw-r--r-- root/root     25160 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/release.0.4.0.html
-rw-r--r-- root/root     32470 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/release.0.5.0.html
-rw-r--r-- root/root      9886 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/release.0.5.1.html
-rw-r--r-- root/root      7678 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/releasenotes.html
-rw-r--r-- root/root      9207 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/resources.html
-rw-r--r-- root/root      5719 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/search.html
-rw-r--r-- root/root     28735 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/searchindex.js
-rw-r--r-- root/root      5819 2019-12-18 14:36 ./usr/share/doc/python-pywt-doc/html/substitutions.html


python3-pywt-dbgsym_0.5.1-1.3_amd64.deb
---------------------------------------

 new Debian package, version 2.0.
 size 2106356 bytes: control archive=920 bytes.
     680 bytes,    12 lines      control              
     848 bytes,     8 lines      md5sums              
 Package: python3-pywt-dbgsym
 Source: pywavelets
 Version: 0.5.1-1.3
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
 Installed-Size: 2525
 Depends: python3-pywt (= 0.5.1-1.3)
 Section: debug
 Priority: optional
 Description: debug symbols for python3-pywt
 Build-Ids: 899569d8bab2d2c582198b2dc63b32f120f984ee 8c230e34985d686b88e7ba89e7809756091429ef 9b5721db285ed6ee97245fc60749928c29992eb4 a16d4356d9f45626fb631b91717562db9536ef06 bdaa61da386c1de54a379869e813e304a28410da c39c7094d6814eff106e0606639efc7502842ba9 dab9723d23362a9d80a85cb3c0398b71cbbacbf7 eac6f2b015b212e18f5d0e283f7341d356e3dc26

drwxr-xr-x root/root         0 2019-12-18 14:36 ./
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/89/
-rw-r--r-- root/root    326360 2019-12-18 14:36 ./usr/lib/debug/.build-id/89/9569d8bab2d2c582198b2dc63b32f120f984ee.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/8c/
-rw-r--r-- root/root    413016 2019-12-18 14:36 ./usr/lib/debug/.build-id/8c/230e34985d686b88e7ba89e7809756091429ef.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/9b/
-rw-r--r-- root/root    275088 2019-12-18 14:36 ./usr/lib/debug/.build-id/9b/5721db285ed6ee97245fc60749928c29992eb4.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/a1/
-rw-r--r-- root/root    263896 2019-12-18 14:36 ./usr/lib/debug/.build-id/a1/6d4356d9f45626fb631b91717562db9536ef06.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/bd/
-rw-r--r-- root/root    266224 2019-12-18 14:36 ./usr/lib/debug/.build-id/bd/aa61da386c1de54a379869e813e304a28410da.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/c3/
-rw-r--r-- root/root    328048 2019-12-18 14:36 ./usr/lib/debug/.build-id/c3/9c7094d6814eff106e0606639efc7502842ba9.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/da/
-rw-r--r-- root/root    271240 2019-12-18 14:36 ./usr/lib/debug/.build-id/da/b9723d23362a9d80a85cb3c0398b71cbbacbf7.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/debug/.build-id/ea/
-rw-r--r-- root/root    421376 2019-12-18 14:36 ./usr/lib/debug/.build-id/ea/c6f2b015b212e18f5d0e283f7341d356e3dc26.debug
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/
lrwxrwxrwx root/root         0 2019-12-18 14:36 ./usr/share/doc/python3-pywt-dbgsym -> python3-pywt


python3-pywt_0.5.1-1.3_amd64.deb
--------------------------------

 new Debian package, version 2.0.
 size 1084548 bytes: control archive=2064 bytes.
     731 bytes,    17 lines      control              
    3321 bytes,    36 lines      md5sums              
     264 bytes,    12 lines   *  postinst             #!/bin/sh
     399 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-pywt
 Source: pywavelets
 Version: 0.5.1-1.3
 Architecture: amd64
 Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
 Installed-Size: 3195
 Depends: python3 (<< 3.9), python3 (>= 3.7~), python3-numpy, python3:any (>= 3.3~), libc6 (>= 2.14)
 Section: python
 Priority: optional
 Homepage: https://github.com/PyWavelets/pywt
 Description: Python3 extension implementing of wavelet transformations
  PyWavelets implements the discrete wavelet transform (DWT) popular in
  numerical harmonic analysis for numerous families of wavelets, including
  Haar, Daubechies, Symlet, Coiflet, biorthogonal wavelets in one and two
  dimensions.
  .
  This package contains the Python 3 version of the library.

drwxr-xr-x root/root         0 2019-12-18 14:36 ./
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/PyWavelets-0.5.1.egg-info/
-rwxr-xr-x root/root      1925 2019-12-18 14:36 ./usr/lib/python3/dist-packages/PyWavelets-0.5.1.egg-info/PKG-INFO
-rwxr-xr-x root/root         1 2019-12-18 14:36 ./usr/lib/python3/dist-packages/PyWavelets-0.5.1.egg-info/dependency_links.txt
-rwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/PyWavelets-0.5.1.egg-info/requires.txt
-rwxr-xr-x root/root         5 2019-12-18 14:36 ./usr/lib/python3/dist-packages/PyWavelets-0.5.1.egg-info/top_level.txt
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/
-rw-r--r-- root/root      1044 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/__init__.py
-rw-r--r-- root/root      3436 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_cwt.py
-rw-r--r-- root/root      9891 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_dwt.py
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/
-rw-r--r-- root/root         0 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_extensions/__init__.py
-rw-r--r-- root/root    249232 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_cwt.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    249328 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_cwt.cpython-38-x86_64-linux-gnu.so
-rw-r--r-- root/root    319824 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_dwt.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    315824 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_dwt.cpython-38-x86_64-linux-gnu.so
-rw-r--r-- root/root    427136 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_pywt.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    423152 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_pywt.cpython-38-x86_64-linux-gnu.so
-rw-r--r-- root/root    253904 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_swt.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    254000 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/_extensions/_swt.cpython-38-x86_64-linux-gnu.so
-rw-r--r-- root/root      6999 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_functions.py
-rw-r--r-- root/root      9500 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_multidim.py
-rw-r--r-- root/root     26788 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_multilevel.py
-rw-r--r-- root/root     13798 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_swt.py
-rw-r--r-- root/root      3570 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_thresholding.py
-rw-r--r-- root/root     24196 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/_wavelet_packets.py
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/data/
-rw-r--r-- root/root        54 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/__init__.py
-rw-r--r-- root/root      4520 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/_readers.py
-rwxr-xr-x root/root    227784 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/aero.npz
-rwxr-xr-x root/root    170883 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/ascent.npz
-rwxr-xr-x root/root    160418 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/camera.npz
-rw-r--r-- root/root       625 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/create_dat.py
-rwxr-xr-x root/root      4176 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/ecg.npy
-rwxr-xr-x root/root     64200 2016-11-29 22:06 ./usr/lib/python3/dist-packages/pywt/data/sst_nino3.npz
-rw-r--r-- root/root       233 2019-12-18 14:36 ./usr/lib/python3/dist-packages/pywt/version.py
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-12-18 14:36 ./usr/share/doc/python3-pywt/
-rw-r--r-- root/root      3987 2016-11-29 22:06 ./usr/share/doc/python3-pywt/README.rst
-rw-r--r-- root/root       129 2016-11-29 22:06 ./usr/share/doc/python3-pywt/THANKS.txt
-rw-r--r-- root/root      3319 2019-12-18 14:36 ./usr/share/doc/python3-pywt/changelog.Debian.gz
-rw-r--r-- root/root       980 2016-11-29 22:06 ./usr/share/doc/python3-pywt/changelog.gz
-rw-r--r-- root/root      1736 2016-12-22 23:28 ./usr/share/doc/python3-pywt/copyright


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 51704
Build-Time: 130
Distribution: unstable
Host Architecture: amd64
Install-Time: 27
Job: pywavelets_0.5.1-1.3
Machine Architecture: amd64
Package: pywavelets
Package-Time: 175
Source-Version: 0.5.1-1.3
Space: 51704
Status: successful
Version: 0.5.1-1.3
--------------------------------------------------------------------------------
Finished at 2020-02-25T14:46:07Z
Build needed 00:02:55, 51704k disk space
DC-Status: OK 176.327704004s
DC-Time-Estimation: 176.327704004 versus expected 313 (r/m: 0.775103928041277 ; m: 176.327704004)
