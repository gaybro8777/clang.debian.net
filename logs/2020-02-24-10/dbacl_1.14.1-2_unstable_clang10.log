DC-Build-Header: dbacl 1.14.1-2 / 2020-02-25 01:28:37 +0000
DC-Task: type:rebuild-binarch-only source:dbacl version:1.14.1-2 chroot:unstable esttime:131 logfile:/tmp/dbacl_1.14.1-2_unstable_clang10.log modes:clang10:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang10 dbacl_1.14.1-2'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-6-163.eu-central-1.compute.internal

+==============================================================================+
| dbacl 1.14.1-2 (amd64)                       Tue, 25 Feb 2020 01:28:38 +0000 |
+==============================================================================+

Package: dbacl
Version: 1.14.1-2
Source Version: 1.14.1-2
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-0cee23ab-1b3f-4822-a224-b1fa1dc1807d' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang10
------------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=10
+ echo 'Install of clang-10'
Install of clang-10
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:10 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6514 kB in 2s (3747 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-10 libomp-10-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386 libclang-common-10-dev
  libclang-cpp10 libclang1-10 libedit2 libgc1c2 libllvm10 libobjc4 libomp5-10
  libz3-4
Suggested packages:
  clang-10-doc libomp-10-doc
Recommended packages:
  llvm-10-dev python3
The following NEW packages will be installed:
  clang-10 lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-10-dev libclang-cpp10 libclang1-10 libedit2 libgc1c2
  libllvm10 libobjc-9-dev libobjc4 libomp-10-dev libomp5-10 libz3-4
0 upgraded, 17 newly installed, 0 to remove and 1 not upgraded.
Need to get 46.4 MB of archives.
After this operation, 238 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm10 amd64 1:10.0.0~+rc2-1 [15.5 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp10 amd64 1:10.0.0~+rc2-1 [9069 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-10-dev amd64 1:10.0.0~+rc2-1 [2782 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 libclang1-10 amd64 1:10.0.0~+rc2-1 [7607 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 clang-10 amd64 1:10.0.0~+rc2-1 [103 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libomp5-10 amd64 1:10.0.0~+rc2-1 [337 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libomp-10-dev amd64 1:10.0.0~+rc2-1 [84.3 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 46.4 MB in 0s (98.5 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm10:amd64.
Preparing to unpack .../03-libllvm10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang-cpp10.
Preparing to unpack .../04-libclang-cpp10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-cpp10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../05-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../06-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../07-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../08-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../09-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../10-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../11-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-10-dev.
Preparing to unpack .../12-libclang-common-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libclang1-10.
Preparing to unpack .../13-libclang1-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libclang1-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package clang-10.
Preparing to unpack .../14-clang-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking clang-10 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp5-10:amd64.
Preparing to unpack .../15-libomp5-10_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Selecting previously unselected package libomp-10-dev.
Preparing to unpack .../16-libomp-10-dev_1%3a10.0.0~+rc2-1_amd64.deb ...
Unpacking libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libomp5-10:amd64 (1:10.0.0~+rc2-1) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp-10-dev (1:10.0.0~+rc2-1) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up libllvm10:amd64 (1:10.0.0~+rc2-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libclang1-10 (1:10.0.0~+rc2-1) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libclang-cpp10 (1:10.0.0~+rc2-1) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-10-dev (1:10.0.0~+rc2-1) ...
Setting up clang-10 (1:10.0.0~+rc2-1) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-10 g++-4.6
+ ln -s clang-10 gcc-4.6
+ ln -s clang-10 cpp-4.6
+ ln -s clang-10 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-10 g++-4.7
+ ln -s clang-10 gcc-4.7
+ ln -s clang-10 cpp-4.7
+ ln -s clang-10 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-10 g++-4.8
+ ln -s clang-10 gcc-4.8
+ ln -s clang-10 cpp-4.8
+ ln -s clang-10 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-10 g++-4.9
+ ln -s clang-10 gcc-4.9
+ ln -s clang-10 cpp-4.9
+ ln -s clang-10 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-10 g++-5
+ ln -s clang-10 gcc-5
+ ln -s clang-10 cpp-5
+ ln -s clang-10 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-10 g++-6
+ ln -s clang-10 gcc-6
+ ln -s clang-10 cpp-6
+ ln -s clang-10 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-10 g++-7
+ ln -s clang-10 gcc-7
+ ln -s clang-10 cpp-7
+ ln -s clang-10 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-10 g++-8
+ ln -s clang-10 gcc-8
+ ln -s clang-10 cpp-8
+ ln -s clang-10 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-10 g++-9
+ ln -s clang-10 gcc-9
+ ln -s clang-10 cpp-9
+ ln -s clang-10 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-10 g++-10
+ ln -s clang-10 gcc-10
+ ln -s clang-10 cpp-10
+ ln -s clang-10 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/dbacl-K9gJzg
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang10'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/dbacl-K9gJzg/resolver-nPlK4b' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 253 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 253 kB in 0s (22.1 MB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'dbacl' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/debian/dbacl.git
Please use:
git clone https://salsa.debian.org/debian/dbacl.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 914 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main dbacl 1.14.1-2 (dsc) [1866 B]
Get:2 http://127.0.0.1:12990/debian sid/main dbacl 1.14.1-2 (tar) [907 kB]
Get:3 http://127.0.0.1:12990/debian sid/main dbacl 1.14.1-2 (diff) [5840 B]
Fetched 914 kB in 0s (10.6 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/dbacl-K9gJzg/dbacl-1.14.1' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/dbacl-K9gJzg' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 12), libreadline-gplv2-dev, libslang2-dev, libncurses-dev, flex, bison, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 12), libreadline-gplv2-dev, libslang2-dev, libncurses-dev, flex, bison, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [403 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [488 B]
Fetched 1848 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bison bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file flex gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libncurses-dev libncurses6 libpipeline1 libpng-dev libpng16-16
  libreadline-gplv2-dev libreadline5 libsigsegv2 libslang2 libslang2-dev
  libsub-override-perl libtinfo-dev libtool libuchardet0 libxml2 m4 man-db
  po-debconf readline-common sensible-utils zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc bison-doc wamerican | wordlist
  whois vacation dh-make flex-doc gettext-doc libasprintf-dev libgettextpo-dev
  groff ncurses-doc libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc
  apparmor less www-browser libmail-box-perl readline-doc
Recommended packages:
  libfl-dev curl | wget | lynx libarchive-cpio-perl libglib2.0-data
  shared-mime-info xdg-user-dirs libgpm2 libpng-tools libltdl-dev
  libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bison bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file flex gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libncurses-dev libncurses6 libpipeline1 libpng-dev libpng16-16
  libreadline-gplv2-dev libreadline5 libsigsegv2 libslang2 libslang2-dev
  libsub-override-perl libtinfo-dev libtool libuchardet0 libxml2 m4 man-db
  po-debconf readline-common sbuild-build-depends-main-dummy sensible-utils
  zlib1g-dev
0 upgraded, 47 newly installed, 0 to remove and 0 not upgraded.
Need to get 23.2 MB of archives.
After this operation, 83.8 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [916 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 flex amd64 2.6.4-6.2 [456 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.0-3 [72.5 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 bison amd64 2:3.5.1+dfsg-1 [963 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libncurses6 amd64 6.1+20191019-1 [102 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 libncurses-dev amd64 6.1+20191019-1 [337 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 libpng16-16 amd64 1.6.37-2 [292 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-1.2 [209 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 libpng-dev amd64 1.6.37-2 [295 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libreadline5 amd64 5.2+dfsg-3+b13 [120 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libtinfo-dev amd64 6.1+20191019-1 [932 B]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libreadline-gplv2-dev amd64 5.2+dfsg-3+b13 [125 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 libslang2 amd64 2.3.2-4 [510 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libslang2-dev amd64 2.3.2-4 [486 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 23.2 MB in 0s (81.6 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 12960 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../05-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../06-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package flex.
Preparing to unpack .../07-flex_2.6.4-6.2_amd64.deb ...
Unpacking flex (2.6.4-6.2) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../08-readline-common_8.0-3_all.deb ...
Unpacking readline-common (8.0-3) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../09-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../10-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../11-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../12-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../13-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../14-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../15-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../16-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../17-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package bison.
Preparing to unpack .../18-bison_2%3a3.5.1+dfsg-1_amd64.deb ...
Unpacking bison (2:3.5.1+dfsg-1) ...
Selecting previously unselected package libtool.
Preparing to unpack .../19-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../20-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../21-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../22-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../23-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../24-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../25-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../26-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../27-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../28-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../29-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../30-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../31-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../32-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../33-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../34-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../35-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package libncurses6:amd64.
Preparing to unpack .../36-libncurses6_6.1+20191019-1_amd64.deb ...
Unpacking libncurses6:amd64 (6.1+20191019-1) ...
Selecting previously unselected package libncurses-dev:amd64.
Preparing to unpack .../37-libncurses-dev_6.1+20191019-1_amd64.deb ...
Unpacking libncurses-dev:amd64 (6.1+20191019-1) ...
Selecting previously unselected package libpng16-16:amd64.
Preparing to unpack .../38-libpng16-16_1.6.37-2_amd64.deb ...
Unpacking libpng16-16:amd64 (1.6.37-2) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../39-zlib1g-dev_1%3a1.2.11.dfsg-1.2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-1.2) ...
Selecting previously unselected package libpng-dev:amd64.
Preparing to unpack .../40-libpng-dev_1.6.37-2_amd64.deb ...
Unpacking libpng-dev:amd64 (1.6.37-2) ...
Selecting previously unselected package libreadline5:amd64.
Preparing to unpack .../41-libreadline5_5.2+dfsg-3+b13_amd64.deb ...
Unpacking libreadline5:amd64 (5.2+dfsg-3+b13) ...
Selecting previously unselected package libtinfo-dev:amd64.
Preparing to unpack .../42-libtinfo-dev_6.1+20191019-1_amd64.deb ...
Unpacking libtinfo-dev:amd64 (6.1+20191019-1) ...
Selecting previously unselected package libreadline-gplv2-dev:amd64.
Preparing to unpack .../43-libreadline-gplv2-dev_5.2+dfsg-3+b13_amd64.deb ...
Unpacking libreadline-gplv2-dev:amd64 (5.2+dfsg-3+b13) ...
Selecting previously unselected package libslang2:amd64.
Preparing to unpack .../44-libslang2_2.3.2-4_amd64.deb ...
Unpacking libslang2:amd64 (2.3.2-4) ...
Selecting previously unselected package libslang2-dev:amd64.
Preparing to unpack .../45-libslang2-dev_2.3.2-4_amd64.deb ...
Unpacking libslang2-dev:amd64 (2.3.2-4) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../46-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libslang2:amd64 (2.3.2-4) ...
Setting up libncurses6:amd64 (6.1+20191019-1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up libpng16-16:amd64 (1.6.37-2) ...
Setting up autopoint (0.19.8.1-10) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-1.2) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up readline-common (8.0-3) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libncurses-dev:amd64 (6.1+20191019-1) ...
Setting up libreadline5:amd64 (5.2+dfsg-3+b13) ...
Setting up libtool (2.4.6-13) ...
Setting up libpng-dev:amd64 (1.6.37-2) ...
Setting up m4 (1.4.18-4) ...
Setting up libreadline-gplv2-dev:amd64 (5.2+dfsg-3+b13) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up bison (2:3.5.1+dfsg-1) ...
update-alternatives: using /usr/bin/bison.yacc to provide /usr/bin/yacc (yacc) in auto mode
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libslang2-dev:amd64 (2.3.2-4) ...
Setting up libtinfo-dev:amd64 (6.1+20191019-1) ...
Setting up flex (2.6.4-6.2) ...
Setting up gettext (0.19.8.1-10) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up po-debconf (1.0.21) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bison_2:3.5.1+dfsg-1 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-10_1:10.0.0~+rc2-1 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 flex_2.6.4-6.2 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-10-dev_1:10.0.0~+rc2-1 libclang-cpp10_1:10.0.0~+rc2-1 libclang1-10_1:10.0.0~+rc2-1 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm10_1:10.0.0~+rc2-1 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpfr6_4.0.2-1 libncurses-dev_6.1+20191019-1 libncurses6_6.1+20191019-1 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-10-dev_1:10.0.0~+rc2-1 libomp5-10_1:10.0.0~+rc2-1 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libpng-dev_1.6.37-2 libpng16-16_1.6.37-2 libquadmath0_10-20200222-1 libreadline-gplv2-dev_5.2+dfsg-3+b13 libreadline5_5.2+dfsg-3+b13 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libslang2_2.3.2-4 libslang2-dev_2.3.2-4 libsmartcols1_2.34-0.1 libss2_1.45.5-2 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo-dev_6.1+20191019-1 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 readline-common_8.0-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-1.2 zlib1g-dev_1:1.2.11.dfsg-1.2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: dbacl
Binary: dbacl
Architecture: any
Version: 1.14.1-2
Maintainer: Debian QA Group <packages@qa.debian.org>
Homepage: http://www.lbreyer.com/gpl.html
Standards-Version: 4.4.0
Vcs-Browser: https://salsa.debian.org/debian/dbacl
Vcs-Git: https://salsa.debian.org/debian/dbacl.git
Build-Depends: debhelper-compat (= 12), libreadline-gplv2-dev, libslang2-dev, libncurses-dev, flex, bison
Package-List:
 dbacl deb text optional arch=any
Checksums-Sha1:
 3f22890ccd61cead34f23911e2834f707b4527dc 906759 dbacl_1.14.1.orig.tar.gz
 60230046e6349008d9f1d7a88255cf32d9b09fc0 5840 dbacl_1.14.1-2.debian.tar.xz
Checksums-Sha256:
 36f9e0023e9945eb165d2f9d95d003cb8ea4b25fc82e348bccf62c4fd9c18293 906759 dbacl_1.14.1.orig.tar.gz
 e37c80e6dfba391202df66f15ae9489431c2e4e6409d80b06095dac0d96e6188 5840 dbacl_1.14.1-2.debian.tar.xz
Files:
 775ad68fccd2c0610a3411dbc28d4874 906759 dbacl_1.14.1.orig.tar.gz
 85773f7678fb2e1aa5d274656010855a 5840 dbacl_1.14.1-2.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCgAdFiEEkjZVexcMh/iCHArDweDZLphvfH4FAl1kX9QACgkQweDZLphv
fH4YxxAA9MF8Nht5I5AuMOc16Tzp/yXcqLP7yupxm4BExnd4kvEzsVtEs93jFs6w
q0N+faFhTC3wsTyZoSq5Z2CNUbv65HLXZdwOBAd0WRPEnDak2Y/pjWkoYJVg90ep
rUO2AtRqgZt1DH5PriQ39G5R4b+UmmTF/gUDr5xcLNRIkD1Lc1ubpLsOGA+risi8
d3ALfGkGyLIlAVOgggz1w1KwPS7wtgq/pctItwDiouuDyfIJU3AqXWmp45acWLBN
H/rdhK2ZPx9TJ+VEJ2yKexHVgXQA3oEBYF7pIuuDis/BKU4604xzI6c4KKeX9M2F
gOclOuSTMqfUCD9ibsps18q5KLRrCI4pxk+9XsAe5ypaHH4PTzmAikroF+vcclzM
UlNGPXimGrKSM69ZwXk2bQC/M1u2TAdwOGmUPE5vOBmJ3eUhdlEi8wHPC7iV+3Nv
b4J+7AijLlePWdKVHaT7/kss9vu6PhTJKeI8DbghdXLPdXYDKFzGbGY0iyeLmaYa
gDcNT30RVSFwupaSQvt+dVG32Nv1B0jR3Mww3/QxUWlbZMY7kjJLhje9nZFcs6S2
70a7v/FhdI4GaotA3kv7pjG9YsnGgv4dN/Cb19uL21YQ7+45ojIYSd9i1uvZJjJZ
jVFrhRZ/MB7oLOLz+JWBfycXDyXTOFDq8AJIItvO5QdC+lshHw4=
=uwmN
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Mon Aug 26 22:40:20 2019 UTC
gpgv:                using RSA key 9236557B170C87F8821C0AC3C1E0D92E986F7C7E
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./dbacl_1.14.1-2.dsc
dpkg-source: info: extracting dbacl in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking dbacl_1.14.1.orig.tar.gz
dpkg-source: info: unpacking dbacl_1.14.1-2.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying 00-fix-man-page-paths.patch
dpkg-source: info: applying 01-fix-bashisms.patch
dpkg-source: info: applying 02-fix-spelling.patch
dpkg-source: info: applying 03-fix-find-param.patch
dpkg-source: info: applying 04-fix-ldflags.patch
dpkg-source: info: applying 05-locale-h.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-0cee23ab-1b3f-4822-a224-b1fa1dc1807d
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package dbacl
dpkg-buildpackage: info: source version 1.14.1-2
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Fabian Wolff <fabi.wolff@arcor.de>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_clean
 debian/rules build
dh build
   dh_update_autotools_config
   dh_autoreconf
aclocal: warning: autoconf input should be named 'configure.ac', not 'configure.in'
automake: warning: autoconf input should be named 'configure.ac', not 'configure.in'
configure.in:6: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated.  For more info, see:
configure.in:6: https://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation
configure.in:5: installing 'config/compile'
automake: warning: autoconf input should be named 'configure.ac', not 'configure.in'
src/Makefile.am:21: warning: 'INCLUDES' is the old name for 'AM_CPPFLAGS' (or '*_CPPFLAGS')
src/Makefile.am:59: warning: deprecated feature: target 'pcheck' overrides 'pcheck$(EXEEXT)'
src/Makefile.am:59: change your target to read 'pcheck$(EXEEXT)'
/usr/share/automake-1.16/am/program.am: target 'pcheck$(EXEEXT)' was defined here
src/Makefile.am:54:   while processing program 'pcheck'
parallel-tests: installing 'config/test-driver'
   dh_auto_configure
	./configure --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libdir=\${prefix}/lib/x86_64-linux-gnu --runstatedir=/run --disable-maintainer-mode --disable-dependency-tracking
configure: WARNING: unrecognized options: --disable-maintainer-mode
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking target system type... x86_64-pc-linux-gnu
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports the include directive... yes (GNU style)
checking whether make supports nested variables... yes
checking dependency style of gcc... none
checking for gcc... (cached) gcc
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to accept ISO C89... (cached) none needed
checking whether gcc understands -c and -o together... (cached) yes
checking for flex... flex
checking lex output file root... lex.yy
checking lex library... none needed
checking whether yytext is a pointer... no
checking for bison... bison -y
checking for log in -lm... yes
checking for initscr in -lncurses... yes
checking for readline in -lreadline... yes
checking for SLsmg_init_smg in -lslang... yes
checking for ANSI C header files... (cached) yes
checking features.h usability... yes
checking features.h presence... yes
checking for features.h... yes
checking langinfo.h usability... yes
checking langinfo.h presence... yes
checking for langinfo.h... yes
checking for unistd.h... (cached) yes
checking sys/mman.h usability... yes
checking sys/mman.h presence... yes
checking for sys/mman.h... yes
checking mman.h usability... no
checking mman.h presence... no
checking for mman.h... no
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking wchar.h usability... yes
checking wchar.h presence... yes
checking for wchar.h... yes
checking wctype.h usability... yes
checking wctype.h presence... yes
checking for wctype.h... yes
checking for an ANSI C-conforming const... yes
checking for size_t... yes
checking whether mbrtowc and mbstate_t are properly declared... yes
checking for stdlib.h... (cached) yes
checking for unistd.h... (cached) yes
checking for sys/param.h... yes
checking for getpagesize... yes
checking for working mmap... yes
checking for vprintf... yes
checking for _doprnt... no
checking for getpagesize... (cached) yes
checking for madvise... yes
checking for sigaction... yes
checking for working posix_memalign... yes
checking for wcstol... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating doc/Makefile
config.status: creating src/Makefile
config.status: creating src/tests/Makefile
config.status: creating man/Makefile
config.status: creating ts/Makefile
config.status: creating TREC/Makefile
config.status: creating contrib/Makefile
config.status: creating doc/chess/Makefile
config.status: creating src/config.h
config.status: executing depfiles commands
configure: WARNING: unrecognized options: --disable-maintainer-mode
   debian/rules override_dh_auto_build
make[1]: Entering directory '/<<PKGBUILDDIR>>'
cd src && flex -o risk-lexer.c risk-lexer.l && cd ..
cd src && bison -o risk-parser.c risk-parser.y && cd ..
dh_auto_build
	make -j4
make[2]: Entering directory '/<<PKGBUILDDIR>>'
Making all in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc'
Making all in chess
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Nothing to be done for 'all'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[4]: Nothing to be done for 'all-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc'
Making all in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/src'
make  all-recursive
make[4]: Entering directory '/<<PKGBUILDDIR>>/src'
Making all in .
make[5]: Entering directory '/<<PKGBUILDDIR>>/src'
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o dbacl.o dbacl.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o fram.o fram.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o catfun.o catfun.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o fh.o fh.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o util.o util.c
fh.c:492:5: warning: ignoring return value of function declared with pure attribute [-Wunused-value]
    strcmp(textbuf, "\r\n\r\n");
    ^~~~~~ ~~~~~~~~~~~~~~~~~~~
1 warning generated.
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o probs.o probs.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o jenkins.o jenkins.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o jenkins2.o jenkins2.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o mtherr.o mtherr.c
jenkins2.c:208:22: warning: unused variable 'd' [-Wunused-variable]
  register ub8 a,b,c,d,len;
                     ^
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o igam.o igam.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o gamma.o gamma.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o const.o const.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o polevl.o polevl.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o isnan.o isnan.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o ndtr.o ndtr.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -DMBW_MB -c ./mbw.c -o mb.o
1 warning generated.
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -DMBW_WIDE -c ./mbw.c -o wc.o
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o bayesol.o bayesol.c
./mbw.c:376:38: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                             ~~~~~~~~^~~~~
                             (void *)0
./mbw.h:72:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) x
                   ^
./mbw.c:376:63: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                                                      ~~~~~~~~^~~~~
                                                      (void *)0
./mbw.h:72:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) x
                   ^
./mbw.c:390:38: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                             ~~~~~~~~^~~~~
                             (void *)0
./mbw.h:72:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) x
                   ^
./mbw.c:390:63: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                                                      ~~~~~~~~^~~~~
                                                      (void *)0
./mbw.h:72:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) x
                   ^
./mbw.c:376:30: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                             ^~~~~~~~~~~~~
                             (void *)0
./mbw.h:25:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) L##x
                   ^
<scratch space>:283:1: note: expanded from here
L'\0'
^
./mbw.c:376:55: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                                                      ^~~~~~~~~~~~~
                                                      (void *)0
./mbw.h:25:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) L##x
                   ^
<scratch space>:284:1: note: expanded from here
L'\0'
^
./mbw.c:390:30: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                             ^~~~~~~~~~~~~
                             (void *)0
./mbw.h:25:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) L##x
                   ^
<scratch space>:286:1: note: expanded from here
L'\0'
^
./mbw.c:390:55: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
      if( (s != 0) || (s1 == mbw_lit('\0')) || (s2 == mbw_lit('\0')) ) { 
                                                      ^~~~~~~~~~~~~
                                                      (void *)0
./mbw.h:25:20: note: expanded from macro 'mbw_lit'
#define mbw_lit(x) L##x
                   ^
<scratch space>:287:1: note: expanded from here
L'\0'
^
./mbw.c:2739:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("aacute"),6,0xe1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2739:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2742:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("acute"),5,0xb4) else ENTITY(mbw_lit("acirc"),4,0xe2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2742:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2742:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("acute"),5,0xb4) else ENTITY(mbw_lit("acirc"),4,0xe2);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2742:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2745:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("aelig"),5,0xe6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2745:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2748:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("agrave"),6,0xe0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2748:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2751:7: warning./mbw.c:2739:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("aacute"),6,0xe1);
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note:       ENTITY(mbw_lit("alpha"),5,0x03b1) else ENTITY(mbw_lit("alefsym"),7,0x2135);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38./mbw.c: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2739:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38:7: note: use array indexing to silence this warning
 note: expanded from macro 'mbw_strncmp'
./mbw.c:2733:55: #define mbw_strncmp(x,y,z) strncmp(x,y,z)note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

                                     ^
./mbw.c:2742:7: ./mbw.c:2751:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("acute"),5,0xb4) else ENTITY(mbw_lit("acirc"),4,0xe2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38
                                                      ^
: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2742:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c:2751:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("alpha"),5,0x03b1) else ENTITY(mbw_lit("alefsym"),7,0x2135);
./mbw.c                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2742::44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("acute"),5,0xb4) else ENTITY(mbw_lit("acirc"),4,0xe2);
2733:55: note: expanded from macro 'ENTITY'
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39::38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2742:44: note38: note: expanded from macro 'mbw_strncmp'
: use array indexing to silence this warning
./mbw.c:2733:55:#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
 note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2751:46: note: use array indexing to silence this warning./mbw.c:2745:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("aelig"),5,0xe6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:
./mbw.c:2733:552733: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39::38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
55./mbw.c:2745:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \2748:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("agrave"),6,0xe0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:
                                                      ^
2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2748:7:./mbw.c:2754:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
 note: use array indexing to silence this warning
./mbw.c:2733:55      ENTITY(mbw_lit("amp"),3,0x26);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
                                                      ^
:2733:55: note./mbw.c:2751:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("alpha"),5,0x03b1) else ENTITY(mbw_lit("alefsym"),7,0x2135);: expanded from macro 'ENTITY'

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
:38: note: expanded from macro 'mbw_strncmp'./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.c
                                     ^
:2751:7: note: use array indexing to silence this warning
./mbw.c:2733./mbw.c:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:2754:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
2751:46: warning#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("alpha"),5,0x03b1) else ENTITY(mbw_lit("alefsym"),7,0x2135);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:./mbw.c:2757:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
2751:46: note: use array indexing to silence this warning      ENTITY(mbw_lit("ang"),3,0x2220) else ENTITY(mbw_lit("and"),3,0x2227);
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2754:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("amp"),3,0x26);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55:./mbw.c note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
:2733                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39::38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
55./mbw.c:2754:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: note: expanded from macro 'ENTITY'
./mbw.c:2757#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ang"),3,0x2220) else ENTITY(mbw_lit("and"),3,0x2227);

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: :note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
38:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39 :38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
note./mbw.c:2757:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: expanded from macro 'mbw_strncmp'
./mbw.c#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:2757:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c
      ENTITY(mbw_lit("ang"),3,0x2220) else ENTITY(mbw_lit("and"),3,0x2227);
:2757:7: note                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c: :2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
use array indexing to silence this warning
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: ./mbw.c:2733:55: note: expanded from macro 'ENTITY'
note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:2757:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2757:44: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]
:2760:7: warning      ENTITY(mbw_lit("ang"),3,0x2220) else ENTITY(mbw_lit("and"),3,0x2227);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("aring"),5,0xe5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: ./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2760:7: 
note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
                                     ^
./mbw.c:2763:./mbw.c:2757:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("asymp"),5,0x2248);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:
                                                      ^
38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2763:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
./mbw.c                                                      ^
:2760:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2766:7:      ENTITY(mbw_lit("aring"),5,0xe5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("atilde"),6,0xe3);
./mbw.c:2733:55      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c::2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:note: expanded from macro 'ENTITY'
38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~./mbw.c:2766:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

./mbw.h:./mbw.c:2769:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("auml"),4,0xe4);
86:38:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733 note: expanded from macro 'mbw_strncmp'
:55: note: #define mbw_strncmp(x,y,z) strncmp(x,y,z)expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38:
                                     ^
 note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2769:./mbw.c:2760:7: note: use array indexing to silence this warning
./mbw.c:2733:7: note: 55: note: expanded from macro 'ENTITY'
use array indexing to silence this warning
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:./mbw.c:2763:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
2777:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("asymp"),5,0x2248);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ENTITY(mbw_lit("Aacute"),6,0xc1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55
: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2777:7: note: use array indexing to silence this warning
./mbw.c:2733:55:note note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:2780:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Acirc"),5,0xc2);#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2780:7: 2763:7: note: use array indexing to silence this warning
./mbw.c:2733:note: use array indexing to silence this warning
55: note./mbw.c:2733: expanded from macro 'ENTITY'
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2783:7: ./mbw.c:2766:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("AElig"),5,0xc6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733      ENTITY(mbw_lit("atilde"),6,0xe3);:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
./mbw.c                                     ^
:2733./mbw.c:2783:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:55: note: expanded from macro 'ENTITY'
./mbw.c:2786:7#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("Agrave"),6,0xc0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:2786:7: note: use array indexing to silence this warning
./mbw.c:2733:55./mbw.c:2766:7: note: use array indexing to silence this warning
./mbw.c:2733:: note: expanded from macro 'ENTITY'55
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: note: expanded from macro 'ENTITY'
./mbw.c:2789#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Alpha"),5,0x0391);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
:2769:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                     ^
      ENTITY(mbw_lit("auml"),4,0xe4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2789:7: note: use array indexing to silence this warning
./mbw.c:2733:55:: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2792:7#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2769:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ENTITY(mbw_lit("Aring"),5,0xc5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2792:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
                                                      ^
./mbw.c:2795:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Atilde"),6,0xc3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: ./mbw.cnote: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2795:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
2777:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c:2798:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Auml"),4,0xc4);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("Aacute"),6,0xc1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2798:2733:55: note: expanded from macro 'ENTITY'
:7:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
 #define mbw_strncmp(x,y,z) strncmp(x,y,z)note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c
                                     ^
:2806./mbw.c:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("bdquo"),5,0x201e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2806:7: note: use array indexing to silence this warning
./mbw.c:2733:55: 2777:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
note: expanded from macro 'ENTITY'#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

./mbw.c                                                      ^
:2809:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("beta"),4,0x03b2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~./mbw.c:2780:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Acirc"),5,0xc2);./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2809:7: 
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: use array indexing to silence this warning
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2812:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                     ^

./mbw.c      ENTITY(mbw_lit("bull"),4,0x2022);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2812::7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
2780:7: note: use array indexing to silence this warning
./mbw.c:2820:7: ./mbw.cwarning:: 2733adding 'int' to a string does not append to the string [-Wstring-plus-int]:
55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Beta"),4,0x0392);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2820:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c
:2783:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("AElig"),5,0xc6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2823:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2783:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Brvbar"),6,0xa6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2823:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2786:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
      ENTITY(mbw_lit("Agrave"),6,0xc0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2831:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2786:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'      ENTITY(mbw_lit("cap"),3,0x2229);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2831:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2789:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Alpha"),5,0x0391);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2834:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2789:7: note: use array indexing to silence this warning
      ENTITY(mbw_lit("ccedil"),6,0xe7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2834:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2792:7: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \warning
:                                                       ^adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Aring"),5,0xc5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
./mbw.c                                     ^:
2837:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("cent"),4,0xa2) else ENTITY(mbw_lit("cedil"),5,0xb8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2792:7: note: use array indexing to silence this warning
./mbw.c./mbw.c::27332733::5555::  notenote: : expanded from macro 'ENTITY'expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2837:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2795:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Atilde"),6,0xc3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: ./mbw.cexpanded from macro 'mbw_strncmp':
2837:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("cent"),4,0xa2) else ENTITY(mbw_lit("cedil"),5,0xb8);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2795:7: note: use array indexing to silence this warning
./mbw.c:2733:55#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~note
: expanded from macro 'ENTITY'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)

                                                      ^                                     ^

./mbw.c:2837:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2798:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Auml"),4,0xc4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.c:./mbw.h2840::867::38 :warning : noteadding 'int' to a string does not append to the string [-Wstring-plus-int]: 
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("chi"),3,0x03c7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2798:7: note: use array indexing to silence this warning
./mbw.c:2733#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
55                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:
 note: expanded from macro 'ENTITY'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
./mbw.c:2840:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2806:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("bdquo"),5,0x201e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2843:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:      ENTITY(mbw_lit("circ"),4,0x02c6);38
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'mbw_strncmp'
./mbw.c:2733:55: #define mbw_strncmp(x,y,z) strncmp(x,y,z)note
:                                      ^expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:./mbw.c38::2806 :note7: :expanded from macro 'mbw_strncmp' 
note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2843:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2809:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("beta"),4,0x03b2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:./mbw.c2733::552846:: 7note::  expanded from macro 'ENTITY'warning
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("clubs"),5,0x2663);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note./mbw.c: :expanded from macro 'mbw_strncmp'2733
:55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2809:7: note: use array indexing to silence this warning
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^./mbw.c
:2846:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2812:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("bull"),4,0x2022);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2849:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("copy"),4,0xa9) else ENTITY(mbw_lit("cong"),4,0x2245);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38./mbw.c:: 2733note:: 55expanded from macro 'mbw_strncmp':
 note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2812:7: #define mbw_strncmp(x,y,z) wcsncmp(x,y,z)note
:                                      ^use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2849:7#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
                                                       ^note
: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2820:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2849:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Beta"),4,0x0392);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("copy"),4,0xa9) else ENTITY(mbw_lit("cong"),4,0x2245);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~expanded from macro 'ENTITY'

./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2820:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2849:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2823:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2852:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Brvbar"),6,0xa6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:      ENTITY(mbw_lit("crarr"),5,0x21b5);55
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: #define mbw_strncmp(x,y,z) strncmp(x,y,z)note
:                                      ^expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2823:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note./mbw.c: :expanded from macro 'ENTITY'2852
:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2855:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2831:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("cap"),3,0x2229);      ENTITY(mbw_lit("curren"),6,0xa4) else ENTITY(mbw_lit("cup"),3,0x222a);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c./mbw.c::27332733::5555::  notenote: : expanded from macro 'ENTITY'expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~

./mbw.h./mbw.h::8639::3838::  notenote: : expanded from macro 'mbw_strncmp'expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^                                     ^

./mbw.c:2855./mbw.c::72831:: 7note::  use array indexing to silence this warningnote
: use array indexing to silence this warning
./mbw.c:2733./mbw.c::552733:: 55note::  expanded from macro 'ENTITY'note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
./mbw.c:2855:45: warning./mbw.c: :adding 'int' to a string does not append to the string [-Wstring-plus-int]2834
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ccedil"),6,0xe7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("curren"),6,0xa4) else ENTITY(mbw_lit("cup"),3,0x222a);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \86
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~38
: note: expanded from macro 'mbw_strncmp'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2834:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c2733::285555::45 :note : noteexpanded from macro 'ENTITY': 
use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2837:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2863:7: warning:       ENTITY(mbw_lit("cent"),4,0xa2) else ENTITY(mbw_lit("cedil"),5,0xb8);adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55:      ENTITY(mbw_lit("Ccedil"),6,0xc7); 
note      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:#define mbw_strncmp(x,y,z) strncmp(x,y,z)38
:                                     ^ 
note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2837:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2863:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2837:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2866:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("cent"),4,0xa2) else ENTITY(mbw_lit("cedil"),5,0xb8);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("Chi"),3,0x03a7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.h
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~86
:38: note: expanded from macro 'mbw_strncmp'./mbw.h
:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2837:43: note: ./mbw.cuse array indexing to silence this warning:
2866:7: note./mbw.c: :use array indexing to silence this warning2733
:55: note: ./mbw.cexpanded from macro 'ENTITY':
2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2840:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2874:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("chi"),3,0x03c7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note:       ENTITY(mbw_lit("darr"),4,0x2193) else ENTITY(mbw_lit("dagger"),6,0x2020);expanded from macro 'ENTITY'

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.h
:                                     ^39
:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2840:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2874:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2843:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2874:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("circ"),4,0x02c6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("darr"),4,0x2193) else ENTITY(mbw_lit("dagger"),6,0x2020);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h#define mbw_strncmp(x,y,z) strncmp(x,y,z):
39                                     ^:
38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2843:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c2874::273345::55 :note : noteuse array indexing to silence this warning: 
expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2846:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2877:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("clubs"),5,0x2663);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("dArr"),4,0x21d3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \expanded from macro 'mbw_strncmp'

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2846:7: note: use array indexing to silence this warning
./mbw.c./mbw.c::27332877::557::  notenote: : expanded from macro 'ENTITY'use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2849:7./mbw.c:: 2880warning:: 7adding 'int' to a string does not append to the string [-Wstring-plus-int]:
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("delta"),5,0x03b4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("copy"),4,0xa9) else ENTITY(mbw_lit("cong"),4,0x2245);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2880:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2883:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("divide"),6,0xf7) else ENTITY(mbw_lit("diams"),5,0x2666);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2883:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2883:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("divide"),6,0xf7) else ENTITY(mbw_lit("diams"),5,0x2666);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2883:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2891:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Dagger"),6,0x2021);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2891:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2894:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Deg"),3,0xb0) else ENTITY(mbw_lit("Delta"),5,0x0394);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2894:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2894:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Deg"),3,0xb0) else ENTITY(mbw_lit("Delta"),5,0x0394);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2894:42: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2902:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("eacute"),6,0xe9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2902:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2905:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ecirc"),5,0xea);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2905:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2908:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("egrave"),6,0xe8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2908:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2911:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("empty"),5,0x2205) else ENTITY(mbw_lit("emsp"),4,0x2003);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2911:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2911:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("empty"),5,0x2205) else ENTITY(mbw_lit("emsp"),4,0x2003);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2911:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2914:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ensp"),4,0x2002);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2914:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2917:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("epsilon"),7,0x03b5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2917:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2920:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("equiv"),5,0x2261);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2920:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2923:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("eth"),3,0xf0) else ENTITY(mbw_lit("eta"),3,0x03b7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2923:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2923:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("eth"),3,0xf0) else ENTITY(mbw_lit("eta"),3,0x03b7);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2923:42: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2926:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("euml"),4,0xeb) else ENTITY(mbw_lit("euro"),4,0x20ac);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2926:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2926:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("euml"),4,0xeb) else ENTITY(mbw_lit("euro"),4,0x20ac);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2926:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2929:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("exist"),5,0x2203);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \86:38: note: expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38./mbw.c:2849:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \: 
                                                      ^
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2929:7./mbw.c:2849:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: note:       ENTITY(mbw_lit("copy"),4,0xa9) else ENTITY(mbw_lit("cong"),4,0x2245);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
use array indexing to silence this warning./mbw.c:2733:55: note: expanded from macro 'ENTITY'

./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:2733#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:55: note./mbw.c:2849:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2852:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("crarr"),5,0x21b5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2852:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2937:7: warning: ./mbw.c:2855:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("curren"),6,0xa4) else ENTITY(mbw_lit("cup"),3,0x222a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Eacute"),6,0xc9);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

./mbw.c./mbw.c:2855:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.c:2855:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.h:39      ENTITY(mbw_lit("curren"),6,0xa4) else ENTITY(mbw_lit("cup"),3,0x222a);:
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
38./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \: 
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)./mbw.c:2855:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2937:7: note: use array indexing to silence this warning
./mbw.c:2863:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c      ENTITY(mbw_lit("Ccedil"),6,0xc7);:
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2733./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:55:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
note#define mbw_strncmp(x,y,z) strncmp(x,y,z): 
                                     ^
expanded from macro 'ENTITY'
./mbw.c:2863:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
                                                      ^
./mbw.c:2866:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Chi"),3,0x03a7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2866:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2940#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ecirc"),5,0xca);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2874:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:2733:55      ENTITY(mbw_lit("darr"),4,0x2193) else ENTITY(mbw_lit("dagger"),6,0x2020);:
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c :2733:55: note: expanded from macro 'ENTITY'
note: expanded from macro 'ENTITY'#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c:2874:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2874:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^      ENTITY(mbw_lit("darr"),4,0x2193) else ENTITY(mbw_lit("dagger"),6,0x2020);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:./mbw.c:2874:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
2940:7#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: note: use array indexing to silence this warning
./mbw.c:2733:55: note: ./mbw.c:2877:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
expanded from macro 'ENTITY'
      ENTITY(mbw_lit("dArr"),4,0x21d3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                     ^

                                                      ^
./mbw.c:2877:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2880:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("delta"),5,0x03b4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
2943:7:./mbw.c:2880:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 warning: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Egrave"),6,0xc8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2883:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:2733:55      ENTITY(mbw_lit("divide"),6,0xf7) else ENTITY(mbw_lit("diams"),5,0x2666);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
expanded from macro 'ENTITY'#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

./mbw.c:2883:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'./mbw.c:2883:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("divide"),6,0xf7) else ENTITY(mbw_lit("diams"),5,0x2666);#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2883:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \2943
                                                      ^
:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: ./mbw.c:2891:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Dagger"),6,0x2021);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
                                                      ^
./mbw.c:2891:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2894:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Deg"),3,0xb0) else ENTITY(mbw_lit("Delta"),5,0x0394);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2946#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:7#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
: warning: ./mbw.c:2894:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Epsilon"),7,0x0395);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55./mbw.c:2894:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: note:       ENTITY(mbw_lit("Deg"),3,0xb0) else ENTITY(mbw_lit("Delta"),5,0x0394);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
expanded from macro 'ENTITY'./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~./mbw.c:2894:42: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

./mbw.h#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2902:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("eacute"),6,0xe9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \2946
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z)7
                                     ^
: note: ./mbw.c:2902:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
use array indexing to silence this warning
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2905:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("ecirc"),5,0xea);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c                                                      ^:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2905:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2949:7:./mbw.c:2908:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
 warning      ENTITY(mbw_lit("egrave"),6,0xe8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
: ./mbw.c:2733:55: note: expanded from macro 'ENTITY'
adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("ETH"),3,0xd0);
./mbw.c      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~:2908:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.c:2911:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.h:39:      ENTITY(mbw_lit("empty"),5,0x2205) else ENTITY(mbw_lit("emsp"),4,0x2003);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
38./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)./mbw.c:2911:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

                                     ^#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

./mbw.c:2949:7: ./mbw.cnote:2911:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: use array indexing to silence this warning
      ENTITY(mbw_lit("empty"),5,0x2205) else ENTITY(mbw_lit("emsp"),4,0x2003);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \55
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z) 
                                     ^
note: expanded from macro 'ENTITY'
./mbw.c:2911:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2914:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ensp"),4,0x2002);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c./mbw.c:2914:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2952:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Eta"),3,0x0397);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2917:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c      ENTITY(mbw_lit("epsilon"),7,0x03b5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
2733:55#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
: #define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
note: expanded from macro 'ENTITY'
./mbw.c:2917:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2920:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("equiv"),5,0x2261);#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c./mbw.c:2920:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2952:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \7
                                                      ^
: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2923:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("eth"),3,0xf0) else ENTITY(mbw_lit("eta"),3,0x03b7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:2733:55: note: expanded from macro 'ENTITY'

                                                      ^#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2923:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2923:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:      ENTITY(mbw_lit("eth"),3,0xf0) else ENTITY(mbw_lit("eta"),3,0x03b7);2955
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:7:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
 #define mbw_strncmp(x,y,z) strncmp(x,y,z)warning
                                     ^
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2923:42: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Euml"),4,0xcb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note./mbw.c:2926:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("euml"),4,0xeb) else ENTITY(mbw_lit("euro"),4,0x20ac);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.c:2926:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.h:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^./mbw.c:2926:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("euml"),4,0xeb) else ENTITY(mbw_lit("euro"),4,0x20ac);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:2955:7./mbw.c::2926:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2929:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ENTITY(mbw_lit("exist"),5,0x2203);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2929:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c:2937:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:2963      ENTITY(mbw_lit("Eacute"),6,0xc9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
7: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
warning#define mbw_strncmp(x,y,z) strncmp(x,y,z): 
                                     ^
adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2937:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("fnof"),4,0x0192);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c:2940:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Ecirc"),5,0xca);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:./mbw.c:2940:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
39:38#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
                                                      ^
 note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2943:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Egrave"),6,0xc8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
2963:7:./mbw.c:2943:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2946:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("Epsilon"),7,0x0395);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2946:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c:2949:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:      ENTITY(mbw_lit("ETH"),3,0xd0);2966
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c::2733:55: note: expanded from macro 'ENTITY'
7: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \warning
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
: #define mbw_strncmp(x,y,z) strncmp(x,y,z)adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                     ^

./mbw.c:2949:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("forall"),6,0x2200);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c:2952:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Eta"),3,0x0397);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2966:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2969:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("frac14"),6,0xbc) else ENTITY(mbw_lit("frac12"),6,0xbd) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2969:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2969:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("frac14"),6,0xbc) else ENTITY(mbw_lit("frac12"),6,0xbd) else
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2969:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2970:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("frac34"),6,0xbe) else ENTITY(mbw_lit("frasl"),5,0x2044);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2970:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2970:40: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("frac34"),6,0xbe) else ENTITY(mbw_lit("frasl"),5,0x2044);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2970:40: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2982:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("gamma"),5,0x3b3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2982:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2985:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ge"),2,0x2265);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2985:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2988:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("gt"),2,0x3e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2988:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2996:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Gamma"),5,0x0393);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2996:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3004:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("harr"),4,0x2194);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3004:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3007:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("hArr"),4,0x21d4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3007:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3010:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("hearts"),6,0x2665) else ENTITY(mbw_lit("hellip"),6,0x2026);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3010:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3010:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("hearts"),6,0x2665) else ENTITY(mbw_lit("hellip"),6,0x2026);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3010:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3022:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("iacute"),6,0xed);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3022:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3025:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("icirc"),5,0xee);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \3025
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:7#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
: note: use array indexing to silence this warning
./mbw.c:2952:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \2733
                                                      ^
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2955:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Euml"),4,0xcb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2955:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3028:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c:2963:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("fnof"),4,0x0192);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("iexcl"),5,0xa1);#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2963:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2966:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("forall"),6,0x2200);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.h
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:39#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:38: ./mbw.cnote:2966:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:2969:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3028      ENTITY(mbw_lit("frac14"),6,0xbc) else ENTITY(mbw_lit("frac12"),6,0xbd) else:
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
7./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
: #define mbw_strncmp(x,y,z) strncmp(x,y,z)use array indexing to silence this warning
                                     ^

./mbw.c./mbw.c:2969:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
55: note: expanded from macro 'ENTITY'
./mbw.c:2969:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^      ENTITY(mbw_lit("frac14"),6,0xbc) else ENTITY(mbw_lit("frac12"),6,0xbd) else

                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2969:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2970:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c        ENTITY(mbw_lit("frac34"),6,0xbe) else ENTITY(mbw_lit("frasl"),5,0x2044);:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
3031:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \7
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c:2970:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("igrave"),6,0xec);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c:2970:40: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:2733:        ENTITY(mbw_lit("frac34"),6,0xbe) else ENTITY(mbw_lit("frasl"),5,0x2044);55
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
: #define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
expanded from macro 'ENTITY'
./mbw.c:2970:40: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note./mbw.c:2982:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: expanded from macro 'mbw_strncmp'      ENTITY(mbw_lit("gamma"),5,0x3b3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

                                     ^
./mbw.c:2982:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3031:7: note./mbw.c:2985:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
: use array indexing to silence this warning      ENTITY(mbw_lit("ge"),2,0x2265);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
2733#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:55: note./mbw.c: :2985:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2988:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("gt"),2,0x3e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2988:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3034:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c:2996:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Gamma"),5,0x0393);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("image"),5,0x2111);#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2996:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
                                                      ^
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c:3004:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~      ENTITY(mbw_lit("harr"),4,0x2194);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.h:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
39#define mbw_strncmp(x,y,z) strncmp(x,y,z):
                                     ^
38: ./mbw.cnote:3004:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3007:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:      ENTITY(mbw_lit("hArr"),4,0x21d4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3034./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:7:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
 #define mbw_strncmp(x,y,z) strncmp(x,y,z)note
                                     ^
: use array indexing to silence this warning
./mbw.c:3007:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
:3010:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                                      ^
      ENTITY(mbw_lit("hearts"),6,0x2665) else ENTITY(mbw_lit("hellip"),6,0x2026);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3010:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c::3010:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
3037:7:      ENTITY(mbw_lit("hearts"),6,0x2665) else ENTITY(mbw_lit("hellip"),6,0x2026);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ./mbw.c:2733:55: note: expanded from macro 'ENTITY'
warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3010:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("infin"),5,0x221e) else ENTITY(mbw_lit("int"),3,0x222b);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3022:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("iacute"),6,0xed);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

./mbw.h./mbw.c::3022:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
39:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \38
                                                      ^
: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3025:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("icirc"),5,0xee);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:3037:7./mbw.c::3025:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3028:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ENTITY(mbw_lit("iexcl"),5,0xa1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3028:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3037:46:./mbw.c:3031:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
       ENTITY(mbw_lit("igrave"),6,0xec);warning
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c: :2733:55: note: expanded from macro 'ENTITY'
adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("infin"),5,0x221e) else ENTITY(mbw_lit("int"),3,0x222b);./mbw.c:3031:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3034:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("image"),5,0x2111);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.h:39./mbw.c:3034:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3037:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3037:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("infin"),5,0x221e) else ENTITY(mbw_lit("int"),3,0x222b);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:3040:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("iota"),4,0x03b9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c::27333037::557::  notenote: : expanded from macro 'ENTITY'use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
note                                                      ^: 
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3040:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3037:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("infin"),5,0x221e) else ENTITY(mbw_lit("int"),3,0x222b);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:3043:7: warning: #define mbw_strncmp(x,y,z) strncmp(x,y,z)adding 'int' to a string does not append to the string [-Wstring-plus-int]

                                     ^
      ENTITY(mbw_lit("iquest"),6,0xbf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3037:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3043:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3040:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("iota"),4,0x03b9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.c
:                                     ^3046
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("isin"),4,0x2208);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3040:7: note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55::2733 :note55: :expanded from macro 'ENTITY' 
note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~

./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3046:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3043:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("iquest"),6,0xbf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3049:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("iuml"),4,0xef);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3043:7: note: use array indexing to silence this warning
./mbw.c:2733./mbw.c::552733:: 55note::  expanded from macro 'ENTITY'note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3049:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
                                                      ^3046
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("isin"),4,0x2208);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3046:7./mbw.c:: 3057note:: 7use array indexing to silence this warning:
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Iacute"),6,0xcd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3057:7: note: use array indexing to silence this warning
./mbw.c:3049:7./mbw.c:: 2733warning:: 55adding 'int' to a string does not append to the string [-Wstring-plus-int]:
 note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("iuml"),4,0xef);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3049:7: note: use array indexing to silence this warning
./mbw.c:3060./mbw.c::72733:: 55warning::  adding 'int' to a string does not append to the string [-Wstring-plus-int]note
: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Icirc"),5,0xce);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3060:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3057:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Iacute"),6,0xcd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3063:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3057:7: note: use array indexing to silence this warning
./mbw.c:      ENTITY(mbw_lit("Igrave"),6,0xcc);2733
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~55
: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3063:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: ./mbw.cexpanded from macro 'ENTITY':
3060:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^      ENTITY(mbw_lit("Icirc"),5,0xce);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3060:7./mbw.c: :note3066: :use array indexing to silence this warning7
: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Iota"),4,0x0399);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3066:7: note: ./mbw.cuse array indexing to silence this warning:
3063:7: warning./mbw.c: :adding 'int' to a string does not append to the string [-Wstring-plus-int]2733
:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Igrave"),6,0xcc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3063:7: note: use array indexing to silence this warning
./mbw.c:3069:7./mbw.c:: 2733warning:: 55adding 'int' to a string does not append to the string [-Wstring-plus-int]:
 note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Iuml"),4,0xcf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3069:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c2733::553066:: 7note::  expanded from macro 'ENTITY'warning
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Iota"),4,0x0399);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3066:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3085:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("kappa"),5,0x03ba);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3069:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3085:7: note: use array indexing to silence this warning      ENTITY(mbw_lit("Iuml"),4,0xcf);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3069:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3093:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Kappa"),5,0x039a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3085:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("kappa"),5,0x03ba);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3093:7: note: use array indexing to silence this warning
./mbw.c./mbw.c::27332733::5555::  notenote: : expanded from macro 'ENTITY'expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~

                                                      ^
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3085:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3101:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lambda"),6,0x03bb) else ENTITY(mbw_lit("lang"),4,0x2329);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:3093:7: warning#define mbw_strncmp(x,y,z) wcsncmp(x,y,z): 
adding 'int' to a string does not append to the string [-Wstring-plus-int]                                     ^

      ENTITY(mbw_lit("Kappa"),5,0x039a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c::31012733::755::  notenote: : use array indexing to silence this warningexpanded from macro 'ENTITY'

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                                                       ^expanded from macro 'mbw_strncmp'

#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3093:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3101:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lambda"),6,0x03bb) else ENTITY(mbw_lit("lang"),4,0x2329);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3101:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3101:47: note: use array indexing to silence this warning
      ENTITY(mbw_lit("lambda"),6,0x03bb) else ENTITY(mbw_lit("lang"),4,0x2329);./mbw.c
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~2733
:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3101:7: note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55:: 3104note:: 7expanded from macro 'ENTITY':
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lArr"),4,0x21d0);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3101:47: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
3104:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("lambda"),6,0x03bb) else ENTITY(mbw_lit("lang"),4,0x2329);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3101:47: note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55:: 3107note:: 7expanded from macro 'ENTITY':
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lceil"),5,0x2308);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                      ^

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3107:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3110:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ldquo"),5,0x201c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3110:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3113:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("le"),2,0x2264);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3113:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3116:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lfloor"),6,0x2309);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3116:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3119:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lowast"),6,0x2217) else ENTITY(mbw_lit("loz"),3,0x25ca);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3119:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3119:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lowast"),6,0x2217) else ENTITY(mbw_lit("loz"),3,0x25ca);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3119:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3122:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lrm"),3,0x200e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3122:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3125:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lsquo"),5,0x2018) else ENTITY(mbw_lit("lsaquo"),6,0x2039);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3125:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3125:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lsquo"),5,0x2018) else ENTITY(mbw_lit("lsaquo"),6,0x2039);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3125:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3128:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lt"),2,0x3c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3128:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3136:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Laquo"),5,0xab) else ENTITY(mbw_lit("Lambda"),6,0x039b) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3136:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3136:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Laquo"),5,0xab) else ENTITY(mbw_lit("Lambda"),6,0x039b) else
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3136:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3137:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("Larr"),4,0x2190);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3137:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3145:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("mdash"),5,0x2014);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3145:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3148:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("minus"),5,0x2212);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3148:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3151:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("mu"),2,0x03bc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3151:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3159:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Macr"),4,0xaf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3159:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3162:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Micro"),5,0xb5) else ENTITY(mbw_lit("Middot"),6,0xb7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3162:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3162:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Micro"),5,0xb5) else ENTITY(mbw_lit("Middot"),6,0xb7);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3162:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3165:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Mu"),2,0x039c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3165:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c:3104:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:      ENTITY(mbw_lit("lArr"),4,0x21d0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3173./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:7:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
 warning#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3104:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("nabla"),5,0x2207);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3107:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lceil"),5,0x2308);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.h#define mbw_strncmp(x,y,z) strncmp(x,y,z):
                                     ^
39:38:./mbw.c:3107:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \expanded from macro 'mbw_strncmp'
                                                      ^

#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c./mbw.c:3110:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:3173      ENTITY(mbw_lit("ldquo"),5,0x201c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
7: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
note: #define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
use array indexing to silence this warning
./mbw.c./mbw.c:3110:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \55
                                                      ^
: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3113:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("le"),2,0x2264);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3113:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3176:7: ./mbw.c:3116:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
warning:       ENTITY(mbw_lit("lfloor"),6,0x2309);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("nbsp"),4,0xa0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~./mbw.c:3116:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3119:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("lowast"),6,0x2217) else ENTITY(mbw_lit("loz"),3,0x25ca);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:2733:55: note: expanded from macro 'ENTITY'

./mbw.h#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
:39#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
:38: note./mbw.c:3119:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c./mbw.c:3119:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:3176:7      ENTITY(mbw_lit("lowast"),6,0x2217) else ENTITY(mbw_lit("loz"),3,0x25ca);
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
use array indexing to silence this warning#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
./mbw.c:2733./mbw.c:3119:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3122:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("lrm"),3,0x200e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3122:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c:3125:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:3179:7      ENTITY(mbw_lit("lsquo"),5,0x2018) else ENTITY(mbw_lit("lsaquo"),6,0x2039);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c::2733:55: note: expanded from macro 'ENTITY'
 warning: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
adding 'int' to a string does not append to the string [-Wstring-plus-int]#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
./mbw.c:3125:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("ndash"),5,0x2013);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55./mbw.c::3125:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
 note: expanded from macro 'ENTITY'      ENTITY(mbw_lit("lsquo"),5,0x2018) else ENTITY(mbw_lit("lsaquo"),6,0x2039);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~./mbw.c:3125:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'

./mbw.h#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
./mbw.c:3128:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                                     ^
      ENTITY(mbw_lit("lt"),2,0x3c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c./mbw.c::3128:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
3179:7#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3136:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("Laquo"),5,0xab) else ENTITY(mbw_lit("Lambda"),6,0x039b) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c                                                      ^:2733:55: note: expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3136:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3182:./mbw.c:3136:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
7: warning      ENTITY(mbw_lit("Laquo"),5,0xab) else ENTITY(mbw_lit("Lambda"),6,0x039b) else
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
: ./mbw.c:2733:55: note: expanded from macro 'ENTITY'
adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("ne"),2,0x2260);
./mbw.c:3136:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3137:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \        ENTITY(mbw_lit("Larr"),4,0x2190);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.h#define mbw_strncmp(x,y,z) strncmp(x,y,z):
                                     ^
39:38:./mbw.c:3137:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
 note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3182./mbw.c:3145:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
:7      ENTITY(mbw_lit("mdash"),5,0x2014);:
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ./mbw.c:2733:55: note: expanded from macro 'ENTITY'
note: use array indexing to silence this warning#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.c
                                     ^
:2733:55./mbw.c:3145:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3148:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("minus"),5,0x2212);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3148:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3185:7: warning: ./mbw.c:3151:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("mu"),2,0x03bc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("ni"),2,0x220b);#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3151:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.c:3159:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.h      ENTITY(mbw_lit("Macr"),4,0xaf);:
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
39:./mbw.c38::2733 :note55: :expanded from macro 'mbw_strncmp' 
note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:#define mbw_strncmp(x,y,z) strncmp(x,y,z)3185
:                                     ^7
: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3159:7: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                                                       ^use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3188:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3162:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("not"),3,0xac) else ENTITY(mbw_lit("notin"),5,0x2209);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:      ENTITY(mbw_lit("Micro"),5,0xb5) else ENTITY(mbw_lit("Middot"),6,0xb7);55
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)

                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3188:7: note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55::3162 :note7: :expanded from macro 'ENTITY' 
note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3188:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3162:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("not"),3,0xac) else ENTITY(mbw_lit("notin"),5,0x2209);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("Micro"),5,0xb5) else ENTITY(mbw_lit("Middot"),6,0xb7);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \expanded from macro 'mbw_strncmp'

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3188:42: note: use array indexing to silence this warning
./mbw.c./mbw.c::27333162::5544::  notenote: : expanded from macro 'ENTITY'use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3191:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3165:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("nsub"),4,0x2284);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("Mu"),2,0x039c);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
note                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~: 
expanded from macro 'mbw_strncmp'
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3191:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c3165::27337::55 :note : noteuse array indexing to silence this warning: 
expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3194:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3173      ENTITY(mbw_lit("ntilde"),6,0xf1);:
7      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("nabla"),5,0x2207);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \expanded from macro 'ENTITY'

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3194:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3173:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3197:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3176:7:       ENTITY(mbw_lit("nu"),2,0x03bd);warning
:       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~adding 'int' to a string does not append to the string [-Wstring-plus-int]

./mbw.c:2733:55: note:       ENTITY(mbw_lit("nbsp"),4,0xa0);expanded from macro 'ENTITY'

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)86
:                                     ^38
: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3197:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3176:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c::31793205::77::  warningwarning: : adding 'int' to a string does not append to the string [-Wstring-plus-int]adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Ntilde"),6,0xd1);      ENTITY(mbw_lit("ndash"),5,0x2013);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733./mbw.c::552733:: 55note::  expanded from macro 'ENTITY'note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:./mbw.h39::8638::38 :note : noteexpanded from macro 'mbw_strncmp': 
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
./mbw.c:./mbw.c3205::31797::7 :note : noteuse array indexing to silence this warning: 
use array indexing to silence this warning
./mbw.c:./mbw.c2733::273355::55 :note : noteexpanded from macro 'ENTITY': 
expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                                                      ^                                                      ^

./mbw.c:3182:7: warning./mbw.c: :adding 'int' to a string does not append to the string [-Wstring-plus-int]3208
:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ne"),2,0x2260);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("Nu"),2,0x039d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55./mbw.c:: 2733note:: 55expanded from macro 'ENTITY':
 note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:./mbw.h38:: 39note:: 38expanded from macro 'mbw_strncmp':
 note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3208:7: note: ./mbw.cuse array indexing to silence this warning:
3182:7: note./mbw.c: :use array indexing to silence this warning2733
:55: note: expanded from macro 'ENTITY'./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3185:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3216:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ni"),2,0x220b);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("oacute"),6,0xf3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \38
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~ 
note: expanded from macro 'mbw_strncmp'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3185:7: note: use array indexing to silence this warning
./mbw.c:3216:7: ./mbw.cnote:: 2733use array indexing to silence this warning:
55: note: expanded from macro 'ENTITY'./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3188:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3219:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("not"),3,0xac) else ENTITY(mbw_lit("notin"),5,0x2209);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("ocirc"),5,0xf4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733./mbw.c::552733:: 55note::  expanded from macro 'ENTITY'note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:./mbw.h86::3938::38 :note : noteexpanded from macro 'mbw_strncmp': 
expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)                                     ^

                                     ^
./mbw.c./mbw.c::31883219::77::  notenote: : use array indexing to silence this warninguse array indexing to silence this warning

./mbw.c./mbw.c::27332733::5555::  notenote: : expanded from macro 'ENTITY'expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \                                                      ^

                                                      ^
./mbw.c:3188:42: ./mbw.cwarning:: 3222adding 'int' to a string does not append to the string [-Wstring-plus-int]:
7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("oelig"),5,0x0153);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("not"),3,0xac) else ENTITY(mbw_lit("notin"),5,0x2209);
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note./mbw.c: :expanded from macro 'ENTITY'2733
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.h
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~39
:38: note: ./mbw.hexpanded from macro 'mbw_strncmp':
86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3222:7:./mbw.c :note3188: :use array indexing to silence this warning42
: note: use array indexing to silence this warning
./mbw.c:2733:55:./mbw.c :note2733: :expanded from macro 'ENTITY'55
: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3225:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c
:3191:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ograve"),6,0xf2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("nsub"),4,0x2284);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
note                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~: 
expanded from macro 'mbw_strncmp'
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c./mbw.c::31913225::77::  notenote: : use array indexing to silence this warninguse array indexing to silence this warning

./mbw.c./mbw.c::27332733::5555::  notenote: : expanded from macro 'ENTITY'expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \                                                      ^

                                                      ^
./mbw.c:3194:7: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
3228:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ntilde"),6,0xf1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("oline"),5,0x203e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55:./mbw.c :note2733: :expanded from macro 'ENTITY'55
: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:./mbw.h38::39 :note38: :expanded from macro 'mbw_strncmp' 
note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3194:7./mbw.c:: 3228note:: 7use array indexing to silence this warning:
 note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55::2733 :note55: :expanded from macro 'ENTITY' 
note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3197:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3231:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("nu"),2,0x03bd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'      ENTITY(mbw_lit("omicron"),7,0x03bf) else ENTITY(mbw_lit("omega"),5,0x03c9);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)./mbw.h
:                                     ^39
:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3197:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3231:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c./mbw.c::32053231::748::  warningwarning: : adding 'int' to a string does not append to the string [-Wstring-plus-int]adding 'int' to a string does not append to the string [-Wstring-plus-int]

      ENTITY(mbw_lit("Ntilde"),6,0xd1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("omicron"),7,0x03bf) else ENTITY(mbw_lit("omega"),5,0x03c9);
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \86
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~38
: note: expanded from macro 'mbw_strncmp'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3205:7: note: ./mbw.cuse array indexing to silence this warning:
3231:48: note./mbw.c: :use array indexing to silence this warning2733
:55: note: ./mbw.cexpanded from macro 'ENTITY':
2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3208:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3234:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Nu"),2,0x039d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55      ENTITY(mbw_lit("oplus"),5,0x2295);:
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~note
: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:#define mbw_strncmp(x,y,z) strncmp(x,y,z)38
:                                     ^ 
note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3208:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c
:3234:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3237:./mbw.c7:: 3216warning:: 7adding 'int' to a string does not append to the string [-Wstring-plus-int]:
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("oacute"),6,0xf3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ENTITY(mbw_lit("ordf"),4,0xaa) else ENTITY(mbw_lit("ordm"),4,0xba) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~note
: expanded from macro 'mbw_strncmp'
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3216:7: note: use array indexing to silence this warning
./mbw.c./mbw.c::32372733::755::  notenote: : use array indexing to silence this warningexpanded from macro 'ENTITY'

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3219:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3237:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ocirc"),5,0xf4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("ordf"),4,0xaa) else ENTITY(mbw_lit("ordm"),4,0xba) else
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3219:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3237:43: note: use array indexing to silence this warning
./mbw.c:2733:55:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
note                                                      ^: 
expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3222:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3238:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("or"),2,0x2228);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3238:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3241:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("oslash"),6,0xf8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3241:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3244:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("otilde"),6,0xf5) else ENTITY(mbw_lit("otimes"),6,0x2297);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3244:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3244:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("otilde"),6,0xf5) else ENTITY(mbw_lit("otimes"),6,0x2297);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3244:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3247:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ouml"),4,0xf6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3247:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3255:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Oacute"),6,0xd3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3255:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3258:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ocirc"),5,0xd4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3258:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3261:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("OElig"),5,0x0152);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3261:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3264:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Omicron"),7,0x039f) else ENTITY(mbw_lit("Omega"),5,0x03a9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3264:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3264:48: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Omicron"),7,0x039f) else ENTITY(mbw_lit("Omega"),5,0x03a9);
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3264:48: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3267:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ograve"),6,0xd2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3267:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3270:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Oslash"),6,0xd8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3270:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3273:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Otilde"),6,0xd5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3273:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3276:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ouml"),4,0xd6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3276:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3284:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("part"),4,0x2202);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3284:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3287:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("perp"),4,0x22a5) else ENTITY(mbw_lit("permil"),6,0x2030);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3287:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3287:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("perp"),4,0x22a5) else ENTITY(mbw_lit("permil"),6,0x2030);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3287:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3290:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("phi"),3,0x03c6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3290:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3293:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("pi"),2,0x03c0) else ENTITY(mbw_lit("piv"),3,0x03d6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3293:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3293:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("pi"),2,0x03c0) else ENTITY(mbw_lit("piv"),3,0x03d6);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3293:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3296:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("prime"),5,0x2032) else    ENTITY(mbw_lit("prod"),4,0x220f);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3296:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3296:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("prime"),5,0x2032) else    ENTITY(mbw_lit("prod"),4,0x220f);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3296:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3299:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("psi"),3,0x03c8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3299:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3307:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Para"),4,0xb6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3307:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3310:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Phi"),3,0x03a6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3310:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3313:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Pi"),2,0x03a0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3313:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3316:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Plusmn"),6,0xb1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3316:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3319:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Pound"),5,0xa3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3319:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3322:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Prime"),5,0x2033) else    ENTITY(mbw_lit("Prop"),4,0x221d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3322:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3322:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Prime"),5,0x2033) else    ENTITY(mbw_lit("Prop"),4,0x221d);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3322:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3325:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Psi"),3,0x03a8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3325:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3333:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("quot"),4,0x22);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3333:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("oelig"),5,0x0153);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3222:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3225:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ograve"),6,0xf2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3345:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3225:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("rarr"),4,0x2192) else ENTITY(mbw_lit("radic"),5,0x221a) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^./mbw.c
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c./mbw.c::32283345::77::  warningnote: : adding 'int' to a string does not append to the string [-Wstring-plus-int]use array indexing to silence this warning

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("oline"),5,0x203e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \55
:                                                      ^ 
note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3228:7: note: use array indexing to silence this warning./mbw.c
:3345:45: ./mbw.cwarning:: 2733adding 'int' to a string does not append to the string [-Wstring-plus-int]:
55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("rarr"),4,0x2192) else ENTITY(mbw_lit("radic"),5,0x221a) else
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c./mbw.c::33453231::457::  notewarning: : use array indexing to silence this warningadding 'int' to a string does not append to the string [-Wstring-plus-int]

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("omicron"),7,0x03bf) else ENTITY(mbw_lit("omega"),5,0x03c9);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3346:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c
:3231:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
        ENTITY(mbw_lit("rang"),4,0x232a);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3346:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c
:3231:48: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("omicron"),7,0x03bf) else ENTITY(mbw_lit("omega"),5,0x03c9);
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3349:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3231:48: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'      ENTITY(mbw_lit("rArr"),4,0x21d2);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \expanded from macro 'ENTITY'

                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3349:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3234:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("oplus"),5,0x2295);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3352:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c
:3234:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("rceil"),5,0x2309);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \: 
expanded from macro 'ENTITY'                                                      ^

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3352:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3237:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("ordf"),4,0xaa) else ENTITY(mbw_lit("ordm"),4,0xba) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3355:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3237:7: note: use array indexing to silence this warning
./mbw.c:2733      ENTITY(mbw_lit("rdquo"),5,0x201d);:
55      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
 note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3355:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'./mbw.c
:3237:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("ordf"),4,0xaa) else ENTITY(mbw_lit("ordm"),4,0xba) else
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3358:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3237:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note      ENTITY(mbw_lit("real"),4,0x211C) else ENTITY(mbw_lit("reg"),3,0xae);: 
expanded from macro 'ENTITY'      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3358:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note./mbw.c: expanded from macro 'ENTITY':
3238:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \        ENTITY(mbw_lit("or"),2,0x2228);

                                                      ^        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3358:./mbw.c45::3238 :warning2: :adding 'int' to a string does not append to the string [-Wstring-plus-int] 
note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("real"),4,0x211C) else ENTITY(mbw_lit("reg"),3,0xae);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3358:45: note./mbw.c: :use array indexing to silence this warning3241
:7: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("oslash"),6,0xf8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3241:7: note: use array indexing to silence this warning
./mbw.c:./mbw.c2733::336155::7 :note : warningexpanded from macro 'ENTITY': 
adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rfloor"),6,0x230a);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3361:7: note./mbw.c: :use array indexing to silence this warning
3244:7: warning./mbw.c: :adding 'int' to a string does not append to the string [-Wstring-plus-int]2733
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^      ENTITY(mbw_lit("otilde"),6,0xf5) else ENTITY(mbw_lit("otimes"),6,0x2297);

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3244:7:./mbw.c :note3364: :use array indexing to silence this warning7
: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("rho"),3,0x03c1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3364:7: note: use array indexing to silence this warning
./mbw.c:3244:./mbw.c45::2733 :warning55: : adding 'int' to a string does not append to the string [-Wstring-plus-int]note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("otilde"),6,0xf5) else ENTITY(mbw_lit("otimes"),6,0x2297);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3367:7: ./mbw.cwarning:: 3244adding 'int' to a string does not append to the string [-Wstring-plus-int]:
45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("rlm"),3,0x200f);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \2733
:                                                      ^55
: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3367:7: note: use array indexing to silence this warning
./mbw.c:2733./mbw.c:55: :note3247: :expanded from macro 'ENTITY'7
: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ouml"),4,0xf6);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                      ^

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3247:7: note./mbw.c: :use array indexing to silence this warning3370
:7: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("rsquo"),5,0x2019) else    ENTITY(mbw_lit("rsaquo"),6,0x203a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3370:7: note: use array indexing to silence this warning
./mbw.c:2733:55./mbw.c: :note3255: :expanded from macro 'ENTITY'7
: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
      ENTITY(mbw_lit("Oacute"),6,0xd3);                                                      ^

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3370:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.c
:3255:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("rsquo"),5,0x2019) else    ENTITY(mbw_lit("rsaquo"),6,0x203a);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3370:46: note: use array indexing to silence this warning
./mbw.c:./mbw.c2733::553258:: 7note::  expanded from macro 'ENTITY'warning
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ocirc"),5,0xd4);#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \

      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                      ^

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3258:7: note: use array indexing to silence this warning
./mbw.c:2733./mbw.c:55::3378 :note7: :expanded from macro 'ENTITY' 
warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ENTITY(mbw_lit("Raquo"),5,0xbb);

                                                      ^      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3261:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3378:7: note: use array indexing to silence this warning
      ENTITY(mbw_lit("OElig"),5,0x0152);
./mbw.c      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
2733:55: note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3261:7: note: use array indexing to silence this warning
./mbw.c:3381:./mbw.c7::2733 :warning55: :adding 'int' to a string does not append to the string [-Wstring-plus-int] 
note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("Reg"),3,0xae);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3381:7: note: use array indexing to silence this warning
./mbw.c:2733:./mbw.c55:: 3264note:: 7expanded from macro 'ENTITY':
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Omicron"),7,0x039f) else ENTITY(mbw_lit("Omega"),5,0x03a9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3384:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3264:7: note: use array indexing to silence this warning
./mbw.c:2733:      ENTITY(mbw_lit("Rho"),3,0x03a1);55
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3384:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3264:48: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Omicron"),7,0x039f) else ENTITY(mbw_lit("Omega"),5,0x03a9);
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3392:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3264:48: note: use array indexing to silence this warning
./mbw.c:2733:55:      ENTITY(mbw_lit("sbquo"),5,0x201a); 
note      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~: 
expanded from macro 'ENTITY'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3392:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3267:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Ograve"),6,0xd2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3395:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:3267:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("scaron"),6,0x0161);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                                                       ^expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3395:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3270:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Oslash"),6,0xd8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3398:7: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
3270:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("sdot"),4,0x22c5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                                                       ^expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3398:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3273:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
      ENTITY(mbw_lit("Otilde"),6,0xd5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3401:7: warning./mbw.c: :adding 'int' to a string does not append to the string [-Wstring-plus-int]3273
:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("sect"),4,0xa7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: #define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \note
:                                                       ^expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3401:7: note: use array indexing to silence this warning
./mbw.c:2733:55:./mbw.c :note: 3276expanded from macro 'ENTITY':
7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ouml"),4,0xd6);
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                      ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3404:7: warning: ./mbw.cadding 'int' to a string does not append to the string [-Wstring-plus-int]:
3276:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
      ENTITY(mbw_lit("shy"),3,0xad);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55:#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \ 
note                                                      ^: 
expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3404:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
:                                                      ^
3284:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("part"),4,0x2202);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:3407:7: #define mbw_strncmp(x,y,z) strncmp(x,y,z)warning
:                                      ^adding 'int' to a string does not append to the string [-Wstring-plus-int]

./mbw.c:      ENTITY(mbw_lit("sigmaf"),6,0x03c2) else ENTITY(mbw_lit("sigma"),5,0x03c3) else3284
:      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7
: note: use array indexing to silence this warning
./mbw.c:2733:55: note./mbw.c: :expanded from macro 'ENTITY'2733
:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3407:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3287:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("perp"),4,0x22a5) else ENTITY(mbw_lit("permil"),6,0x2030);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3407#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
47                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:
 warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
      ENTITY(mbw_lit("sigmaf"),6,0x03c2) else ENTITY(mbw_lit("sigma"),5,0x03c3) else
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3287:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3407:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3287:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("perp"),4,0x22a5) else ENTITY(mbw_lit("permil"),6,0x2030);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
3408                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:
2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]./mbw.h
:86:38: note: expanded from macro 'mbw_strncmp'
        ENTITY(mbw_lit("sim"),3,0x223c);
#define mbw_strncmp(x,y,z) strncmp(x,y,z)        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                     ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3287:45: note: use array indexing to silence this warning
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~2733
:55: note: expanded from macro 'ENTITY'./mbw.h
:39:38: note: expanded from macro 'mbw_strncmp'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)                                                      ^

                                     ^
./mbw.c:3408:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3290:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("phi"),3,0x03c6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3411:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("spades"),6,0x2660);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \:
3290                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~:
7: note: use array indexing to silence this warning
./mbw.h:39:38: ./mbw.cnote:: 2733expanded from macro 'mbw_strncmp':
55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3411:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3293:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("pi"),2,0x03c0) else ENTITY(mbw_lit("piv"),3,0x03d6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3414:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
      ENTITY(mbw_lit("sup2"),4,0xb2) else ENTITY(mbw_lit("sup3"),4,0xb3) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \./mbw.c
:                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~3293
:7: note: use array indexing to silence this warning./mbw.h
:39:38: note./mbw.c: :expanded from macro 'mbw_strncmp'2733
:55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3414:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3293:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("pi"),2,0x03c0) else ENTITY(mbw_lit("piv"),3,0x03d6);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c::27333414::5543::  notewarning: : expanded from macro 'ENTITY'adding 'int' to a string does not append to the string [-Wstring-plus-int]

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h      ENTITY(mbw_lit("sup2"),4,0xb2) else ENTITY(mbw_lit("sup3"),4,0xb3) else:
86                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:./mbw.c38::3293 :note43: :expanded from macro 'mbw_strncmp' 
note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3414:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3296:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("prime"),5,0x2032) else    ENTITY(mbw_lit("prod"),4,0x220f);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733./mbw.c::553415:: 2note::  expanded from macro 'ENTITY'warning
: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:        ENTITY(mbw_lit("sup1"),4,0xb9) else ENTITY(mbw_lit("sum"),3,0x2211) else38
:        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
note: expanded from macro 'mbw_strncmp'
./mbw.c:2733:55#define mbw_strncmp(x,y,z) strncmp(x,y,z):
                                      ^note
: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:./mbw.c39::329638::7 :note : noteexpanded from macro 'mbw_strncmp': 
use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3415:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3296:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("prime"),5,0x2032) else    ENTITY(mbw_lit("prod"),4,0x220f);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c./mbw.c::34152733::3855::  warningnote: : adding 'int' to a string does not append to the string [-Wstring-plus-int]expanded from macro 'ENTITY'

#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        ENTITY(mbw_lit("sup1"),4,0xb9) else ENTITY(mbw_lit("sum"),3,0x2211) else./mbw.h
:                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~86
:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:2733:55: note: expanded from macro 'ENTITY'#define mbw_strncmp(x,y,z) strncmp(x,y,z)

                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
./mbw.c:3296:46: note#define mbw_strncmp(x,y,z) wcsncmp(x,y,z): 
use array indexing to silence this warning                                     ^

./mbw.c:2733:55: note: expanded from macro 'ENTITY'
./mbw.c:3415:38: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3416:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("sub"),3,0x2282) else ENTITY(mbw_lit("sup"),3,0x2283) else
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3416:4: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3416:41: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("sub"),3,0x2282) else ENTITY(mbw_lit("sup"),3,0x2283) else
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3416:41: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3417:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            ENTITY(mbw_lit("sube"),4,0x2286) else ENTITY(mbw_lit("supe"),4,0x2287);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3417:6: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3417:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            ENTITY(mbw_lit("sube"),4,0x2286) else ENTITY(mbw_lit("supe"),4,0x2287);
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3417:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3420:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("szlig"),5,0xdf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3420:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3428:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Scaron"),6,0x0160);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3428:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3431:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Sigma"),5,0x03a3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3431:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3439:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("tau"),3,0x03c4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3439:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3442:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("thorn"),5,0xfe) else ENTITY(mbw_lit("theta"),5,0x03b8) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3442:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3442:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("thorn"),5,0xfe) else ENTITY(mbw_lit("theta"),5,0x03b8) else
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3442:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3443:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("thetasym"),8,0x03d1) else ENTITY(mbw_lit("there4"),6,0x2234) else
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3443:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3443:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("thetasym"),8,0x03d1) else ENTITY(mbw_lit("there4"),6,0x2234) else
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3443:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3444:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("thinsp"),6,0x2009);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3444:4: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3447:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("times"),5,0xd7) else ENTITY(mbw_lit("tilde"),5,0x02dc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3447:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3447:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("times"),5,0xd7) else ENTITY(mbw_lit("tilde"),5,0x02dc);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3447:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3450:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("trade"),5,0x2122);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3450:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3458:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Tau"),3,0x03a4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3458:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3461:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Theta"),5,0x0398);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3461:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3464:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("THORN"),5,0xde);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3464:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3472:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uacute"),6,0xfa) else ENTITY(mbw_lit("uarr"),4,0x2191);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3472:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3472:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uacute"),6,0xfa) else ENTITY(mbw_lit("uarr"),4,0x2191);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3472:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3475:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uArr"),4,0x21d1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3475:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3478:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ucirc"),5,0xfb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3478:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3481:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ugrave"),6,0xf9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3481:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3484:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uml"),3,0xa8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3484:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3487:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("upsilon"),7,0xc5) else ENTITY(mbw_lit("upsih"),5,0x03d2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3487:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3487:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("upsilon"),7,0xc5) else ENTITY(mbw_lit("upsih"),5,0x03d2);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3487:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3490:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uuml"),4,0xfc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3490:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3498:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Uacute"),6,0xda);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3498:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3501:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ucirc"),5,0xdb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3501:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3504:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ugrave"),6,0xd9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3504:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3507:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Upsilon"),7,0xa5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3299:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("psi"),3,0x03c8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3299:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3307:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Para"),4,0xb6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3307:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3310:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Phi"),3,0x03a6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3310:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3313:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Pi"),2,0x03a0);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3313:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3316:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Plusmn"),6,0xb1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3316:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3319:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Pound"),5,0xa3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3319:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3322:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Prime"),5,0x2033) else    ENTITY(mbw_lit("Prop"),4,0x221d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3322:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3322:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Prime"),5,0x2033) else    ENTITY(mbw_lit("Prop"),4,0x221d);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3322:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3325:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Psi"),3,0x03a8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3325:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3333:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("quot"),4,0x22);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3333:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3345:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rarr"),4,0x2192) else ENTITY(mbw_lit("radic"),5,0x221a) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3345:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3345:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rarr"),4,0x2192) else ENTITY(mbw_lit("radic"),5,0x221a) else
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3345:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3346:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("rang"),4,0x232a);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3346:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3349:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rArr"),4,0x21d2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3349:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3352:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rceil"),5,0x2309);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3352:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3355:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rdquo"),5,0x201d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3355:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3358:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("real"),4,0x211C) else ENTITY(mbw_lit("reg"),3,0xae);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3358:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3358:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("real"),4,0x211C) else ENTITY(mbw_lit("reg"),3,0xae);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3358:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3361:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rfloor"),6,0x230a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3361:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3364:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rho"),3,0x03c1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3364:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3367:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rlm"),3,0x200f);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3367:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3370:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rsquo"),5,0x2019) else    ENTITY(mbw_lit("rsaquo"),6,0x203a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3370:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3370:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("rsquo"),5,0x2019) else    ENTITY(mbw_lit("rsaquo"),6,0x203a);
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3370:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3378:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Raquo"),5,0xbb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3378:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3381:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Reg"),3,0xae);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3381:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3384:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Rho"),3,0x03a1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3384:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3392:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sbquo"),5,0x201a);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3392:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3395:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("scaron"),6,0x0161);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3395:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3398:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sdot"),4,0x22c5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3398:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3401:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sect"),4,0xa7);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3401:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3404:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("shy"),3,0xad);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3404:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3407:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sigmaf"),6,0x03c2) else ENTITY(mbw_lit("sigma"),5,0x03c3) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3407:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3407:47: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sigmaf"),6,0x03c2) else ENTITY(mbw_lit("sigma"),5,0x03c3) else
                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3407:47: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3408:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("sim"),3,0x223c);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3408:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3411:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("spades"),6,0x2660);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3411:7: note: use array indexing to silence this warning
./mbw.c./mbw.c:3507:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3510:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Uuml"),4,0xdc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3510:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3526:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("weierp"),6,0x2118);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3526:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3538:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("xi"),2,0x03be);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3538:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3546:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Xi"),2,0x039e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3546:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3554:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yacute"),6,0xfd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3554:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3557:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yen"),3,0xa5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3557:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3560:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yuml"),4,0xff);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3560:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3568:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Yacute"),6,0xdd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3568:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3571:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Yuml"),4,0x0178);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3571:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3579:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zeta"),4,0x03b6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3579:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3582:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zwnj"),4,0x200c) else ENTITY(mbw_lit("zwj"),3,0x200d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3582:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3582:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zwnj"),4,0x200c) else ENTITY(mbw_lit("zwj"),3,0x200d);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3582:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3590:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Zeta"),4,0x0396);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:39:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) wcsncmp(x,y,z)
                                     ^
./mbw.c:3590:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3905:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("area"),4) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3905:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3906:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("applet"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3906:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3911:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("base"),4) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3911:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3414:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sup2"),4,0xb2) else ENTITY(mbw_lit("sup3"),4,0xb3) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3414:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3414:43: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("sup2"),4,0xb2) else ENTITY(mbw_lit("sup3"),4,0xb3) else
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3414:43: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3415:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("sup1"),4,0xb9) else ENTITY(mbw_lit("sum"),3,0x2211) else
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3415:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3415:38: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("sup1"),4,0xb9) else ENTITY(mbw_lit("sum"),3,0x2211) else
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3415:38: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3416:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("sub"),3,0x2282) else ENTITY(mbw_lit("sup"),3,0x2283) else
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3416:4: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3416:41: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("sub"),3,0x2282) else ENTITY(mbw_lit("sup"),3,0x2283) else
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3416:41: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3417:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            ENTITY(mbw_lit("sube"),4,0x2286) else ENTITY(mbw_lit("supe"),4,0x2287);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3417:6: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3417:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            ENTITY(mbw_lit("sube"),4,0x2286) else ENTITY(mbw_lit("supe"),4,0x2287);
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3417:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3420:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("szlig"),5,0xdf);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3420:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3428:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Scaron"),6,0x0160);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3428:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3431:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Sigma"),5,0x03a3);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3431:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3439:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("tau"),3,0x03c4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3439:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3442:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("thorn"),5,0xfe) else ENTITY(mbw_lit("theta"),5,0x03b8) else
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3442:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3442:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("thorn"),5,0xfe) else ENTITY(mbw_lit("theta"),5,0x03b8) else
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3442:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3443:2: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("thetasym"),8,0x03d1) else ENTITY(mbw_lit("there4"),6,0x2234) else
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3443:2: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3443:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        ENTITY(mbw_lit("thetasym"),8,0x03d1) else ENTITY(mbw_lit("there4"),6,0x2234) else
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3443:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3444:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
          ENTITY(mbw_lit("thinsp"),6,0x2009);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3444:4: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3447:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("times"),5,0xd7) else ENTITY(mbw_lit("tilde"),5,0x02dc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3447:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3447:44: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("times"),5,0xd7) else ENTITY(mbw_lit("tilde"),5,0x02dc);
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3447:44: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3450:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("trade"),5,0x2122);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3450:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3458:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Tau"),3,0x03a4);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3458:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3461:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Theta"),5,0x0398);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3461:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3464:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("THORN"),5,0xde);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3464:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3472:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uacute"),6,0xfa) else ENTITY(mbw_lit("uarr"),4,0x2191);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3472:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3472:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uacute"),6,0xfa) else ENTITY(mbw_lit("uarr"),4,0x2191);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3472:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3475:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uArr"),4,0x21d1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3475:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3478:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ucirc"),5,0xfb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3478:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3481:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("ugrave"),6,0xf9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3481:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3484:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uml"),3,0xa8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3484:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3487:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("upsilon"),7,0xc5) else ENTITY(mbw_lit("upsih"),5,0x03d2);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3487:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3487:46: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("upsilon"),7,0xc5) else ENTITY(mbw_lit("upsih"),5,0x03d2);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3487:46: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3490:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("uuml"),4,0xfc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3490:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3498:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Uacute"),6,0xda);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3498:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3501:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ucirc"),5,0xdb);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3501:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3504:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Ugrave"),6,0xd9);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3504:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3507:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Upsilon"),7,0xa5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3507:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3510:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Uuml"),4,0xdc);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3912:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("bgsound"),7) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3912:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3914:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("br"),2) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3914:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3917:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("body"),4) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3917:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3926:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("comment"),7) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3926:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3933:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("div"),3) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3933:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3938:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("embed"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3938:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3943:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("frame"),5) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3943:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3944:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("form"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3944:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3949:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("html"),4) || TAGMATCH(mbw_lit("head"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3949:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3949:41: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("html"),4) || TAGMATCH(mbw_lit("head"),4) ) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3949:41: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3954:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("hr"),2) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3954:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3960:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("img"),3) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3960:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3961:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("iframe"),6) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3961:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3962:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("ilayer"),6) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3962:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3963:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("input"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3963:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3968:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("layer"),5) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3968:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3969:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("link"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3969:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3974:11: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( (TAGMATCH(mbw_lit("noframes"),8) && (xml->hide = NOFRAMES)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3974:11: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3975:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("nolayer"),7) && (xml->hide = NOLAYER)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3975:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3976:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("noscript"),8) && (xml->hide = NOSCRIPT)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3976:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3977:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("noembed"),7) && (xml->hide = NOEMBED)) ) {
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3977:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3986:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("object"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3986:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3991:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("span"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3991:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3993:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("script"),6) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3993:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3995:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("style"),5) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:3995:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
./mbw.c:3510:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3526:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("weierp"),6,0x2118);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3526:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3538:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("xi"),2,0x03be);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3538:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3546:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Xi"),2,0x039e);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3546:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3554:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yacute"),6,0xfd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3554:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3557:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yen"),3,0xa5);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3557:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3560:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("yuml"),4,0xff);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3560:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3568:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Yacute"),6,0xdd);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3568:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3571:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Yuml"),4,0x0178);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3571:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3579:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zeta"),4,0x03b6);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3579:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3582:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zwnj"),4,0x200c) else ENTITY(mbw_lit("zwj"),3,0x200d);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3582:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3582:45: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("zwnj"),4,0x200c) else ENTITY(mbw_lit("zwj"),3,0x200d);
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3582:45: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3590:7: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
      ENTITY(mbw_lit("Zeta"),4,0x0396);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./mbw.h:86:38: note: expanded from macro 'mbw_strncmp'
#define mbw_strncmp(x,y,z) strncmp(x,y,z)
                                     ^
./mbw.c:3590:7: note: use array indexing to silence this warning
./mbw.c:2733:55: note: expanded from macro 'ENTITY'
#define ENTITY(x,y,z) if( !mbw_strncmp((line + 3), (x + 2), (y - 2)) ) \
                                                      ^
./mbw.c:3905:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("area"),4) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3905:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3906:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("applet"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3906:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3911:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("base"),4) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3911:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3912:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("bgsound"),7) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3912:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3914:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("br"),2) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3914:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4000:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("title"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4000:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4015:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/body"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4015:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4023:36: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( (xml->hide == COMMENT) && TAGMATCH(mbw_lit("/comment"),8) ) {
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4023:36: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4028:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/html"),5) || TAGMATCH(mbw_lit("/head"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4028:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4028:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/html"),5) || TAGMATCH(mbw_lit("/head"),5) ) {
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4028:42: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4036:38: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( ((xml->hide == NOFRAMES) && TAGMATCH(mbw_lit("/noframes"),9)) ||
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4036:38: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4037:31: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOSCRIPT) && TAGMATCH(mbw_lit("/noscript"),9)) ||
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4037:31: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4038:30: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOLAYER) && TAGMATCH(mbw_lit("/nolayer"),8)) ||
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4038:30: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4039:30: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOEMBED) && TAGMATCH(mbw_lit("/noembed"),8)) ) {
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4039:30: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4044:36: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( ((xml->hide == SCRIPT) && TAGMATCH(mbw_lit("/script"),7)) ||
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4044:36: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4045:28: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == STYLE) && TAGMATCH(mbw_lit("/style"),6)) ) {
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4045:28: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4050:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/title"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4050:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4263:13: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        } else if( ATTRMATCH(mbw_lit("onmousedown"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4263:13: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4264:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmousemove"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4264:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4265:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseout"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4265:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4266:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseover"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4266:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4267:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseup"), 9) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4267:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4269:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onclick"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4269:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4270:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondblclick"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4270:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4271:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onfocus"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4271:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4273:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeydown"), 9) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4273:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:3917:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("body"),4) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3917:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3926:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("comment"),7) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3926:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3933:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("div"),3) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3933:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3938:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("embed"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3938:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3943:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("frame"),5) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3943:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3944:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("form"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3944:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3949:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("html"),4) || TAGMATCH(mbw_lit("head"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3949:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3949:41: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("html"),4) || TAGMATCH(mbw_lit("head"),4) ) {
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3949:41: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3954:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("hr"),2) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3954:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3960:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("img"),3) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3960:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3961:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("iframe"),6) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3961:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3962:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("ilayer"),6) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3962:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3963:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("input"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3963:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3968:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("layer"),5) ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3968:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3969:3: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                TAGMATCH(mbw_lit("link"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3969:3: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3974:11: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( (TAGMATCH(mbw_lit("noframes"),8) && (xml->hide = NOFRAMES)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3974:11: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3975:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("nolayer"),7) && (xml->hide = NOLAYER)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3975:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3976:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("noscript"),8) && (xml->hide = NOSCRIPT)) ||
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3976:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3977:4: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                (TAGMATCH(mbw_lit("noembed"),7) && (xml->hide = NOEMBED)) ) {
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3977:4: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3986:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("object"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3986:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3991:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("span"),4) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3991:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3993:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("script"),6) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3993:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:3995:17: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            } else if( TAGMATCH(mbw_lit("style"),5) ) {
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:3995:17: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4000:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("title"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4000:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4015:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
./mbw.c:4274:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeypress"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4274:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4275:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeyup"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4275:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4277:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondataavailable"), 15) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4277:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4278:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondatasetchanged"), 16) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4278:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4279:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondatasetcomplete"), 17) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4279:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4281:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onabort"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4281:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4282:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onload"), 6) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4282:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4283:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onunload"), 8) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4283:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4284:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmove"), 6) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4284:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4285:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onresize"), 8) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4285:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4286:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onsubmit"), 8) ) {
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:41:60: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) mbw_prefix(mystrncasecmp)(x,y,z) /* wcsncasecmp is broken in glibc */
                                                           ^
./mbw.c:4286:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
            if( TAGMATCH(mbw_lit("/body"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4015:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4023:36: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( (xml->hide == COMMENT) && TAGMATCH(mbw_lit("/comment"),8) ) {
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4023:36: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4028:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/html"),5) || TAGMATCH(mbw_lit("/head"),5) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4028:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4028:42: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/html"),5) || TAGMATCH(mbw_lit("/head"),5) ) {
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4028:42: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4036:38: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( ((xml->hide == NOFRAMES) && TAGMATCH(mbw_lit("/noframes"),9)) ||
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4036:38: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4037:31: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOSCRIPT) && TAGMATCH(mbw_lit("/noscript"),9)) ||
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4037:31: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4038:30: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOLAYER) && TAGMATCH(mbw_lit("/nolayer"),8)) ||
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4038:30: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4039:30: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == NOEMBED) && TAGMATCH(mbw_lit("/noembed"),8)) ) {
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4039:30: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4044:36: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( ((xml->hide == SCRIPT) && TAGMATCH(mbw_lit("/script"),7)) ||
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4044:36: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4045:28: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                ((xml->hide == STYLE) && TAGMATCH(mbw_lit("/style"),6)) ) {
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4045:28: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4050:10: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
            if( TAGMATCH(mbw_lit("/title"),6) ) {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4050:10: note: use array indexing to silence this warning
./mbw.c:3873:53: note: expanded from macro 'TAGMATCH'
#define TAGMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('>')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                    ^
./mbw.c:4263:13: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        } else if( ATTRMATCH(mbw_lit("onmousedown"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4263:13: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4264:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmousemove"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4264:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4265:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseout"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4265:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4266:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseover"), 11) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4266:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4267:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmouseup"), 9) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4267:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4269:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onclick"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4269:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4270:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondblclick"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4270:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4271:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onfocus"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4271:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4273:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeydown"), 9) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4273:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4274:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeypress"), 10) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4274:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4275:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onkeyup"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4275:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4277:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondataavailable"), 15) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4277:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4278:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondatasetchanged"), 16) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4278:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4279:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("ondatasetcomplete"), 17) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4279:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4281:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onabort"), 7) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4281:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
./mbw.c:75:5: warning: unused function 'mywcsncasecmp' [-Wunused-function]
int mywcsncasecmp(const wchar_t *s1, const wchar_t *s2, size_t n) {
    ^
./mbw.c#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1))):
385                                                     ^:
5: warning: unused function 'w_mystrncmp' [-Wunused-function]
int mbw_prefix(mystrncmp)(const mbw_t *s1, const mbw_t *s2, size_t n) {
    ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
#define mbw_prefix(f) w_##f
                      ^
<scratch space>:285:1: note: expanded from here
w_mystrncmp
^
./mbw.c:723:13: warning: unused function 'w_is_asian_case' [-Wunused-function]
good_char_t mbw_prefix(is_asian_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
./mbw.c:4282:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
#define mbw_prefix(f) w_##f
                      ^
<scratch space>                   ATTRMATCH(mbw_lit("onload"), 6) ||:
37                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1: note: expanded from here
w_is_asian_case
^
./mbw.c:3875:54:./mbw.c :note768: :expanded from macro 'ATTRMATCH'13
: warning: unused function 'w_is_unicode_case' [-Wunused-function]
good_char_t mbw_prefix(is_unicode_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
#define mbw_prefix(f) w_##f
                      ^
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
<scratch space>                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~:
39:1: note: ./mbw.hexpanded from here:
88:46: note: expanded from macro 'mbw_strncasecmp'
w_is_unicode_case
^
./mbw.c:806:13: warning: unused function 'w_is_alpha_case' [-Wunused-function]
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
good_char_t mbw_prefix(is_alpha_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
./mbw.c#define mbw_prefix(f) w_##f
                      ^
<scratch space>:41:1: note: expanded from here
w_is_alpha_case
^
./mbw.c:840:13: warning: unused function 'w_is_alnum_case' [-Wunused-function]
good_char_t mbw_prefix(is_alnum_case)(const mbw_t *c) {:
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
4282#define mbw_prefix(f) w_##f
                      ^
<scratch space>:45:1: note: expanded from here
w_is_alnum_case
^
./mbw.c:854:13: warning: unused function 'w_handle_alnum_case' [-Wunused-function]
:6:good_char_t mbw_prefix(handle_alnum_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
 #define mbw_prefix(f) w_##f
                      ^
<scratch space>:47:1: note: expanded from here
w_handle_alnum_casenote
^
./mbw.c:875:13: warning: unused function 'w_is_numeric_case' [-Wunused-function]
: use array indexing to silence this warning
good_char_t mbw_prefix(is_numeric_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
#define mbw_prefix(f) w_##f
                      ^
<scratch space>:49:1: note: expanded from here
w_is_numeric_case
^
./mbw.c:889:13: warning: unused function 'w_handle_numeric_case' [-Wunused-function]
./mbw.c:3875good_char_t mbw_prefix(handle_numeric_case)(const mbw_t *c) {
            ^
./mbw.h:27:23: note: expanded from macro 'mbw_prefix'
:#define mbw_prefix(f) w_##f
                      ^
<scratch space>:51:1: note: expanded from here
54w_handle_numeric_case
^
: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4283:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onunload"), 8) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4283:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4284:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onmove"), 6) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4284:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4285:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onresize"), 8) ||
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4285:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:4286:6: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                   ATTRMATCH(mbw_lit("onsubmit"), 8) ) {
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./mbw.h:88:46: note: expanded from macro 'mbw_strncasecmp'
#define mbw_strncasecmp(x,y,z) strncasecmp(x,y,z)
                                             ^
./mbw.c:4286:6: note: use array indexing to silence this warning
./mbw.c:3875:54: note: expanded from macro 'ATTRMATCH'
#define ATTRMATCH(x,y) (!mbw_strncasecmp(line + 1, x + 1, y - 1) && (mbw_isspace(line[y]) || (line[y] == mbw_lit('=')) || (line[y] == mbw_lit('\0'))) && (line += (y - 1)))
                                                     ^
./mbw.c:371:16: warning: unused function 'mystrncasecmp' [-Wunused-function]
int mbw_prefix(mystrncasecmp)(const mbw_t *s1, const mbw_t *s2, size_t n) {
               ^
./mbw.c:385:16: warning: unused function 'mystrncmp' [-Wunused-function]
int mbw_prefix(mystrncmp)(const mbw_t *s1, const mbw_t *s2, size_t n) {
               ^
./mbw.c:806:24: warning: unused function 'is_alpha_case' [-Wunused-function]
good_char_t mbw_prefix(is_alpha_case)(const mbw_t *c) {
                       ^
./mbw.c:840:24: warning: unused function 'is_alnum_case' [-Wunused-function]
good_char_t mbw_prefix(is_alnum_case)(const mbw_t *c) {
                       ^
./mbw.c:854:24: warning: unused function 'handle_alnum_case' [-Wunused-function]
good_char_t mbw_prefix(handle_alnum_case)(const mbw_t *c) {
                       ^
./mbw.c:875:24: warning: unused function 'is_numeric_case' [-Wunused-function]
good_char_t mbw_prefix(is_numeric_case)(const mbw_t *c) {
                       ^
./mbw.c:889:24: warning: unused function 'handle_numeric_case' [-Wunused-function]
good_char_t mbw_prefix(handle_numeric_case)(const mbw_t *c) {
                       ^
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o risk-lexer.o risk-lexer.c
risk-lexer.c:1242:17: warning: unused function 'yyunput' [-Wunused-function]
    static void yyunput (int c, char * yy_bp )
                ^
risk-lexer.c:1285:16: warning: function 'input' is not needed and will not be emitted [-Wunneeded-internal-declaration]
    static int input  (void)
               ^
2 warnings generated.
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o risk-parser.o risk-parser.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o mailinspect.o mailinspect.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o hmine.o hmine.c
mailinspect.c:161:7: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
      fgets(buf, PIPE_BUFLEN, input);
      ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~
mailinspect.c:430:5: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
    fgets(buf, PIPE_BUFLEN, input);
    ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~
mailinspect.c:567:2: warning: ignoring return value of function declared with 'warn_unused_result' attribute [-Wunused-result]
        fgets(buf, PIPE_BUFLEN, input);
        ^~~~~ ~~~~~~~~~~~~~~~~~~~~~~~
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o hparse.o hparse.c
3 warnings generated.
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o rfc822.o rfc822.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o rfc2822.o rfc2822.c
rfc822.c:154:7: warning: unused function 'skip_822_linwsp' [-Wunused-function]
char *skip_822_linwsp(char *line) {
      ^
rfc822.c:159:7: warning: unused function 'assert_char' [-Wunused-function]
char *assert_char(char *line, char c) {
      ^
324 warnings generated.
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o hypex.o hypex.c
cat mailcross.in \
	| sed -e '/# begin mailtest.functions/r mailtest.functions.in' \
	| sed -e '/# begin mailtest/,/# begin mailtest/d;/# end/,/# end/d' \
	| sed -e "s|[@]VERSION@|1.14.1|g;s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	> mailcross
chmod +x mailcross
cat mailtoe.in \
	| sed -e '/# begin mailtest.functions/r mailtest.functions.in' \
	| sed -e '/# begin mailtest/,/# begin mailtest/d;/# end/,/# end/d' \
	| sed -e "s|[@]VERSION@|1.14.1|g;s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	> mailtoe
chmod +x mailtoe
cat mailfoot.in \
	| sed -e '/# begin mailtest.functions/r mailtest.functions.in' \
	| sed -e '/# begin mailtest/,/# begin mailtest/d;/# end/,/# end/d' \
	| sed -e "s|[@]VERSION@|1.14.1|g;s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	> mailfoot
chmod +x mailfoot
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o bayesol bayesol.o fram.o risk-lexer.o risk-parser.o probs.o util.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o  -lm 
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o hypex hypex.o fram.o catfun.o util.o probs.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o  -lm 
326 warnings generated.
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o dbacl dbacl.o fram.o catfun.o fh.o util.o probs.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o mb.o wc.o -lm 
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o mailinspect mailinspect.o fram.o fh.o catfun.o probs.o util.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o mb.o wc.o -lslang -lreadline -lncurses -lm 
2 warnings generated.
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o hmine hmine.o hparse.o fram.o util.o rfc822.o rfc2822.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o  -lm 
make[5]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making all in tests
make[5]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making all in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/man'
cat dbacl.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> dbacl.1
cat bayesol.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> bayesol.1
cat mailcross.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> mailcross.1
cat mailinspect.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> mailinspect.1
cat mailtoe.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> mailtoe.1
cat mailfoot.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> mailfoot.1
cat hmine.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> hmine.1
cat hypex.1in \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	| sed -e "s|[@]PKGDATADIR@|/usr/share/dbacl|g" \
	| sed -e "s|[@]PKGDOCDIR@|/usr/share/doc/dbacl|g" \
	> hypex.1
make[3]: Leaving directory '/<<PKGBUILDDIR>>/man'
Making all in ts
make[3]: Entering directory '/<<PKGBUILDDIR>>/ts'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/ts'
Making all in TREC
make[3]: Entering directory '/<<PKGBUILDDIR>>/TREC'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/TREC'
Making all in contrib
make[3]: Entering directory '/<<PKGBUILDDIR>>/contrib'
make[3]: Nothing to be done for 'all'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/contrib'
make[3]: Entering directory '/<<PKGBUILDDIR>>'
make[3]: Nothing to be done for 'all-am'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
	make -j4 check VERBOSE=1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
Making check in doc
make[2]: Entering directory '/<<PKGBUILDDIR>>/doc'
Making check in chess
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[3]: Nothing to be done for 'check'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[3]: Nothing to be done for 'check-am'.
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/doc'
Making check in src
make[2]: Entering directory '/<<PKGBUILDDIR>>/src'
Making check in .
make[3]: Entering directory '/<<PKGBUILDDIR>>/src'
make  icheck pcheck
make[4]: Entering directory '/<<PKGBUILDDIR>>/src'
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -c -o icheck.o icheck.c
gcc -DHAVE_CONFIG_H -I. -I/usr/include/slang  -Wdate-time -D_FORTIFY_SOURCE=2 -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -DTEST_PARSER ./hparse.c ./rfc822.c ./rfc2822.c util.o fram.o jenkins2.o -o pcheck -Wl,-z,relro -Wl,-z,now
gcc -funsigned-char -std=c99 -D_XOPEN_SOURCE=700 -Wall -pedantic  -O3 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security  -Wl,-z,relro -Wl,-z,now -o icheck icheck.o fram.o catfun.o util.o fh.o probs.o jenkins.o jenkins2.o mtherr.o igam.o gamma.o const.o polevl.o isnan.o ndtr.o mb.o wc.o -lm 
./rfc822.c:154:7: warning: unused function 'skip_822_linwsp' [-Wunused-function]
char *skip_822_linwsp(char *line) {
      ^
./rfc822.c:159:7: warning: unused function 'assert_char' [-Wunused-function]
char *assert_char(char *line, char c) {
      ^
2 warnings generated.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making check in tests
make[3]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
make  dbacl-V.sh bayesol-V.sh mailinspect-V.sh dbacl-l.sh dbacl-j.sh dbacl-w3.sh dbacl-alpha.sh dbacl-alnum.sh dbacl-graph.sh dbacl-cef.sh dbacl-adp.sh dbacl-cef2.sh dbacl-g.sh dbacl-jap.sh dbacl-a.sh dbacl-o.sh dbacl-O.sh dbacl-z.sh dbacl-zo.sh html.sh html-links.sh html-alt.sh xml.sh  email-mbox.sh email-maildir.sh email-l.sh email-pgp.sh email-uu.sh email-headers.sh email-xheaders.sh email-theaders.sh email-badmime1.sh email-badmime2.sh email-uri.sh email-forms.sh email-scripts.sh email-2047.sh email-style.sh icheck.sh lscheck.sh model-sym1.sh model-sym2.sh model-sym3.sh model-sum1.sh class-unknown1.sh class-unknown2.sh shannon.sh shannon-1.sh shannon-2.sh score-1.sh score-2.sh reservoir.sh pcheck-822g.sh pcheck-822b.sh pcheck-821g.sh pcheck-821b.sh pcheck-2822g.sh pcheck-2822b.sh pcheck-2821g.sh pcheck-2821b.sh
make[4]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
cat dbacl-V.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-V.sh
cat bayesol-V.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> bayesol-V.sh
cat mailinspect-V.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> mailinspect-V.sh
cat dbacl-l.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-l.sh
chmod +x dbacl-V.sh
chmod +x bayesol-V.sh
chmod +x dbacl-l.sh
chmod +x mailinspect-V.sh
cat dbacl-j.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-j.sh
cat dbacl-w3.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-w3.sh
cat dbacl-alpha.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-alpha.sh
cat dbacl-alnum.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-alnum.sh
chmod +x dbacl-j.sh
chmod +x dbacl-w3.sh
chmod +x dbacl-alpha.sh
chmod +x dbacl-alnum.sh
cat dbacl-graph.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-graph.sh
cat dbacl-cef.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-cef.sh
cat dbacl-adp.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-adp.sh
cat dbacl-cef2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-cef2.sh
chmod +x dbacl-cef.sh
chmod +x dbacl-cef2.sh
chmod +x dbacl-graph.sh
chmod +x dbacl-adp.sh
cat dbacl-g.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-g.sh
cat dbacl-jap.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-jap.sh
cat dbacl-a.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-a.sh
cat dbacl-o.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-o.sh
chmod +x dbacl-g.sh
chmod +x dbacl-a.sh
chmod +x dbacl-jap.sh
chmod +x dbacl-o.sh
cat dbacl-O.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-O.sh
cat dbacl-z.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-z.sh
cat dbacl-zo.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> dbacl-zo.sh
cat html.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> html.sh
chmod +x dbacl-z.sh
chmod +x dbacl-zo.sh
chmod +x dbacl-O.sh
chmod +x html.sh
cat html-links.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> html-links.sh
cat html-alt.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> html-alt.sh
cat xml.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> xml.sh
cat email-mbox.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-mbox.sh
chmod +x html-links.sh
chmod +x xml.sh
chmod +x html-alt.sh
cat email-maildir.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-maildir.sh
chmod +x email-mbox.sh
cat email-l.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-l.sh
cat email-pgp.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-pgp.sh
cat email-uu.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-uu.sh
chmod +x email-maildir.sh
chmod +x email-l.sh
chmod +x email-uu.sh
cat email-headers.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-headers.sh
chmod +x email-pgp.sh
cat email-xheaders.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-xheaders.sh
cat email-theaders.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-theaders.sh
chmod +x email-headers.sh
cat email-badmime1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-badmime1.sh
chmod +x email-xheaders.sh
cat email-badmime2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-badmime2.sh
chmod +x email-theaders.sh
cat email-uri.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-uri.sh
chmod +x email-badmime2.sh
chmod +x email-badmime1.sh
cat email-forms.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-forms.sh
cat email-scripts.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-scripts.sh
chmod +x email-uri.sh
cat email-2047.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-2047.sh
chmod +x email-forms.sh
cat email-style.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> email-style.sh
chmod +x email-scripts.sh
cat icheck.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> icheck.sh
chmod +x email-2047.sh
chmod +x email-style.sh
cat lscheck.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> lscheck.sh
chmod +x icheck.sh
cat model-sym1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> model-sym1.sh
cat model-sym2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> model-sym2.sh
cat model-sym3.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> model-sym3.sh
chmod +x lscheck.sh
chmod +x model-sym1.sh
chmod +x model-sym2.sh
chmod +x model-sym3.sh
cat model-sum1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> model-sum1.sh
cat class-unknown1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> class-unknown1.sh
cat class-unknown2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> class-unknown2.sh
cat shannon.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> shannon.sh
chmod +x model-sum1.sh
chmod +x class-unknown1.sh
chmod +x shannon.sh
chmod +x class-unknown2.sh
cat shannon-1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> shannon-1.sh
cat shannon-2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> shannon-2.sh
cat score-1.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> score-1.sh
cat score-2.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> score-2.sh
chmod +x shannon-1.sh
cat reservoir.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> reservoir.sh
chmod +x shannon-2.sh
chmod +x score-1.sh
chmod +x score-2.sh
cat pcheck-822g.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-822g.sh
chmod +x reservoir.sh
cat pcheck-822b.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-822b.sh
cat pcheck-821g.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-821g.sh
cat pcheck-821b.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-821b.sh
chmod +x pcheck-822b.sh
chmod +x pcheck-822g.sh
chmod +x pcheck-821g.sh
chmod +x pcheck-821b.sh
cat pcheck-2822g.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-2822g.sh
cat pcheck-2822b.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-2822b.sh
cat pcheck-2821g.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-2821g.sh
cat pcheck-2821b.shin \
	| sed -e "s|[@]VERSION@|1.14.1|g" \
	> pcheck-2821b.sh
chmod +x pcheck-2822g.sh
chmod +x pcheck-2821g.sh
chmod +x pcheck-2822b.sh
chmod +x pcheck-2821b.sh
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make  check-TESTS
make[4]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
make[5]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
PASS: bayesol-V.sh
PASS: dbacl-V.sh
PASS: mailinspect-V.sh
PASS: dbacl-l.sh
PASS: dbacl-j.sh
PASS: dbacl-w3.sh
PASS: dbacl-alpha.sh
PASS: dbacl-alnum.sh
PASS: dbacl-graph.sh
PASS: dbacl-cef.sh
PASS: dbacl-cef2.sh
PASS: dbacl-adp.sh
PASS: dbacl-a.sh
PASS: dbacl-g.sh
PASS: dbacl-jap.sh
PASS: dbacl-z.sh
PASS: dbacl-o.sh
PASS: html.sh
PASS: dbacl-zo.sh
PASS: html-links.sh
PASS: html-alt.sh
PASS: dbacl-O.sh
PASS: xml.sh
PASS: email-l.sh
PASS: email-mbox.sh
PASS: email-maildir.sh
PASS: email-pgp.sh
PASS: email-uu.sh
PASS: email-headers.sh
PASS: email-xheaders.sh
PASS: email-theaders.sh
PASS: email-badmime1.sh
PASS: email-badmime2.sh
PASS: email-uri.sh
PASS: email-forms.sh
PASS: email-scripts.sh
PASS: email-2047.sh
PASS: email-style.sh
PASS: icheck.sh
PASS: lscheck.sh
PASS: model-sym1.sh
PASS: model-sym3.sh
PASS: model-sym2.sh
PASS: class-unknown1.sh
PASS: model-sum1.sh
PASS: class-unknown2.sh
SKIP: shannon-1.sh
SKIP: shannon-2.sh
PASS: shannon.sh
SKIP: score-2.sh
SKIP: reservoir.sh
PASS: pcheck-822g.sh
PASS: pcheck-822b.sh
PASS: score-1.sh
PASS: pcheck-821g.sh
PASS: pcheck-2822g.sh
PASS: pcheck-821b.sh
PASS: pcheck-2822b.sh
PASS: pcheck-2821g.sh
PASS: pcheck-2821b.sh
============================================================================
Testsuite summary for dbacl 1.14.1
============================================================================
# TOTAL: 60
# PASS:  56
# SKIP:  4
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[5]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making check in man
make[2]: Entering directory '/<<PKGBUILDDIR>>/man'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/<<PKGBUILDDIR>>/man'
Making check in ts
make[2]: Entering directory '/<<PKGBUILDDIR>>/ts'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/<<PKGBUILDDIR>>/ts'
Making check in TREC
make[2]: Entering directory '/<<PKGBUILDDIR>>/TREC'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/<<PKGBUILDDIR>>/TREC'
Making check in contrib
make[2]: Entering directory '/<<PKGBUILDDIR>>/contrib'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/<<PKGBUILDDIR>>/contrib'
make[2]: Entering directory '/<<PKGBUILDDIR>>'
make[2]: Nothing to be done for 'check-am'.
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
 fakeroot debian/rules binary
dh binary
   dh_testroot
   dh_prep
   debian/rules override_dh_auto_install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_install
	make -j4 install DESTDIR=/<<PKGBUILDDIR>>/debian/dbacl AM_UPDATE_INFO_DIR=no
make[2]: Entering directory '/<<PKGBUILDDIR>>'
Making install in doc
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc'
Making install in chess
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[5]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/doc/chess/chess'
 /usr/bin/install -c -m 644 dce.sh csfpc1.png csfpc2.png csfpc3.png down.png spoiler.png dce-basic.sh dce-1.sh dce-2.sh dce-3.sh randomizer.awk renorm.awk combine_half_moves.sh '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/doc/chess/chess'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[5]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[5]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/doc'
 /usr/bin/install -c -m 644 dbacl.ps costs.ps tutorial.html email.html is_it_working.html sample1.txt sample2.txt sample3.txt sample4.txt sample5.txt sample6.txt toy.risk example1.risk example2.risk example3.risk prop.pl japanese.txt spam_chess.html '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/doc'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc'
Making install in src
make[3]: Entering directory '/<<PKGBUILDDIR>>/src'
Making install in .
make[4]: Entering directory '/<<PKGBUILDDIR>>/src'
make[5]: Entering directory '/<<PKGBUILDDIR>>/src'
make[5]: Nothing to be done for 'install-data-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/bin'
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/bin'
 /usr/bin/install -c mailcross mailtoe mailfoot '/<<PKGBUILDDIR>>/debian/dbacl/usr/bin'
  /usr/bin/install -c dbacl bayesol mailinspect hmine hypex '/<<PKGBUILDDIR>>/debian/dbacl/usr/bin'
make[5]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making install in tests
make[4]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
make[5]: Entering directory '/<<PKGBUILDDIR>>/src/tests'
make[5]: Nothing to be done for 'install-exec-am'.
make[5]: Nothing to be done for 'install-data-am'.
make[5]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/src/tests'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src'
Making install in man
make[3]: Entering directory '/<<PKGBUILDDIR>>/man'
make[4]: Entering directory '/<<PKGBUILDDIR>>/man'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/man/man1'
 /usr/bin/install -c -m 644 dbacl.1 bayesol.1 mailcross.1 mailinspect.1 mailtoe.1 mailfoot.1 hmine.1 hypex.1 '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/man/man1'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/man'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/man'
Making install in ts
make[3]: Entering directory '/<<PKGBUILDDIR>>/ts'
make[4]: Entering directory '/<<PKGBUILDDIR>>/ts'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/testsuite'
 /usr/bin/install -c dbaclA dbaclB dbaclC dbaclL ifile spamprobe bogofilterA spambayes popfile qsf bmf spamassassin spamoracle crm114A crm114B antispam annoyance-filter '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/testsuite'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/ts'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/ts'
Making install in TREC
make[3]: Entering directory '/<<PKGBUILDDIR>>/TREC'
make[4]: Entering directory '/<<PKGBUILDDIR>>/TREC'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/TREC'
 /usr/bin/install -c -m 644 initialize classify train finalize checkpoint restart audit-graph audit-scores basic-email verify-stderr OPTIONS README OPTIONS.adp-dir-d OPTIONS.adp-unif-d OPTIONS.bi-adp-unif-d OPTIONS.cef-dir-d OPTIONS.cef-unif-d OPTIONS.simple-d OPTIONS.simple-v OPTIONS.puretext-d OPTIONS.adp-u-d OPTIONS.bi-simple-d OPTIONS.TREC2005.1cefhuj OPTIONS.TREC2005.2adphu OPTIONS.TREC2005.3adphd OPTIONS.TREC2005.4adp TREC2005.txt '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/TREC'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/TREC'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/TREC'
Making install in contrib
make[3]: Entering directory '/<<PKGBUILDDIR>>/contrib'
make[4]: Entering directory '/<<PKGBUILDDIR>>/contrib'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>/contrib'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/contrib'
make[3]: Entering directory '/<<PKGBUILDDIR>>'
make[4]: Entering directory '/<<PKGBUILDDIR>>'
make[4]: Nothing to be done for 'install-exec-am'.
make[4]: Nothing to be done for 'install-data-am'.
make[4]: Leaving directory '/<<PKGBUILDDIR>>'
make[3]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
rm -rf debian/dbacl/usr/share/dbacl/doc
/usr/bin/make -C doc install \
	actual_doc_dir=/<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl
make[2]: Entering directory '/<<PKGBUILDDIR>>/doc'
Making install in chess
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc/chess'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/chess'
 /usr/bin/install -c -m 644 dce.sh csfpc1.png csfpc2.png csfpc3.png down.png spoiler.png dce-basic.sh dce-1.sh dce-2.sh dce-3.sh randomizer.awk renorm.awk combine_half_moves.sh '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/chess'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc/chess'
make[3]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[4]: Entering directory '/<<PKGBUILDDIR>>/doc'
make[4]: Nothing to be done for 'install-exec-am'.
 /bin/mkdir -p '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl'
 /usr/bin/install -c -m 644 dbacl.ps costs.ps tutorial.html email.html is_it_working.html sample1.txt sample2.txt sample3.txt sample4.txt sample5.txt sample6.txt toy.risk example1.risk example2.risk example3.risk prop.pl japanese.txt spam_chess.html '/<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl'
make[4]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[3]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[2]: Leaving directory '/<<PKGBUILDDIR>>/doc'
mkdir /<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/examples
for file in example*.risk toy.risk prop.pl sample*.txt ; do \
    mv -f /<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/$file \
      /<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/examples ; \
done
for file in audit-graph audit-scores checkpoint classify \
	    finalize initialize restart train ; \
do \
    chmod 0755 /<<PKGBUILDDIR>>/debian/dbacl/usr/share/dbacl/TREC/$file ; \
done
cp AUTHORS NEWS README /<<PKGBUILDDIR>>/debian/dbacl/usr/share/doc/dbacl/
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installdocs
   dh_installchangelogs
   dh_installman
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
   dh_fixperms
   dh_missing
   dh_dwz
   dh_strip
   dh_makeshlibs
   dh_shlibdeps
dpkg-shlibdeps: warning: package could avoid a useless dependency if debian/dbacl/usr/bin/mailinspect was not linked against libtinfo.so.6 (it uses none of the library's symbols)
dpkg-shlibdeps: warning: package could avoid a useless dependency if debian/dbacl/usr/bin/mailinspect was not linked against libncurses.so.6 (it uses none of the library's symbols)
   dh_installdeb
   dh_gencontrol
   dh_md5sums
   dh_builddeb
dpkg-deb: building package 'dbacl-dbgsym' in '../dbacl-dbgsym_1.14.1-2_amd64.deb'.
dpkg-deb: building package 'dbacl' in '../dbacl_1.14.1-2_amd64.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../dbacl_1.14.1-2_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T01:29:17Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


dbacl_1.14.1-2_amd64.changes:
-----------------------------

Format: 1.8
Date: Mon, 26 Aug 2019 14:16:21 +0200
Source: dbacl
Binary: dbacl dbacl-dbgsym
Architecture: amd64
Version: 1.14.1-2
Distribution: unstable
Urgency: medium
Maintainer: Debian QA Group <packages@qa.debian.org>
Changed-By: Fabian Wolff <fabi.wolff@arcor.de>
Description:
 dbacl      - digramic Bayesian text classifier
Closes: 916182
Changes:
 dbacl (1.14.1-2) unstable; urgency=medium
 .
   * QA upload.
   * Include <locale.h> in dbacl.h (Closes: #916182).
   * Regenerate lexer and parser during build using flex and bison.
   * Delete trailing whitespace from debian/{changelog,control}.
   * Upgrade to debhelper compat level 12.
   * Upgrade to Standards-Version 4.4.0 (no changes).
   * Add Vcs-Git and Vcs-Browser fields in debian/control.
Checksums-Sha1:
 6f8c7b31cb771b77e0a22a6f652298b76602effb 421840 dbacl-dbgsym_1.14.1-2_amd64.deb
 c53876fcf2cebc7c32f24e24ead7ae58812926d2 5486 dbacl_1.14.1-2_amd64.buildinfo
 3597af275bd293bbc4229345f0075a3e396c814a 634552 dbacl_1.14.1-2_amd64.deb
Checksums-Sha256:
 9fb0e025455667778a9979e0fba979f694df4152962d5aa4948c111a48e5e58d 421840 dbacl-dbgsym_1.14.1-2_amd64.deb
 49c7f307d0859b598cb2076a8aeb1d4501de21e05f45fbc13401a86691461c6e 5486 dbacl_1.14.1-2_amd64.buildinfo
 91bb9f95ce9b1e7f12bc05064d2e31c00a44d05b6758c1cfece8ffe4d9170216 634552 dbacl_1.14.1-2_amd64.deb
Files:
 0f3238a036c8ddf8207f96b9986c9395 421840 debug optional dbacl-dbgsym_1.14.1-2_amd64.deb
 5acc4b6b4b234355c31940bca21ffab6 5486 text optional dbacl_1.14.1-2_amd64.buildinfo
 a2e49a6253984870330efda29bc08178 634552 text optional dbacl_1.14.1-2_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: dbacl
Binary: dbacl
Architecture: amd64
Version: 1.14.1-2
Checksums-Md5:
 0f3238a036c8ddf8207f96b9986c9395 421840 dbacl-dbgsym_1.14.1-2_amd64.deb
 a2e49a6253984870330efda29bc08178 634552 dbacl_1.14.1-2_amd64.deb
Checksums-Sha1:
 6f8c7b31cb771b77e0a22a6f652298b76602effb 421840 dbacl-dbgsym_1.14.1-2_amd64.deb
 3597af275bd293bbc4229345f0075a3e396c814a 634552 dbacl_1.14.1-2_amd64.deb
Checksums-Sha256:
 9fb0e025455667778a9979e0fba979f694df4152962d5aa4948c111a48e5e58d 421840 dbacl-dbgsym_1.14.1-2_amd64.deb
 91bb9f95ce9b1e7f12bc05064d2e31c00a44d05b6758c1cfece8ffe4d9170216 634552 dbacl_1.14.1-2_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 01:29:16 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bison (= 2:3.5.1+dfsg-1),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-10 (= 1:10.0.0~+rc2-1),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 flex (= 2.6.4-6.2),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-10-dev (= 1:10.0.0~+rc2-1),
 libclang-cpp10 (= 1:10.0.0~+rc2-1),
 libclang1-10 (= 1:10.0.0~+rc2-1),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm10 (= 1:10.0.0~+rc2-1),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpfr6 (= 4.0.2-1),
 libncurses-dev (= 6.1+20191019-1),
 libncurses6 (= 6.1+20191019-1),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-9-dev (= 9.2.1-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libpng-dev (= 1.6.37-2),
 libpng16-16 (= 1.6.37-2),
 libquadmath0 (= 10-20200222-1),
 libreadline-gplv2-dev (= 5.2+dfsg-3+b13),
 libreadline5 (= 5.2+dfsg-3+b13),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libslang2 (= 2.3.2-4),
 libslang2-dev (= 2.3.2-4),
 libsmartcols1 (= 2.34-0.1),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo-dev (= 6.1+20191019-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 readline-common (= 8.0-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-1.2),
 zlib1g-dev (= 1:1.2.11.dfsg-1.2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1566821781"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


dbacl-dbgsym_1.14.1-2_amd64.deb
-------------------------------

 new Debian package, version 2.0.
 size 421840 bytes: control archive=776 bytes.
     496 bytes,    12 lines      control              
     612 bytes,     6 lines      md5sums              
 Package: dbacl-dbgsym
 Source: dbacl
 Version: 1.14.1-2
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Debian QA Group <packages@qa.debian.org>
 Installed-Size: 508
 Depends: dbacl (= 1.14.1-2)
 Section: debug
 Priority: optional
 Description: debug symbols for dbacl
 Build-Ids: 277b326ca8a9e849936ac3c17af251250609cb16 49f38982bcade359ca834a2b3e8085334e5643e5 6c9efb6a6b252a2ca09f0271bc42803c2f897aab c8ae509d988745f296934f01b5a7b181d08b1a46 fa8edaf2f20f51ab042a0495bcc2f07da91c8a37

drwxr-xr-x root/root         0 2019-08-26 12:16 ./
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/27/
-rw-r--r-- root/root    156816 2019-08-26 12:16 ./usr/lib/debug/.build-id/27/7b326ca8a9e849936ac3c17af251250609cb16.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/49/
-rw-r--r-- root/root    111904 2019-08-26 12:16 ./usr/lib/debug/.build-id/49/f38982bcade359ca834a2b3e8085334e5643e5.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/6c/
-rw-r--r-- root/root     40880 2019-08-26 12:16 ./usr/lib/debug/.build-id/6c/9efb6a6b252a2ca09f0271bc42803c2f897aab.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/c8/
-rw-r--r-- root/root     36408 2019-08-26 12:16 ./usr/lib/debug/.build-id/c8/ae509d988745f296934f01b5a7b181d08b1a46.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.build-id/fa/
-rw-r--r-- root/root    136376 2019-08-26 12:16 ./usr/lib/debug/.build-id/fa/8edaf2f20f51ab042a0495bcc2f07da91c8a37.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.dwz/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/lib/debug/.dwz/x86_64-linux-gnu/
-rw-r--r-- root/root     17952 2019-08-26 12:16 ./usr/lib/debug/.dwz/x86_64-linux-gnu/dbacl.debug
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/doc/
lrwxrwxrwx root/root         0 2019-08-26 12:16 ./usr/share/doc/dbacl-dbgsym -> dbacl


dbacl_1.14.1-2_amd64.deb
------------------------

 new Debian package, version 2.0.
 size 634552 bytes: control archive=3168 bytes.
     709 bytes,    19 lines      control              
    6626 bytes,    97 lines      md5sums              
 Package: dbacl
 Version: 1.14.1-2
 Architecture: amd64
 Maintainer: Debian QA Group <packages@qa.debian.org>
 Installed-Size: 1445
 Depends: libc6 (>= 2.29), libncurses6 (>= 6), libreadline5 (>= 5.2), libslang2 (>= 2.2.4), libtinfo6 (>= 6)
 Section: text
 Priority: optional
 Homepage: http://www.lbreyer.com/gpl.html
 Description: digramic Bayesian text classifier
  dbacl can distill text documents into categories, and then
  compare other text documents to the learned categories.
  .
  It can be used to recognize spam, and more generally
  sort incoming email into any number of categories such as
  work, play, and so on.
  .
  As a noise filter, it can be useful during the indexing of
  personal document collections.

drwxr-xr-x root/root         0 2019-08-26 12:16 ./
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/bin/
-rwxr-xr-x root/root     56296 2019-08-26 12:16 ./usr/bin/bayesol
-rwxr-xr-x root/root    236560 2019-08-26 12:16 ./usr/bin/dbacl
-rwxr-xr-x root/root    146392 2019-08-26 12:16 ./usr/bin/hmine
-rwxr-xr-x root/root     52184 2019-08-26 12:16 ./usr/bin/hypex
-rwxr-xr-x root/root     14151 2019-08-26 12:16 ./usr/bin/mailcross
-rwxr-xr-x root/root     14356 2019-08-26 12:16 ./usr/bin/mailfoot
-rwxr-xr-x root/root    199648 2019-08-26 12:16 ./usr/bin/mailinspect
-rwxr-xr-x root/root     14328 2019-08-26 12:16 ./usr/bin/mailtoe
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/dbacl/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/dbacl/TREC/
-rw-r--r-- root/root       277 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS
-rw-r--r-- root/root       261 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.TREC2005.1cefhuj
-rw-r--r-- root/root       258 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.TREC2005.2adphu
-rw-r--r-- root/root       260 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.TREC2005.3adphd
-rw-r--r-- root/root       216 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.TREC2005.4adp
-rw-r--r-- root/root       260 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.adp-dir-d
-rw-r--r-- root/root       257 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.adp-u-d
-rw-r--r-- root/root       258 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.adp-unif-d
-rw-r--r-- root/root       212 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.bi-adp-unif-d
-rw-r--r-- root/root       186 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.bi-simple-d
-rw-r--r-- root/root       263 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.cef-dir-d
-rw-r--r-- root/root       261 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.cef-unif-d
-rw-r--r-- root/root       130 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.puretext-d
-rw-r--r-- root/root       128 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.simple-d
-rw-r--r-- root/root       127 2019-08-26 12:16 ./usr/share/dbacl/TREC/OPTIONS.simple-v
-rw-r--r-- root/root      5021 2019-08-26 12:16 ./usr/share/dbacl/TREC/README
-rw-r--r-- root/root      2625 2019-08-26 12:16 ./usr/share/dbacl/TREC/TREC2005.txt
-rwxr-xr-x root/root      2954 2019-08-26 12:16 ./usr/share/dbacl/TREC/audit-graph
-rwxr-xr-x root/root      1789 2019-08-26 12:16 ./usr/share/dbacl/TREC/audit-scores
-rw-r--r-- root/root       150 2019-08-26 12:16 ./usr/share/dbacl/TREC/basic-email
-rwxr-xr-x root/root       157 2019-08-26 12:16 ./usr/share/dbacl/TREC/checkpoint
-rwxr-xr-x root/root       361 2019-08-26 12:16 ./usr/share/dbacl/TREC/classify
-rwxr-xr-x root/root       607 2019-08-26 12:16 ./usr/share/dbacl/TREC/finalize
-rwxr-xr-x root/root      1058 2019-08-26 12:16 ./usr/share/dbacl/TREC/initialize
-rwxr-xr-x root/root       175 2019-08-26 12:16 ./usr/share/dbacl/TREC/restart
-rwxr-xr-x root/root       285 2019-08-26 12:16 ./usr/share/dbacl/TREC/train
-rw-r--r-- root/root       109 2019-08-26 12:16 ./usr/share/dbacl/TREC/verify-stderr
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/dbacl/testsuite/
-rwxr-xr-x root/root      4280 2019-08-26 12:16 ./usr/share/dbacl/testsuite/annoyance-filter
-rwxr-xr-x root/root      4056 2019-08-26 12:16 ./usr/share/dbacl/testsuite/antispam
-rwxr-xr-x root/root      3829 2019-08-26 12:16 ./usr/share/dbacl/testsuite/bmf
-rwxr-xr-x root/root      4316 2019-08-26 12:16 ./usr/share/dbacl/testsuite/bogofilterA
-rwxr-xr-x root/root      8295 2019-08-26 12:16 ./usr/share/dbacl/testsuite/crm114A
-rwxr-xr-x root/root      3998 2019-08-26 12:16 ./usr/share/dbacl/testsuite/crm114B
-rwxr-xr-x root/root      4238 2019-08-26 12:16 ./usr/share/dbacl/testsuite/dbaclA
-rwxr-xr-x root/root      4256 2019-08-26 12:16 ./usr/share/dbacl/testsuite/dbaclB
-rwxr-xr-x root/root      4548 2019-08-26 12:16 ./usr/share/dbacl/testsuite/dbaclC
-rwxr-xr-x root/root      4271 2019-08-26 12:16 ./usr/share/dbacl/testsuite/dbaclL
-rwxr-xr-x root/root      3505 2019-08-26 12:16 ./usr/share/dbacl/testsuite/ifile
-rwxr-xr-x root/root      7720 2019-08-26 12:16 ./usr/share/dbacl/testsuite/popfile
-rwxr-xr-x root/root      4059 2019-08-26 12:16 ./usr/share/dbacl/testsuite/qsf
-rwxr-xr-x root/root      4382 2019-08-26 12:16 ./usr/share/dbacl/testsuite/spamassassin
-rwxr-xr-x root/root      4149 2019-08-26 12:16 ./usr/share/dbacl/testsuite/spambayes
-rwxr-xr-x root/root      4399 2019-08-26 12:16 ./usr/share/dbacl/testsuite/spamoracle
-rwxr-xr-x root/root      3883 2019-08-26 12:16 ./usr/share/dbacl/testsuite/spamprobe
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/doc/dbacl/
-rw-r--r-- root/root        31 2019-08-26 12:16 ./usr/share/doc/dbacl/AUTHORS
-rw-r--r-- root/root      3336 2019-08-26 12:16 ./usr/share/doc/dbacl/NEWS.gz
-rw-r--r-- root/root      3547 2019-08-26 12:16 ./usr/share/doc/dbacl/README.gz
-rw-r--r-- root/root      2032 2019-08-26 12:16 ./usr/share/doc/dbacl/changelog.Debian.gz
-rw-r--r-- root/root      5098 2018-03-31 16:26 ./usr/share/doc/dbacl/changelog.gz
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/
-rw-r--r-- root/root        73 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/combine_half_moves.sh
-rw-r--r-- root/root      3677 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/csfpc1.png
-rw-r--r-- root/root      3770 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/csfpc2.png
-rw-r--r-- root/root      3747 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/csfpc3.png
-rw-r--r-- root/root      3428 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/dce-1.sh
-rw-r--r-- root/root      3707 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/dce-2.sh
-rw-r--r-- root/root      1899 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/dce-3.sh.gz
-rw-r--r-- root/root      3112 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/dce-basic.sh
-rw-r--r-- root/root      2265 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/dce.sh.gz
-rw-r--r-- root/root       308 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/down.png
-rw-r--r-- root/root       343 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/randomizer.awk
-rw-r--r-- root/root        76 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/renorm.awk
-rw-r--r-- root/root       169 2019-08-26 12:16 ./usr/share/doc/dbacl/chess/spoiler.png
-rw-r--r-- root/root      1331 2019-08-26 12:16 ./usr/share/doc/dbacl/copyright
-rw-r--r-- root/root    119029 2019-08-26 12:16 ./usr/share/doc/dbacl/costs.ps.gz
-rw-r--r-- root/root    214175 2019-08-26 12:16 ./usr/share/doc/dbacl/dbacl.ps.gz
-rw-r--r-- root/root     26689 2019-08-26 12:16 ./usr/share/doc/dbacl/email.html
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/
-rw-r--r-- root/root       318 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/example1.risk
-rw-r--r-- root/root       452 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/example2.risk
-rw-r--r-- root/root       489 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/example3.risk
-rw-r--r-- root/root       168 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/prop.pl
-rw-r--r-- root/root      3318 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample1.txt
-rw-r--r-- root/root      3940 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample2.txt
-rw-r--r-- root/root      3283 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample3.txt
-rw-r--r-- root/root      2932 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample4.txt
-rw-r--r-- root/root      1776 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample5.txt
-rw-r--r-- root/root      4055 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/sample6.txt
-rw-r--r-- root/root       136 2019-08-26 12:16 ./usr/share/doc/dbacl/examples/toy.risk
-rw-r--r-- root/root      6775 2019-08-26 12:16 ./usr/share/doc/dbacl/is_it_working.html
-rw-r--r-- root/root      8037 2019-08-26 12:16 ./usr/share/doc/dbacl/japanese.txt.gz
-rw-r--r-- root/root     69310 2019-08-26 12:16 ./usr/share/doc/dbacl/spam_chess.html
-rw-r--r-- root/root     35675 2019-08-26 12:16 ./usr/share/doc/dbacl/tutorial.html
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/man/
drwxr-xr-x root/root         0 2019-08-26 12:16 ./usr/share/man/man1/
-rw-r--r-- root/root      2099 2019-08-26 12:16 ./usr/share/man/man1/bayesol.1.gz
-rw-r--r-- root/root     15382 2019-08-26 12:16 ./usr/share/man/man1/dbacl.1.gz
-rw-r--r-- root/root       814 2019-08-26 12:16 ./usr/share/man/man1/hmine.1.gz
-rw-r--r-- root/root      1009 2019-08-26 12:16 ./usr/share/man/man1/hypex.1.gz
-rw-r--r-- root/root      4357 2019-08-26 12:16 ./usr/share/man/man1/mailcross.1.gz
-rw-r--r-- root/root      4862 2019-08-26 12:16 ./usr/share/man/man1/mailfoot.1.gz
-rw-r--r-- root/root      2590 2019-08-26 12:16 ./usr/share/man/man1/mailinspect.1.gz
-rw-r--r-- root/root      4988 2019-08-26 12:16 ./usr/share/man/man1/mailtoe.1.gz


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 15464
Build-Time: 21
Distribution: unstable
Host Architecture: amd64
Install-Time: 4
Job: dbacl_1.14.1-2
Machine Architecture: amd64
Package: dbacl
Package-Time: 39
Source-Version: 1.14.1-2
Space: 15464
Status: successful
Version: 1.14.1-2
--------------------------------------------------------------------------------
Finished at 2020-02-25T01:29:17Z
Build needed 00:00:39, 15464k disk space
DC-Status: OK 40.024489415s
DC-Time-Estimation: 40.024489415 versus expected 131 (r/m: 2.2729961559710756 ; m: 40.024489415)
