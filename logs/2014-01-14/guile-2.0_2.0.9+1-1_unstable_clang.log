DC-Build-Header: guile-2.0 2.0.9+1-1 / 2014-01-06 00:54:49 +0000
DC-Task: source:guile-2.0 version:2.0.9+1-1 architecture:any chroot:unstable esttime: logfile:/tmp/guile-2.0_2.0.9+1-1_unstable_clang.log modes:binary-only:parallel:clang
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang --append-to-version "clang1" --maintainer "Lucas Nussbaum <lucas@debian.org>" --uploader "Lucas Nussbaum <lucas@debian.org>" guile-2.0_2.0.9+1-1'
sbuild (Debian sbuild) 0.63.2 (18 Aug 2012) on ip-172-31-7-217.us-west-2.compute.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ guile-2.0 2.0.9+1-1clang1 (amd64)                          06 Jan 2014 00:54 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: guile-2.0
Version: 2.0.9+1-1clang1
Source Version: 2.0.9+1-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64

I: NOTICE: Log filtering will replace 'build/guile-2.0-TWaXdC/guile-2.0-2.0.9+1' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/guile-2.0-TWaXdC' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-e7342c7c-f260-4c65-8e32-e447c7be0cc1' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Get:1 http://localhost:9999 unstable InRelease [206 kB]
Get:2 http://localhost:9999 unstable/main Sources/DiffIndex [7876 B]
Get:3 http://localhost:9999 unstable/main amd64 Packages/DiffIndex [7876 B]
Get:4 http://localhost:9999 unstable/main Translation-en/DiffIndex [7876 B]
Get:5 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [11.3 kB]
Get:6 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [11.3 kB]
Get:7 http://localhost:9999 unstable/main amd64 2014-01-04-1439.27.pdiff [11.8 kB]
Get:8 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [1898 B]
Get:9 http://localhost:9999 unstable/main amd64 2014-01-04-1439.27.pdiff [11.8 kB]
Get:10 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [12.3 kB]
Get:11 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [1898 B]
Get:12 http://localhost:9999 unstable/main amd64 2014-01-04-2039.41.pdiff [24.3 kB]
Get:13 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [12.3 kB]
Get:14 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [2358 B]
Get:15 http://localhost:9999 unstable/main amd64 2014-01-04-2039.41.pdiff [24.3 kB]
Get:16 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [9640 B]
Get:17 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [2358 B]
Get:18 http://localhost:9999 unstable/main amd64 2014-01-05-0239.35.pdiff [18.3 kB]
Get:19 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [9640 B]
Get:20 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [504 B]
Get:21 http://localhost:9999 unstable/main amd64 2014-01-05-0239.35.pdiff [18.3 kB]
Get:22 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [4885 B]
Get:23 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [504 B]
Get:24 http://localhost:9999 unstable/main amd64 2014-01-05-0840.32.pdiff [3950 B]
Get:25 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [4885 B]
Get:26 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [214 B]
Get:27 http://localhost:9999 unstable/main amd64 2014-01-05-0840.32.pdiff [3950 B]
Get:28 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [7183 B]
Get:29 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [214 B]
Get:30 http://localhost:9999 unstable/main amd64 2014-01-05-1438.24.pdiff [3882 B]
Get:31 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [7183 B]
Get:32 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [1111 B]
Get:33 http://localhost:9999 unstable/main amd64 2014-01-05-1438.24.pdiff [3882 B]
Get:34 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [20.2 kB]
Get:35 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [1111 B]
Get:36 http://localhost:9999 unstable/main amd64 2014-01-05-2041.02.pdiff [17.0 kB]
Get:37 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [20.2 kB]
Get:38 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [2166 B]
Get:39 http://localhost:9999 unstable/main amd64 2014-01-05-2041.02.pdiff [17.0 kB]
Get:40 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [2166 B]
Fetched 382 kB in 24s (15.5 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be upgraded:
  libterm-ui-perl
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.1 kB of archives.
After this operation, 1024 B of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libterm-ui-perl all 0.42-1 [19.1 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 19.1 kB in 0s (1167 kB/s)
(Reading database ... 13944 files and directories currently installed.)
Preparing to unpack .../libterm-ui-perl_0.42-1_all.deb ...
Unpacking libterm-ui-perl (0.42-1) over (0.38-1) ...
Setting up libterm-ui-perl (0.42-1) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 4211 kB of source archives.
Get:1 http://localhost:9999/debian/ unstable/main guile-2.0 2.0.9+1-1 (dsc) [2059 B]
Get:2 http://localhost:9999/debian/ unstable/main guile-2.0 2.0.9+1-1 (tar) [4194 kB]
Get:3 http://localhost:9999/debian/ unstable/main guile-2.0 2.0.9+1-1 (diff) [14.7 kB]
Fetched 4211 kB in 2s (1838 kB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ echo 'Install of clang-3.4'
Install of clang-3.4
+ apt-get update
Hit http://localhost:9999 unstable InRelease
Hit http://localhost:9999 unstable/main Sources/DiffIndex
Hit http://localhost:9999 unstable/main amd64 Packages/DiffIndex
Hit http://localhost:9999 unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-3.4
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-3.4-dev libclang1-3.4 libffi6 libllvm3.4 libobjc-4.8-dev
  libobjc4
Recommended packages:
  llvm-3.4-dev python
The following NEW packages will be installed:
  clang-3.4 libclang-common-3.4-dev libclang1-3.4 libffi6 libllvm3.4
  libobjc-4.8-dev libobjc4
0 upgraded, 7 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.9 MB of archives.
After this operation, 82.1 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libffi6 amd64 3.0.13-10 [19.3 kB]
Get:2 http://localhost:9999/debian/ unstable/main libllvm3.4 amd64 1:3.4-1 [6528 kB]
Get:3 http://localhost:9999/debian/ unstable/main libobjc4 amd64 4.8.2-11 [110 kB]
Get:4 http://localhost:9999/debian/ unstable/main libobjc-4.8-dev amd64 4.8.2-11 [370 kB]
Get:5 http://localhost:9999/debian/ unstable/main libclang1-3.4 amd64 1:3.4-1 [3526 kB]
Get:6 http://localhost:9999/debian/ unstable/main libclang-common-3.4-dev amd64 1:3.4-1 [516 kB]
Get:7 http://localhost:9999/debian/ unstable/main clang-3.4 amd64 1:3.4-1 [8878 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 19.9 MB in 0s (25.4 MB/s)
Selecting previously unselected package libffi6:amd64.
(Reading database ... 13944 files and directories currently installed.)
Preparing to unpack .../libffi6_3.0.13-10_amd64.deb ...
Unpacking libffi6:amd64 (3.0.13-10) ...
Selecting previously unselected package libllvm3.4:amd64.
Preparing to unpack .../libllvm3.4_1%3a3.4-1_amd64.deb ...
Unpacking libllvm3.4:amd64 (1:3.4-1) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../libobjc4_4.8.2-11_amd64.deb ...
Unpacking libobjc4:amd64 (4.8.2-11) ...
Selecting previously unselected package libobjc-4.8-dev:amd64.
Preparing to unpack .../libobjc-4.8-dev_4.8.2-11_amd64.deb ...
Unpacking libobjc-4.8-dev:amd64 (4.8.2-11) ...
Selecting previously unselected package libclang1-3.4:amd64.
Preparing to unpack .../libclang1-3.4_1%3a3.4-1_amd64.deb ...
Unpacking libclang1-3.4:amd64 (1:3.4-1) ...
Selecting previously unselected package libclang-common-3.4-dev.
Preparing to unpack .../libclang-common-3.4-dev_1%3a3.4-1_amd64.deb ...
Unpacking libclang-common-3.4-dev (1:3.4-1) ...
Selecting previously unselected package clang-3.4.
Preparing to unpack .../clang-3.4_1%3a3.4-1_amd64.deb ...
Unpacking clang-3.4 (1:3.4-1) ...
Setting up libffi6:amd64 (3.0.13-10) ...
Setting up libllvm3.4:amd64 (1:3.4-1) ...
Setting up libobjc4:amd64 (4.8.2-11) ...
Setting up libobjc-4.8-dev:amd64 (4.8.2-11) ...
Setting up libclang1-3.4:amd64 (1:3.4-1) ...
Setting up libclang-common-3.4-dev (1:3.4-1) ...
Setting up clang-3.4 (1:3.4-1) ...
Processing triggers for libc-bin (2.17-97) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8'
+ cd /usr/bin
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.6 gcc-4.6 cpp-4.6
+ ln -s clang++ g++-4.6
+ ln -s clang gcc-4.6
+ ln -s clang cpp-4.6
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.8 gcc-4.8 cpp-4.8
+ ln -s clang++ g++-4.8
+ ln -s clang gcc-4.8
+ ln -s clang cpp-4.8
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
+ echo 'cpp-4.8 hold'
+ dpkg --set-selections
+ echo 'g++-4.8 hold'
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-2MfcFZ/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/766 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 14105 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), libtool, debhelper (>= 8), autoconf, automake, dh-autoreconf, libncurses5-dev, libreadline6-dev, libltdl-dev, libgmp-dev, texinfo, flex, libunistring-dev, libgc-dev, libffi-dev, pkg-config
Filtered Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), libtool, debhelper (>= 8), autoconf, automake, dh-autoreconf, libncurses5-dev, libreadline6-dev, libltdl-dev, libgmp-dev, texinfo, flex, libunistring-dev, libgc-dev, libffi-dev, pkg-config
dpkg-deb: building package `sbuild-build-depends-guile-2.0-dummy' in `/«BUILDDIR»/resolver-_i0wa7/apt_archive/sbuild-build-depends-guile-2.0-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install guile-2.0 build dependencies (apt-based resolver)                    │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf file flex gettext gettext-base groff-base intltool-debian
  libasprintf0c2 libcroco3 libffi-dev libgc-dev libglib2.0-0 libgmp-dev
  libintl-perl libltdl-dev libltdl7 libmagic1 libncurses5-dev libpipeline1
  libpopt0 libreadline6-dev libsigsegv2 libtext-unidecode-perl libtinfo-dev
  libtool libunistring-dev libunistring0 libxml-libxml-perl
  libxml-namespacesupport-perl libxml-sax-base-perl libxml-sax-perl libxml2 m4
  man-db pkg-config po-debconf texinfo
Suggested packages:
  autoconf2.13 autoconf-archive gnu-standards autoconf-doc wamerican wordlist
  whois vacation dh-make bison gettext-doc groff libgmp10-doc libmpfr-dev
  libintl-xs-perl libtool-doc ncurses-doc automaken gfortran
  fortran95-compiler gcj-jdk less www-browser libmail-box-perl texlive-base
  texlive-latex-base texlive-generic-recommended texinfo-doc-nonfree
Recommended packages:
  curl wget lynx-cur libasprintf-dev libgettextpo-dev libglib2.0-data
  shared-mime-info libxml-sax-expat-perl xml-core libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf file flex gettext gettext-base groff-base intltool-debian
  libasprintf0c2 libcroco3 libffi-dev libgc-dev libglib2.0-0 libgmp-dev
  libintl-perl libltdl-dev libltdl7 libmagic1 libncurses5-dev libpipeline1
  libpopt0 libreadline6-dev libsigsegv2 libtext-unidecode-perl libtinfo-dev
  libtool libunistring-dev libunistring0 libxml-libxml-perl
  libxml-namespacesupport-perl libxml-sax-base-perl libxml-sax-perl libxml2 m4
  man-db pkg-config po-debconf sbuild-build-depends-guile-2.0-dummy texinfo
0 upgraded, 44 newly installed, 0 to remove and 0 not upgraded.
Need to get 16.0 MB/16.0 MB of archives.
After this operation, 52.6 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libpipeline1 amd64 1.2.6-1 [24.8 kB]
Get:2 http://localhost:9999/debian/ unstable/main libpopt0 amd64 1.16-8 [48.9 kB]
Get:3 http://localhost:9999/debian/ unstable/main groff-base amd64 1.22.2-3 [747 kB]
Get:4 http://localhost:9999/debian/ unstable/main bsdmainutils amd64 9.0.5 [211 kB]
Get:5 http://localhost:9999/debian/ unstable/main man-db amd64 2.6.5-3 [975 kB]
Get:6 http://localhost:9999/debian/ unstable/main libasprintf0c2 amd64 0.18.3.1-2 [29.1 kB]
Get:7 http://localhost:9999/debian/ unstable/main libmagic1 amd64 1:5.14-2 [216 kB]
Get:8 http://localhost:9999/debian/ unstable/main libxml2 amd64 2.9.1+dfsg1-3 [791 kB]
Get:9 http://localhost:9999/debian/ unstable/main libsigsegv2 amd64 2.10-2 [29.8 kB]
Get:10 http://localhost:9999/debian/ unstable/main m4 amd64 1.4.17-2 [255 kB]
Get:11 http://localhost:9999/debian/ unstable/main flex amd64 2.5.35-10.1 [332 kB]
Get:12 http://localhost:9999/debian/ unstable/main libglib2.0-0 amd64 2.36.4-1 [2055 kB]
Get:13 http://localhost:9999/debian/ unstable/main libcroco3 amd64 0.6.8-2 [133 kB]
Get:14 http://localhost:9999/debian/ unstable/main libltdl7 amd64 2.4.2-1.6 [352 kB]
Get:15 http://localhost:9999/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:16 http://localhost:9999/debian/ unstable/main file amd64 1:5.14-2 [54.0 kB]
Get:17 http://localhost:9999/debian/ unstable/main gettext-base amd64 0.18.3.1-2 [116 kB]
Get:18 http://localhost:9999/debian/ unstable/main libtext-unidecode-perl all 0.04-2 [115 kB]
Get:19 http://localhost:9999/debian/ unstable/main libintl-perl all 1.23-1 [1209 kB]
Get:20 http://localhost:9999/debian/ unstable/main libxml-namespacesupport-perl all 1.11-1 [14.8 kB]
Get:21 http://localhost:9999/debian/ unstable/main libxml-sax-base-perl all 1.07-1 [23.1 kB]
Get:22 http://localhost:9999/debian/ unstable/main libxml-sax-perl all 0.99+dfsg-2 [68.3 kB]
Get:23 http://localhost:9999/debian/ unstable/main libxml-libxml-perl amd64 2.0108+dfsg-1 [358 kB]
Get:24 http://localhost:9999/debian/ unstable/main texinfo amd64 5.2.0.dfsg.1-2 [954 kB]
Get:25 http://localhost:9999/debian/ unstable/main autoconf all 2.69-2 [339 kB]
Get:26 http://localhost:9999/debian/ unstable/main autotools-dev all 20130810.1 [69.6 kB]
Get:27 http://localhost:9999/debian/ unstable/main automake all 1:1.14.1-2 [724 kB]
Get:28 http://localhost:9999/debian/ unstable/main autopoint all 0.18.3.1-2 [392 kB]
Get:29 http://localhost:9999/debian/ unstable/main gettext amd64 0.18.3.1-2 [1202 kB]
Get:30 http://localhost:9999/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:31 http://localhost:9999/debian/ unstable/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:32 http://localhost:9999/debian/ unstable/main debhelper all 9.20131227 [687 kB]
Get:33 http://localhost:9999/debian/ unstable/main libtool amd64 2.4.2-1.6 [505 kB]
Get:34 http://localhost:9999/debian/ unstable/main dh-autoreconf all 9 [15.5 kB]
Get:35 http://localhost:9999/debian/ unstable/main libffi-dev amd64 3.0.13-10 [100 kB]
Get:36 http://localhost:9999/debian/ unstable/main libgc-dev amd64 1:7.2d-6 [224 kB]
Get:37 http://localhost:9999/debian/ unstable/main libgmp-dev amd64 2:5.1.3+dfsg-1 [582 kB]
Get:38 http://localhost:9999/debian/ unstable/main libltdl-dev amd64 2.4.2-1.6 [156 kB]
Get:39 http://localhost:9999/debian/ unstable/main libtinfo-dev amd64 5.9+20130608-1 [108 kB]
Get:40 http://localhost:9999/debian/ unstable/main libncurses5-dev amd64 5.9+20130608-1 [222 kB]
Get:41 http://localhost:9999/debian/ unstable/main libreadline6-dev amd64 6.2+dfsg-0.1 [193 kB]
Get:42 http://localhost:9999/debian/ unstable/main libunistring-dev amd64 0.9.3-5 [650 kB]
Get:43 http://localhost:9999/debian/ unstable/main pkg-config amd64 0.26-1 [59.5 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 16.0 MB in 2s (5696 kB/s)
Selecting previously unselected package libpipeline1:amd64.
(Reading database ... 14105 files and directories currently installed.)
Preparing to unpack .../libpipeline1_1.2.6-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.2.6-1) ...
Selecting previously unselected package libpopt0:amd64.
Preparing to unpack .../libpopt0_1.16-8_amd64.deb ...
Unpacking libpopt0:amd64 (1.16-8) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../groff-base_1.22.2-3_amd64.deb ...
Unpacking groff-base (1.22.2-3) ...
Selecting previously unselected package bsdmainutils.
Preparing to unpack .../bsdmainutils_9.0.5_amd64.deb ...
Unpacking bsdmainutils (9.0.5) ...
Selecting previously unselected package man-db.
Preparing to unpack .../man-db_2.6.5-3_amd64.deb ...
Unpacking man-db (2.6.5-3) ...
Selecting previously unselected package libasprintf0c2:amd64.
Preparing to unpack .../libasprintf0c2_0.18.3.1-2_amd64.deb ...
Unpacking libasprintf0c2:amd64 (0.18.3.1-2) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../libmagic1_1%3a5.14-2_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.14-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../libxml2_2.9.1+dfsg1-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.1+dfsg1-3) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../libsigsegv2_2.10-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.10-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../archives/m4_1.4.17-2_amd64.deb ...
Unpacking m4 (1.4.17-2) ...
Selecting previously unselected package flex.
Preparing to unpack .../flex_2.5.35-10.1_amd64.deb ...
Unpacking flex (2.5.35-10.1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../libglib2.0-0_2.36.4-1_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.36.4-1) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../libcroco3_0.6.8-2_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.8-2) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../libltdl7_2.4.2-1.6_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.2-1.6) ...
Selecting previously unselected package libunistring0:amd64.
Preparing to unpack .../libunistring0_0.9.3-5_amd64.deb ...
Unpacking libunistring0:amd64 (0.9.3-5) ...
Selecting previously unselected package file.
Preparing to unpack .../file_1%3a5.14-2_amd64.deb ...
Unpacking file (1:5.14-2) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../gettext-base_0.18.3.1-2_amd64.deb ...
Unpacking gettext-base (0.18.3.1-2) ...
Selecting previously unselected package libtext-unidecode-perl.
Preparing to unpack .../libtext-unidecode-perl_0.04-2_all.deb ...
Unpacking libtext-unidecode-perl (0.04-2) ...
Selecting previously unselected package libintl-perl.
Preparing to unpack .../libintl-perl_1.23-1_all.deb ...
Unpacking libintl-perl (1.23-1) ...
Selecting previously unselected package libxml-namespacesupport-perl.
Preparing to unpack .../libxml-namespacesupport-perl_1.11-1_all.deb ...
Unpacking libxml-namespacesupport-perl (1.11-1) ...
Selecting previously unselected package libxml-sax-base-perl.
Preparing to unpack .../libxml-sax-base-perl_1.07-1_all.deb ...
Unpacking libxml-sax-base-perl (1.07-1) ...
Selecting previously unselected package libxml-sax-perl.
Preparing to unpack .../libxml-sax-perl_0.99+dfsg-2_all.deb ...
Unpacking libxml-sax-perl (0.99+dfsg-2) ...
Selecting previously unselected package libxml-libxml-perl.
Preparing to unpack .../libxml-libxml-perl_2.0108+dfsg-1_amd64.deb ...
Unpacking libxml-libxml-perl (2.0108+dfsg-1) ...
Selecting previously unselected package texinfo.
Preparing to unpack .../texinfo_5.2.0.dfsg.1-2_amd64.deb ...
Unpacking texinfo (5.2.0.dfsg.1-2) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../autoconf_2.69-2_all.deb ...
Unpacking autoconf (2.69-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../autotools-dev_20130810.1_all.deb ...
Unpacking autotools-dev (20130810.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../automake_1%3a1.14.1-2_all.deb ...
Unpacking automake (1:1.14.1-2) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../autopoint_0.18.3.1-2_all.deb ...
Unpacking autopoint (0.18.3.1-2) ...
Selecting previously unselected package gettext.
Preparing to unpack .../gettext_0.18.3.1-2_amd64.deb ...
Unpacking gettext (0.18.3.1-2) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../intltool-debian_0.35.0+20060710.1_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.1) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../po-debconf_1.0.16+nmu2_all.deb ...
Unpacking po-debconf (1.0.16+nmu2) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../debhelper_9.20131227_all.deb ...
Unpacking debhelper (9.20131227) ...
Selecting previously unselected package libtool.
Preparing to unpack .../libtool_2.4.2-1.6_amd64.deb ...
Unpacking libtool (2.4.2-1.6) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../dh-autoreconf_9_all.deb ...
Unpacking dh-autoreconf (9) ...
Selecting previously unselected package libffi-dev:amd64.
Preparing to unpack .../libffi-dev_3.0.13-10_amd64.deb ...
Unpacking libffi-dev:amd64 (3.0.13-10) ...
Selecting previously unselected package libgc-dev:amd64.
Preparing to unpack .../libgc-dev_1%3a7.2d-6_amd64.deb ...
Unpacking libgc-dev:amd64 (1:7.2d-6) ...
Selecting previously unselected package libgmp-dev:amd64.
Preparing to unpack .../libgmp-dev_2%3a5.1.3+dfsg-1_amd64.deb ...
Unpacking libgmp-dev:amd64 (2:5.1.3+dfsg-1) ...
Selecting previously unselected package libltdl-dev:amd64.
Preparing to unpack .../libltdl-dev_2.4.2-1.6_amd64.deb ...
Unpacking libltdl-dev:amd64 (2.4.2-1.6) ...
Selecting previously unselected package libtinfo-dev:amd64.
Preparing to unpack .../libtinfo-dev_5.9+20130608-1_amd64.deb ...
Unpacking libtinfo-dev:amd64 (5.9+20130608-1) ...
Selecting previously unselected package libncurses5-dev:amd64.
Preparing to unpack .../libncurses5-dev_5.9+20130608-1_amd64.deb ...
Unpacking libncurses5-dev:amd64 (5.9+20130608-1) ...
Selecting previously unselected package libreadline6-dev:amd64.
Preparing to unpack .../libreadline6-dev_6.2+dfsg-0.1_amd64.deb ...
Unpacking libreadline6-dev:amd64 (6.2+dfsg-0.1) ...
Selecting previously unselected package libunistring-dev:amd64.
Preparing to unpack .../libunistring-dev_0.9.3-5_amd64.deb ...
Unpacking libunistring-dev:amd64 (0.9.3-5) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../pkg-config_0.26-1_amd64.deb ...
Unpacking pkg-config (0.26-1) ...
Selecting previously unselected package sbuild-build-depends-guile-2.0-dummy.
Preparing to unpack .../sbuild-build-depends-guile-2.0-dummy.deb ...
Unpacking sbuild-build-depends-guile-2.0-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.2.6-1) ...
Setting up libpopt0:amd64 (1.16-8) ...
Setting up groff-base (1.22.2-3) ...
Setting up bsdmainutils (9.0.5) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up man-db (2.6.5-3) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libasprintf0c2:amd64 (0.18.3.1-2) ...
Setting up libmagic1:amd64 (1:5.14-2) ...
Setting up libxml2:amd64 (2.9.1+dfsg1-3) ...
Setting up libsigsegv2:amd64 (2.10-2) ...
Setting up m4 (1.4.17-2) ...
Setting up flex (2.5.35-10.1) ...
Setting up libglib2.0-0:amd64 (2.36.4-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.8-2) ...
Setting up libltdl7:amd64 (2.4.2-1.6) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up file (1:5.14-2) ...
Setting up gettext-base (0.18.3.1-2) ...
Setting up libtext-unidecode-perl (0.04-2) ...
Setting up libintl-perl (1.23-1) ...
Setting up libxml-namespacesupport-perl (1.11-1) ...
Setting up libxml-sax-base-perl (1.07-1) ...
Setting up libxml-sax-perl (0.99+dfsg-2) ...
update-perl-sax-parsers: Registering Perl SAX parser XML::SAX::PurePerl with priority 10...
update-perl-sax-parsers: Updating overall Perl SAX parser modules info file...

Creating config file /etc/perl/XML/SAX/ParserDetails.ini with new version
Setting up libxml-libxml-perl (2.0108+dfsg-1) ...
update-perl-sax-parsers: Registering Perl SAX parser XML::LibXML::SAX::Parser with priority 50...
update-perl-sax-parsers: Registering Perl SAX parser XML::LibXML::SAX with priority 50...
update-perl-sax-parsers: Updating overall Perl SAX parser modules info file...
Replacing config file /etc/perl/XML/SAX/ParserDetails.ini with new version
Setting up texinfo (5.2.0.dfsg.1-2) ...
Setting up autoconf (2.69-2) ...
Setting up autotools-dev (20130810.1) ...
Setting up automake (1:1.14.1-2) ...
update-alternatives: using /usr/bin/automake-1.14 to provide /usr/bin/automake (automake) in auto mode
Setting up autopoint (0.18.3.1-2) ...
Setting up gettext (0.18.3.1-2) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (9.20131227) ...
Setting up libtool (2.4.2-1.6) ...
Setting up dh-autoreconf (9) ...
Setting up libffi-dev:amd64 (3.0.13-10) ...
Setting up libgc-dev:amd64 (1:7.2d-6) ...
Setting up libgmp-dev:amd64 (2:5.1.3+dfsg-1) ...
Setting up libltdl-dev:amd64 (2.4.2-1.6) ...
Setting up libtinfo-dev:amd64 (5.9+20130608-1) ...
Setting up libncurses5-dev:amd64 (5.9+20130608-1) ...
Setting up libreadline6-dev:amd64 (6.2+dfsg-0.1) ...
Setting up libunistring-dev:amd64 (0.9.3-5) ...
Setting up pkg-config (0.26-1) ...
Setting up sbuild-build-depends-guile-2.0-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.17-97) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.24-2 dpkg-dev_1.17.5 g++-4.6_4.6.4-5 g++-4.8_4.8.2-11 gcc-4.6_4.6.4-5 gcc-4.7_4.7.3-9 gcc-4.8_4.8.2-11 libc6-dev_2.17-97 libstdc++-4.8-dev_4.8.2-11 libstdc++6_4.8.2-11 libstdc++6-4.6-dev_4.6.4-5 linux-libc-dev_3.12.6-2
Package versions: apt_0.9.14.2 autoconf_2.69-2 automake_1:1.14.1-2 autopoint_0.18.3.1-2 autotools-dev_20130810.1 base-files_7.2 base-passwd_3.5.29 bash_4.2+dfsg-1 binutils_2.24-2 bsdmainutils_9.0.5 bsdutils_1:2.20.1-5.5 build-essential_11.6 bzip2_1.0.6-5 clang-3.4_1:3.4-1 coreutils_8.21-1 cpp_4:4.8.2-1 cpp-4.6_4.6.4-5 cpp-4.7_4.7.3-9 cpp-4.8_4.8.2-11 dash_0.5.7-3+nmu1 debconf_1.5.52 debconf-i18n_1.5.52 debfoster_2.7-1.2 debhelper_9.20131227 debian-archive-keyring_2012.4 debianutils_4.4 dh-autoreconf_9 diffutils_1:3.3-1 dpkg_1.17.5 dpkg-dev_1.17.5 e2fslibs_1.42.9-2 e2fsprogs_1.42.9-2 fakeroot_1.20-3 file_1:5.14-2 findutils_4.4.2-7 flex_2.5.35-10.1 g++_4:4.8.2-1 g++-4.6_4.6.4-5 g++-4.8_4.8.2-11 gcc_4:4.8.2-1 gcc-4.4-base_4.4.7-6 gcc-4.5-base_4.5.4-1 gcc-4.6_4.6.4-5 gcc-4.6-base_4.6.4-5 gcc-4.7_4.7.3-9 gcc-4.7-base_4.7.3-9 gcc-4.8_4.8.2-11 gcc-4.8-base_4.8.2-11 gettext_0.18.3.1-2 gettext-base_0.18.3.1-2 gnupg_1.4.15-3 gpgv_1.4.15-3 grep_2.15-2 groff-base_1.22.2-3 gzip_1.6-3 hostname_3.15 initscripts_2.88dsf-45 insserv_1.14.0-5 intltool-debian_0.35.0+20060710.1 libacl1_2.2.52-1 libapt-pkg4.12_0.9.14.2 libarchive-extract-perl_0.70-1 libasan0_4.8.2-11 libasprintf0c2_0.18.3.1-2 libatomic1_4.8.2-11 libattr1_1:2.4.47-1 libaudit-common_1:2.3.2-3 libaudit1_1:2.3.2-3 libblkid1_2.20.1-5.5 libbz2-1.0_1.0.6-5 libc-bin_2.17-97 libc-dev-bin_2.17-97 libc6_2.17-97 libc6-dev_2.17-97 libcap2_1:2.22-1.2 libclang-common-3.4-dev_1:3.4-1 libclang1-3.4_1:3.4-1 libclass-isa-perl_0.36-5 libcloog-isl4_0.18.1-3 libcloog-ppl1_0.16.1-4 libcomerr2_1.42.9-2 libcroco3_0.6.8-2 libdb5.1_5.1.29-7 libdpkg-perl_1.17.5 libfakeroot_1.20-3 libffi-dev_3.0.13-10 libffi6_3.0.13-10 libfile-fcntllock-perl_0.14-2+b1 libgc-dev_1:7.2d-6 libgc1c2_1:7.2d-6 libgcc-4.7-dev_4.7.3-9 libgcc-4.8-dev_4.8.2-11 libgcc1_1:4.8.2-11 libgdbm3_1.8.3-12 libglib2.0-0_2.36.4-1 libgmp-dev_2:5.1.3+dfsg-1 libgmp10_2:5.1.3+dfsg-1 libgmpxx4ldbl_2:5.1.3+dfsg-1 libgomp1_4.8.2-11 libgpm2_1.20.4-6.1 libintl-perl_1.23-1 libisl10_0.12.1-2 libitm1_4.8.2-11 libllvm3.4_1:3.4-1 liblocale-gettext-perl_1.05-7+b2 liblog-message-simple-perl_0.10-1 libltdl-dev_2.4.2-1.6 libltdl7_2.4.2-1.6 liblzma5_5.1.1alpha+20120614-2 libmagic1_1:5.14-2 libmodule-pluggable-perl_4.8-1 libmount1_2.20.1-5.5 libmpc2_0.9-4 libmpc3_1.0.1-1 libmpfr4_3.1.2-1 libncurses5_5.9+20130608-1 libncurses5-dev_5.9+20130608-1 libobjc-4.8-dev_4.8.2-11 libobjc4_4.8.2-11 libpam-modules_1.1.3-10 libpam-modules-bin_1.1.3-10 libpam-runtime_1.1.3-10 libpam0g_1.1.3-10 libpcre3_1:8.31-2 libpipeline1_1.2.6-1 libpod-latex-perl_0.61-1 libpopt0_1.16-8 libppl-c4_1:1.0-7 libppl12_1:1.0-7 libquadmath0_4.8.2-11 libreadline6_6.2+dfsg-0.1 libreadline6-dev_6.2+dfsg-0.1 libselinux1_2.2.1-1 libsemanage-common_2.2-1 libsemanage1_2.2-1 libsepol1_2.2-1 libsigsegv2_2.10-2 libslang2_2.2.4-16 libss2_1.42.9-2 libstdc++-4.8-dev_4.8.2-11 libstdc++6_4.8.2-11 libstdc++6-4.6-dev_4.6.4-5 libswitch-perl_2.16-2 libterm-ui-perl_0.42-1 libtext-charwidth-perl_0.04-7+b2 libtext-iconv-perl_1.7-5+b1 libtext-soundex-perl_3.4-1+b1 libtext-unidecode-perl_0.04-2 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_2.3000-1 libtinfo-dev_5.9+20130608-1 libtinfo5_5.9+20130608-1 libtool_2.4.2-1.6 libtsan0_4.8.2-11 libunistring-dev_0.9.3-5 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23.3 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5.5 libxml-libxml-perl_2.0108+dfsg-1 libxml-namespacesupport-perl_1.11-1 libxml-sax-base-perl_1.07-1 libxml-sax-perl_0.99+dfsg-2 libxml2_2.9.1+dfsg1-3 linux-libc-dev_3.12.6-2 login_1:4.1.5.1-1 lsb-base_4.1+Debian12 m4_1.4.17-2 make_3.81-8.3 man-db_2.6.5-3 mawk_1.3.3-17 mount_2.20.1-5.5 multiarch-support_2.17-97 ncurses-base_5.9+20130608-1 ncurses-bin_5.9+20130608-1 passwd_1:4.1.5.1-1 patch_2.7.1-4 perl_5.18.1-5 perl-base_5.18.1-5 perl-modules_5.18.1-5 pkg-config_0.26-1 po-debconf_1.0.16+nmu2 readline-common_6.2+dfsg-0.1 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-guile-2.0-dummy_0.invalid.0 sed_4.2.2-3 sensible-utils_0.0.9 sudo_1.8.8-2 sysv-rc_2.88dsf-45 sysvinit_2.88dsf-45 sysvinit-core_2.88dsf-45 sysvinit-utils_2.88dsf-45 tar_1.27-4 texinfo_5.2.0.dfsg.1-2 tzdata_2013i-1 ucf_3.0027+nmu1 util-linux_2.20.1-5.5 vim_2:7.4.052-1 vim-common_2:7.4.052-1 vim-runtime_2:7.4.052-1 xz-utils_5.1.1alpha+20120614-2 zlib1g_1:1.2.8.dfsg-1

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Thu Jul  4 01:22:27 2013 UTC using RSA key ID 5A5A42F1
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./guile-2.0_2.0.9+1-1.dsc
dpkg-source: info: extracting guile-2.0 in guile-2.0-2.0.9+1
dpkg-source: info: unpacking guile-2.0_2.0.9+1.orig.tar.bz2
dpkg-source: info: unpacking guile-2.0_2.0.9+1-1.debian.tar.gz
dpkg-source: info: applying 0001-Change-guile-to-guile-X.Y-for-info-pages.patch
dpkg-source: info: applying 0002-Mark-mutex-with-owner-not-retained-threads-test-as-u.patch

Check disc space
────────────────

Sufficient free space for build

Hack binNMU version
───────────────────

Created changelog entry for binNMU version 2.0.9+1-1clang1

User Environment
────────────────

DEB_BUILD_OPTIONS=parallel=10
HOME=/sbuild-nonexistent
LOGNAME=user
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1000
SCHROOT_GROUP=user
SCHROOT_SESSION_ID=unstable-amd64-sbuild-e7342c7c-f260-4c65-8e32-e447c7be0cc1
SCHROOT_UID=1000
SCHROOT_USER=user
SHELL=/bin/sh
USER=user

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package guile-2.0
dpkg-buildpackage: source version 2.0.9+1-1clang1
dpkg-buildpackage: source distribution unstable
 dpkg-source --before-build guile-2.0-2.0.9+1
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh clean --parallel --with autoreconf
   debian/rules override_dh_testdir
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
dh_testdir debian/guile.postinst
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
   debian/rules override_dh_auto_clean
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
if test -e Makefile; then make distclean; fi
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
   dh_autoreconf_clean -O--parallel
   debian/rules override_dh_clean
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
dh_clean debian/guile-2.0.install debian/guile-2.0.menu debian/guile-2.0.postinst debian/guile-2.0.prerm debian/guile-2.0.undocumented debian/guile-2.0-dev.install debian/guile-2.0-dev.lintian-overrides debian/guile-2.0-doc.info debian/guile-2.0-doc.install debian/guile-2.0-libs.README.Debian debian/guile-2.0-libs.install debian/guile-2.0-libs.lintian-overrides debian/guile-2.0-libs.postinst debian/guile-2.0-libs.prerm debian/guile-2.0-libs.triggers \
	 .tarball-version \
	 .version \
	 doc/ref/autoconf-macros.texi \
	 doc/ref/guile-2.0.info \
	 doc/ref/guile-2.0.info-* \
	 doc/ref/guile-2.0.texi \
	 doc/ref/stamp-vti \
	 doc/ref/version.texi \
	 libguile/cpp-E.c \
	 libguile/cpp-SIG.c \
	 tmp1
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
 debian/rules build-arch
dh build-arch --parallel --with autoreconf
   debian/rules override_dh_testdir
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
dh_testdir debian/guile.postinst
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
   debian/rules override_dh_autoreconf
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
echo \
	  '2.0.9-deb+1-1clang1' > .version
cp -a .version .tarball-version
cd doc/ref && ln -sf guile.texi guile-2.0.texi
dh_autoreconf ./autogen.sh

autoconf (GNU Autoconf) 2.69
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+/Autoconf: GNU GPL version 3 or later
<http://gnu.org/licenses/gpl.html>, <http://gnu.org/licenses/exceptions.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by David J. MacKenzie and Akim Demaille.

automake (GNU automake) 1.14.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later <http://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.

libtool (GNU libtool) 2.4.2
Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996

Copyright (C) 2011 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

m4 (GNU M4) 1.4.17
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Rene' Seindal.

flex 2.5.35

autoreconf: Entering directory `.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4
autoreconf: configure.ac: tracing
autoreconf: configure.ac: AM_GNU_GETTEXT is used, but not AM_GNU_GETTEXT_VERSION
autoreconf: running: libtoolize --copy --force
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, `build-aux'.
libtoolize: copying file `build-aux/ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4'.
libtoolize: copying file `m4/libtool.m4'
libtoolize: copying file `m4/ltoptions.m4'
libtoolize: copying file `m4/ltsugar.m4'
libtoolize: copying file `m4/ltversion.m4'
libtoolize: copying file `m4/lt~obsolete.m4'
autoreconf: running: /usr/bin/autoconf --force
autoreconf: running: /usr/bin/autoheader --force
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:70: installing 'build-aux/ar-lib'
configure.ac:64: installing 'build-aux/compile'
configure.ac:59: installing 'build-aux/config.guess'
configure.ac:59: installing 'build-aux/config.sub'
configure.ac:41: installing 'build-aux/install-sh'
configure.ac:41: installing 'build-aux/missing'
Makefile.am: installing './INSTALL'
doc/r5rs/Makefile.am:24: installing 'build-aux/texinfo.tex'
doc/ref/Makefile.am:25: installing 'build-aux/mdate-sh'
am/snarf:5: warning: AM_V_SNARF_$(V: non-POSIX recursive variable expansion
guile-readline/Makefile.am:23:   'am/snarf' included from here
am/snarf:6: warning: AM_V_SNARF_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
guile-readline/Makefile.am:23:   'am/snarf' included from here
am/guilec:23: warning: AM_V_GUILEC_$(V: non-POSIX recursive variable expansion
guile-readline/Makefile.am:24:   'am/guilec' included from here
am/guilec:24: warning: AM_V_GUILEC_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
guile-readline/Makefile.am:24:   'am/guilec' included from here
guile-readline/Makefile.am: installing 'build-aux/depcomp'
am/snarf:5: warning: AM_V_SNARF_$(V: non-POSIX recursive variable expansion
libguile/Makefile.am:23:   'am/snarf' included from here
am/snarf:6: warning: AM_V_SNARF_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
libguile/Makefile.am:23:   'am/snarf' included from here
am/guilec:23: warning: AM_V_GUILEC_$(V: non-POSIX recursive variable expansion
module/Makefile.am:22:   'am/guilec' included from here
am/guilec:24: warning: AM_V_GUILEC_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
module/Makefile.am:22:   'am/guilec' included from here
am/snarf:5: warning: AM_V_SNARF_$(V: non-POSIX recursive variable expansion
test-suite/standalone/Makefile.am:23:   'am/snarf' included from here
am/snarf:6: warning: AM_V_SNARF_$(AM_DEFAULT_VERBOSITY: non-POSIX recursive variable expansion
test-suite/standalone/Makefile.am:23:   'am/snarf' included from here
autoreconf: Leaving directory `.'
Now run configure and make.
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
   debian/rules override_dh_auto_configure
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
CFLAGS="-O2 -g" ./configure --host=x86_64-linux-gnu --build=x86_64-linux-gnu --disable-error-on-warning --prefix=/usr
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether make supports nested variables... (cached) yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for x86_64-linux-gnu-gcc... x86_64-linux-gnu-gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether x86_64-linux-gnu-gcc accepts -g... yes
checking for x86_64-linux-gnu-gcc option to accept ISO C89... none needed
checking whether x86_64-linux-gnu-gcc understands -c and -o together... yes
checking for style of include used by make... GNU
checking dependency style of x86_64-linux-gnu-gcc... gcc3
checking how to run the C preprocessor... x86_64-linux-gnu-gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for Minix Amsterdam compiler... no
checking for x86_64-linux-gnu-ar... no
checking for ar... ar
checking for x86_64-linux-gnu-ranlib... no
checking for ranlib... ranlib
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking whether _XOPEN_SOURCE should be defined... no
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
configure: autobuild project... GNU Guile
configure: autobuild revision... 2.0.9-deb+1-1clang1
configure: autobuild hostname... ip-172-31-7-217
configure: autobuild timestamp... 20140106T005656Z
checking how to run the C preprocessor... x86_64-linux-gnu-gcc -E
checking for a sed that does not truncate output... /bin/sed
checking for gawk... (cached) mawk
checking whether ln -s works... yes
checking for x86_64-linux-gnu-ar... ar
checking the archiver (ar) interface... ar
checking for sys/socket.h... yes
checking for arpa/inet.h... yes
checking for features.h... yes
checking for sys/param.h... yes
checking for dirent.h... yes
checking for xlocale.h... yes
checking for unistd.h... (cached) yes
checking for sys/stat.h... (cached) yes
checking for netdb.h... yes
checking for netinet/in.h... yes
checking for iconv.h... yes
checking for langinfo.h... yes
checking for math.h... yes
checking for sys/mman.h... yes
checking for poll.h... yes
checking for sys/ioctl.h... yes
checking for sys/filio.h... no
checking for sys/select.h... yes
checking for sys/time.h... yes
checking for wchar.h... yes
checking for stdint.h... (cached) yes
checking for sys/file.h... yes
checking for sys/times.h... yes
checking for sys/uio.h... yes
checking for wctype.h... yes
checking whether the preprocessor supports include_next... yes
checking whether system header files limit the line length... no
checking whether <sys/socket.h> is self-contained... yes
checking for shutdown... yes
checking whether <sys/socket.h> defines the SHUT_* macros... yes
checking for struct sockaddr_storage... yes
checking for sa_family_t... yes
checking for struct sockaddr_storage.ss_family... yes
checking whether socket is declared without a macro... yes
checking whether connect is declared without a macro... yes
checking whether accept is declared without a macro... yes
checking whether bind is declared without a macro... yes
checking whether getpeername is declared without a macro... yes
checking whether getsockname is declared without a macro... yes
checking whether getsockopt is declared without a macro... yes
checking whether listen is declared without a macro... yes
checking whether recv is declared without a macro... yes
checking whether send is declared without a macro... yes
checking whether recvfrom is declared without a macro... yes
checking whether sendto is declared without a macro... yes
checking whether setsockopt is declared without a macro... yes
checking whether shutdown is declared without a macro... yes
checking whether accept4 is declared without a macro... yes
checking for size_t... yes
checking for working alloca.h... yes
checking for alloca... yes
checking whether <wchar.h> uses 'inline' correctly... yes
checking for btowc... yes
checking for canonicalize_file_name... yes
checking for getcwd... yes
checking for readlink... yes
checking for realpath... yes
checking for _set_invalid_parameter_handler... no
checking for duplocale... yes
checking for symlink... yes
checking for flock... yes
checking for fcntl... yes
checking for alarm... yes
checking for getlogin... yes
checking for lstat... yes
checking for mbsinit... yes
checking for mbrtowc... yes
checking for mprotect... yes
checking for nl_langinfo... yes
checking for pipe... yes
checking for pipe2... yes
checking for isblank... yes
checking for iswctype... yes
checking for wcscoll... yes
checking for link... yes
checking for setenv... yes
checking for snprintf... yes
checking for tzset... yes
checking for localtime_r... yes
checking for times... yes
checking for vasnprintf... no
checking for wcrtomb... yes
checking for iswcntrl... yes
checking for nl_langinfo and CODESET... yes
checking for a traditional french locale... none
checking whether // is distinct from /... no
checking whether realpath works... yes
checking for wchar_t... yes
checking whether NULL can be used in arbitrary expressions... yes
checking whether locale.h conforms to POSIX:2001... yes
checking whether locale.h defines locale_t... yes
checking whether struct lconv is properly defined... yes
checking whether setlocale is declared without a macro... yes
checking whether duplocale is declared without a macro... yes
checking if environ is properly declared... yes
checking for complete errno.h... yes
checking for working fcntl.h... yes
checking for pid_t... yes
checking for mode_t... yes
checking whether frexp() can be used without linking with libm... yes
checking whether stat file-mode macros are broken... no
checking for nlink_t... yes
checking whether fchmodat is declared without a macro... yes
checking whether fstat is declared without a macro... yes
checking whether fstatat is declared without a macro... yes
checking whether futimens is declared without a macro... yes
checking whether lchmod is declared without a macro... yes
checking whether lstat is declared without a macro... yes
checking whether mkdirat is declared without a macro... yes
checking whether mkfifo is declared without a macro... yes
checking whether mkfifoat is declared without a macro... yes
checking whether mknod is declared without a macro... yes
checking whether mknodat is declared without a macro... yes
checking whether stat is declared without a macro... yes
checking whether utimensat is declared without a macro... yes
checking whether getaddrinfo is declared without a macro... yes
checking whether freeaddrinfo is declared without a macro... yes
checking whether gai_strerror is declared without a macro... yes
checking whether getnameinfo is declared without a macro... yes
checking for library containing gethostbyname... none required
checking for gethostbyname... yes
checking for library containing getservbyname... none required
checking for getservbyname... yes
checking for C/C++ restrict keyword... __restrict
checking for library containing inet_ntop... none required
checking whether inet_ntop is declared... yes
checking for IPv4 sockets... yes
checking for IPv6 sockets... yes
checking for ld used by x86_64-linux-gnu-gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for shared library run path origin... done
checking for iconv... yes
checking for working iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking for inline... inline
checking whether byte ordering is bigendian... no
checking whether long double and double are the same... no
checking where to find the exponent in a 'float'... word 0 bit 23
checking whether isnan(float) can be used without linking with libm... no
checking whether isnan(float) can be used with libm... no
checking whether isnan(double) can be used without linking with libm... yes
checking whether isnan(long double) can be used without linking with libm... no
checking whether isnan(long double) can be used with libm... no
checking where to find the exponent in a 'double'... word 1 bit 20
checking whether ldexp() can be used without linking with libm... yes
checking for libunistring... yes
checking how to link with libunistring... -lunistring
checking for libunistring version... 0.9.3
checking whether getc_unlocked is declared... yes
checking whether we are using the GNU C Library >= 2.1 or uClibc... yes
checking whether pow can be used without linking with libm... no
checking whether pow can be used with libm... yes
checking whether log works... yes
checking whether round is declared... yes
checking whether round works... yes
checking whether lstat correctly handles trailing slash... yes
checking whether malloc, realloc, calloc are POSIX compliant... yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking for unsigned long long int... yes
checking for long long int... yes
checking for mbstate_t... yes
checking for a traditional japanese locale... none
checking for a transitional chinese locale... none
checking for a french Unicode locale... none
checking for mmap... yes
checking for MAP_ANONYMOUS... yes
checking whether memchr works... yes
checking for promoted mode_t type... mode_t
checking whether poll is declared without a macro... yes
checking for library containing setsockopt... none needed
checking for ssize_t... yes
checking whether <sys/select.h> is self-contained... yes
checking whether pselect is declared without a macro... yes
checking whether select is declared without a macro... yes
checking whether setenv is declared... yes
checking search.h usability... yes
checking search.h presence... yes
checking for search.h... yes
checking for tsearch... yes
checking for sigset_t... yes
checking for uid_t in sys/types.h... yes
checking whether snprintf returns a byte count as in C99... yes
checking whether snprintf is declared... yes
checking for stdbool.h that conforms to C99... yes
checking for _Bool... yes
checking whether stdint.h conforms to C99... yes
checking whether struct tm is in sys/time.h or time.h... time.h
checking for struct tm.tm_zone... yes
checking for struct tm.tm_gmtoff... yes
checking whether ffsl is declared without a macro... yes
checking whether ffsll is declared without a macro... yes
checking whether memmem is declared without a macro... yes
checking whether mempcpy is declared without a macro... yes
checking whether memrchr is declared without a macro... yes
checking whether rawmemchr is declared without a macro... yes
checking whether stpcpy is declared without a macro... yes
checking whether stpncpy is declared without a macro... yes
checking whether strchrnul is declared without a macro... yes
checking whether strdup is declared without a macro... yes
checking whether strncat is declared without a macro... yes
checking whether strndup is declared without a macro... yes
checking whether strnlen is declared without a macro... yes
checking whether strpbrk is declared without a macro... yes
checking whether strsep is declared without a macro... yes
checking whether strcasestr is declared without a macro... yes
checking whether strtok_r is declared without a macro... yes
checking whether strerror_r is declared without a macro... yes
checking whether strsignal is declared without a macro... yes
checking whether strverscmp is declared without a macro... yes
checking for struct timeval... yes
checking for wide-enough struct timeval.tv_sec member... yes
checking whether gettimeofday is declared without a macro... yes
checking for struct timespec in <time.h>... yes
checking for wint_t... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for intmax_t... yes
checking for snprintf... (cached) yes
checking for strnlen... yes
checking for wcslen... yes
checking for wcsnlen... yes
checking for mbrtowc... (cached) yes
checking for wcrtomb... (cached) yes
checking whether _snprintf is declared... no
checking whether vsnprintf is declared... yes
checking for alloca as a compiler built-in... yes
checking whether inet_ntop is declared without a macro... yes
checking whether inet_pton is declared without a macro... yes
checking whether btowc(0) is correct... yes
checking whether btowc(EOF) is correct... guessing yes
checking byteswap.h usability... yes
checking byteswap.h presence... yes
checking for byteswap.h... yes
checking for library containing clock_gettime... none required
checking for library containing clock_getcpuclockid... none required
checking for clock_gettime... yes
checking for clock_settime... yes
checking for clock_getcpuclockid... yes
checking whether alphasort is declared without a macro... yes
checking whether closedir is declared without a macro... yes
checking whether dirfd is declared without a macro... yes
checking whether fdopendir is declared without a macro... yes
checking whether opendir is declared without a macro... yes
checking whether readdir is declared without a macro... yes
checking whether rewinddir is declared without a macro... yes
checking whether scandir is declared without a macro... yes
checking for dirfd... yes
checking whether dirfd is declared... (cached) yes
checking whether dirfd is a macro... no
checking whether // is distinct from /... (cached) no
checking whether dup2 works... yes
checking whether duplocale(LC_GLOBAL_LOCALE) works... yes
checking whether fcntl is declared without a macro... yes
checking whether openat is declared without a macro... yes
checking whether conversion from 'int' to 'long double' works... yes
checking whether frexp works... yes
checking whether __func__ is available... yes
configure: checking how to do getaddrinfo, freeaddrinfo and getnameinfo
checking for library containing getaddrinfo... none required
checking for getaddrinfo... yes
checking whether gai_strerror is declared... (cached) yes
checking whether gai_strerrorA is declared... no
checking for gai_strerror with POSIX signature... yes
checking for struct sockaddr.sa_len... no
checking whether getaddrinfo is declared... (cached) yes
checking whether freeaddrinfo is declared... (cached) yes
checking whether getnameinfo is declared... (cached) yes
checking for struct addrinfo... yes
checking for library containing gethostbyname... (cached) none required
checking for gethostbyname... (cached) yes
checking whether iconv supports conversion between UTF-8 and UTF-{16,32}{BE,LE}... yes
checking for library containing inet_ntop... (cached) none required
checking whether inet_ntop is declared... (cached) yes
checking for library containing inet_pton... none required
checking whether inet_pton is declared... (cached) yes
checking whether the compiler generally respects inline... yes
checking whether isinf is declared... yes
checking whether isinf(long double) works... yes
checking whether isnan macro works... no
checking whether isnan(double) can be used without linking with libm... (cached) yes
checking whether isnan(double) can be used without linking with libm... (cached) yes
checking whether isnan(float) can be used without linking with libm... (cached) no
checking whether isnan(float) can be used with libm... (cached) no
checking where to find the exponent in a 'float'... (cached) word 0 bit 23
checking whether isnan(long double) can be used without linking with libm... (cached) no
checking whether isnan(long double) can be used with libm... (cached) no
checking where to find the exponent in a 'long double'... word 2 bit 0
checking whether langinfo.h defines CODESET... yes
checking whether langinfo.h defines T_FMT_AMPM... yes
checking whether langinfo.h defines ERA... yes
checking whether langinfo.h defines YESEXPR... yes
checking whether nl_langinfo is declared without a macro... yes
checking if LD -Wl,--version-script works... yes
checking whether the -Werror option is usable... yes
checking for simple visibility declarations... yes
checking whether locale.h conforms to POSIX:2001... (cached) yes
checking whether locale.h defines locale_t... (cached) yes
checking whether struct lconv is properly defined... (cached) yes
checking whether setlocale is declared without a macro... (cached) yes
checking whether duplocale is declared without a macro... (cached) yes
checking for log1p... yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... (cached) yes
checking whether NAN macro works... yes
checking whether HUGE_VAL works... yes
checking whether acosf is declared without a macro... yes
checking whether acosl is declared without a macro... yes
checking whether asinf is declared without a macro... yes
checking whether asinl is declared without a macro... yes
checking whether atanf is declared without a macro... yes
checking whether atanl is declared without a macro... yes
checking whether cbrt is declared without a macro... yes
checking whether cbrtf is declared without a macro... yes
checking whether cbrtl is declared without a macro... yes
checking whether ceilf is declared without a macro... yes
checking whether ceill is declared without a macro... yes
checking whether copysign is declared without a macro... yes
checking whether copysignf is declared without a macro... yes
checking whether copysignl is declared without a macro... yes
checking whether cosf is declared without a macro... yes
checking whether cosl is declared without a macro... yes
checking whether coshf is declared without a macro... yes
checking whether expf is declared without a macro... yes
checking whether expl is declared without a macro... yes
checking whether exp2 is declared without a macro... yes
checking whether exp2f is declared without a macro... yes
checking whether exp2l is declared without a macro... yes
checking whether expm1 is declared without a macro... yes
checking whether expm1f is declared without a macro... yes
checking whether expm1l is declared without a macro... yes
checking whether fabsf is declared without a macro... yes
checking whether fabsl is declared without a macro... yes
checking whether floorf is declared without a macro... yes
checking whether floorl is declared without a macro... yes
checking whether fma is declared without a macro... yes
checking whether fmaf is declared without a macro... yes
checking whether fmal is declared without a macro... yes
checking whether fmod is declared without a macro... yes
checking whether fmodf is declared without a macro... yes
checking whether fmodl is declared without a macro... yes
checking whether frexpf is declared without a macro... yes
checking whether frexpl is declared without a macro... yes
checking whether hypotf is declared without a macro... yes
checking whether hypotl is declared without a macro... yes
checking whether ilogb is declared without a macro... yes
checking whether ilogbf is declared without a macro... yes
checking whether ilogbl is declared without a macro... yes
checking whether ldexpf is declared without a macro... yes
checking whether ldexpl is declared without a macro... yes
checking whether log is declared without a macro... yes
checking whether logf is declared without a macro... yes
checking whether logl is declared without a macro... yes
checking whether log10 is declared without a macro... yes
checking whether log10f is declared without a macro... yes
checking whether log10l is declared without a macro... yes
checking whether log1p is declared without a macro... yes
checking whether log1pf is declared without a macro... yes
checking whether log1pl is declared without a macro... yes
checking whether log2 is declared without a macro... yes
checking whether log2f is declared without a macro... yes
checking whether log2l is declared without a macro... yes
checking whether logb is declared without a macro... yes
checking whether logbf is declared without a macro... yes
checking whether logbl is declared without a macro... yes
checking whether modf is declared without a macro... yes
checking whether modff is declared without a macro... yes
checking whether modfl is declared without a macro... yes
checking whether powf is declared without a macro... yes
checking whether remainder is declared without a macro... yes
checking whether remainderf is declared without a macro... yes
checking whether remainderl is declared without a macro... yes
checking whether rint is declared without a macro... yes
checking whether rintf is declared without a macro... yes
checking whether rintl is declared without a macro... yes
checking whether round is declared without a macro... yes
checking whether roundf is declared without a macro... yes
checking whether roundl is declared without a macro... yes
checking whether sinf is declared without a macro... yes
checking whether sinl is declared without a macro... yes
checking whether sinhf is declared without a macro... yes
checking whether sqrtf is declared without a macro... yes
checking whether sqrtl is declared without a macro... yes
checking whether tanf is declared without a macro... yes
checking whether tanl is declared without a macro... yes
checking whether tanhf is declared without a macro... yes
checking whether trunc is declared without a macro... yes
checking whether truncf is declared without a macro... yes
checking whether truncl is declared without a macro... yes
checking whether mbrtowc handles incomplete characters... guessing yes
checking whether mbrtowc works as well as mbtowc... guessing yes
checking whether mbrtowc handles a NULL pwc argument... guessing yes
checking whether mbrtowc handles a NULL string argument... guessing yes
checking whether mbrtowc has a correct return value... guessing yes
checking whether mbrtowc returns 0 when parsing a NUL character... guessing yes
checking whether mbrtowc handles incomplete characters... (cached) guessing yes
checking whether mbrtowc works as well as mbtowc... (cached) guessing yes
checking whether getaddrinfo is declared without a macro... (cached) yes
checking whether freeaddrinfo is declared without a macro... (cached) yes
checking whether gai_strerror is declared without a macro... (cached) yes
checking whether getnameinfo is declared without a macro... (cached) yes
checking whether <netinet/in.h> is self-contained... yes
checking whether YESEXPR works... yes
checking for sys/pstat.h... no
checking for sys/sysmp.h... no
checking for sys/param.h... (cached) yes
checking for sys/sysctl.h... yes
checking for sched_getaffinity... yes
checking for sched_getaffinity_np... no
checking for pstat_getdynamic... no
checking for sysmp... no
checking for sysctl... yes
checking for glibc compatible sched_getaffinity... yes
checking whether open recognizes a trailing slash... yes
checking for poll... yes
checking whether poll is declared without a macro... (cached) yes
checking for putenv compatible with GNU and SVID... yes
checking for raise... yes
checking whether readlink signature is correct... yes
checking whether readlink handles trailing slash correctly... yes
checking for working re_compile_pattern... yes
checking whether rename honors trailing slash on destination... yes
checking whether rename honors trailing slash on source... yes
checking whether rename manages hard links correctly... yes
checking whether rename manages existing destinations correctly... yes
checking whether rmdir works... yes
checking whether round is declared... (cached) yes
checking whether round works... (cached) yes
checking whether select supports a 0 argument... yes
checking whether select detects invalid fds... yes
checking for library containing getservbyname... (cached) none required
checking for getservbyname... (cached) yes
checking whether setenv validates arguments... yes
checking for volatile sig_atomic_t... yes
checking for sighandler_t... yes
checking whether pthread_sigmask is declared without a macro... yes
checking whether sigaction is declared without a macro... yes
checking whether sigaddset is declared without a macro... yes
checking whether sigdelset is declared without a macro... yes
checking whether sigemptyset is declared without a macro... yes
checking whether sigfillset is declared without a macro... yes
checking whether sigismember is declared without a macro... yes
checking whether sigpending is declared without a macro... yes
checking whether sigprocmask is declared without a macro... yes
checking for stdint.h... (cached) yes
checking for SIZE_MAX... yes
checking for snprintf... (cached) yes
checking whether snprintf respects a size of 1... yes
checking whether printf supports POSIX/XSI format strings with positions... yes
checking for library containing setsockopt... (cached) none needed
checking for socklen_t... yes
checking for ssize_t... (cached) yes
checking whether stat handles trailing slashes on directories... yes
checking whether stat handles trailing slashes on files... yes
checking for struct stat.st_atim.tv_nsec... yes
checking whether struct stat.st_atim is of type struct timespec... yes
checking for struct stat.st_birthtimespec.tv_nsec... no
checking for struct stat.st_birthtimensec... no
checking for struct stat.st_birthtim.tv_nsec... no
checking for working stdalign.h... yes
checking whether NULL can be used in arbitrary expressions... (cached) yes
checking whether dprintf is declared without a macro... yes
checking whether fpurge is declared without a macro... no
checking whether fseeko is declared without a macro... yes
checking whether ftello is declared without a macro... yes
checking whether getdelim is declared without a macro... yes
checking whether getline is declared without a macro... yes
checking whether gets is declared without a macro... no
checking whether pclose is declared without a macro... yes
checking whether popen is declared without a macro... yes
checking whether renameat is declared without a macro... yes
checking whether snprintf is declared without a macro... yes
checking whether tmpfile is declared without a macro... yes
checking whether vdprintf is declared without a macro... yes
checking whether vsnprintf is declared without a macro... yes
checking whether _Exit is declared without a macro... yes
checking whether atoll is declared without a macro... yes
checking whether canonicalize_file_name is declared without a macro... yes
checking whether getloadavg is declared without a macro... yes
checking whether getsubopt is declared without a macro... yes
checking whether grantpt is declared without a macro... yes
checking whether initstate is declared without a macro... yes
checking whether initstate_r is declared without a macro... yes
checking whether mkdtemp is declared without a macro... yes
checking whether mkostemp is declared without a macro... yes
checking whether mkostemps is declared without a macro... yes
checking whether mkstemp is declared without a macro... yes
checking whether mkstemps is declared without a macro... yes
checking whether posix_openpt is declared without a macro... yes
checking whether ptsname is declared without a macro... yes
checking whether ptsname_r is declared without a macro... yes
checking whether random is declared without a macro... yes
checking whether random_r is declared without a macro... yes
checking whether realpath is declared without a macro... yes
checking whether rpmatch is declared without a macro... yes
checking whether secure_getenv is declared without a macro... yes
checking whether setenv is declared without a macro... yes
checking whether setstate is declared without a macro... yes
checking whether setstate_r is declared without a macro... yes
checking whether srandom is declared without a macro... yes
checking whether srandom_r is declared without a macro... yes
checking whether strtod is declared without a macro... yes
checking whether strtoll is declared without a macro... yes
checking whether strtoull is declared without a macro... yes
checking whether unlockpt is declared without a macro... yes
checking whether unsetenv is declared without a macro... yes
checking whether flock is declared without a macro... yes
checking whether <sys/select.h> is self-contained... (cached) yes
checking whether pselect is declared without a macro... (cached) yes
checking whether select is declared without a macro... (cached) yes
checking whether <sys/socket.h> is self-contained... (cached) yes
checking for shutdown... (cached) yes
checking whether <sys/socket.h> defines the SHUT_* macros... (cached) yes
checking for struct sockaddr_storage... (cached) yes
checking for sa_family_t... (cached) yes
checking for struct sockaddr_storage.ss_family... (cached) yes
checking whether socket is declared without a macro... (cached) yes
checking whether connect is declared without a macro... (cached) yes
checking whether accept is declared without a macro... (cached) yes
checking whether bind is declared without a macro... (cached) yes
checking whether getpeername is declared without a macro... (cached) yes
checking whether getsockname is declared without a macro... (cached) yes
checking whether getsockopt is declared without a macro... (cached) yes
checking whether listen is declared without a macro... (cached) yes
checking whether recv is declared without a macro... (cached) yes
checking whether send is declared without a macro... (cached) yes
checking whether recvfrom is declared without a macro... (cached) yes
checking whether sendto is declared without a macro... (cached) yes
checking whether setsockopt is declared without a macro... (cached) yes
checking whether shutdown is declared without a macro... (cached) yes
checking whether accept4 is declared without a macro... (cached) yes
checking for nlink_t... (cached) yes
checking whether fchmodat is declared without a macro... (cached) yes
checking whether fstat is declared without a macro... (cached) yes
checking whether fstatat is declared without a macro... (cached) yes
checking whether futimens is declared without a macro... (cached) yes
checking whether lchmod is declared without a macro... (cached) yes
checking whether lstat is declared without a macro... (cached) yes
checking whether mkdirat is declared without a macro... (cached) yes
checking whether mkfifo is declared without a macro... (cached) yes
checking whether mkfifoat is declared without a macro... (cached) yes
checking whether mknod is declared without a macro... (cached) yes
checking whether mknodat is declared without a macro... (cached) yes
checking whether stat is declared without a macro... (cached) yes
checking whether utimensat is declared without a macro... (cached) yes
checking for struct tms... yes
checking whether times is declared without a macro... yes
checking whether localtime_r is declared... yes
checking whether localtime_r is compatible with its POSIX signature... yes
checking whether trunc is declared... (cached) yes
checking whether chdir is declared without a macro... yes
checking whether chown is declared without a macro... yes
checking whether dup is declared without a macro... yes
checking whether dup2 is declared without a macro... yes
checking whether dup3 is declared without a macro... yes
checking whether environ is declared without a macro... yes
checking whether euidaccess is declared without a macro... yes
checking whether faccessat is declared without a macro... yes
checking whether fchdir is declared without a macro... yes
checking whether fchownat is declared without a macro... yes
checking whether fdatasync is declared without a macro... yes
checking whether fsync is declared without a macro... yes
checking whether ftruncate is declared without a macro... yes
checking whether getcwd is declared without a macro... yes
checking whether getdomainname is declared without a macro... yes
checking whether getdtablesize is declared without a macro... yes
checking whether getgroups is declared without a macro... yes
checking whether gethostname is declared without a macro... yes
checking whether getlogin is declared without a macro... yes
checking whether getlogin_r is declared without a macro... yes
checking whether getpagesize is declared without a macro... yes
checking whether getusershell is declared without a macro... yes
checking whether setusershell is declared without a macro... yes
checking whether endusershell is declared without a macro... yes
checking whether group_member is declared without a macro... yes
checking whether isatty is declared without a macro... yes
checking whether lchown is declared without a macro... yes
checking whether link is declared without a macro... yes
checking whether linkat is declared without a macro... yes
checking whether lseek is declared without a macro... yes
checking whether pipe is declared without a macro... yes
checking whether pipe2 is declared without a macro... yes
checking whether pread is declared without a macro... yes
checking whether pwrite is declared without a macro... yes
checking whether readlink is declared without a macro... yes
checking whether readlinkat is declared without a macro... yes
checking whether rmdir is declared without a macro... yes
checking whether sethostname is declared without a macro... yes
checking whether sleep is declared without a macro... yes
checking whether symlink is declared without a macro... yes
checking whether symlinkat is declared without a macro... yes
checking whether ttyname_r is declared without a macro... yes
checking whether unlink is declared without a macro... yes
checking whether unlinkat is declared without a macro... yes
checking whether usleep is declared without a macro... yes
checking for ptrdiff_t... yes
checking for vsnprintf... yes
checking whether snprintf respects a size of 1... (cached) yes
checking whether printf supports POSIX/XSI format strings with positions... (cached) yes
checking whether btowc is declared without a macro... yes
checking whether wctob is declared without a macro... yes
checking whether mbsinit is declared without a macro... yes
checking whether mbrtowc is declared without a macro... yes
checking whether mbrlen is declared without a macro... yes
checking whether mbsrtowcs is declared without a macro... yes
checking whether mbsnrtowcs is declared without a macro... yes
checking whether wcrtomb is declared without a macro... yes
checking whether wcsrtombs is declared without a macro... yes
checking whether wcsnrtombs is declared without a macro... yes
checking whether wcwidth is declared without a macro... yes
checking whether wmemchr is declared without a macro... yes
checking whether wmemcmp is declared without a macro... yes
checking whether wmemcpy is declared without a macro... yes
checking whether wmemmove is declared without a macro... yes
checking whether wmemset is declared without a macro... yes
checking whether wcslen is declared without a macro... yes
checking whether wcsnlen is declared without a macro... yes
checking whether wcscpy is declared without a macro... yes
checking whether wcpcpy is declared without a macro... yes
checking whether wcsncpy is declared without a macro... yes
checking whether wcpncpy is declared without a macro... yes
checking whether wcscat is declared without a macro... yes
checking whether wcsncat is declared without a macro... yes
checking whether wcscmp is declared without a macro... yes
checking whether wcsncmp is declared without a macro... yes
checking whether wcscasecmp is declared without a macro... yes
checking whether wcsncasecmp is declared without a macro... yes
checking whether wcscoll is declared without a macro... yes
checking whether wcsxfrm is declared without a macro... yes
checking whether wcsdup is declared without a macro... yes
checking whether wcschr is declared without a macro... yes
checking whether wcsrchr is declared without a macro... yes
checking whether wcscspn is declared without a macro... yes
checking whether wcsspn is declared without a macro... yes
checking whether wcspbrk is declared without a macro... yes
checking whether wcsstr is declared without a macro... yes
checking whether wcstok is declared without a macro... yes
checking whether wcswidth is declared without a macro... yes
checking whether mbrtowc handles incomplete characters... (cached) guessing yes
checking whether mbrtowc works as well as mbtowc... (cached) guessing yes
checking whether wcrtomb return value is correct... guessing yes
checking whether iswcntrl works... yes
checking for towlower... yes
checking for wctype_t... yes
checking for wctrans_t... yes
checking whether wctype is declared without a macro... yes
checking whether iswctype is declared without a macro... yes
checking whether wctrans is declared without a macro... yes
checking whether towctrans is declared without a macro... yes
checking for stdint.h... (cached) yes
checking for x86_64-linux-gnu-gcc option to accept ISO C89... (cached) none needed
checking how to print strings... printf
checking for a sed that does not truncate output... (cached) /bin/sed
checking for fgrep... /bin/grep -F
checking for ld used by x86_64-linux-gnu-gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking the maximum length of command line arguments... 3458764513820540925
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for x86_64-linux-gnu-objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for x86_64-linux-gnu-dlltool... dlltool
checking how to associate runtime and link libraries... printf %s\n
checking for x86_64-linux-gnu-ar... (cached) ar
checking for archiver @FILE support... @
checking for x86_64-linux-gnu-strip... no
checking for strip... strip
checking for x86_64-linux-gnu-ranlib... ranlib
checking command to parse /usr/bin/nm -B output from x86_64-linux-gnu-gcc object... ok
checking for sysroot... no
checking for x86_64-linux-gnu-mt... no
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if x86_64-linux-gnu-gcc supports -fno-rtti -fno-exceptions... yes
checking for x86_64-linux-gnu-gcc option to produce PIC... -fPIC -DPIC
checking if x86_64-linux-gnu-gcc PIC flag -fPIC -DPIC works... yes
checking if x86_64-linux-gnu-gcc static flag -static works... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... yes
checking if x86_64-linux-gnu-gcc supports -c -o file.o... (cached) yes
checking whether the x86_64-linux-gnu-gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for shl_load... no
checking for shl_load in -ldld... no
checking for dlopen... no
checking for dlopen in -ldl... yes
checking whether a program can dlopen itself... yes
checking whether a statically linked program can dlopen itself... no
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for libltdl... yes
checking how to link with libltdl... -lltdl
checking for makeinfo... yes
checking for emacs... no
checking for xemacs... no
checking where .elc files should go... ${datadir}/emacs/site-lisp
checking whether to use system and library "64" calls... yes
checking for __uc_get_ar_bsp in -luca... no
checking for an ANSI C-conforming const... yes
checking for working volatile... yes
checking for inline... (cached) inline
checking for __uc_get_ar_bsp in -luca... (cached) no
checking whether byte ordering is bigendian... (cached) no
checking labels as values... yes
checking size of char... 1
checking size of unsigned char... 1
checking size of short... 2
checking size of unsigned short... 2
checking size of int... 4
checking size of unsigned int... 4
checking size of long... 8
checking size of unsigned long... 8
checking size of size_t... 8
checking size of long long... 8
checking size of unsigned long long... 8
checking size of __int64... 0
checking size of unsigned __int64... 0
checking size of void *... 8
checking size of intptr_t... 8
checking size of uintptr_t... 8
checking size of ptrdiff_t... 8
checking size of size_t... (cached) 8
checking size of off_t... 8
checking for stdint.h... (cached) yes
checking for inttypes.h... (cached) yes
checking size of intmax_t... 8
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for intmax_t... yes
checking for uintmax_t... yes
checking for intptr_t... yes
checking for uintptr_t... yes
checking for int8_t... yes
checking for uint8_t... yes
checking for int16_t... yes
checking for uint16_t... yes
checking for int32_t... yes
checking for uint32_t... yes
checking for int64_t... yes
checking for uint64_t... yes
checking for intmax_t... yes
checking for uintmax_t... yes
checking for intptr_t... (cached) yes
checking for uintptr_t... (cached) yes
checking for ANSI C header files... (cached) yes
checking whether time.h and sys/time.h may both be included... yes
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for dirent.h that defines DIR... yes
checking for library containing opendir... none required
checking for struct dirent64.d_name... yes
checking complex.h usability... yes
checking complex.h presence... yes
checking for complex.h... yes
checking fenv.h usability... yes
checking fenv.h presence... yes
checking for fenv.h... yes
checking io.h usability... no
checking io.h presence... no
checking for io.h... no
checking libc.h usability... no
checking libc.h presence... no
checking for libc.h... no
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking for memory.h... (cached) yes
checking process.h usability... no
checking process.h presence... no
checking for process.h... no
checking for string.h... (cached) yes
checking sys/dir.h usability... yes
checking sys/dir.h presence... yes
checking for sys/dir.h... yes
checking for sys/ioctl.h... (cached) yes
checking for sys/select.h... (cached) yes
checking for sys/time.h... (cached) yes
checking sys/timeb.h usability... yes
checking sys/timeb.h presence... yes
checking for sys/timeb.h... yes
checking for sys/times.h... (cached) yes
checking sys/stdtypes.h usability... no
checking sys/stdtypes.h presence... no
checking for sys/stdtypes.h... no
checking for sys/types.h... (cached) yes
checking sys/utime.h usability... no
checking sys/utime.h presence... no
checking for sys/utime.h... no
checking time.h usability... yes
checking time.h presence... yes
checking for time.h... yes
checking for unistd.h... (cached) yes
checking utime.h usability... yes
checking utime.h presence... yes
checking for utime.h... yes
checking pwd.h usability... yes
checking pwd.h presence... yes
checking for pwd.h... yes
checking grp.h usability... yes
checking grp.h presence... yes
checking for grp.h... yes
checking sys/utsname.h usability... yes
checking sys/utsname.h presence... yes
checking for sys/utsname.h... yes
checking direct.h usability... no
checking direct.h presence... no
checking for direct.h... no
checking machine/fpu.h usability... no
checking machine/fpu.h presence... no
checking for machine/fpu.h... no
checking sched.h usability... yes
checking sched.h presence... yes
checking for sched.h... yes
checking sys/sendfile.h usability... yes
checking sys/sendfile.h presence... yes
checking for sys/sendfile.h... yes
checking for complex double... yes
checking for socklen_t... (cached) yes
checking for struct ip_mreq... yes
checking for libc.h... (cached) no
checking for unistd.h... (cached) yes
checking whether libc.h and unistd.h can be included together... no
checking type of array argument to getgroups... gid_t
checking return type of signal handlers... void
checking for mode_t... (cached) yes
checking for cos in -lm... yes
checking for gethostbyname... (cached) yes
checking for connect... yes
checking assert.h usability... yes
checking assert.h presence... yes
checking for assert.h... yes
checking crt_externs.h usability... no
checking crt_externs.h presence... no
checking for crt_externs.h... no
checking for DINFINITY... no
checking for DQNAN... no
checking for cexp... yes
checking for chsize... no
checking for clog... yes
checking for clog10... yes
checking for ctermid... yes
checking for fesetround... yes
checking for ftime... yes
checking for ftruncate... yes
checking for fchown... yes
checking for fchmod... yes
checking for getcwd... (cached) yes
checking for geteuid... yes
checking for getsid... yes
checking for gettimeofday... yes
checking for gmtime_r... yes
checking for ioctl... yes
checking for lstat... (cached) yes
checking for mkdir... yes
checking for mknod... yes
checking for nice... yes
checking for readdir_r... yes
checking for readdir64_r... yes
checking for readlink... (cached) yes
checking for rename... yes
checking for rmdir... yes
checking for setegid... yes
checking for seteuid... yes
checking for setlocale... yes
checking for setpgid... yes
checking for setsid... yes
checking for sigaction... yes
checking for siginterrupt... yes
checking for stat64... yes
checking for strptime... yes
checking for symlink... (cached) yes
checking for sync... yes
checking for sysconf... yes
checking for tcgetpgrp... yes
checking for tcsetpgrp... yes
checking for uname... yes
checking for waitpid... yes
checking for strdup... yes
checking for system... yes
checking for usleep... yes
checking for atexit... yes
checking for on_exit... yes
checking for chown... yes
checking for link... (cached) yes
checking for fcntl... (cached) yes
checking for ttyname... yes
checking for getpwent... yes
checking for getgrent... yes
checking for kill... yes
checking for getppid... yes
checking for getpgrp... yes
checking for fork... yes
checking for setitimer... yes
checking for getitimer... yes
checking for strchr... yes
checking for strcmp... yes
checking for index... yes
checking for bcopy... yes
checking for memcpy... yes
checking for rindex... yes
checking for truncate... yes
checking for unsetenv... yes
checking for isblank... (cached) yes
checking for _NSGetEnviron... no
checking for strcoll... yes
checking for strcoll_l... yes
checking for newlocale... yes
checking for utimensat... yes
checking for sched_getaffinity... (cached) yes
checking for sched_setaffinity... yes
checking for sendfile... yes
checking crypt.h usability... yes
checking crypt.h presence... yes
checking for crypt.h... yes
checking for netdb.h... (cached) yes
checking pthread.h usability... yes
checking pthread.h presence... yes
checking for pthread.h... yes
checking pthread_np.h usability... no
checking pthread_np.h presence... no
checking for pthread_np.h... no
checking for sys/param.h... (cached) yes
checking sys/resource.h usability... yes
checking sys/resource.h presence... yes
checking for sys/resource.h... yes
checking for sys/file.h... (cached) yes
checking for sys/mman.h... (cached) yes
checking for chroot... yes
checking for flock... (cached) yes
checking for getlogin... (cached) yes
checking for cuserid... yes
checking for getpriority... yes
checking for setpriority... yes
checking for getpass... yes
checking for sethostname... yes
checking for gethostname... yes
checking whether sethostname is declared... (cached) yes
checking whether hstrerror is declared... no
checking whether cuserid is declared... yes
checking for library containing crypt... -lcrypt
checking for i... _Complex_I
checking whether csqrt is usable... yes
checking for libgmp... yes
checking how to link with libgmp... -lgmp
checking whether mpz_inits is declared... yes
checking whether libunistring was built with iconv support... yes
checking for x86_64-linux-gnu-pkg-config... no
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for LIBFFI... yes
checking size of size_t... (cached) 8
checking size of ssize_t... 8
checking whether NLS is requested... yes
checking for msgfmt... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... /usr/bin/xgettext
checking for msgmerge... /usr/bin/msgmerge
checking for CFPreferencesCopyAppValue... no
checking for CFLocaleCopyCurrent... no
checking for GNU gettext in libc... yes
checking whether to use NLS... yes
checking where the gettext function comes from... libc
checking for sleep declaration... yes
checking for usleep declaration... yes
checking whether getlogin is declared... (cached) yes
checking whether alarm is declared... yes
checking whether strptime is declared... yes
checking return type of usleep... int
checking sys/un.h usability... yes
checking sys/un.h presence... yes
checking for sys/un.h... yes
checking for getrlimit... yes
checking for setrlimit... yes
checking for socketpair... yes
checking for getgroups... yes
checking for setgroups... yes
checking for setpwent... yes
checking for pause... yes
checking for tzset... (cached) yes
checking for sethostent... yes
checking for gethostent... yes
checking for endhostent... yes
checking for setnetent... yes
checking for getnetent... yes
checking for endnetent... yes
checking for setprotoent... yes
checking for getprotoent... yes
checking for endprotoent... yes
checking for setservent... yes
checking for getservent... yes
checking for endservent... yes
checking for getnetbyaddr... yes
checking for getnetbyname... yes
checking for inet_lnaof... yes
checking for inet_makeaddr... yes
checking for inet_netof... yes
checking for hstrerror... yes
checking for struct sockaddr_in.sin_len... no
checking for __libc_stack_end... yes
checking whether netdb.h declares h_errno... yes
checking whether uint32_t is defined... yes
checking for working IPv6 support... yes
checking whether sockaddr_in6 has sin6_scope_id... yes
checking for struct sockaddr_in6.sin6_len... no
checking whether localtime caches TZ... no
checking for strerror... yes
checking for memmove... yes
checking for mkstemp... yes
checking for asinh... yes
checking for acosh... yes
checking for atanh... yes
checking for copysign... yes
checking for finite... yes
checking for sincos... yes
checking for trunc... yes
checking for isinf... yes
checking for isnan... yes
checking for struct stat.st_rdev... yes
checking for struct stat.st_blksize... yes
checking for struct stat.st_blocks... yes
checking for struct stat.st_atim... yes
checking for struct stat.st_mtim... yes
checking for struct stat.st_ctim... yes
checking for struct tm.tm_zone... (cached) yes
checking for struct tm.tm_gmtoff... (cached) yes
checking whether we need POSIX to get struct utimbuf... no
checking the value of `iconveh_error'... 0
checking the value of `iconveh_question_mark'... 1
checking the value of `iconveh_escape_sequence'... 2
checking for BDW_GC... yes
checking for GC_do_blocking... yes
checking for GC_call_with_gc_active... yes
checking for GC_pthread_exit... yes
checking for GC_pthread_cancel... yes
checking for GC_allow_register_threads... yes
checking for GC_pthread_sigmask... yes
checking for GC_set_start_callback... yes
checking for GC_get_heap_usage_safe... yes
checking for GC_get_free_space_divisor... yes
checking for GC_gcollect_and_unmap... yes
checking for GC_get_unmapped_bytes... yes
checking for GC_set_finalizer_notifier... yes
checking for GC_set_finalize_on_demand... yes
checking for GC_set_all_interior_pointers... yes
checking for GC_get_gc_no... yes
checking for GC_set_java_finalization... yes
checking whether GC_do_blocking is declared... yes
checking for GC_fn_type... yes
checking for struct GC_stack_base... yes
checking size of float... 4
checking for struct linger... yes
checking for struct timespec... yes
checking for the pthreads library -lpthreads... no
checking whether pthreads work without any flags... no
checking whether pthreads work with -Kthread... no
checking whether pthreads work with -kthread... no
checking for the pthreads library -llthread... no
checking whether pthreads work with -pthread... yes
checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE
checking if more special flags are required for pthreads... no
checking for pthread_attr_getstack... yes
checking for pthread_getattr_np... yes
checking for pthread_get_stackaddr_np... no
checking for pthread_attr_get_np... no
checking for pthread_sigmask... yes
checking whether PTHREAD_ONCE_INIT needs braces... no
checking whether PTHREAD_MUTEX_INITIALIZER needs braces... no
checking for library containing sched_yield... none required
checking what kind of threads to support... pthreads
checking whether pthread_attr_getstack works for the main thread... yes
checking whether the `__thread' storage class is available... yes
checking whether C compiler handles -Wall... yes
checking whether C compiler handles -Wmissing-prototypes... yes
checking whether C compiler handles -Wdeclaration-after-statement... yes
checking whether C compiler handles -Wpointer-arith... yes
checking whether C compiler handles -Wswitch-enum... yes
checking whether C compiler handles -fno-strict-aliasing... yes
checking whether the linker understands `-z relro'... yes
checking for tgoto in -lncurses... yes
checking how to link with libreadline... -lreadline
checking for siginterrupt... (cached) yes
checking for rl_clear_signals... yes
checking for rl_cleanup_after_signal... yes
checking for rl_filename_completion_function... yes
checking whether rl_catch_signals is declared... yes
checking whether rl_catch_sigwinch is declared... yes
checking for rl_get_keymap... yes
checking for rl_getc_function pointer in readline... yes
checking for strdup... (cached) yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating libguile/gen-scmconfig.h
config.status: creating Makefile
config.status: creating am/Makefile
config.status: creating lib/Makefile
config.status: creating benchmark-suite/Makefile
config.status: creating gc-benchmarks/Makefile
config.status: creating doc/Makefile
config.status: creating doc/r5rs/Makefile
config.status: creating doc/ref/Makefile
config.status: creating emacs/Makefile
config.status: creating examples/Makefile
config.status: creating libguile/Makefile
config.status: creating libguile/version.h
config.status: creating guile-readline/Makefile
config.status: creating test-suite/Makefile
config.status: creating test-suite/standalone/Makefile
config.status: creating test-suite/vm/Makefile
config.status: creating meta/Makefile
config.status: creating module/Makefile
config.status: creating meta/guile-2.0.pc
config.status: creating meta/guile-2.0-uninstalled.pc
config.status: creating check-guile
config.status: creating benchmark-guile
config.status: creating meta/guile
config.status: creating meta/uninstalled-env
config.status: creating meta/gdb-uninstalled-guile
config.status: creating meta/guild
config.status: creating libguile/guile-snarf
config.status: creating libguile/guile-snarf-docs
config.status: creating test-suite/standalone/test-use-srfi
config.status: creating test-suite/standalone/test-fast-slot-ref
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands
config.status: executing po-directories commands
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
   dh_auto_build -a -O--parallel
make[1]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
make  all-recursive
make[2]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
Making all in lib
make[3]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
  GEN      alloca.h
  GEN      c++defs.h
  GEN      warn-on-use.h
  GEN      arg-nonnull.h
  GEN      configmake.h
  GEN      unused-parameter.h
  GEN      sys/types.h
  GEN      langinfo.h
  GEN      poll.h
  GEN      sys/uio.h
  GEN      sys/file.h
  GEN      sys/select.h
  GEN      sys/socket.h
  GEN      sys/stat.h
  GEN      time.h
  GEN      sys/time.h
  GEN      sys/times.h
  GEN      unistd.h
  GEN      wchar.h
  GEN      wctype.h
  GEN      dirent.h
  GEN      arpa/inet.h
  GEN      fcntl.h
  GEN      iconv.h
  GEN      locale.h
  GEN      math.h
  GEN      netdb.h
  GEN      signal.h
  GEN      stdio.h
  GEN      stdlib.h
  GEN      string.h
make  all-recursive
make[4]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
make[5]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
  CC       binary-io.lo
  CC       c-ctype.lo
  CC       c-strcasecmp.lo
  CC       c-strncasecmp.lo
  CC       dirname-lgpl.lo
  CC       basename-lgpl.lo
  CC       stripslash.lo
  CC       fd-hook.lo
  CC       full-read.lo
  CC       full-write.lo
  CC       localcharset.lo
  CC       malloca.lo
  CC       math.lo
  CC       nproc.lo
  CC       pipe2.lo
  CC       safe-read.lo
  CC       safe-write.lo
  CC       sockets.lo
  CC       stat-time.lo
  CC       strftime.lo
  CC       striconveh.lo
  CC       sys_socket.lo
  CC       unistd.lo
  CC       wctype-h.lo
  CC       xsize.lo
  CC       asnprintf.lo
  CC       isnand.lo
  CC       isnanf.lo
  CC       isnanl.lo
  CC       printf-args.lo
  CC       printf-parse.lo
  CC       vasnprintf.lo
  GEN      charset.alias
  GEN      ref-add.sed
  GEN      ref-del.sed
  CC       unistr/u8-mbtouc.lo
  CC       unistr/u8-mbtouc-aux.lo
  CC       unistr/u8-mbtouc-unsafe.lo
  CC       unistr/u8-mbtouc-unsafe-aux.lo
  CCLD     libgnu.la
make[5]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
make[4]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
make[3]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/lib'
Making all in meta
make[3]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/meta'
guile="/usr/bin/`echo guile | /bin/sed -e 's,x,x,'`" ;	\
	cat ./guile-config.in						\
	| /bin/sed -e "s,@pkgconfigdir@,/usr/lib/pkgconfig,g"			\
		 -e "s,@""PKG_CONFIG@,/usr/bin/pkg-config,g"				\
		 -e "s,@installed_guile@,$guile,g"				\
	> guile-config.out
mv guile-config.out guile-config
chmod +x guile-config
make[3]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/meta'
Making all in libguile
make[3]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/libguile'
  GEN      cpp-E.c
  GEN      cpp-SIG.c
  GEN      gen-scmconfig.o
  GEN      vm-i-system.i
  GEN      vm-i-scheme.i
  GEN      vm-i-loader.i
  GEN      gen-scmconfig
  GEN      libpath.h
  GEN      scmconfig.h
  SNARF  alist.x
  SNARF  arbiters.x
  SNARF  array-handle.x
  SNARF  array-map.x
  SNARF  arrays.x
  SNARF  backtrace.x
  SNARF  async.x
  SNARF  boolean.x
  SNARF  bitvectors.x
  SNARF  bytevectors.x
  SNARF  chars.x
  SNARF  control.x
  SNARF  continuations.x
  SNARF  deprecated.x
  SNARF  debug.x
  SNARF  deprecation.x
  SNARF  dynl.x
  SNARF  dynwind.x
  SNARF  eq.x
  SNARF  error.x
  SNARF  eval.x
  SNARF  evalext.x
  SNARF  expand.x
  SNARF  extensions.x
  SNARF  feature.x
  SNARF  filesys.x
  SNARF  fluids.x
  SNARF  foreign.x
  SNARF  fports.x
  SNARF  gc-malloc.x
  SNARF  gc.x
  SNARF  gettext.x
  SNARF  generalized-arrays.x
  SNARF  generalized-vectors.x
  SNARF  goops.x
  SNARF  gsubr.x
  SNARF  guardians.x
  SNARF  hash.x
  SNARF  hashtab.x
  SNARF  hooks.x
  SNARF  i18n.x
  SNARF  init.x
  SNARF  ioext.x
  SNARF  keywords.x
  SNARF  load.x
  SNARF  list.x
  SNARF  macros.x
  SNARF  mallocs.x
  SNARF  memoize.x
  SNARF  modules.x
  SNARF  numbers.x
  SNARF  objprop.x
  SNARF  options.x
  SNARF  pairs.x
  SNARF  ports.x
  SNARF  print.x
  SNARF  procprop.x
  SNARF  procs.x
  SNARF  promises.x
  SNARF  r6rs-ports.x
  SNARF  random.x
  SNARF  rdelim.x
  SNARF  read.x
  SNARF  root.x
  SNARF  rw.x
  SNARF  scmsigs.x
  SNARF  script.x
  SNARF  simpos.x
  SNARF  smob.x
  SNARF  sort.x
  SNARF  srcprop.x
  SNARF  srfi-1.x
  SNARF  srfi-4.x
  SNARF  srfi-14.x
  SNARF  srfi-13.x
  SNARF  srfi-60.x
  SNARF  stackchk.x
  SNARF  stacks.x
  SNARF  stime.x
  SNARF  strorder.x
  SNARF  strings.x
  SNARF  strports.x
  SNARF  struct.x
  SNARF  symbols.x
  SNARF  threads.x
  SNARF  throw.x
  SNARF  trees.x
  SNARF  uniform.x
  SNARF  values.x
  SNARF  variable.x
  SNARF  vectors.x
  SNARF  version.x
  SNARF  weaks.x
  SNARF  vports.x
  SNARF  frames.x
  SNARF  instructions.x
  SNARF  programs.x
  SNARF  objcodes.x
  SNARF  vm.x
  SNARF  posix.x
  SNARF  net_db.x
  SNARF  socket.x
  SNARF  regex-posix.x
make  all-am
make[4]: Entering directory `/«BUILDDIR»/guile-2.0-2.0.9+1/libguile'
  CC       libguile_2.0_la-alist.lo
  CC       libguile_2.0_la-arbiters.lo
  CC       libguile_2.0_la-array-handle.lo
  CC       libguile_2.0_la-array-map.lo
  CC       libguile_2.0_la-async.lo
  CC       libguile_2.0_la-arrays.lo
  CC       libguile_2.0_la-backtrace.lo
  CC       libguile_2.0_la-boolean.lo
  CC       libguile_2.0_la-bitvectors.lo
  CC       libguile_2.0_la-bytevectors.lo
arbiters.carray-handle.c:100:1: warning: unused variable 's_scm_make_arbiter' [-Wunused-const-variable]
SCM_DEFINE (scm_make_arbiter, "make-arbiter", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_make_arbiter
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
:144:23: warning: comparison of unsigned enum expression < 0 is always false [-Wtautological-compare]
  if (h->element_type < 0 || h->element_type > SCM_ARRAY_ELEMENT_TYPE_LAST)
      ~~~~~~~~~~~~~~~ ^ ~
boolean.c:56:1: warning: unused variable 's_scm_not' [-Wunused-const-variable]
SCM_DEFINE (scm_not, "not", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_not
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
boolean.c:66:1: warning: unused variable 's_scm_boolean_p' [-Wunused-const-variable]
SCM_DEFINE (scm_boolean_p, "boolean?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_boolean_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
async.c:93:1: warning: unused variable 's_scm_async' [-Wunused-const-variable]
SCM_DEFINE (scm_async, "async", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_async
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
async.c:175:1: warning: unused variable 's_scm_system_async' [-Wunused-const-variable]
SCM_DEFINE (scm_system_async, "system-async", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:139:1: note: expanded from here
s_scm_system_async
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
async.c:419:1: warning: unused variable 's_scm_call_with_blocked_asyncs' [-Wunused-const-variable]
SCM_DEFINE (scm_call_with_blocked_asyncs, "call-with-blocked-asyncs", 1, 0, 0,
^
../libguile/snarf.h:106:alist.c:35:1: warning: unused variable 's_scm_acons' [-Wunused-const-variable]
SCM_DEFINE (scm_acons, "acons", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_acons
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:51:1: warning: unused variable 's_scm_sloppy_assq' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_assq, "sloppy-assq", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_sloppy_assq
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:69:1: warning: unused variable 's_scm_sloppy_assv' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_assv, "sloppy-assv", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_sloppy_assv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:87:1: warning: unused variable 's_scm_sloppy_assoc' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_assoc, "sloppy-assoc", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_sloppy_assoc
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:192:1: warning: unused variable 's_scm_assq_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_assq_ref, "assq-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:12:1: note: expanded from here
s_scm_assq_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:218:1: warning: unused variable 's_scm_assv_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_assv_ref, "assv-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:27:1: note: expanded from here
s_scm_assv_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:235:1: warning: unused variable 's_scm_assoc_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_assoc_ref, "assoc-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:40:1: note: expanded from here
s_scm_call_with_blocked_asyncs
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
backtrace.c:536:1: warning: unused variable 's_scm_display_backtrace_with_highlights' [-Wunused-const-variable]
SCM_DEFINE (scm_display_backtrace_with_highlights, "display-backtrace", 2, 3, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:142:1: note: expanded from here
s_scm_display_backtrace_with_highlights
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
backtrace.c:575:1: warning: unused variable 's_scm_backtrace_with_highlights' [-Wunused-const-variable]
SCM_DEFINE (scm_backtrace_with_highlights, "backtrace", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:157:1: note: expanded from here
s_scm_backtrace_with_highlights
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:42:1: note: expanded from here
s_scm_assoc_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:256:1: warning: unused variable 's_scm_assq_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assq_set_x, "assq-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:57:1: note: expanded from here
s_scm_assq_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:282:1: warning: unused variable 's_scm_assv_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assv_set_x, "assv-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:72:1: note: expanded from here
s_scm_assv_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:300:1: warning: unused variable 's_scm_assoc_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assoc_set_x, "assoc-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:87:1: note: expanded from here
s_scm_assoc_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:321:1: warning: unused variable 's_scm_assq_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assq_remove_x, "assq-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:102:1: note: expanded from here
s_scm_assq_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:340:1: warning: unused variable 's_scm_assv_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assv_remove_x, "assv-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:117:1: note: expanded from here
s_scm_assv_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
alist.c:356:1: warning: unused variable 's_scm_assoc_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_assoc_remove_x, "assoc-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_assoc_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
bitvectors.c:94:1: warning: unused variable 's_scm_bitvector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_p, "bitvector?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_bitvector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:123:1: warning: unused variable 's_scm_make_bitvector' [-Wunused-const-variable]
SCM_DEFINE (scm_make_bitvector, "make-bitvector", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_make_bitvector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.carrays.c:77:1: warning: unused variable 's_scm_shared_array_offset' [-Wunused-const-variable]
SCM_DEFINE (scm_shared_array_offset, "shared-array-offset", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_shared_array_offset
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
arrays.c:93:1: warning: unused variable 's_scm_shared_array_increments' [-Wunused-const-variable]
SCM_DEFINE (scm_shared_array_increments, "shared-array-increments", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_shared_array_increments
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
arrays.c:297:1: warning: unused variable 's_scm_make_array' [-Wunused-const-variable]
SCM_DEFINE (scm_make_array, "make-array", 1, 0, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_make_array
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
arrays.c:549:1: warning: unused variable 's_scm_array_contents' [-Wunused-const-variable]
SCM_DEFINE (scm_array_contents, "array-contents", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:38:1: note: expanded from here
s_scm_array_contents
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
arrays.c:639:1: warning: unused variable 's_scm_list_to_typed_array' [-Wunused-const-variable]
SCM_DEFINE (scm_list_to_typed_array, "list->typed-array", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:53:1: note: expanded from here
s_scm_list_to_typed_array
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
arrays.c:709:1: warning: unused variable 's_scm_list_to_array' [-Wunused-const-variable]
SCM_DEFINE (scm_list_to_array, "list->array", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:68:1: note: expanded from here
s_scm_list_to_array
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
:133:1: warning: unused variable 's_scm_bitvector' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector, "bitvector", 0, 0, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_bitvector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:150:1: warning: unused variable 's_scm_bitvector_length' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_length, "bitvector-length", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_bitvector_length
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:240:1: warning: unused variable 's_scm_bitvector_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_ref, "bitvector-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:152:1: note: expanded from here
s_scm_bitvector_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:283:1: warning: unused variable 's_scm_bitvector_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_set_x, "bitvector-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:167:1: note: expanded from here
s_scm_bitvector_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:294:1: warning: unused variable 's_scm_bitvector_fill_x' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_fill_x, "bitvector-fill!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:13:1: note: expanded from here
s_scm_bitvector_fill_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:339:1: warning: unused variable 's_scm_list_to_bitvector' [-Wunused-const-variable]
SCM_DEFINE (scm_list_to_bitvector, "list->bitvector", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:28:1: note: expanded from here
s_scm_list_to_bitvector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:369:1: warning: unused variable 's_scm_bitvector_to_list' [-Wunused-const-variable]
SCM_DEFINE (scm_bitvector_to_list, "bitvector->list", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:43:1: note: expanded from here
s_scm_bitvector_to_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:433:1: warning: unused variable 's_scm_bit_count' [-Wunused-const-variable]
SCM_DEFINE (scm_bit_count, "bit-count", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:58:1: note: expanded from here
s_scm_bit_count
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:495:1: warning: unused variable 's_scm_bit_position' [-Wunused-const-variable]
SCM_DEFINE (scm_bit_position, "bit-position", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:73:1: note: expanded from here
s_scm_bit_position
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:561:1: warning: unused variable 's_scm_bit_set_star_x' [-Wunused-const-variable]
SCM_DEFINE (scm_bit_set_star_x, "bit-set*!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:88:1: note: expanded from here
s_scm_bit_set_star_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:673:1: warning: unused variable 's_scm_bit_count_star' [-Wunused-const-variable]
SCM_DEFINE (scm_bit_count_star, "bit-count*", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:103:1: note: expanded from here
s_scm_bit_count_star
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bitvectors.c:775:1: warning: unused variable 's_scm_bit_invert_x' [-Wunused-const-variable]
SCM_DEFINE (scm_bit_invert_x, "bit-invert!", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_bit_invert_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
array-map.c:910:1: warning: unused variable 's_scm_i_array_equal_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_array_equal_p, "array-equal?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:3:1: note: expanded from here
s_scm_i_array_equal_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
3 warnings generated.
13 warnings generated.
2 warnings generated.
bytevectors.c:435:1: warning: unused variable 's_scm_native_endianness' [-Wunused-const-variable]
SCM_DEFINE (scm_native_endianness, "native-endianness", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:103:1: note: expanded from here
s_scm_native_endianness
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bytevectors.c:444:1: warning: unused variable 's_scm_bytevector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_bytevector_p, "bytevector?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:118:1: note: expanded from here
s_scm_bytevector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bytevectors.c:491:1: warning: unused variable 's_scm_bytevector_length' [-Wunused-const-variable]
SCM_DEFINE (scm_bytevector_length, "bytevector-length", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:148:1: note: expanded from here
s_scm_bytevector_length
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
bytevectors.c:1838:1: warning: unused function 'utf8_strlen' [-Wunused-function]
UTF_STRLEN_FUNCTION (8)
^
bytevectors.c:1823:28: note: expanded from macro 'UTF_STRLEN_FUNCTION'
static inline size_t                                                    \
                                                                        ^
<scratch space>:2:1: note: expanded from here
utf8_strlen
^
bytevectors.c:1959:1: warning: unused variable 's_scm_string_to_utf32' [-Wunused-const-variable]
SCM_DEFINE (scm_string_to_utf32, "string->utf32",
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:43:1: note: expanded from here
s_scm_string_to_utf32
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-chars.lo
6 warnings generated.
  CC       libguile_2.0_la-control.lo
14 warnings generated.
  CC       libguile_2.0_la-continuations.lo
1 warning generated.
  CC       libguile_2.0_la-debug.lo
  CC       libguile_2.0_la-deprecated.lo
chars.c:538:27: warning: duplicate 'const' declaration specifier [-Wduplicate-decl-specifier]
static const scm_t_uint32 const scm_r5rs_charnums[] = {
                          ^
chars.c:550:27: warning: duplicate 'const' declaration specifier [-Wduplicate-decl-specifier]
static const scm_t_uint32 const scm_r6rs_charnums[] = {
                          ^
chars.c:567:27: warning: duplicate 'const' declaration specifier [-Wduplicate-decl-specifier]
static const scm_t_uint32 const scm_C0_control_charnums[] = {
                          ^
chars.c:581:27: warning: duplicate 'const' declaration specifier [-Wduplicate-decl-specifier]
static const scm_t_uint32 const scm_alt_charnums[] = {
                          ^
continuations.cchars.c:38:1: warning: unused variable 's_scm_char_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_p, "char?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:93:1: note: expanded from here
s_scm_char_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:358:1: warning: unused variable 's_scm_char_alphabetic_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_alphabetic_p, "char-alphabetic?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:97:1: note: expanded from here
s_scm_char_alphabetic_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:367:1: warning: unused variable 's_scm_char_numeric_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_numeric_p, "char-numeric?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:112:1: note: expanded from here
s_scm_char_numeric_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:376:1: warning: unused variable 's_scm_char_whitespace_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_whitespace_p, "char-whitespace?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:9:1: note: expanded from here
s_scm_char_whitespace_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:386:1: warning: unused variable 's_scm_char_upper_case_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_upper_case_p, "char-upper-case?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:24:1: note: expanded from here
s_scm_char_upper_case_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:396:1: warning: unused variable 's_scm_char_lower_case_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_lower_case_p, "char-lower-case?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:39:1: note: expanded from here
s_scm_char_lower_case_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
chars.c:405:1: warning: unused variable 's_scm_char_is_both_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_is_both_p, "char-is-both?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:54:1: note: expanded from here
s_scm_char_is_both_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
:573:1: warning: unused variable 's_scm_with_continuation_barrier' [-Wunused-const-variable]
SCM_DEFINE (scm_with_continuation_barrier, "with-continuation-barrier", 1,0,0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:47:1: note: expanded from here
s_scm_with_continuation_barrier
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-deprecation.lo
1 warning generated.
11 warnings generated.
  CC       libguile_2.0_la-dynwind.lo
5 warnings generated.
  CC       libguile_2.0_la-eq.lo
deprecation.c:106:1: warning: unused variable 's_scm_issue_deprecation_warning' [-Wunused-const-variable]
SCM_DEFINE(scm_issue_deprecation_warning,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_issue_deprecation_warning
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecation.c:152:1: warning: unused variable 's_scm_include_deprecated_features' [-Wunused-const-variable]
SCM_DEFINE(scm_include_deprecated_features,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_include_deprecated_features
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-error.lo
  CC       libguile_2.0_la-eval.lo
2 warnings generated.
deprecated.c:179:1: warning: unused variable 's_scm_registered_modules' [-Wunused-const-variable]
SCM_DEFINE (scm_registered_modules, "c-registered-modules", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:212:1: note: expanded from here
s_scm_registered_modules
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:200:1: warning: unused variable 's_scm_clear_registered_modules' [-Wunused-const-variable]
SCM_DEFINE (scm_clear_registered_modules, "c-clear-registered-modules", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:227:1: note: expanded from here
s_scm_clear_registered_modules
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:436:1: warning: unused variable 's_scm_sloppy_memq' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_memq, "sloppy-memq", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:59:1: note: expanded from here
s_scm_sloppy_memq
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:456:1: warning: unused variable 's_scm_sloppy_memv' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_memv, "sloppy-memv", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:74:1: note: expanded from here
s_scm_sloppy_memv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:476:1: warning: unused variable 's_scm_sloppy_member' [-Wunused-const-variable]
SCM_DEFINE (scm_sloppy_member, "sloppy-member", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:89:1: note: expanded from here
s_scm_sloppy_member
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:497:1: warning: unused variable 's_scm_read_and_eval_x' [-Wunused-const-variable]
SCM_DEFINE (scm_read_and_eval_x, "read-and-eval!", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:109:1: note: expanded from here
s_scm_read_and_eval_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1470:1: warning: unused variable 's_scm_uniform_array_read_x' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_array_read_x, "uniform-array-read!", 1, 3, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:38:1: note: expanded from here
s_scm_uniform_array_read_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1526:1: warning: unused variable 's_scm_uniform_array_write' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_array_write, "uniform-array-write", 1, 3, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:53:1: note: expanded from here
s_scm_uniform_array_write
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1645:1: warning: unused variable 's_scm_inet_aton' [-Wunused-const-variable]
SCM_DEFINE (scm_inet_aton, "inet-aton", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:68:1: note: expanded from here
s_scm_inet_aton
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1662:1: warning: unused variable 's_scm_inet_ntoa' [-Wunused-const-variable]
SCM_DEFINE (scm_inet_ntoa, "inet-ntoa", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:83:1: note: expanded from here
s_scm_inet_ntoa
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1715:1: warning: unused variable 's_scm_guardian_destroyed_p' [-Wunused-const-variable]
SCM_DEFINE (scm_guardian_destroyed_p, "guardian-destroyed?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:98:1: note: expanded from here
s_scm_guardian_destroyed_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1726:1: warning: unused variable 's_scm_guardian_greedy_p' [-Wunused-const-variable]
SCM_DEFINE (scm_guardian_greedy_p, "guardian-greedy?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:8:1: note: expanded from here
s_scm_guardian_greedy_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:1737:1: warning: unused variable 's_scm_destroy_guardian_x' [-Wunused-const-variable]
SCM_DEFINE (scm_destroy_guardian_x, "destroy-guardian!", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:23:1: note: expanded from here
s_scm_destroy_guardian_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2320:1: warning: unused variable 's_scm_keyword_dash_symbol' [-Wunused-const-variable]
SCM_DEFINE (scm_keyword_dash_symbol, "keyword-dash-symbol", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:85:1: note: expanded from here
s_scm_keyword_dash_symbol
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2381:1: warning: unused variable 's_scm_cuserid' [-Wunused-const-variable]
SCM_DEFINE (scm_cuserid, "cuserid", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_cuserid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2776:1: warning: unused variable 's_scm_standard_eval_closure' [-Wunused-const-variable]
SCM_DEFINE (scm_standard_eval_closure, "standard-eval-closure", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:69:1: note: expanded from here
s_scm_standard_eval_closure
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2790:1: warning: unused variable 's_scm_standard_interface_eval_closure' [-Wunused-const-variable]
SCM_DEFINE (scm_standard_interface_eval_closure,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:84:1: note: expanded from here
s_scm_standard_interface_eval_closure
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2845:1: warning: unused variable 's_scm_generalized_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_generalized_vector_p, "generalized-vector?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:42:1: note: expanded from here
s_scm_generalized_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2858:1: warning: unused variable 's_scm_generalized_vector_length' [-Wunused-const-variable]
SCM_DEFINE (scm_generalized_vector_length, "generalized-vector-length", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:57:1: note: expanded from here
s_scm_generalized_vector_length
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2869:1: warning: unused variable 's_scm_generalized_vector_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_generalized_vector_ref, "generalized-vector-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:72:1: note: expanded from here
s_scm_generalized_vector_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2881:1: warning: unused variable 's_scm_generalized_vector_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_generalized_vector_set_x, "generalized-vector-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:87:1: note: expanded from here
s_scm_generalized_vector_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
deprecated.c:2895:1: warning: unused variable 's_scm_generalized_vector_to_list' [-Wunused-const-variable]
SCM_DEFINE (scm_generalized_vector_to_list, "generalized-vector->list", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:8:1: note: expanded from here
s_scm_generalized_vector_to_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-evalext.lo
  CC       libguile_2.0_la-expand.lo
eq.c:54:1: warning: unused variable 's_scm_i_eq_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_eq_p, "eq?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:145:1: note: expanded from here
s_scm_i_eq_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
eq.c:161:1: warning: unused variable 's_scm_i_eqv_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_eqv_p, "eqv?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_i_eqv_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
error.c:69:1: warning: unused variable 's_scm_error_scm' [-Wunused-const-variable]
SCM_DEFINE (scm_error_scm, "scm-error", 5, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_error_scm
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
error.c:118:1: warning: unused variable 's_scm_strerror' [-Wunused-const-variable]
SCM_DEFINE (scm_strerror, "strerror", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_strerror
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
  CC       libguile_2.0_la-extensions.lo
2 warnings generated.
  CC       libguile_2.0_la-feature.lo
expand.c:107:19: warning: unused variable 's_empty_combination' [-Wunused-const-variable]
static const char s_empty_combination[] = "Illegal empty combination";
                  ^
expand.c:108:19: warning: unused variable 's_missing_body_expression' [-Wunused-const-variable]
static const char s_missing_body_expression[] = "Missing body expression in";
                  ^
expand.c:109:19: warning: unused variable 's_mixed_body_forms' [-Wunused-const-variable]
static const char s_mixed_body_forms[] = "Mixed definitions and expressions in";
                  ^
expand.c:113:19: warning: unused variable 's_bad_case_clause' [-Wunused-const-variable]
static const char s_bad_case_clause[] = "Bad case clause";
                  ^
expand.c:114:19: warning: unused variable 's_bad_case_labels' [-Wunused-const-variable]
static const char s_bad_case_labels[] = "Bad case labels";
                  ^
expand.c:115:19: warning: unused variable 's_duplicate_case_label' [-Wunused-const-variable]
static const char s_duplicate_case_label[] = "Duplicate case label";
                  ^
expand.c:122:19: warning: unused variable 's_bad_exit_clause' [-Wunused-const-variable]
static const char s_bad_exit_clause[] = "Bad exit clause";
                  ^
expand.c:126:19: warning: unused variable 's_splicing' [-Wunused-const-variable]
static const char s_splicing[] = "Non-list result for unquote-splicing";
                  ^
expand.c:127:19: warning: unused variable 's_bad_slot_number' [-Wunused-const-variable]
static const char s_bad_slot_number[] = "Bad slot number";
                  ^
expand.c:1180:1: warning: unused variable 's_scm_macroexpand' [-Wunused-const-variable]
SCM_DEFINE (scm_macroexpand, "macroexpand", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:86:1: note: expanded from here
s_scm_macroexpand
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
expand.c:1189:1: warning: unused variable 's_scm_macroexpanded_p' [-Wunused-const-variable]
SCM_DEFINE (scm_macroexpanded_p, "macroexpanded?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:101:1: note: expanded from here
s_scm_macroexpanded_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-filesys.lo
extensions.c:129:1: warning: unused variable 's_scm_load_extension' [-Wunused-const-variable]
SCM_DEFINE (scm_load_extension, "load-extension", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_load_extension
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
22 warnings generated.
1 warning generated.
feature.c:54:1: warning: unused variable 's_scm_program_arguments' [-Wunused-const-variable]
SCM_DEFINE (scm_program_arguments, "program-arguments", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_program_arguments
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
feature.c:82:1: warning: unused variable 's_scm_set_program_arguments_scm' [-Wunused-const-variable]
SCM_DEFINE (scm_set_program_arguments_scm, "set-program-arguments", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_set_program_arguments_scm
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
  CC       libguile_2.0_la-finalizers.lo
  CC       libguile_2.0_la-fluids.lo
  CC       libguile_2.0_la-foreign.lo
  CC       libguile_2.0_la-fports.lo
  CC       libguile_2.0_la-frames.lo
11 warnings generated.
filesys.c:214:1: warning: unused variable 's_scm_open' [-Wunused-const-variable]
SCM_DEFINE (scm_open, "open", 2, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39fluids.c:181:1: warning: unused variable 's_scm_make_fluid_with_default' [-Wunused-const-variable]
SCM_DEFINE (scm_make_fluid_with_default, "make-fluid", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_open
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
filesys.c:1356:1: warning: unused variable 's_scm_access' [-Wunused-const-variable]
SCM_DEFINE (scm_access, "access?", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:121:1: note: expanded from here
s_scm_access
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
filesys.c:1448:1: warning: unused variable 's_scm_umask' [-Wunused-const-variable]
SCM_DEFINE (scm_umask, "umask", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:8:1: note: expanded from here
s_scm_umask
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
filesys.c:1531:1: warning: unused variable 's_scm_system_file_name_convention' [-Wunused-const-variable]
SCM_DEFINE (scm_system_file_name_convention,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:43:1: note: expanded from here
s_scm_system_file_name_convention
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
filesys.c:1700:1: warning: unused variable 's_scm_directory_stream_p' [-Wunused-const-variable]
SCM_DEFINE (scm_directory_stream_p, "directory-stream?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:103:1: note: expanded from here
s_scm_directory_stream_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
:100:1: note: expanded from here
s_scm_make_fluid_with_default
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:197:1: warning: unused variable 's_scm_make_unbound_fluid' [-Wunused-const-variable]
SCM_DEFINE (scm_make_unbound_fluid, "make-unbound-fluid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_make_unbound_fluid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:206:1: warning: unused variable 's_scm_fluid_p' [-Wunused-const-variable]
SCM_DEFINE (scm_fluid_p, "fluid?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_fluid_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:283:1: warning: unused variable 's_scm_fluid_unset_x' [-Wunused-const-variable]
SCM_DEFINE (scm_fluid_unset_x, "fluid-unset!", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:175:1: note: expanded from here
s_scm_fluid_unset_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:440:1: warning: unused variable 's_scm_with_fluid' [-Wunused-const-variable]
SCM_DEFINE (scm_with_fluid, "with-fluid*", 3, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:46:1: note: expanded from here
s_scm_with_fluid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:509:1: warning: unused variable 's_scm_dynamic_state_p' [-Wunused-const-variable]
SCM_DEFINE (scm_dynamic_state_p, "dynamic-state?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:76:1: note: expanded from here
s_scm_dynamic_state_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:525:1: warning: unused variable 's_scm_current_dynamic_state' [-Wunused-const-variable]
SCM_DEFINE (scm_current_dynamic_state, "current-dynamic-state", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:91:1: note: expanded from here
s_scm_current_dynamic_state
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
fluids.c:576:1: warning: unused variable 's_scm_with_dynamic_state' [-Wunused-const-variable]
SCM_DEFINE (scm_with_dynamic_state, "with-dynamic-state", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:13:1: note: expanded from here
s_scm_with_dynamic_state
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-gc-malloc.lo
foreign.c:110:1: warning: unused variable 's_scm_pointer_p' [-Wunused-const-variable]
SCM_DEFINE (scm_pointer_p, "pointer?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:146:1: note: expanded from here
s_scm_pointer_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
foreign.c:195:1: warning: unused variable 's_scm_scm_to_pointer' [-Wunused-const-variable]
SCM_DEFINE (scm_scm_to_pointer, "scm->pointer", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:64:1: note: expanded from here
s_scm_scm_to_pointer
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
8 warnings generated.
fports.c:269:1: warning: unused variable 's_scm_file_port_p' [-Wunused-const-variable]
SCM_DEFINE (scm_file_port_p, "file-port?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:116:1: note: expanded from here
s_scm_file_port_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
frames.c:66:1: warning: unused variable 's_scm_frame_p' [-Wunused-const-variable]
SCM_DEFINE (scm_frame_p, "frame?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:109:1: note: expanded from here
s_scm_frame_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-gc.lo
2 warnings generated.
1 warning generated.
  CC       libguile_2.0_la-gdbint.lo
5 warnings generated.
1 warning generated.
gc.c:293:1: warning: unused variable 's_scm_gc_live_object_stats' [-Wunused-const-variable]
SCM_DEFINE (scm_gc_live_object_stats, "gc-live-object-stats", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:179:1: note: expanded from here
s_scm_gc_live_object_stats
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:309:1: warning: unused variable 's_scm_gc_stats' [-Wunused-const-variable]
SCM_DEFINE (scm_gc_stats, "gc-stats", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:194:1: note: expanded from here
s_scm_gc_stats
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:347:1: warning: unused variable 's_scm_gc_dump' [-Wunused-const-variable]
SCM_DEFINE (scm_gc_dump, "gc-dump", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_gc_dump
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:360:1: warning: unused variable 's_scm_object_address' [-Wunused-const-variable]
SCM_DEFINE (scm_object_address, "object-address", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:20:1: note: expanded from here
s_scm_object_address
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:371:1: warning: unused variable 's_scm_gc_disable' [-Wunused-const-variable]
SCM_DEFINE (scm_gc_disable, "gc-disable", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:35:1: note: expanded from here
s_scm_gc_disable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:383:1: warning: unused variable 's_scm_gc_enable' [-Wunused-const-variable]
SCM_DEFINE (scm_gc_enable, "gc-enable", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:50:1: note: expanded from here
s_scm_gc_enable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gc.c:394:1: warning: unused variable 's_scm_gc' [-Wunused-const-variable]
SCM_DEFINE (scm_gc, "gc", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:65:1: note: expanded from here
s_scm_gc
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-gettext.lo
  CC       libguile_2.0_la-generalized-arrays.lo
7 warnings generated.
  CC       libguile_2.0_la-generalized-vectors.lo
  CC       libguile_2.0_la-goops.lo
  CC       libguile_2.0_la-gsubr.lo
  CC       libguile_2.0_la-guardians.lo
  CC       libguile_2.0_la-hash.lo
gettext.c:86:1: warning: unused variable 's_scm_gettext' [-Wunused-const-variable]
SCM_DEFINE (scm_gettext, "gettext", 1, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_gettext
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
gettext.c:141:1: warning: unused variable 's_scm_ngettext' [-Wunused-const-variable]
SCM_DEFINE (scm_ngettext, "ngettext", 3, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_ngettext
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-hashtab.lo
generalized-arrays.c:48:1: warning: unused variable 's_scm_array_p_2' [-Wunused-const-variable]
SCM_DEFINE (scm_array_p_2, "array?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_array_p_2
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:84:1: warning: unused variable 's_scm_typed_array_p' [-Wunused-const-variable]
SCM_DEFINE (scm_typed_array_p, "typed-array?", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_typed_array_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:106:1: warning: unused variable 's_scm_array_rank' [-Wunused-const-variable]
SCM_DEFINE (scm_array_rank, "array-rank", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_array_rank
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:134:1: warning: unused variable 's_scm_array_length' [-Wunused-const-variable]
SCM_DEFINE (scm_array_length, "array-length", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:145:1: note: expanded from here
s_scm_array_length
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:145:1: warning: unused variable 's_scm_array_dimensions' [-Wunused-const-variable]
SCM_DEFINE (scm_array_dimensions, "array-dimensions", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_array_dimensions
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:176:1: warning: unused variable 's_scm_array_type' [-Wunused-const-variable]
SCM_DEFINE (scm_array_type, "array-type", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:175:1: note: expanded from here
s_scm_array_type
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:309:1: warning: unused variable 's_scm_i_array_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_i_array_ref, "array-ref", 1, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:26:1: note: expanded from here
s_scm_i_array_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:327:1: warning: unused variable 's_scm_i_array_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_i_array_set_x, "array-set!", 2, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:41:1: note: expanded from here
s_scm_i_array_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
generalized-arrays.c:369:1: warning: unused variable 's_scm_array_to_list' [-Wunused-const-variable]
SCM_DEFINE (scm_array_to_list, "array->list", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:56:1: note: expanded from here
s_scm_array_to_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
9 warnings generated.
  CC       libguile_2.0_la-hooks.lo
  CC       libguile_2.0_la-i18n.lo
guardians.c:292:1: warning: unused variable 's_scm_make_guardian' [-Wunused-const-variable]
SCM_DEFINE (scm_make_guardian, "make-guardian", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_make_guardian
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
hash.c:280:1: warning: unused variable 's_scm_hashq' [-Wunused-const-variable]
SCM_DEFINE (scm_hashq, "hashq", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:141:1: note: expanded from here
s_scm_hashq
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hash.c:316:1: warning: unused variable 's_scm_hashv' [-Wunused-const-variable]
SCM_DEFINE (scm_hashv, "hashv", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:156:1: note: expanded from here
s_scm_hashv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hash.c:345:1: warning: unused variable 's_scm_hash' [-Wunused-const-variable]
SCM_DEFINE (scm_hash, "hash", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:171:1: note: expanded from here
s_scm_hash
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-init.lo
  CC       libguile_2.0_la-inline.lo
hashtab.c3 warnings generated.
:544:1: warning: unused variable 's_scm_hash_table_p' [-Wunused-const-variable]
SCM_DEFINE (scm_hash_table_p, "hash-table?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:36:1: note: expanded from here
s_scm_hash_table_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:554:1: warning: unused variable 's_scm_weak_key_hash_table_p' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_key_hash_table_p, "weak-key-hash-table?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:51:1: note: expanded from here
s_scm_weak_key_hash_table_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:568:1: warning: unused variable 's_scm_weak_value_hash_table_p' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_value_hash_table_p, "weak-value-hash-table?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:66:1: note: expanded from here
s_scm_weak_value_hash_table_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:578:1: warning: unused variable 's_scm_doubly_weak_hash_table_p' [-Wunused-const-variable]
SCM_DEFINE (scm_doubly_weak_hash_table_p, "doubly-weak-hash-table?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:81:1: note: expanded from here
s_scm_doubly_weak_hash_table_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:923:1: warning: unused variable 's_scm_hashq_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_hashq_ref, "hashq-ref", 2, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:51:1: note: expanded from here
s_scm_hashq_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:942:1: warning: unused variable 's_scm_hashq_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashq_set_x, "hashq-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:66:1: note: expanded from here
s_scm_hashq_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:957:1: warning: unused variable 's_scm_hashq_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashq_remove_x, "hashq-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:81:1: note: expanded from here
s_scm_hashq_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1010:1: warning: unused variable 's_scm_hashv_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_hashv_ref, "hashv-ref", 2, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:15:1: note: expanded from here
s_scm_hashv_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1029:1: warning: unused variable 's_scm_hashv_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashv_set_x, "hashv-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:30:1: note: expanded from here
s_scm_hashv_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1043:1: warning: unused variable 's_scm_hashv_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashv_remove_x, "hashv-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:45:1: note: expanded from here
s_scm_hashv_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1095:1: warning: unused variable 's_scm_hash_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_hash_ref, "hash-ref", 2, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:90:1: note: expanded from here
s_scm_hash_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1114:1: warning: unused variable 's_scm_hash_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hash_set_x, "hash-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:105:1: note: expanded from here
s_scm_hash_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1130:1: warning: unused variable 's_scm_hash_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hash_remove_x, "hash-remove!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:4:1: note: expanded from here
s_scm_hash_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1220:1: warning: unused variable 's_scm_hashx_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_hashx_ref, "hashx-ref", 4, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:49:1: note: expanded from here
s_scm_hashx_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1246:1: warning: unused variable 's_scm_hashx_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashx_set_x, "hashx-set!", 5, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:64:1: note: expanded from here
s_scm_hashx_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hashtab.c:1267:1: warning: unused variable 's_scm_hashx_remove_x' [-Wunused-const-variable]
SCM_DEFINE (scm_hashx_remove_x, "hashx-remove!", 4, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:79:1: note: expanded from here
s_scm_hashx_remove_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:241:1: warning: unused variable 's_scm_class_of' [-Wunused-const-variable]
SCM_DEFINE (scm_class_of, "class-of", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:135:1: note: expanded from here
s_scm_class_of
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:1028:1: warning: unused variable 's_scm_instance_p' [-Wunused-const-variable]
SCM_DEFINE (scm_instance_p, "instance?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:65:1: note: expanded from here
s_scm_instance_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:1207:1: warning: unused variable 's_scm_make_unbound' [-Wunused-const-variable]
SCM_DEFINE (scm_make_unbound, "make-unbound", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:62:1: note: expanded from here
s_scm_make_unbound
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:1216:1: warning: unused variable 's_scm_unbound_p' [-Wunused-const-variable]
SCM_DEFINE (scm_unbound_p, "unbound?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:77:1: note: expanded from here
s_scm_unbound_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:1225:1: warning: unused variable 's_scm_assert_bound' [-Wunused-const-variable]
SCM_DEFINE (scm_assert_bound, "assert-bound", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_assert_bound
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:1237:1: warning: unused variable 's_scm_at_assert_bound_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_at_assert_bound_ref, "@assert-bound-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_at_assert_bound_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:2165:1: warning: unused variable 'scm_make__name' [-Wunused-variable]
SCM_DEFINE (scm_make, "make",  0, 0, 1,
^
../libguile/snarf.h:104:13: note: expanded from macro 'SCM_DEFINE'
SCM_SYMBOL (scm_i_paste (FNAME, __name), PRIMNAME);                     \
            ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:35:1: note: expanded from here
scm_make__name
^
../libguile/snarf.h:195:14: note: expanded from macro '\
SCM_SYMBOL'
  static SCM c_name)                                                    \
             ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
goops.c:2806:1: warning: unused variable 's_scm_sys_goops_loaded' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_goops_loaded, "%goops-loaded", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:99:1: note: expanded from here
s_scm_sys_goops_loaded
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hooks.c:157:1: warning: unused variable 's_scm_make_hook' [-Wunused-const-variable]
SCM_DEFINE (scm_make_hook, "make-hook", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_make_hook
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
hooks.c:176:1: warning: unused variable 's_scm_hook_p' [-Wunused-const-variable]
SCM_DEFINE (scm_hook_p, "hook?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_hook_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-instructions.lo
  CC       libguile_2.0_la-ioext.lo
i18n.c2:705:1: warning: unused variable 's_scm_locale_p' [-Wunused-const-variable]
SCM_DEFINE (scm_locale_p, "locale?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:147:1: note: expanded from here
s_scm_locale_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
i18n.c:839:1: warning: unused function 'str_upcase' [-Wunused-function]
str_upcase (register char *dst, register const char *src)
^
i18n.c:847:1: warning: unused function 'str_downcase' [-Wunused-function]
str_downcase (register char *dst, register const char *src)
^
i18n.c:856:1: warning warnings generated.
: unused function 'str_upcase_l' [-Wunused-function]
str_upcase_l (register char *dst, register const char *src,
^
i18n.c:865:1: warning: unused function 'str_downcase_l' [-Wunused-function]
str_downcase_l (register char *dst, register const char *src,
^
  CC       libguile_2.0_la-keywords.lo
16 warnings generated.
  CC       libguile_2.0_la-list.lo
instructions.c:115:1: warning: unused variable 's_scm_instruction_list' [-Wunused-const-variable]
SCM_DEFINE (scm_instruction_list, "instruction-list", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:81:1: note: expanded from here
s_scm_instruction_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
instructions.c:130:1: warning: unused variable 's_scm_instruction_p' [-Wunused-const-variable]
SCM_DEFINE (scm_instruction_p, "instruction?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:96:1: note: expanded from here
s_scm_instruction_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ioext.c:49:1: warning: unused variable 's_scm_ftell' [-Wunused-const-variable]
SCM_DEFINE (scm_ftell, "ftell", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_ftell
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ioext.c:196:1: warning: unused variable 's_scm_isatty_p' [-Wunused-const-variable]
SCM_DEFINE (scm_isatty_p, "isatty?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:179:1: note: expanded from here
s_scm_isatty_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ioext.c:216:1: warning: unused variable 's_scm_fdopen' [-Wunused-const-variable]
SCM_DEFINE (scm_fdopen, "fdopen", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:194:1: note: expanded from here
s_scm_fdopen
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ioext.c:285:1: warning: unused variable 's_scm_fdes_to_ports' [-Wunused-const-variable]
SCM_DEFINE (scm_fdes_to_ports, "fdes->ports", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:32:1: note: expanded from here
s_scm_fdes_to_ports
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
5 warnings generated.
keywords.c:56:1: warning: unused variable 's_scm_keyword_p' [-Wunused-const-variable]
SCM_DEFINE (scm_keyword_p, "keyword?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_keyword_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
keywords.c:66:1: warning: unused variable 's_scm_symbol_to_keyword' [-Wunused-const-variable]
SCM_DEFINE (scm_symbol_to_keyword, "symbol->keyword", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_symbol_to_keyword
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
keywords.c:88:1: warning: unused variable 's_scm_keyword_to_symbol' [-Wunused-const-variable]
SCM_DEFINE (scm_keyword_to_symbol, "keyword->symbol", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_keyword_to_symbol
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-load.lo
4 warnings generated.
  CC       libguile_2.0_la-macros.lo
3 warnings generated.
2 warnings generated.
  CC       libguile_2.0_la-mallocs.lo
list.c:105:1: warning: unused variable 's_scm_make_list' [-Wunused-const-variable]
SCM_DEFINE (scm_make_list, "make-list", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_make_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:157:1: warning: unused variable 's_scm_null_p' [-Wunused-const-variable]
SCM_DEFINE (scm_null_p, "null?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_null_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:167:1: warning: unused variable 's_scm_list_p' [-Wunused-const-variable]
SCM_DEFINE (scm_list_p, "list?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_list_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:714:1: warning: unused variable 's_scm_delq_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delq_x, "delq!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:63:1: note: expanded from here
s_scm_delq_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:744:1: warning: unused variable 's_scm_delv_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delv_x, "delv!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:78:1: note: expanded from here
s_scm_delv_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:769:1: warning: unused variable 's_scm_delete_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delete_x, "delete!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:93:1: note: expanded from here
s_scm_delete_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:796:1: warning: unused variable 's_scm_delq' [-Wunused-const-variable]
SCM_DEFINE (scm_delq, "delq", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:108:1: note: expanded from here
s_scm_delq
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:809:1: warning: unused variable 's_scm_delv' [-Wunused-const-variable]
SCM_DEFINE (scm_delv, "delv", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:123:1: note: expanded from here
s_scm_delv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:822:1: warning: unused variable 's_scm_delete' [-Wunused-const-variable]
SCM_DEFINE (scm_delete, "delete", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:138:1: note: expanded from here
s_scm_delete
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:836:1: warning: unused variable 's_scm_delq1_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delq1_x, "delq1!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_delq1_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:864:1: warning: unused variable 's_scm_delv1_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delv1_x, "delv1!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:20:1: note: expanded from here
s_scm_delv1_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
list.c:892:1: warning: unused variable 's_scm_delete1_x' [-Wunused-const-variable]
SCM_DEFINE (scm_delete1_x, "delete1!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:35:1: note: expanded from here
s_scm_delete1_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
macros.c8:114:1: warning: unused variable 's_scm_macro_p' [-Wunused-const-variable]
SCM_DEFINE (scm_macro_p, "macro?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_macro_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
 warnings generated.
load.c:151:1: warning: unused variable 's_scm_sys_package_data_dir' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_package_data_dir, "%package-data-dir", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_sys_package_data_dir
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:164:1: warning: unused variable 's_scm_sys_library_dir' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_library_dir, "%library-dir", 0,0,0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_sys_library_dir
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:176:1: warning: unused variable 's_scm_sys_site_dir' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_site_dir, "%site-dir", 0,0,0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:145:1: note: expanded from here
s_scm_sys_site_dir
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:  CC       libguile_2.0_la-memoize.lo
189:1: warning: unused variable 's_scm_sys_global_site_dir' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_global_site_dir, "%global-site-dir", 0,0,0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_sys_global_site_dir
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:202:1: warning: unused variable 's_scm_sys_site_ccache_dir' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_site_ccache_dir, "%site-ccache-dir", 0,0,0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:6:1: note: expanded from here
s_scm_sys_site_ccache_dir
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:240:1: warning: unused variable 's_scm_parse_path' [-Wunused-const-variable]
SCM_DEFINE (scm_parse_path, "parse-path", 1, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:21:1: note: expanded from here
s_scm_parse_path
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:262:1: warning: unused variable 's_scm_parse_path_with_ellipsis' [-Wunused-const-variable]
SCM_DEFINE (scm_parse_path_with_ellipsis, "parse-path-with-ellipsis", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:36:1: note: expanded from here
s_scm_parse_path_with_ellipsis
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:844:1: warning: unused variable 's_scm_sys_warn_auto_compilation_enabled' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_warn_auto_compilation_enabled, "%warn-auto-compilation-enabled", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_sys_warn_auto_compilation_enabled
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
load.c:1086:20: warning: unused variable 'sys_host_type' [-Wunused-variable]
SCM_VARIABLE_INIT (sys_host_type, "%host-type",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-modules.lo
1 warning generated.
  CC       libguile_2.0_la-null-threads.lo
  CC       libguile_2.0_la-numbers.lo
12 warnings generated.
9 warnings generated.
  CC       libguile_2.0_la-objcodes.lo
  CC       libguile_2.0_la-objprop.lo
modules.c:78:1: warning: unused variable 's_scm_current_module' [-Wunused-const-variable]
SCM_DEFINE (scm_current_module, "current-module", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_current_module
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
modules.c:112:1: warning: unused variable 's_scm_interaction_environment' [-Wunused-const-variable]
SCM_DEFINE (scm_interaction_environment, "interaction-environment", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:123:1: note: expanded from here
s_scm_interaction_environment
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
modules.c:854:1: warning: unused variable 's_scm_get_pre_modules_obarray' [-Wunused-const-variable]
SCM_DEFINE (scm_get_pre_modules_obarray, "%get-pre-modules-obarray", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:81:1: note: expanded from here
s_scm_get_pre_modules_obarray
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-options.lo
memoize.c:757:1: warning: unused variable 's_scm_memoized_p' [-Wunused-const-variable]
SCM_DEFINE (scm_memoized_p, "memoized?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:74:1: note: expanded from here
s_scm_memoized_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
objcodes.c:279:1: warning: unused variable 's_scm_objcode_p' [-Wunused-const-variable]
SCM_DEFINE (scm_objcode_p, "objcode?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:134:1: note: expanded from here
s_scm_objcode_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
objcodes.c:336:1: warning: unused variable 's_scm_bytecode_to_objcode' [-Wunused-const-variable]
SCM_DEFINE (scm_bytecode_to_objcode, "bytecode->objcode", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:166:1: note: expanded from here
s_scm_bytecode_to_objcode
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
3 warnings generated.
objprop.c:41:1: warning: unused variable 's_scm_object_properties' [-Wunused-const-variable]
SCM_DEFINE (scm_object_properties, "object-properties", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_object_properties
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
objprop.c:57:1: warning: unused variable 's_scm_set_object_properties_x' [-Wunused-const-variable]
SCM_DEFINE (scm_set_object_properties_x, "set-object-properties!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_set_object_properties_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
objprop.c:70:1: warning: unused variable 's_scm_object_property' [-Wunused-const-variable]
SCM_DEFINE (scm_object_property, "object-property", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_object_property
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
objprop.c:81:1: warning: unused variable 's_scm_set_object_property_x' [-Wunused-const-variable]
SCM_DEFINE (scm_set_object_property_x, "set-object-property!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_set_object_property_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
4 warnings generated.
2 warnings generated.
1 warning generated.
  CC       libguile_2.0_la-pairs.lo
  CC       libguile_2.0_la-poll.lo
  CC       libguile_2.0_la-ports.lo
  CC       libguile_2.0_la-print.lo
  CC       libguile_2.0_la-procprop.lo
pairs.c:70:1: warning: unused variable 's_scm_cons' [-Wunused-const-variable]
SCM_DEFINE (scm_cons, "cons", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:95:1: note: expanded from here
s_scm_cons
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:89:1: warning: unused variable 's_scm_pair_p' [-Wunused-const-variable]
SCM_DEFINE (scm_pair_p, "pair?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:110:1: note: expanded from here
s_scm_pair_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:146:1: warning: unused variable 's_scm_cdr' [-Wunused-const-variable]
SCM_DEFINE (scm_cdr, "cdr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:155:1: note: expanded from here
s_scm_cdr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:150:1: warning: unused variable 's_scm_car' [-Wunused-const-variable]
SCM_DEFINE (scm_car, "car", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:170:1: note: expanded from here
s_scm_car
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:154:1: warning: unused variable 's_scm_cddr' [-Wunused-const-variable]
SCM_DEFINE (scm_cddr, "cddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:185:1: note: expanded from here
s_scm_cddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:158:1: warning: unused variable 's_scm_cdar' [-Wunused-const-variable]
SCM_DEFINE (scm_cdar, "cdar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:7:1: note: expanded from here
s_scm_cdar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:162:1: warning: unused variable 's_scm_cadr' [-Wunused-const-variable]
SCM_DEFINE (scm_cadr, "cadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:22:1: note: expanded from here
s_scm_cadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:166:1: warning: unused variable 's_scm_caar' [-Wunused-const-variable]
SCM_DEFINE (scm_caar, "caar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:37:1: note: expanded from here
s_scm_caar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:170:1: warning: unused variable 's_scm_cdddr' [-Wunused-const-variable]
SCM_DEFINE (scm_cdddr, "cdddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:52:1: note: expanded from here
s_scm_cdddr
^
../libguile/snarf.h:82:29  CC       libguile_2.0_la-procs.lo
: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:174:1: warning: unused variable 's_scm_cddar' [-Wunused-const-variable]
SCM_DEFINE (scm_cddar, "cddar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:67:1: note: expanded from here
s_scm_cddar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:178:1: warning: unused variable 's_scm_cdadr' [-Wunused-const-variable]
SCM_DEFINE (scm_cdadr, "cdadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:82:1: note: expanded from here
s_scm_cdadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:182:1: warning: unused variable 's_scm_cdaar' [-Wunused-const-variable]
SCM_DEFINE (scm_cdaar, "cdaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:97:1: note: expanded from here
s_scm_cdaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:186:1: warning: unused variable 's_scm_caddr' [-Wunused-const-variable]
SCM_DEFINE (scm_caddr, "caddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:112:1: note: expanded from here
s_scm_caddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:190:1: warning: unused variable 's_scm_cadar' [-Wunused-const-variable]
SCM_DEFINE (scm_cadar, "cadar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:127:1: note: expanded from here
s_scm_cadar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:194:1: warning: unused variable 's_scm_caadr' [-Wunused-const-variable]
SCM_DEFINE (scm_caadr, "caadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:142:1: note: expanded from here
s_scm_caadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:198:1: warning: unused variable 's_scm_caaar' [-Wunused-const-variable]
SCM_DEFINE (scm_caaar, "caaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_caaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:202:1: warning: unused variable 's_scm_cddddr' [-Wunused-const-variable]
SCM_DEFINE (scm_cddddr, "cddddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:20:1: note: expanded from here
s_scm_cddddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:206:1: warning: unused variable 's_scm_cdddar' [-Wunused-const-variable]
SCM_DEFINE (scm_cdddar, "cdddar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:35:1: note: expanded from here
s_scm_cdddar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:210:1: warning: unused variable 's_scm_cddadr' [-Wunused-const-variable]
SCM_DEFINE (scm_cddadr, "cddadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:50:1: note: expanded from here
s_scm_cddadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:214:1: warning: unused variable 's_scm_cddaar' [-Wunused-const-variable]
SCM_DEFINE (scm_cddaar, "cddaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:65:1: note: expanded from here
s_scm_cddaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:218:1: warning: unused variable 's_scm_cdaddr' [-Wunused-const-variable]
SCM_DEFINE (scm_cdaddr, "cdaddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:80:1: note: expanded from here
s_scm_cdaddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:222:1: warning: unused variable 's_scm_cdadar' [-Wunused-const-variable]
SCM_DEFINE (scm_cdadar, "cdadar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:95:1: note: expanded from here
s_scm_cdadar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:226:1: warning: unused variable 's_scm_cdaadr' [-Wunused-const-variable]
SCM_DEFINE (scm_cdaadr, "cdaadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:110:1: note: expanded from here
s_scm_cdaadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:230:1: warning: unused variable 's_scm_cdaaar' [-Wunused-const-variable]
SCM_DEFINE (scm_cdaaar, "cdaaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:125:1: note: expanded from here
s_scm_cdaaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:234:1: warning: unused variable 's_scm_cadddr' [-Wunused-const-variable]
SCM_DEFINE (scm_cadddr, "cadddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:140:1: note: expanded from here
s_scm_cadddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:238:1: warning: unused variable 's_scm_caddar' [-Wunused-const-variable]
SCM_DEFINE (scm_caddar, "caddar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:9:1: note: expanded from here
s_scm_caddar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:242:1: warning: unused variable 's_scm_cadadr' [-Wunused-const-variable]
SCM_DEFINE (scm_cadadr, "cadadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:24:1: note: expanded from here
s_scm_cadadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:246:1: warning: unused variable 's_scm_cadaar' [-Wunused-const-variable]
SCM_DEFINE (scm_cadaar, "cadaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:39:1: note: expanded from here
s_scm_cadaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:250:1: warning: unused variable 's_scm_caaddr' [-Wunused-const-variable]
SCM_DEFINE (scm_caaddr, "caaddr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:54:1: note: expanded from here
s_scm_caaddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:254:1: warning: unused variable 's_scm_caadar' [-Wunused-const-variable]
SCM_DEFINE (scm_caadar, "caadar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:69:1: note: expanded from here
s_scm_caadar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:258:1: warning: unused variable 's_scm_caaadr' [-Wunused-const-variable]
SCM_DEFINE (scm_caaadr, "caaadr", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:84:1: note: expanded from here
s_scm_caaadr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
pairs.c:262:1: warning: unused variable 's_scm_caaaar' [-Wunused-const-variable]
SCM_DEFINE (scm_caaaar, "caaaar", 1, 0, 0, (SCM x), "")
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:99:1: note: expanded from here
s_scm_caaaar
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-programs.lo
print.c:420:46: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
          display_string ("\\x", 1, 2, port, iconveh_question_mark);
          ~~~~~~~~~~~~~~                     ^~~~~~~~~~~~~~~~~~~~~
print.c:422:41: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
          display_character (';', port, iconveh_question_mark);
          ~~~~~~~~~~~~~~~~~             ^~~~~~~~~~~~~~~~~~~~~
print.c:578:45: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
              display_character ('"', port, iconveh_question_mark);
              ~~~~~~~~~~~~~~~~~             ^~~~~~~~~~~~~~~~~~~~~
print.c:583:45: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
              display_character ('"', port, iconveh_question_mark);
              ~~~~~~~~~~~~~~~~~             ^~~~~~~~~~~~~~~~~~~~~
32print.c:901:51: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
        display_character (SCM_UNICODE_BOM, port, iconveh_error);
        ~~~~~~~~~~~~~~~~~                         ^~~~~~~~~~~~~
print.c:1033:43: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
  return display_string (str, 0, 2, port, iconveh_error) == 2;
         ~~~~~~~~~~~~~~                   ^~~~~~~~~~~~~
print.c warnings generated.
:1142:35: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
          display_character ('\\', port, iconveh_question_mark);
          ~~~~~~~~~~~~~~~~~              ^~~~~~~~~~~~~~~~~~~~~
print.c:1148:35: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
          display_character ('\\', port, iconveh_question_mark);
          ~~~~~~~~~~~~~~~~~              ^~~~~~~~~~~~~~~~~~~~~
print.c:1160:42: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
      display_string ("#\\", 1, 2, port, iconveh_question_mark);
      ~~~~~~~~~~~~~~                     ^~~~~~~~~~~~~~~~~~~~~
print.c:1176:44: warning: implicit conversion from enumeration type 'enum iconv_ilseq_handler' to different enumeration type 'scm_t_string_failed_conversion_handler' [-Wenum-conversion]
    printed = display_character (ch, port, iconveh_error);
              ~~~~~~~~~~~~~~~~~            ^~~~~~~~~~~~~
numbers.c:861:1: warning: unused variable 's_scm_inf' [-Wunused-const-variable]
SCM_DEFINE (scm_inf, "inf", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:344:1: note: expanded from here
s_scm_inf
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:876:1: warning: unused variable 's_scm_nan' [-Wunused-const-variable]
SCM_DEFINE (scm_nan, "nan", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:4:1: note: expanded from here
s_scm_nan
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:1102:1: warning: unused variable 's_scm_euclidean_quotient' [-Wunused-const-variable]
SCM_DEFINE (scm_euclidean_quotient, "euclidean-quotient", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:39:1: note: expanded from here
s_scm_euclidean_quotient
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:1124:1: warning: unused variable 's_scm_euclidean_remainder' [-Wunused-const-variable]
SCM_DEFINE (scm_euclidean_remainder, "euclidean-remainder", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:54:1: note: expanded from here
s_scm_euclidean_remainder
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:1147:1: warning: unused variable 's_scm_i_euclidean_divide' [-Wunused-const-variable]
SCM_DEFINE (scm_i_euclidean_divide, "euclidean/", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:69:1: note: expanded from here
s_scm_i_euclidean_divide
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:6424:1: warning: unused variable 's_scm_number_p' [-Wunused-const-variable]
SCM_DEFINE (scm_number_p, "number?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:106:1: note: expanded from here
s_scm_number_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:6434:1: warning: unused variable 's_scm_complex_p' [-Wunused-const-variable]
SCM_DEFINE (scm_complex_p, "complex?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:121:1: note: expanded from here
s_scm_complex_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:6448:1: warning: unused variable 's_scm_real_p' [-Wunused-const-variable]
SCM_DEFINE (scm_real_p, "real?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:13:1: note: expanded from here
s_scm_real_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:6461:1: warning: unused variable 's_scm_rational_p' [-Wunused-const-variable]
SCM_DEFINE (scm_rational_p, "rational?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:28:1: note: expanded from here
s_scm_rational_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:6480:1: warning: unused variable 's_scm_integer_p' [-Wunused-const-variable]
SCM_DEFINE (scm_integer_p, "integer?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:43:1: note: expanded from here
s_scm_integer_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:7584:1: warning: unused variable 's_scm_oneplus' [-Wunused-const-variable]
SCM_DEFINE (scm_oneplus, "1+", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:113:1: note: expanded from here
s_scm_oneplus
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:7871:1: warning: unused variable 's_scm_oneminus' [-Wunused-const-variable]
SCM_DEFINE (scm_oneminus, "1-", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:133:1: note: expanded from here
s_scm_oneminus
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
numbers.c:9927:1: warning: unused variable 's_scm_i_exact_integer_sqrt' [-Wunused-const-variable]
SCM_DEFINE (scm_i_exact_integer_sqrt, "exact-integer-sqrt", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_i_exact_integer_sqrt
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:402:1: warning: unused variable 's_scm_current_input_port' [-Wunused-const-variable]
SCM_DEFINE (scm_current_input_port, "current-input-port", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:133:1: note: expanded from here
s_scm_current_input_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:416:1: warning: unused variable 's_scm_current_output_port' [-Wunused-const-variable]
SCM_DEFINE (scm_current_output_port, "current-output-port", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:148:1: note: expanded from here
s_scm_current_output_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:431:1: warning: unused variable 's_scm_current_error_port' [-Wunused-const-variable]
SCM_DEFINE (scm_current_error_port, "current-error-port", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:163:1: note: expanded from here
s_scm_current_error_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:459:1: warning: unused variable 's_scm_current_load_port' [-Wunused-const-variable]
SCM_DEFINE (scm_current_load_port, "current-load-port", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:6:1: note: expanded from here
s_scm_current_load_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:1001:1: warning: unused variable 's_scm_input_port_p' [-Wunused-const-variable]
SCM_DEFINE (scm_input_port_p, "input-port?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:78:1: note: expanded from here
s_scm_input_port_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:1012:1: warning: unused variable 's_scm_output_port_p' [-Wunused-const-variable]
SCM_DEFINE (scm_output_port_p, "output-port?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:93:1: note: expanded from here
s_scm_output_port_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:1024:1: warning: unused variable 's_scm_port_p' [-Wunused-const-variable]
SCM_DEFINE (scm_port_p, "port?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:108:1: note: expanded from here
s_scm_port_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:1046:1: warning: unused variable 's_scm_eof_object_p' [-Wunused-const-variable]
SCM_DEFINE (scm_eof_object_p, "eof-object?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:18:1: note: expanded from here
s_scm_eof_object_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:1086:1: warning: unused variable 's_scm_flush_all_ports' [-Wunused-const-variable]
SCM_DEFINE (scm_flush_all_ports, "flush-all-ports", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:49:1: note: expanded from here
s_scm_flush_all_ports
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
ports.c:2382:28: warning: unused variable 'scm_utf8_bom' [-Wunused-const-variable]
static const unsigned char scm_utf8_bom[3]    = {0xEF, 0xBB, 0xBF};
                           ^
ports.c:2383:28: warning: unused variable 'scm_utf16be_bom' [-Wunused-const-variable]
static const unsigned char scm_utf16be_bom[2] = {0xFE, 0xFF};
                           ^
ports.c:2385:28: warning: unused variable 'scm_utf32be_bom' [-Wunused-const-variable]
static const unsigned char scm_utf32be_bom[4] = {0x00, 0x00, 0xFE, 0xFF};
                           ^
ports.c:2851:1: warning: unused variable 's_scm_sys_make_void_port' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_make_void_port, "%make-void-port", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:95:1: note: expanded from here
s_scm_sys_make_void_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
procprop.c:125:1: warning: unused variable 's_scm_procedure_minimum_arity' [-Wunused-const-variable]
SCM_DEFINE (scm_procedure_minimum_arity, "procedure-minimum-arity", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_procedure_minimum_arity
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-promises.lo
procs.c:45:1: warning: unused variable 's_scm_procedure_p' [-Wunused-const-variable]
SCM_DEFINE (scm_procedure_p, "procedure?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_procedure_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
procs.c:68:1: warning: unused variable 's_scm_thunk_p' [-Wunused-const-variable]
SCM_DEFINE (scm_thunk_p, "thunk?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_thunk_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
procs.c:101:1: warning: unused variable 's_scm_procedure_with_setter_p' [-Wunused-const-variable]
SCM_DEFINE (scm_procedure_with_setter_p, "procedure-with-setter?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:142:1: note: expanded from here
s_scm_procedure_with_setter_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-r6rs-ports.lo
1  CC       libguile_2.0_la-random.lo
 warning generated.
3 warnings generated.
programs.c:115:1: warning: unused variable 's_scm_program_p' [-Wunused-const-variable]
SCM_DEFINE (scm_program_p, "program?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:48:1: note: expanded from here
s_scm_program_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
promises.c:123:1: warning: unused variable 's_scm_promise_p' [-Wunused-const-variable]
SCM_DEFINE (scm_promise_p, "promise?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:123:1: note: expanded from here
s_scm_promise_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
1 warning generated.
  CC       libguile_2.0_la-rdelim.lo
r6rs-ports.c:59:1: warning: unused variable 's_scm_eof_object' [-Wunused-const-variable]
SCM_DEFINE (scm_eof_object, "eof-object", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_eof_object
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
r6rs-ports.c:917:3: warning: unused function 'bop_proc_apply' [-Wunused-function]
                bop_proc_apply, 0, 0, 0, (SCM bop_proc))
                ^
../libguile/snarf.h:301:27: note: expanded from macro 'SCM_SMOB_APPLY'
SCM_SNARF_HERE(static SCM c_name arglist) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
r6rs-ports.c:945:1: warning: unused variable 's_scm_open_bytevector_output_port' [-Wunused-const-variable]
SCM_DEFINE (scm_open_bytevector_output_port,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:23:1: note: expanded from here
s_scm_open_bytevector_output_port
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-read.lo
random.c:454:1: warning: unused variable 's_scm_datum_to_random_state' [-Wunused-const-variable]
SCM_DEFINE (scm_datum_to_random_state, "datum->random-state", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:238:1: note: expanded from here
s_scm_datum_to_random_state
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
random.c:751:1: warning: unused variable 's_scm_random_state_from_platform' [-Wunused-const-variable]
SCM_DEFINE (scm_random_state_from_platform, "random-state-from-platform", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:16:1: note: expanded from here
s_scm_random_state_from_platform
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
10 warnings generated.
  CC       libguile_2.0_la-root.lo
13 warnings generated.
3 warnings generated.
2  CC       libguile_2.0_la-rw.lo
 warnings generated.
rdelim.c:188:1: warning: unused variable 's_scm_write_line' [-Wunused-const-variable]
SCM_DEFINE (scm_write_line, "write-line", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:124:1: note: expanded from here
s_scm_write_line
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
root.c:156:1: warning: unused variable 's_scm_call_with_dynamic_root' [-Wunused-const-variable]
SCM_DEFINE (scm_call_with_dynamic_root, "call-with-dynamic-root", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_call_with_dynamic_root
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
root.c:169:1: warning: unused variable 's_scm_dynamic_root' [-Wunused-const-variable]
SCM_DEFINE (scm_dynamic_root, "dynamic-root", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_dynamic_root
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
2 warnings generated.
  CC       libguile_2.0_la-scmsigs.lo
  CC       libguile_2.0_la-script.lo
  CC       libguile_2.0_la-simpos.lo
scmsigs.c:495:1: warning: unused variable 's_scm_alarm' [-Wunused-const-variable]
SCM_DEFINE (scm_alarm, "alarm", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_alarm
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
scmsigs.c:596:1: warning: unused variable 's_scm_pause' [-Wunused-const-variable]
SCM_DEFINE (scm_pause, "pause", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:175:1: note: expanded from here
s_scm_pause
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
scmsigs.c:609:1: warning: unused variable 's_scm_sleep' [-Wunused-const-variable]
SCM_DEFINE (scm_sleep, "sleep", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:7:1: note: expanded from here
s_scm_sleep
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
scmsigs.c:622:1: warning: unused variable 's_scm_usleep' [-Wunused-const-variable]
SCM_DEFINE (scm_usleep, "usleep", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:22:1: note: expanded from here
s_scm_usleep
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
4 warnings generated.
  CC       libguile_2.0_la-smob.lo
  CC       libguile_2.0_la-sort.lo
  CC       libguile_2.0_la-srcprop.lo
  CC       libguile_2.0_la-srfi-1.lo
simpos.c:178:1: warning: unused variable 's_scm_getenv' [-Wunused-const-variable]
SCM_DEFINE (scm_getenv, "getenv", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_getenv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
simpos.c:194:1: warning: unused variable 's_scm_primitive_exit' [-Wunused-const-variable]
SCM_DEFINE (scm_primitive_exit, "primitive-exit", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:145:1: note: expanded from here
s_scm_primitive_exit
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
simpos.c:208:1: warning: unused variable 's_scm_primitive__exit' [-Wunused-const-variable]
SCM_DEFINE (scm_primitive__exit, "primitive-_exit", 0, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_primitive__exit
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
3 warnings generated.
sort.c:70:1: warning: unused variable 's_scm_restricted_vector_sort_x' [-Wunused-const-variable]
SCM_DEFINE (scm_restricted_vector_sort_x, "restricted-vector-sort!", 4, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_restricted_vector_sort_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srcprop.c:171:1: warning: unused variable 's_scm_supports_source_properties_p' [-Wunused-const-variable]
SCM_DEFINE (scm_supports_source_properties_p, "supports-source-properties?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:112:1: note: expanded from here
s_scm_supports_source_properties_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srcprop.c:181:1: warning: unused variable 's_scm_source_properties' [-Wunused-const-variable]
SCM_DEFINE (scm_source_properties, "source-properties", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:127:1: note: expanded from here
s_scm_source_properties
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srcprop.c:260:1: warning: unused variable 's_scm_source_property' [-Wunused-const-variable]
SCM_DEFINE (scm_source_property, "source-property", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:159:1: note: expanded from here
s_scm_source_property
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srcprop.c:349:1: warning: unused variable 's_scm_cons_source' [-Wunused-const-variable]
SCM_DEFINE (scm_cons_source, "cons-source", 3, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:30:1: note: expanded from here
s_scm_cons_source
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-srfi-4.lo
srfi-1.c:611:1: warning: unused variable 's_scm_srfi1_length_plus' [-Wunused-const-variable]
SCM_DEFINE (scm_srfi1_length_plus, "length+", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:4 warnings generated.
32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:98:1: note: expanded from here
s_scm_srfi1_length_plus
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-1.c:626:1: warning: unused variable 's_scm_srfi1_list_copy' [-Wunused-const-variable]
SCM_DEFINE (scm_srfi1_list_copy, "list-copy", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:7:1: note: expanded from here
s_scm_srfi1_list_copy
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-srfi-13.lo
  CC       libguile_2.0_la-srfi-14.lo
1 warning generated.
  CC       libguile_2.0_la-srfi-60.lo
2 warnings generated.
  CC       libguile_2.0_la-stackchk.lo
  CC       libguile_2.0_la-stacks.lo
  CC       libguile_2.0_la-stime.lo
srfi-14.c:659:1: warning: unused variable 's_scm_char_set_p' [-Wunused-const-variable]
SCM_DEFINE (scm_char_set_p, "char-set?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:91:1: note: expanded from here
s_scm_char_set_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-14.c:1401:1: warning: unused variable 's_scm_to_char_set' [-Wunused-const-variable]
SCM_DEFINE (scm_to_char_set, "->char-set", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:65:1: note: expanded from here
s_scm_to_char_set
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-14.c:1947:1: warning: unused variable 's_scm_char_set_xor_x' [-Wunused-const-variable]
SCM_DEFINE (scm_char_set_xor_x, "char-set-xor!", 1, 0, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:88:1: note: expanded from here
s_scm_char_set_xor_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-14.c:1963:1: warning: unused variable 's_scm_char_set_diff_plus_intersection_x' [-Wunused-const-variable]
SCM_DEFINE (scm_char_set_diff_plus_intersection_x,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:6:1: note: expanded from here
s_scm_char_set_diff_plus_intersection_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
stackchk.c:100:1: warning: unused variable 's_scm_sys_get_stack_size' [-Wunused-const-variable]
SCM_DEFINE (scm_sys_get_stack_size, "%get-stack-size", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:97:1: note: expanded from here
s_scm_sys_get_stack_size
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:562:1: warning: unused variable 's_scm_substring_move_x' [-Wunused-const-variable]
SCM_DEFINE (scm_substring_move_x, "substring-move!", 5, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:81:1: note: expanded from here
s_scm_substring_move_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:573:1: warning: unused variable 's_scm_string_take' [-Wunused-const-variable]
SCM_DEFINE (scm_string_take, "string-take", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:96:1: note: expanded from here
s_scm_string_take
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:583:1: warning: unused variable 's_scm_string_drop' [-Wunused-const-variable]
SCM_DEFINE (scm_string_drop, "string-drop", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:111:1: note: expanded from here
s_scm_string_drop
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:593:1: warning: unused variable 's_scm_string_take_right' [-Wunused-const-variable]
SCM_DEFINE (scm_string_take_right, "string-take-right", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:12:1: note: expanded from here
s_scm_string_take_right
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:605:1: warning: unused variable 's_scm_string_drop_right' [-Wunused-const-variable]
SCM_DEFINE (scm_string_drop_right, "string-drop-right", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:27:1: note: expanded from here
s_scm_string_drop_right
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:1354:1: warning: unused variable 's_scm_substring_hash' [-Wunused-const-variable]
SCM_DEFINE (scm_substring_hash, "string-hash", 1, 3, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:110:1: note: expanded from here
s_scm_substring_hash
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:1371:1: warning: unused variable 's_scm_substring_hash_ci' [-Wunused-const-variable]
SCM_DEFINE (scm_substring_hash_ci, "string-hash-ci", 1, 3, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:6:1: note: expanded from here
s_scm_substring_hash_ci
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:1774:1: warning: unused variable 's_scm_string_rindex' [-Wunused-const-variable]
SCM_DEFINE (scm_string_rindex, "string-rindex", 2, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:74:1: note: expanded from here
s_scm_string_rindex
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:2289:1: warning: unused variable 's_scm_string_capitalize_x' [-Wunused-const-variable]
SCM_DEFINE (scm_string_capitalize_x, "string-capitalize!", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:39:1: note: expanded from here
s_scm_string_capitalize_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:2306:1: warning: unused variable 's_scm_string_capitalize' [-Wunused-const-variable]
SCM_DEFINE (scm_string_capitalize, "string-capitalize", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:54:1: note: expanded from here
s_scm_string_capitalize
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:2435:1: warning: unused variable 's_scm_string_concatenate_reverse' [-Wunused-const-variable]
SCM_DEFINE (scm_string_concatenate_reverse, "string-concatenate-reverse", 1, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:25:1: note: expanded from here
s_scm_string_concatenate_reverse
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
srfi-13.c:2475:1: warning: unused variable 's_scm_string_concatenate_reverse_shared' [-Wunused-const-variable]
SCM_DEFINE (scm_string_concatenate_reverse_shared, "string-concatenate-reverse/shared", 1, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:55:1: note: expanded from here
s_scm_string_concatenate_reverse_shared
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
1 warning generated.
  CC       libguile_2.0_la-strings.lo
stacks.c:203:1: warning: unused variable 's_scm_stack_p' [-Wunused-const-variable]
SCM_DEFINE (scm_stack_p, "stack?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_stack_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-strorder.lo
1 warning generated.
stime.c:185:1: warning: unused variable 's_scm_get_internal_real_time' [-Wunused-const-variable]
SCM_DEFINE (scm_get_internal_real_time, "get-internal-real-time", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:101:1: note: expanded from here
s_scm_get_internal_real_time
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
stime.c:253:1: warning: unused variable 's_scm_get_internal_run_time' [-Wunused-const-variable]
SCM_DEFINE (scm_get_internal_run_time, "get-internal-run-time", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:131:1: note: expanded from here
s_scm_get_internal_run_time
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
stime.c:622:1: warning: unused variable 's_scm_tzset' [-Wunused-const-variable]
SCM_DEFINE (scm_tzset, "tzset", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:47:1: note: expanded from here
s_scm_tzset
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-strports.lo
  CC       libguile_2.0_la-struct.lo
3 warnings generated.
13 warnings generated.
strorder.c:46:1: warning: unused variable 's_scm_i_string_equal_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_equal_p, "string=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_i_string_equal_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:80:1: warning: unused variable 's_scm_i_string_ci_equal_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_ci_equal_p, "string-ci=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_i_string_ci_equal_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:110:1: warning: unused variable 's_scm_i_string_less_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_less_p, "string<?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_i_string_less_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:138:1: warning: unused variable 's_scm_i_string_leq_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_leq_p, "string<=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_i_string_leq_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:166:1: warning: unused variable 's_scm_i_string_gr_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_gr_p, "string>?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:152:1: note: expanded from here
s_scm_i_string_gr_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:194:1: warning: unused variable 's_scm_i_string_geq_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_geq_p, "string>=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:3:1: note: expanded from here
s_scm_i_string_geq_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:222:1: warning: unused variable 's_scm_i_string_ci_less_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_ci_less_p, "string-ci<?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:18:1: note: expanded from here
s_scm_i_string_ci_less_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:251:1: warning: unused variable 's_scm_i_string_ci_leq_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_ci_leq_p, "string-ci<=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:33:1: note: expanded from here
s_scm_i_string_ci_leq_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:280:1: warning: unused variable 's_scm_i_string_ci_gr_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_ci_gr_p, "string-ci>?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:48:1: note: expanded from here
s_scm_i_string_ci_gr_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strorder.c:309:1: warning: unused variable 's_scm_i_string_ci_geq_p' [-Wunused-const-variable]
SCM_DEFINE (scm_i_string_ci_geq_p, "string-ci>=?", 0, 2, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:63:1: note: expanded from here
s_scm_i_string_ci_geq_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strings.c:1067:1: warning: unused variable 's_scm_string_p' [-Wunused-const-variable]
SCM_DEFINE (scm_string_p, "string?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:131:1: note: expanded from here
s_scm_string_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
strings.c:1160:1: warning: unused variable 's_scm_make_string' [-Wunused-const-variable]
SCM_DEFINE (scm_make_string, "make-string", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:163:1: note: expanded from here
s_scm_make_string
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
10 warnings generated.
  CC       libguile_2.0_la-symbols.lo
4 warnings generated.
struct.c:386:1: warning: unused variable 's_scm_struct_p' [-Wunused-const-variable]
SCM_DEFINE (scm_struct_p, "struct?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:110:1: note: expanded from here
s_scm_struct_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
struct.c:650:1: warning: unused variable 's_scm_make_vtable' [-Wunused-const-variable]
SCM_DEFINE (scm_make_vtable, "make-vtable", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:155:1: note: expanded from here
s_scm_make_vtable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-threads.lo
symbols.c:232:1: warning: unused variable 's_scm_symbol_p' [-Wunused-const-variable]
SCM_DEFINE (scm_symbol_p, "symbol?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
12 warnings generated.
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_symbol_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
symbols.c:327:1: warning: unused variable 's_scm_string_ci_to_symbol' [-Wunused-const-variable]
SCM_DEFINE (scm_string_ci_to_symbol, "string-ci->symbol", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:167:1: note: expanded from here
s_scm_string_ci_to_symbol
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
symbols.c:345:1: warning: unused variable 's_scm_gensym' [-Wunused-const-variable]
SCM_DEFINE (scm_gensym, "gensym", 0, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:15:1: note: expanded from here
s_scm_gensym
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
  CC       libguile_2.0_la-throw.lo
3 warnings generated.
  CC       libguile_2.0_la-trees.lo
  CC       libguile_2.0_la-uniform.lo
threads.c:1152:1: warning: unused variable 's_scm_yield' [-Wunused-const-variable]
SCM_DEFINE (scm_yield, "yield", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:113:1: note: expanded from here
s_scm_yield
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1161:1: warning: unused variable 's_scm_cancel_thread' [-Wunused-const-variable]
SCM_DEFINE (scm_cancel_thread, "cancel-thread", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:128:1: note: expanded from here
s_scm_cancel_thread
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1210:1: warning: unused variable 's_scm_thread_cleanup' [-Wunused-const-variable]
SCM_DEFINE (scm_thread_cleanup, "thread-cleanup", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:158:1: note: expanded from here
s_scm_thread_cleanup
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1301:1: warning: unused variable 's_scm_thread_p' [-Wunused-const-variable]
SCM_DEFINE (scm_thread_p, "thread?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:28:1: note: expanded from here
s_scm_thread_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1384:1: warning: unused variable 's_scm_make_recursive_mutex' [-Wunused-const-variable]
SCM_DEFINE (scm_make_recursive_mutex, "make-recursive-mutex", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:73:1: note: expanded from here
s_scm_make_recursive_mutex
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1488:1: warning: unused variable 's_scm_lock_mutex_timed' [-Wunused-const-variable]
SCM_DEFINE (scm_lock_mutex_timed, "lock-mutex", 1, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:93:1: note: expanded from here
s_scm_lock_mutex_timed
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1541:1: warning: unused variable 's_scm_try_mutex' [-Wunused-const-variable]
SCM_DEFINE (scm_try_mutex, "try-mutex", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:108:1: note: expanded from here
s_scm_try_mutex
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1681:1: warning: unused variable 's_scm_unlock_mutex_timed' [-Wunused-const-variable]
SCM_DEFINE (scm_unlock_mutex_timed, "unlock-mutex", 1, 2, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:15:1: note: expanded from here
s_scm_unlock_mutex_timed
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1710:1: warning: unused variable 's_scm_mutex_p' [-Wunused-const-variable]
SCM_DEFINE (scm_mutex_p, "mutex?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:30:1: note: expanded from here
s_scm_mutex_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1719:1: warning: unused variable 's_scm_mutex_owner' [-Wunused-const-variable]
SCM_DEFINE (scm_mutex_owner, "mutex-owner", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:45:1: note: expanded from here
s_scm_mutex_owner
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1737:1: warning: unused variable 's_scm_mutex_level' [-Wunused-const-variable]
SCM_DEFINE (scm_mutex_level, "mutex-level", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:60:1: note: expanded from here
s_scm_mutex_level
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1747:1: warning: unused variable 's_scm_mutex_locked_p' [-Wunused-const-variable]
SCM_DEFINE (scm_mutex_locked_p, "mutex-locked?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:75:1: note: expanded from here
s_scm_mutex_locked_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1767:1: warning: unused variable 's_scm_make_condition_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_make_condition_variable, "make-condition-variable", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:90:1: note: expanded from here
s_scm_make_condition_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1783:1: warning: unused variable 's_scm_timed_wait_condition_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_timed_wait_condition_variable, "wait-condition-variable", 2, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:105:1: note: expanded from here
s_scm_timed_wait_condition_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1817:1: warning: unused variable 's_scm_signal_condition_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_signal_condition_variable, "signal-condition-variable", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:11:1: note: expanded from here
s_scm_signal_condition_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1835:1: warning: unused variable 's_scm_broadcast_condition_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_broadcast_condition_variable, "broadcast-condition-variable", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:26:1: note: expanded from here
s_scm_broadcast_condition_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:1846:1: warning: unused variable 's_scm_condition_variable_p' [-Wunused-const-variable]
SCM_DEFINE (scm_condition_variable_p, "condition-variable?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:41:1: note: expanded from here
s_scm_condition_variable_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:2035:1: warning: unused variable 's_scm_current_thread' [-Wunused-const-variable]
SCM_DEFINE (scm_current_thread, "current-thread", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:56:1: note: expanded from here
s_scm_current_thread
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:2053:1: warning: unused variable 's_scm_all_threads' [-Wunused-const-variable]
SCM_DEFINE (scm_all_threads, "all-threads", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:71:1: note: expanded from here
s_scm_all_threads
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:2082:1: warning: unused variable 's_scm_thread_exited_p' [-Wunused-const-variable]
SCM_DEFINE (scm_thread_exited_p, "thread-exited?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:86:1: note: expanded from here
s_scm_thread_exited_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:2102:1: warning: unused variable 's_scm_total_processor_count' [-Wunused-const-variable]
SCM_DEFINE (scm_total_processor_count, "total-processor-count", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:3:1: note: expanded from here
s_scm_total_processor_count
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
threads.c:2120:1: warning: unused variable 's_scm_current_processor_count' [-Wunused-const-variable]
SCM_DEFINE (scm_current_processor_count, "current-processor-count", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:18:1: note: expanded from here
s_scm_current_processor_count
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
2 warnings generated.
uniform.c:109:1: warning: unused variable 's_scm_uniform_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_vector_p, "uniform-vector?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y  CC       libguile_2.0_la-values.lo

                               ^
<scratch space>:92:1: note: expanded from here
s_scm_uniform_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
uniform.c:135:1: warning: unused variable 's_scm_uniform_vector_element_size' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_vector_element_size, "uniform-vector-element-size", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_uniform_vector_element_size
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
uniform.c:160:1: warning: unused variable 's_scm_uniform_vector_ref' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_vector_ref, "uniform-vector-ref", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:137:1: note: expanded from here
s_scm_uniform_vector_ref
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
uniform.c:178:1: warning: unused variable 's_scm_uniform_vector_set_x' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_vector_set_x, "uniform-vector-set!", 3, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:152:1: note: expanded from here
s_scm_uniform_vector_set_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
uniform.c:226:1: warning: unused variable 's_scm_uniform_vector_length' [-Wunused-const-variable]
SCM_DEFINE (scm_uniform_vector_length, "uniform-vector-length", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:30:1: note: expanded from here
s_scm_uniform_vector_length
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-variable.lo
5 warnings generated.
22 warnings generated.
  CC       libguile_2.0_la-vectors.lo
  CC       libguile_2.0_la-version.lo
variable.c:54:1: warning: unused variable 's_scm_make_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_make_variable, "make-variable", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_make_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
variable.c:64:1: warning: unused variable 's_scm_make_undefined_variable' [-Wunused-const-variable]
SCM_DEFINE (scm_make_undefined_variable, "make-undefined-variable", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_make_undefined_variable
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
variable.c:74:1: warning: unused variable 's_scm_variable_p' [-Wunused-const-variable]
SCM_DEFINE (scm_variable_p, "variable?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:122:1: note: expanded from here
s_scm_variable_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-vm.lo
3 warnings generated.
  CC       libguile_2.0_la-vports.lo
vectors.c:104:1: warning: unused variable 's_scm_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_vector_p, "vector?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:92:1: note: expanded from here
s_scm_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
vectors.c:363:1: warning: unused variable 's_scm_vector_copy' [-Wunused-const-variable]
SCM_DEFINE (scm_vector_copy, "vector-copy", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:138:1: note: expanded from here
s_scm_vector_copy
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
vectors.c:454:1: warning: unused variable 's_scm_vector_to_list' [-Wunused-const-variable]
SCM_DEFINE (scm_vector_to_list, "vector->list", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:153:1: note: expanded from here
s_scm_vector_to_list
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
vectors.c:482:1: warning: unused variable 's_scm_vector_fill_x' [-Wunused-const-variable]
SCM_DEFINE (scm_vector_fill_x, "vector-fill!", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:168:1: note: expanded from here
s_scm_vector_fill_x
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       libguile_2.0_la-weaks.lo
version.c:36:1: warning: unused variable 's_scm_major_version' [-Wunused-const-variable]
SCM_DEFINE (scm_major_version, "major-version", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_major_version
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
version.c:49:1: warning: unused variable 's_scm_minor_version' [-Wunused-const-variable]
SCM_DEFINE (scm_minor_version, "minor-version", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:115:1: note: expanded from here
s_scm_minor_version
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
version.c:62:1: warning: unused variable 's_scm_micro_version' [-Wunused-const-variable]
SCM_DEFINE (scm_micro_version, "micro-version", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:130:1: note: expanded from here
s_scm_micro_version
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
version.c:75:1: warning: unused variable 's_scm_version' [-Wunused-const-variable]
SCM_DEFINE (scm_version, "version", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:145:1: note: expanded from here
s_scm_version
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
version.c:96:1: warning: unused variable 's_scm_effective_version' [-Wunused-const-variable]
SCM_DEFINE (scm_effective_version, "effective-version", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:160:1: note: expanded from here
s_scm_effective_version
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
5 warnings generated.
  CC       dynl.lo
4 warnings generated.
  CC       posix.lo
  CC       net_db.lo
weaks.c:125:1: warning: unused variable 's_scm_make_weak_vector' [-Wunused-const-variable]
SCM_DEFINE (scm_make_weak_vector, "make-weak-vector", 1, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:100:1: note: expanded from here
s_scm_make_weak_vector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:140:1: warning: unused variable 's_scm_weak_vector' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_vector, "weak-vector", 0, 0, 1, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:116:1: note: expanded from here
s_scm_weak_vector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:154:1: warning: unused variable 's_scm_weak_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_vector_p, "weak-vector?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:131:1: note: expanded from here
s_scm_weak_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:176:1: warning: unused variable 's_scm_make_weak_key_alist_vector' [-Wunused-const-variable]
SCM_DEFINE (scm_make_weak_key_alist_vector, "make-weak-key-alist-vector", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:146:1: note: expanded from here
s_scm_make_weak_key_alist_vector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:193:1: warning: unused variable 's_scm_make_weak_value_alist_vector' [-Wunused-const-variable]
SCM_DEFINE (scm_make_weak_value_alist_vector, "make-weak-value-alist-vector", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:161:1: note: expanded from here
s_scm_make_weak_value_alist_vector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:204:1: warning: unused variable 's_scm_make_doubly_weak_alist_vector' [-Wunused-const-variable]
SCM_DEFINE (scm_make_doubly_weak_alist_vector, "make-doubly-weak-alist-vector", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:11:1: note: expanded from here
s_scm_make_doubly_weak_alist_vector
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:215:1: warning: unused variable 's_scm_weak_key_alist_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_key_alist_vector_p, "weak-key-alist-vector?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:26:1: note: expanded from here
s_scm_weak_key_alist_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:229:1: warning: unused variable 's_scm_weak_value_alist_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_weak_value_alist_vector_p, "weak-value-alist-vector?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:41:1: note: expanded from here
s_scm_weak_value_alist_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
weaks.c:239:1: warning: unused variable 's_scm_doubly_weak_alist_vector_p' [-Wunused-const-variable]
SCM_DEFINE (scm_doubly_weak_alist_vector_p, "doubly-weak-alist-vector?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:56:1: note: expanded from here
s_scm_doubly_weak_alist_vector_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       socket.lo
  CC       regex-posix.lo
9 warnings generated.
dynl.c:282:1: warning: unused variable 's_scm_dynamic_object_p' [-Wunused-const-variable]
SCM_DEFINE (scm_dynamic_object_p, "dynamic-object?", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:135:1: note: expanded from here
s_scm_dynamic_object_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
dynl.c:349:1: warning: unused variable 's_scm_dynamic_func' [-Wunused-const-variable]
SCM_DEFINE (scm_dynamic_func, "dynamic-func", 2, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:2:1: note: expanded from here
s_scm_dynamic_func
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
  CC       guile-guile.o
2 warnings generated.
vm.c:758:1: warning: unused variable 's_scm_the_vm' [-Wunused-const-variable]
SCM_DEFINE (scm_the_vm, "the-vm", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:112:1: note: expanded from here
s_scm_the_vm
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
vm.c:773:1: warning: unused variable 's_scm_vm_p' [-Wunused-const-variable]
SCM_DEFINE (scm_vm_p, "vm?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:127:1: note: expanded from here
s_scm_vm_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
vm.c:782:1: warning: unused variable 's_scm_make_vm' [-Wunused-const-variable]
SCM_DEFINE (scm_make_vm, "make-vm", 0, 0, 0,
^
../libguile/snarf.hnet_db.c:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:142:1: note: expanded from here
s_scm_make_vm
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
:382:1: warning: unused variable 's_scm_sethost' [-Wunused-const-variable]
SCM_DEFINE (scm_sethost, "sethost", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:22:1: note: expanded from here
s_scm_sethost
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:398:1: warning: unused variable 's_scm_setnet' [-Wunused-const-variable]
SCM_DEFINE (scm_setnet, "setnet", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:37:1: note: expanded from here
s_scm_setnet
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:414:1: warning: unused variable 's_scm_setproto' [-Wunused-const-variable]
SCM_DEFINE (scm_setproto, "setproto", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:52:1: note: expanded from here
s_scm_setproto
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:430:1: warning: unused variable 's_scm_setserv' [-Wunused-const-variable]
SCM_DEFINE (scm_setserv, "setserv", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:67:1: note: expanded from here
s_scm_setserv
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:454:20: warning: unused variable 'sym_ai_passive' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_passive, "AI_PASSIVE",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:456:20: warning: unused variable 'sym_ai_canonname' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_canonname, "AI_CANONNAME",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:458:20: warning: unused variable 'sym_ai_numerichost' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_numerichost, "AI_NUMERICHOST",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:460:20: warning: unused variable 'sym_ai_numericserv' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_numericserv, "AI_NUMERICSERV",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:462:20: warning: unused variable 'sym_ai_v4mapped' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_v4mapped, "AI_V4MAPPED",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:464:20: warning: unused variable 'sym_ai_all' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_all, "AI_ALL",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:466:20: warning: unused variable 'sym_ai_addrconfig' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_ai_addrconfig, "AI_ADDRCONFIG",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:680:20: warning: unused variable 'sym_eai_badflags' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_badflags, "EAI_BADFLAGS",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:682:20: warning: unused variable 'sym_eai_noname' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_noname, "EAI_NONAME",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:684:20: warning: unused variable 'sym_eai_again' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_again, "EAI_AGAIN",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:686:20: warning: unused variable 'sym_eai_fail' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_fail, "EAI_FAIL",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:688:20: warning: unused variable 'sym_eai_family' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_family, "EAI_FAMILY",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:690:20: warning: unused variable 'sym_eai_socktype' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_socktype, "EAI_SOCKTYPE",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:692:20: warning: unused variable 'sym_eai_service' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_service, "EAI_SERVICE",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:694:20: warning: unused variable 'sym_eai_memory' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_memory, "EAI_MEMORY",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:696:20: warning: unused variable 'sym_eai_system' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_system, "EAI_SYSTEM",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:698:20: warning: unused variable 'sym_eai_overflow' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_overflow, "EAI_OVERFLOW",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:703:20: warning: unused variable 'sym_eai_nodata' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_nodata, "EAI_NODATA",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:707:20: warning: unused variable 'sym_eai_addrfamily' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_addrfamily, "EAI_ADDRFAMILY",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:711:20: warning: unused variable 'sym_eai_inprogress' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_inprogress, "EAI_INPROGRESS",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:715:20: warning: unused variable 'sym_eai_canceled' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_canceled, "EAI_CANCELED",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:719:20: warning: unused variable 'sym_eai_notcanceled' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_notcanceled, "EAI_NOTCANCELED",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:723:20: warning: unused variable 'sym_eai_alldone' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_alldone, "EAI_ALLDONE",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:727:20: warning: unused variable 'sym_eai_intr' [-Wunused-variable]
regex-posix.c:92:1: warning: unused variable 's_scm_regexp_p' [-Wunused-const-variable]
SCM_DEFINE (scm_regexp_p, "regexp?", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:107:1: note: expanded from here
s_scm_regexp_p
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
SCM_VARIABLE_INIT (sym_eai_intr, "EAI_INTR",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:731:20: warning: unused variable 'sym_eai_idn_encode' [-Wunused-variable]
SCM_VARIABLE_INIT (sym_eai_idn_encode, "EAI_IDN_ENCODE",
                   ^
../libguile/snarf.h:237:27: note: expanded from macro 'SCM_VARIABLE_INIT'
SCM_SNARF_HERE(static SCM c_name) \
                          ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:735:1: warning: unused variable 'scm_gai_strerror__name' [-Wunused-variable]
SCM_DEFINE (scm_gai_strerror, "gai-strerror", 1, 0, 0,
^
../libguile/snarf.h:104:13: note: expanded from macro 'SCM_DEFINE'
SCM_SYMBOL (scm_i_paste (FNAME, __name), PRIMNAME);                     \
            ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:102:1: note: expanded from here
scm_gai_strerror__name
^
../libguile/snarf.h:195:14: note: expanded from macro '\
SCM_SYMBOL'
  static SCM c_name)                                                    \
             ^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
net_db.c:735:1: warning: unused variable 's_scm_gai_strerror' [-Wunused-const-variable]
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:108:1: note: expanded from here
s_scm_gai_strerror
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
flex -t ./c-tokenize.lex > c-tokenize.c || { rm c-tokenize.c; false; }
  GEN      c-tokenize.o
1 warning generated.
31 warnings generated.
socket.c:95:1: warning: unused variable 's_scm_htons' [-Wunused-const-variable]
SCM_DEFINE (scm_htons, "htons", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:152:1: note: expanded from here
s_scm_htons
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:106:1: warning: unused variable 's_scm_ntohs' [-Wunused-const-variable]
SCM_DEFINE (scm_ntohs, "ntohs", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:167:1: note: expanded from here
s_scm_ntohs
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:117:1: warning: unused variable 's_scm_htonl' [-Wunused-const-variable]
SCM_DEFINE (scm_htonl, "htonl", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:182:1: note: expanded from here
s_scm_htonl
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:128:1: warning: unused variable 's_scm_ntohl' [-Wunused-const-variable]
SCM_DEFINE (scm_ntohl, "ntohl", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:197:1: note: expanded from here
s_scm_ntohl
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:140:1: warning: unused variable 's_scm_inet_netof' [-Wunused-const-variable]
SCM_DEFINE (scm_inet_netof, "inet-netof", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:212:1: note: expanded from here
s_scm_inet_netof
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:157:1: warning: unused variable 's_scm_lnaof' [-Wunused-const-variable]
SCM_DEFINE (scm_lnaof, "inet-lnaof", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:9:1: note: expanded from here
s_scm_lnaof
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:175:1: warning: unused variable 's_scm_inet_makeaddr' [-Wunused-const-variable]
SCM_DEFINE (scm_inet_makeaddr, "inet-makeaddr", 2, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:24:1: note: expanded from here
s_scm_inet_makeaddr
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
socket.c:1283:1: warning: unused variable 's_scm_make_socket_address' [-Wunused-const-variable]
SCM_DEFINE (scm_make_socket_address, "make-socket-address", 2, 0, 1,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:71:1: note: expanded from here
s_scm_make_socket_address
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:384:1: warning: unused variable 's_scm_setpwent' [-Wunused-const-variable]
SCM_DEFINE (scm_setpwent, "setpw", 0, 1, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:10:1: note: expanded from here
s_scm_setpwent
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:440:1: warning: unused variable 's_scm_setgrent' [-Wunused-const-variable]
SCM_DEFINE (scm_setgrent, "setgr", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:40:1: note: expanded from here
s_scm_setgrent
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:740:1: warning: unused variable 's_scm_status_exit_val' [-Wunused-const-variable]
SCM_DEFINE (scm_status_exit_val, "status:exit-val", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:45:1: note: expanded from here
s_scm_status_exit_val
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:759:1: warning: unused variable 's_scm_status_term_sig' [-Wunused-const-variable]
SCM_DEFINE (scm_status_term_sig, "status:term-sig", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:60:1: note: expanded from here
s_scm_status_term_sig
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:775:1: warning: unused variable 's_scm_status_stop_sig' [-Wunused-const-variable]
SCM_DEFINE (scm_status_stop_sig, "status:stop-sig", 1, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:75:1: note: expanded from here
s_scm_status_stop_sig
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:793:1: warning: unused variable 's_scm_getppid' [-Wunused-const-variable]
SCM_DEFINE (scm_getppid, "getppid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:90:1: note: expanded from here
s_scm_getppid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:806:1: warning: unused variable 's_scm_getuid' [-Wunused-const-variable]
SCM_DEFINE (scm_getuid, "getuid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:105:1: note: expanded from here
s_scm_getuid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:817:1: warning: unused variable 's_scm_getgid' [-Wunused-const-variable]
SCM_DEFINE (scm_getgid, "getgid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:120:1: note: expanded from here
s_scm_getgid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:828:1: warning: unused variable 's_scm_geteuid' [-Wunused-const-variable]
SCM_DEFINE (scm_geteuid, "geteuid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_geteuid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:845:1: warning: unused variable 's_scm_getegid' [-Wunused-const-variable]
SCM_DEFINE (scm_getegid, "getegid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:20:1: note: expanded from here
s_scm_getegid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:939:1: warning: unused variable 's_scm_getpgrp' [-Wunused-const-variable]
SCM_DEFINE (scm_getpgrp, "getpgrp", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:95:1: note: expanded from here
s_scm_getpgrp
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:989:1: warning: unused variable 's_scm_getsid' [-Wunused-const-variable]
SCM_DEFINE (scm_getsid, "getsid", 1, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:140:1: note: expanded from here
s_scm_getsid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:1454:1: warning: unused variable 's_scm_environ' [-Wunused-const-variable]
SCM_DEFINE (scm_environ, "environ", 0, 1, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:5:1: note: expanded from here
s_scm_environ
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:1627:1: warning: unused variable 's_scm_getpid' [-Wunused-const-variable]
SCM_DEFINE (scm_getpid, "getpid", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:65:1: note: expanded from here
s_scm_getpid
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:1816:1: warning: unused variable 's_scm_sync' [-Wunused-const-variable]
SCM_DEFINE (scm_sync, "sync", 0, 0, 0,
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:140:1: note: expanded from here
s_scm_sync
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
posix.c:1899:1: warning: unused variable 's_scm_getlogin' [-Wunused-const-variable]
SCM_DEFINE (scm_getlogin, "getlogin", 0, 0, 0, 
^
../libguile/snarf.h:106:21: note: expanded from macro 'SCM_DEFINE'
  static const char scm_i_paste (s_, FNAME) [] = PRIMNAME;              \
                    ^
../libguile/snarf.h:39:32: note: expanded from macro 'scm_i_paste'
#define scm_i_paste(x, y)      x ## y
                               ^
<scratch space>:39:1: note: expanded from here
s_scm_getlogin
^
../libguile/snarf.h:82:29: note: expanded from macro '\
SCM_SNARF_HERE'
#  define SCM_SNARF_HERE(X) X
                            ^
8 warnings generated.
  GEN      guile_filter_doc_snarfage
16 warnings generated.
  SNARF  alist.doc
  SNARF  arbiters.doc
  SNARF  array-handle.doc
  SNARF  array-map.doc
  SNARF  async.doc
  SNARF  arrays.doc
  SNARF  backtrace.doc
  SNARF  boolean.doc
  SNARF  bytevectors.doc
  SNARF  bitvectors.doc
  SNARF  chars.doc
  SNARF  control.doc
  SNARF  continuations.doc
  SNARF  debug.doc
  SNARF  deprecated.doc
  SNARF  deprecation.doc
  SNARF  dynl.doc
  SNARF  dynwind.doc
  SNARF  eq.doc
  SNARF  error.doc
  SNARF  eval.doc
  SNARF  evalext.doc
  SNARF  expand.doc
  SNARF  extensions.doc
  SNARF  feature.doc
  SNARF  filesys.doc
  SNARF  fluids.doc
  SNARF  foreign.doc
  SNARF  fports.doc
  SNARF  gc-malloc.doc
  SNARF  gc.doc
  SNARF  gettext.doc
  SNARF  generalized-arrays.doc
  SNARF  generalized-vectors.doc
  SNARF  goops.doc
  SNARF  gsubr.doc
  SNARF  guardians.doc
  SNARF  hash.doc
  SNARF  hashtab.doc
  SNARF  hooks.doc
  SNARF  i18n.doc
  SNARF  init.doc
  SNARF  ioext.doc
  SNARF  keywords.doc
  SNARF  list.doc
  SNARF  load.doc
  SNARF  macros.doc
  SNARF  mallocs.doc
  SNARF  memoize.doc
memoize.c:515:***Mismatching FUNC_NAME.  Should be: `#define FUNC_NAME s_"@prompt"'
  SNARF  modules.doc
  SNARF  numbers.doc
  SNARF  objprop.doc
  SNARF  options.doc
  SNARF  pairs.doc
p  SNARF  ports.doc
airs.c:147:***Missing or erroneous `#define FUNC_NAME s_scm_cdr'
pairs.c:150:***pairs.c:155:***Missing or erroneous `#define FUNC_NAME s_scm_cddr'
pairs.c:158:***pairs.c:163:***Missing or erroneous `#define FUNC_NAME s_scm_cadr'
pairs.c:166:***pairs.c:171:***Missing or erroneous `#define FUNC_NAME s_scm_cdddr'
pairs.c:174:***pairs.c:179:***Missing or erroneous `#define FUNC_NAME s_scm_cdadr'
pairs.c:182:***pairs.c:187:***Missing or erroneous `#define FUNC_NAME s_scm_caddr'
pairs.c:190:***pairs.c:195:***Missing or erroneous `#define FUNC_NAME s_scm_caadr'
pairs.c:198:***pairs.c:203:***Missing or erroneous `#define FUNC_NAME s_scm_cddddr'
pairs.c:206:***pairs.c:211:***Missing or erroneous `#define FUNC_NAME s_scm_cddadr'
pairs.c:214:***pairs.c:219:***Missing or erroneous `#define FUNC_NAME s_scm_cdaddr'
pairs.c:222:***pairs.c:227:***Missing or erroneous `#define FUNC_NAME s_scm_cdaadr'
pairs.c:230:***pairs.c:235:***Missing or erroneous `#define FUNC_NAME s_scm_cadddr'
pairs.c:238:***pairs.c:243:***Missing or erroneous `#define FUNC_NAME s_scm_cadadr'
pairs.c:246:***pairs.c:251:***Missing or erroneous `#define FUNC_NAME s_scm_caaddr'
p  SNARF  print.doc
airs.c:254:***pairs.c:259:***Missing or erroneous `#define FUNC_NAME s_scm_caaadr'
pairs.c:262:***Missing or erroneous #undef for scm_car: 
Missing or erroneous #undef for scm_cdar: 
Missing or erroneous #undef for scm_caar: 
Missing or erroneous #undef for scm_cddar: 
Missing or erroneous #undef for scm_cdaar: 
Missing or erroneous #undef for scm_cadar: 
Missing or erroneous #undef for scm_caaar: 
Missing or erroneous #undef for scm_cdddar: 
Missing or erroneous #undef for scm_cddaar: 
Missing or erroneous #undef for scm_cdadar: 
Missing or erroneous #undef for scm_cdaaar: 
Missing or erroneous #undef for scm_caddar: 
Missing or erroneous #undef for scm_cadaar: 
Missing or erroneous #undef for scm_caadar: 
Missing or erroneous #undef for scm_caaaar: 
  SNARF  procprop.doc
  SNARF  procs.doc
  SNARF  promises.doc
  SNARF  r6rs-ports.doc
  SNARF  random.doc
  SNARF  rdelim.doc
  SNARF  read.doc
  SNARF  root.doc
  SNARF  rw.doc
  SNARF  scmsigs.doc
  SNARF  script.doc
  SNARF  simpos.doc
  SNARF  sort.doc
  SNARF  smob.doc
  SNARF  srcprop.doc
  SNARF  srfi-1.doc
  SNARF  srfi-4.doc
  SNARF  srfi-13.doc
  SNARF  srfi-14.doc
  SNARF  srfi-60.doc
  SNARF  stackchk.doc
  SNARF  stacks.doc
  SNARF  strings.doc
  SNARF  stime.doc
  SNARF  strorder.doc
  SNARF  strports.doc
  SNARF  struct.doc
  SNARF  symbols.doc
  SNARF  threads.doc
  SNARF  throw.doc
  SNARF  trees.doc
  SNARF  uniform.doc
  SNARF  values.doc
  SNARF  variable.doc
  SNARF  vectors.doc
  SNARF  version.doc
  SNARF  vports.doc
  SNARF  weaks.doc
  SNARF  posix.doc
  SNARF  net_db.doc
  SNARF  socket.doc
  SNARF  regex-posix.doc
3 warnings generated.
  CCLD     libguile-2.0.la
.libs/posix.o: In function `scm_tmpnam':
/«BUILDDIR»/guile-2.0-2.0.9+1/libguile/posix.c:1489: warning: the use of `tmpnam' is dangerous, better use `mkstemp'
  CCLD     guile
  GEN      guile-procedures.texi
/bin/bash: line 1: 30161 Broken pipe             cat alist.doc arbiters.doc array-handle.doc array-map.doc arrays.doc async.doc backtrace.doc boolean.doc bitvectors.doc bytevectors.doc chars.doc control.doc continuations.doc debug.doc deprecated.doc deprecation.doc dynl.doc dynwind.doc eq.doc error.doc eval.doc evalext.doc expand.doc extensions.doc feature.doc filesys.doc fluids.doc foreign.doc fports.doc gc-malloc.doc gc.doc gettext.doc generalized-arrays.doc generalized-vectors.doc goops.doc gsubr.doc guardians.doc hash.doc hashtab.doc hooks.doc i18n.doc init.doc ioext.doc keywords.doc list.doc load.doc macros.doc mallocs.doc memoize.doc modules.doc numbers.doc objprop.doc options.doc pairs.doc ports.doc print.doc procprop.doc procs.doc promises.doc r6rs-ports.doc random.doc rdelim.doc read.doc root.doc rw.doc scmsigs.doc script.doc simpos.doc smob.doc sort.doc srcprop.doc srfi-1.doc srfi-4.doc srfi-13.doc srfi-14.doc srfi-60.doc stackchk.doc stacks.doc stime.doc strings.doc strorder.doc strports.doc struct.doc symbols.doc threads.doc throw.doc trees.doc uniform.doc values.doc variable.doc vectors.doc version.doc vports.doc weaks.doc dynl.doc posix.doc net_db.doc socket.doc regex-posix.doc
     30162 Segmentation fault      | GUILE_INSTALL_LOCALE=1 GUILE_AUTO_COMPILE=0 ../meta/uninstalled-env guild snarf-check-and-output-texi > guile-procedures.texi
make[4]: *** [guile-procedures.texi] Error 1
make[4]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/libguile'
make[3]: *** [all] Error 2
make[2]: *** [all-recursive] Error 1
make[1]: *** [all] Error 2
dh_auto_build: make -j10 returned exit code 2
make[3]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1/libguile'
make[2]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
make[1]: Leaving directory `/«BUILDDIR»/guile-2.0-2.0.9+1'
make: *** [build-arch] Error 2
dpkg-buildpackage: error: debian/rules build-arch gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20140106-0101

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Build Architecture: amd64
Build-Space: 86448
Build-Time: 332
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 16
Job: guile-2.0_2.0.9+1-1
Machine Architecture: amd64
Package: guile-2.0
Package-Time: 398
Source-Version: 2.0.9+1-1
Space: 86448
Status: attempted
Version: 2.0.9+1-1clang1
────────────────────────────────────────────────────────────────────────────────
Finished at 20140106-0101
Build needed 00:06:38, 86448k disc space
DC-Status: Failed 398.3572263s
DC-Time-Estimation: 398.3572263 versus expected 1 (r/m: 397.3572263 ; m: 1.0)
