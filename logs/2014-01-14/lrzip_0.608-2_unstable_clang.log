DC-Build-Header: lrzip 0.608-2 / 2014-01-06 08:22:47 +0000
DC-Task: source:lrzip version:0.608-2 architecture:any chroot:unstable esttime:64 logfile:/tmp/lrzip_0.608-2_unstable_clang.log modes:binary-only:parallel:clang
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang --append-to-version "clang1" --maintainer "Lucas Nussbaum <lucas@debian.org>" --uploader "Lucas Nussbaum <lucas@debian.org>" lrzip_0.608-2'
sbuild (Debian sbuild) 0.63.2 (18 Aug 2012) on ip-172-31-15-143.us-west-2.compute.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ lrzip 0.608-2clang1 (amd64)                                06 Jan 2014 08:22 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: lrzip
Version: 0.608-2clang1
Source Version: 0.608-2
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64

I: NOTICE: Log filtering will replace 'build/lrzip-uMcTW_/lrzip-0.608' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/lrzip-uMcTW_' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-a428ae7a-a73c-4292-9159-ad8a6e301215' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Get:1 http://localhost:9999 unstable InRelease [206 kB]
Get:2 http://localhost:9999 unstable/main Sources/DiffIndex [7876 B]
Get:3 http://localhost:9999 unstable/main amd64 Packages/DiffIndex [7876 B]
Get:4 http://localhost:9999 unstable/main Translation-en/DiffIndex [7876 B]
Get:5 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [11.3 kB]
Get:6 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [11.3 kB]
Get:7 http://localhost:9999 unstable/main amd64 2014-01-04-1439.27.pdiff [11.8 kB]
Get:8 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [1898 B]
Get:9 http://localhost:9999 unstable/main amd64 2014-01-04-1439.27.pdiff [11.8 kB]
Get:10 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [12.3 kB]
Get:11 http://localhost:9999 unstable/main 2014-01-04-1439.27.pdiff [1898 B]
Get:12 http://localhost:9999 unstable/main amd64 2014-01-04-2039.41.pdiff [24.3 kB]
Get:13 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [12.3 kB]
Get:14 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [2358 B]
Get:15 http://localhost:9999 unstable/main amd64 2014-01-04-2039.41.pdiff [24.3 kB]
Get:16 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [9640 B]
Get:17 http://localhost:9999 unstable/main 2014-01-04-2039.41.pdiff [2358 B]
Get:18 http://localhost:9999 unstable/main amd64 2014-01-05-0239.35.pdiff [18.3 kB]
Get:19 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [9640 B]
Get:20 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [504 B]
Get:21 http://localhost:9999 unstable/main amd64 2014-01-05-0239.35.pdiff [18.3 kB]
Get:22 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [4885 B]
Get:23 http://localhost:9999 unstable/main 2014-01-05-0239.35.pdiff [504 B]
Get:24 http://localhost:9999 unstable/main amd64 2014-01-05-0840.32.pdiff [3950 B]
Get:25 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [4885 B]
Get:26 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [214 B]
Get:27 http://localhost:9999 unstable/main amd64 2014-01-05-0840.32.pdiff [3950 B]
Get:28 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [7183 B]
Get:29 http://localhost:9999 unstable/main 2014-01-05-0840.32.pdiff [214 B]
Get:30 http://localhost:9999 unstable/main amd64 2014-01-05-1438.24.pdiff [3882 B]
Get:31 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [7183 B]
Get:32 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [1111 B]
Get:33 http://localhost:9999 unstable/main amd64 2014-01-05-1438.24.pdiff [3882 B]
Get:34 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [20.2 kB]
Get:35 http://localhost:9999 unstable/main 2014-01-05-1438.24.pdiff [1111 B]
Get:36 http://localhost:9999 unstable/main amd64 2014-01-05-2041.02.pdiff [17.0 kB]
Get:37 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [20.2 kB]
Get:38 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [2166 B]
Get:39 http://localhost:9999 unstable/main amd64 2014-01-05-2041.02.pdiff [17.0 kB]
Get:40 http://localhost:9999 unstable/main 2014-01-06-0239.34.pdiff [7972 B]
Get:41 http://localhost:9999 unstable/main 2014-01-05-2041.02.pdiff [2166 B]
Get:42 http://localhost:9999 unstable/main amd64 2014-01-06-0239.34.pdiff [21.1 kB]
Get:43 http://localhost:9999 unstable/main 2014-01-06-0239.34.pdiff [7972 B]
Get:44 http://localhost:9999 unstable/main 2014-01-06-0239.34.pdiff [238 B]
Get:45 http://localhost:9999 unstable/main amd64 2014-01-06-0239.34.pdiff [21.1 kB]
Get:46 http://localhost:9999 unstable/main 2014-01-06-0239.34.pdiff [238 B]
Fetched 412 kB in 28s (14.5 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be upgraded:
  libterm-ui-perl
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.1 kB of archives.
After this operation, 1024 B of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libterm-ui-perl all 0.42-1 [19.1 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 19.1 kB in 0s (1173 kB/s)
(Reading database ... 13944 files and directories currently installed.)
Preparing to unpack .../libterm-ui-perl_0.42-1_all.deb ...
Unpacking libterm-ui-perl (0.42-1) over (0.38-1) ...
Setting up libterm-ui-perl (0.42-1) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
NOTICE: 'lrzip' packaging is maintained in the 'Git' version control system at:
git://git.debian.org/git/collab-maint/lrzip.git
Need to get 525 kB of source archives.
Get:1 http://localhost:9999/debian/ unstable/main lrzip 0.608-2 (dsc) [1898 B]
Get:2 http://localhost:9999/debian/ unstable/main lrzip 0.608-2 (tar) [516 kB]
Get:3 http://localhost:9999/debian/ unstable/main lrzip 0.608-2 (diff) [7330 B]
Fetched 525 kB in 2s (235 kB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ echo 'Install of clang-3.4'
Install of clang-3.4
+ apt-get update
Hit http://localhost:9999 unstable InRelease
Hit http://localhost:9999 unstable/main Sources/DiffIndex
Hit http://localhost:9999 unstable/main amd64 Packages/DiffIndex
Hit http://localhost:9999 unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-3.4
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-3.4-dev libclang1-3.4 libffi6 libllvm3.4 libobjc-4.8-dev
  libobjc4
Recommended packages:
  llvm-3.4-dev python
The following NEW packages will be installed:
  clang-3.4 libclang-common-3.4-dev libclang1-3.4 libffi6 libllvm3.4
  libobjc-4.8-dev libobjc4
0 upgraded, 7 newly installed, 0 to remove and 0 not upgraded.
Need to get 19.9 MB of archives.
After this operation, 82.1 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libffi6 amd64 3.0.13-10 [19.3 kB]
Get:2 http://localhost:9999/debian/ unstable/main libllvm3.4 amd64 1:3.4-1 [6528 kB]
Get:3 http://localhost:9999/debian/ unstable/main libobjc4 amd64 4.8.2-11 [110 kB]
Get:4 http://localhost:9999/debian/ unstable/main libobjc-4.8-dev amd64 4.8.2-11 [370 kB]
Get:5 http://localhost:9999/debian/ unstable/main libclang1-3.4 amd64 1:3.4-1 [3526 kB]
Get:6 http://localhost:9999/debian/ unstable/main libclang-common-3.4-dev amd64 1:3.4-1 [516 kB]
Get:7 http://localhost:9999/debian/ unstable/main clang-3.4 amd64 1:3.4-1 [8878 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 19.9 MB in 0s (25.5 MB/s)
Selecting previously unselected package libffi6:amd64.
(Reading database ... 13944 files and directories currently installed.)
Preparing to unpack .../libffi6_3.0.13-10_amd64.deb ...
Unpacking libffi6:amd64 (3.0.13-10) ...
Selecting previously unselected package libllvm3.4:amd64.
Preparing to unpack .../libllvm3.4_1%3a3.4-1_amd64.deb ...
Unpacking libllvm3.4:amd64 (1:3.4-1) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../libobjc4_4.8.2-11_amd64.deb ...
Unpacking libobjc4:amd64 (4.8.2-11) ...
Selecting previously unselected package libobjc-4.8-dev:amd64.
Preparing to unpack .../libobjc-4.8-dev_4.8.2-11_amd64.deb ...
Unpacking libobjc-4.8-dev:amd64 (4.8.2-11) ...
Selecting previously unselected package libclang1-3.4:amd64.
Preparing to unpack .../libclang1-3.4_1%3a3.4-1_amd64.deb ...
Unpacking libclang1-3.4:amd64 (1:3.4-1) ...
Selecting previously unselected package libclang-common-3.4-dev.
Preparing to unpack .../libclang-common-3.4-dev_1%3a3.4-1_amd64.deb ...
Unpacking libclang-common-3.4-dev (1:3.4-1) ...
Selecting previously unselected package clang-3.4.
Preparing to unpack .../clang-3.4_1%3a3.4-1_amd64.deb ...
Unpacking clang-3.4 (1:3.4-1) ...
Setting up libffi6:amd64 (3.0.13-10) ...
Setting up libllvm3.4:amd64 (1:3.4-1) ...
Setting up libobjc4:amd64 (4.8.2-11) ...
Setting up libobjc-4.8-dev:amd64 (4.8.2-11) ...
Setting up libclang1-3.4:amd64 (1:3.4-1) ...
Setting up libclang-common-3.4-dev (1:3.4-1) ...
Setting up clang-3.4 (1:3.4-1) ...
Processing triggers for libc-bin (2.17-97) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8'
+ cd /usr/bin
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.6 gcc-4.6 cpp-4.6
+ ln -s clang++ g++-4.6
+ ln -s clang gcc-4.6
+ ln -s clang cpp-4.6
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.8 gcc-4.8 cpp-4.8
+ ln -s clang++ g++-4.8
+ ln -s clang gcc-4.8
+ ln -s clang cpp-4.8
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
+ echo 'cpp-4.8 hold'
+ dpkg --set-selections
+ echo 'g++-4.8 hold'
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-3GBtzS/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/766 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 14105 files and directories currently installed.)
Preparing to unpack .../sbuild-build-depends-core-dummy.deb ...
Unpacking sbuild-build-depends-core-dummy (0.invalid.0) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 9), dpkg-dev (>= 1.16.1), autotools-dev, automake, autoconf, libtool, zlib1g-dev, libbz2-dev, liblzo2-dev
Filtered Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 9), dpkg-dev (>= 1.16.1), autotools-dev, automake, autoconf, libtool, zlib1g-dev, libbz2-dev, liblzo2-dev
dpkg-deb: building package `sbuild-build-depends-lrzip-dummy' in `/«BUILDDIR»/resolver-izALel/apt_archive/sbuild-build-depends-lrzip-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install lrzip build dependencies (apt-based resolver)                        │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  autoconf automake autotools-dev bsdmainutils debhelper file gettext
  gettext-base groff-base intltool-debian libasprintf0c2 libbz2-dev libcroco3
  libglib2.0-0 liblzo2-2 liblzo2-dev libmagic1 libpipeline1 libsigsegv2
  libtool libunistring0 libxml2 m4 man-db po-debconf zlib1g-dev
Suggested packages:
  autoconf2.13 autoconf-archive gnu-standards autoconf-doc wamerican wordlist
  whois vacation dh-make gettext-doc groff libtool-doc automaken gfortran
  fortran95-compiler gcj-jdk less www-browser libmail-box-perl
Recommended packages:
  curl wget lynx-cur autopoint libasprintf-dev libgettextpo-dev
  libglib2.0-data shared-mime-info libltdl-dev xml-core libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autotools-dev bsdmainutils debhelper file gettext
  gettext-base groff-base intltool-debian libasprintf0c2 libbz2-dev libcroco3
  libglib2.0-0 liblzo2-2 liblzo2-dev libmagic1 libpipeline1 libsigsegv2
  libtool libunistring0 libxml2 m4 man-db po-debconf
  sbuild-build-depends-lrzip-dummy zlib1g-dev
0 upgraded, 27 newly installed, 0 to remove and 0 not upgraded.
Need to get 10.3 MB/10.3 MB of archives.
After this operation, 31.9 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libpipeline1 amd64 1.2.6-1 [24.8 kB]
Get:2 http://localhost:9999/debian/ unstable/main groff-base amd64 1.22.2-3 [747 kB]
Get:3 http://localhost:9999/debian/ unstable/main bsdmainutils amd64 9.0.5 [211 kB]
Get:4 http://localhost:9999/debian/ unstable/main man-db amd64 2.6.5-3 [975 kB]
Get:5 http://localhost:9999/debian/ unstable/main libasprintf0c2 amd64 0.18.3.1-2 [29.1 kB]
Get:6 http://localhost:9999/debian/ unstable/main libmagic1 amd64 1:5.14-2 [216 kB]
Get:7 http://localhost:9999/debian/ unstable/main libxml2 amd64 2.9.1+dfsg1-3 [791 kB]
Get:8 http://localhost:9999/debian/ unstable/main libglib2.0-0 amd64 2.36.4-1 [2055 kB]
Get:9 http://localhost:9999/debian/ unstable/main libcroco3 amd64 0.6.8-2 [133 kB]
Get:10 http://localhost:9999/debian/ unstable/main liblzo2-2 amd64 2.06-1.2 [51.2 kB]
Get:11 http://localhost:9999/debian/ unstable/main libsigsegv2 amd64 2.10-2 [29.8 kB]
Get:12 http://localhost:9999/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:13 http://localhost:9999/debian/ unstable/main file amd64 1:5.14-2 [54.0 kB]
Get:14 http://localhost:9999/debian/ unstable/main gettext-base amd64 0.18.3.1-2 [116 kB]
Get:15 http://localhost:9999/debian/ unstable/main m4 amd64 1.4.17-2 [255 kB]
Get:16 http://localhost:9999/debian/ unstable/main autoconf all 2.69-2 [339 kB]
Get:17 http://localhost:9999/debian/ unstable/main autotools-dev all 20130810.1 [69.6 kB]
Get:18 http://localhost:9999/debian/ unstable/main automake all 1:1.14.1-2 [724 kB]
Get:19 http://localhost:9999/debian/ unstable/main gettext amd64 0.18.3.1-2 [1202 kB]
Get:20 http://localhost:9999/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:21 http://localhost:9999/debian/ unstable/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:22 http://localhost:9999/debian/ unstable/main debhelper all 9.20131227 [687 kB]
Get:23 http://localhost:9999/debian/ unstable/main libbz2-dev amd64 1.0.6-5 [28.7 kB]
Get:24 http://localhost:9999/debian/ unstable/main liblzo2-dev amd64 2.06-1.2 [105 kB]
Get:25 http://localhost:9999/debian/ unstable/main libtool amd64 2.4.2-1.6 [505 kB]
Get:26 http://localhost:9999/debian/ unstable/main zlib1g-dev amd64 1:1.2.8.dfsg-1 [217 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 10.3 MB in 1s (9500 kB/s)
Selecting previously unselected package libpipeline1:amd64.
(Reading database ... 14105 files and directories currently installed.)
Preparing to unpack .../libpipeline1_1.2.6-1_amd64.deb ...
Unpacking libpipeline1:amd64 (1.2.6-1) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../groff-base_1.22.2-3_amd64.deb ...
Unpacking groff-base (1.22.2-3) ...
Selecting previously unselected package bsdmainutils.
Preparing to unpack .../bsdmainutils_9.0.5_amd64.deb ...
Unpacking bsdmainutils (9.0.5) ...
Selecting previously unselected package man-db.
Preparing to unpack .../man-db_2.6.5-3_amd64.deb ...
Unpacking man-db (2.6.5-3) ...
Selecting previously unselected package libasprintf0c2:amd64.
Preparing to unpack .../libasprintf0c2_0.18.3.1-2_amd64.deb ...
Unpacking libasprintf0c2:amd64 (0.18.3.1-2) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../libmagic1_1%3a5.14-2_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.14-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../libxml2_2.9.1+dfsg1-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.1+dfsg1-3) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../libglib2.0-0_2.36.4-1_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.36.4-1) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../libcroco3_0.6.8-2_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.8-2) ...
Selecting previously unselected package liblzo2-2:amd64.
Preparing to unpack .../liblzo2-2_2.06-1.2_amd64.deb ...
Unpacking liblzo2-2:amd64 (2.06-1.2) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../libsigsegv2_2.10-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.10-2) ...
Selecting previously unselected package libunistring0:amd64.
Preparing to unpack .../libunistring0_0.9.3-5_amd64.deb ...
Unpacking libunistring0:amd64 (0.9.3-5) ...
Selecting previously unselected package file.
Preparing to unpack .../file_1%3a5.14-2_amd64.deb ...
Unpacking file (1:5.14-2) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../gettext-base_0.18.3.1-2_amd64.deb ...
Unpacking gettext-base (0.18.3.1-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../archives/m4_1.4.17-2_amd64.deb ...
Unpacking m4 (1.4.17-2) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../autoconf_2.69-2_all.deb ...
Unpacking autoconf (2.69-2) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../autotools-dev_20130810.1_all.deb ...
Unpacking autotools-dev (20130810.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../automake_1%3a1.14.1-2_all.deb ...
Unpacking automake (1:1.14.1-2) ...
Selecting previously unselected package gettext.
Preparing to unpack .../gettext_0.18.3.1-2_amd64.deb ...
Unpacking gettext (0.18.3.1-2) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../intltool-debian_0.35.0+20060710.1_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.1) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../po-debconf_1.0.16+nmu2_all.deb ...
Unpacking po-debconf (1.0.16+nmu2) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../debhelper_9.20131227_all.deb ...
Unpacking debhelper (9.20131227) ...
Selecting previously unselected package libbz2-dev:amd64.
Preparing to unpack .../libbz2-dev_1.0.6-5_amd64.deb ...
Unpacking libbz2-dev:amd64 (1.0.6-5) ...
Selecting previously unselected package liblzo2-dev:amd64.
Preparing to unpack .../liblzo2-dev_2.06-1.2_amd64.deb ...
Unpacking liblzo2-dev:amd64 (2.06-1.2) ...
Selecting previously unselected package libtool.
Preparing to unpack .../libtool_2.4.2-1.6_amd64.deb ...
Unpacking libtool (2.4.2-1.6) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../zlib1g-dev_1%3a1.2.8.dfsg-1_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.8.dfsg-1) ...
Selecting previously unselected package sbuild-build-depends-lrzip-dummy.
Preparing to unpack .../sbuild-build-depends-lrzip-dummy.deb ...
Unpacking sbuild-build-depends-lrzip-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.2.6-1) ...
Setting up groff-base (1.22.2-3) ...
Setting up bsdmainutils (9.0.5) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up man-db (2.6.5-3) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libasprintf0c2:amd64 (0.18.3.1-2) ...
Setting up libmagic1:amd64 (1:5.14-2) ...
Setting up libxml2:amd64 (2.9.1+dfsg1-3) ...
Setting up libglib2.0-0:amd64 (2.36.4-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.8-2) ...
Setting up liblzo2-2:amd64 (2.06-1.2) ...
Setting up libsigsegv2:amd64 (2.10-2) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up file (1:5.14-2) ...
Setting up gettext-base (0.18.3.1-2) ...
Setting up m4 (1.4.17-2) ...
Setting up autoconf (2.69-2) ...
Setting up autotools-dev (20130810.1) ...
Setting up automake (1:1.14.1-2) ...
update-alternatives: using /usr/bin/automake-1.14 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.18.3.1-2) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (9.20131227) ...
Setting up libbz2-dev:amd64 (1.0.6-5) ...
Setting up liblzo2-dev:amd64 (2.06-1.2) ...
Setting up libtool (2.4.2-1.6) ...
Setting up zlib1g-dev:amd64 (1:1.2.8.dfsg-1) ...
Setting up sbuild-build-depends-lrzip-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.17-97) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.24-2 dpkg-dev_1.17.5 g++-4.6_4.6.4-5 g++-4.8_4.8.2-11 gcc-4.6_4.6.4-5 gcc-4.7_4.7.3-9 gcc-4.8_4.8.2-11 libc6-dev_2.17-97 libstdc++-4.8-dev_4.8.2-11 libstdc++6_4.8.2-11 libstdc++6-4.6-dev_4.6.4-5 linux-libc-dev_3.12.6-2
Package versions: apt_0.9.14.2 autoconf_2.69-2 automake_1:1.14.1-2 autotools-dev_20130810.1 base-files_7.2 base-passwd_3.5.29 bash_4.2+dfsg-1 binutils_2.24-2 bsdmainutils_9.0.5 bsdutils_1:2.20.1-5.5 build-essential_11.6 bzip2_1.0.6-5 clang-3.4_1:3.4-1 coreutils_8.21-1 cpp_4:4.8.2-1 cpp-4.6_4.6.4-5 cpp-4.7_4.7.3-9 cpp-4.8_4.8.2-11 dash_0.5.7-3+nmu1 debconf_1.5.52 debconf-i18n_1.5.52 debfoster_2.7-1.2 debhelper_9.20131227 debian-archive-keyring_2012.4 debianutils_4.4 diffutils_1:3.3-1 dpkg_1.17.5 dpkg-dev_1.17.5 e2fslibs_1.42.9-2 e2fsprogs_1.42.9-2 fakeroot_1.20-3 file_1:5.14-2 findutils_4.4.2-7 g++_4:4.8.2-1 g++-4.6_4.6.4-5 g++-4.8_4.8.2-11 gcc_4:4.8.2-1 gcc-4.4-base_4.4.7-6 gcc-4.5-base_4.5.4-1 gcc-4.6_4.6.4-5 gcc-4.6-base_4.6.4-5 gcc-4.7_4.7.3-9 gcc-4.7-base_4.7.3-9 gcc-4.8_4.8.2-11 gcc-4.8-base_4.8.2-11 gettext_0.18.3.1-2 gettext-base_0.18.3.1-2 gnupg_1.4.15-3 gpgv_1.4.15-3 grep_2.15-2 groff-base_1.22.2-3 gzip_1.6-3 hostname_3.15 initscripts_2.88dsf-45 insserv_1.14.0-5 intltool-debian_0.35.0+20060710.1 libacl1_2.2.52-1 libapt-pkg4.12_0.9.14.2 libarchive-extract-perl_0.70-1 libasan0_4.8.2-11 libasprintf0c2_0.18.3.1-2 libatomic1_4.8.2-11 libattr1_1:2.4.47-1 libaudit-common_1:2.3.2-3 libaudit1_1:2.3.2-3 libblkid1_2.20.1-5.5 libbz2-1.0_1.0.6-5 libbz2-dev_1.0.6-5 libc-bin_2.17-97 libc-dev-bin_2.17-97 libc6_2.17-97 libc6-dev_2.17-97 libcap2_1:2.22-1.2 libclang-common-3.4-dev_1:3.4-1 libclang1-3.4_1:3.4-1 libclass-isa-perl_0.36-5 libcloog-isl4_0.18.1-3 libcloog-ppl1_0.16.1-4 libcomerr2_1.42.9-2 libcroco3_0.6.8-2 libdb5.1_5.1.29-7 libdpkg-perl_1.17.5 libfakeroot_1.20-3 libffi6_3.0.13-10 libfile-fcntllock-perl_0.14-2+b1 libgc1c2_1:7.2d-6 libgcc-4.7-dev_4.7.3-9 libgcc-4.8-dev_4.8.2-11 libgcc1_1:4.8.2-11 libgdbm3_1.8.3-12 libglib2.0-0_2.36.4-1 libgmp10_2:5.1.3+dfsg-1 libgmpxx4ldbl_2:5.1.3+dfsg-1 libgomp1_4.8.2-11 libgpm2_1.20.4-6.1 libisl10_0.12.1-2 libitm1_4.8.2-11 libllvm3.4_1:3.4-1 liblocale-gettext-perl_1.05-7+b2 liblog-message-simple-perl_0.10-1 liblzma5_5.1.1alpha+20120614-2 liblzo2-2_2.06-1.2 liblzo2-dev_2.06-1.2 libmagic1_1:5.14-2 libmodule-pluggable-perl_4.8-1 libmount1_2.20.1-5.5 libmpc2_0.9-4 libmpc3_1.0.1-1 libmpfr4_3.1.2-1 libncurses5_5.9+20130608-1 libobjc-4.8-dev_4.8.2-11 libobjc4_4.8.2-11 libpam-modules_1.1.3-10 libpam-modules-bin_1.1.3-10 libpam-runtime_1.1.3-10 libpam0g_1.1.3-10 libpcre3_1:8.31-2 libpipeline1_1.2.6-1 libpod-latex-perl_0.61-1 libppl-c4_1:1.0-7 libppl12_1:1.0-7 libquadmath0_4.8.2-11 libreadline6_6.2+dfsg-0.1 libselinux1_2.2.1-1 libsemanage-common_2.2-1 libsemanage1_2.2-1 libsepol1_2.2-1 libsigsegv2_2.10-2 libslang2_2.2.4-16 libss2_1.42.9-2 libstdc++-4.8-dev_4.8.2-11 libstdc++6_4.8.2-11 libstdc++6-4.6-dev_4.6.4-5 libswitch-perl_2.16-2 libterm-ui-perl_0.42-1 libtext-charwidth-perl_0.04-7+b2 libtext-iconv-perl_1.7-5+b1 libtext-soundex-perl_3.4-1+b1 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_2.3000-1 libtinfo5_5.9+20130608-1 libtool_2.4.2-1.6 libtsan0_4.8.2-11 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23.3 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5.5 libxml2_2.9.1+dfsg1-3 linux-libc-dev_3.12.6-2 login_1:4.1.5.1-1 lsb-base_4.1+Debian12 m4_1.4.17-2 make_3.81-8.3 man-db_2.6.5-3 mawk_1.3.3-17 mount_2.20.1-5.5 multiarch-support_2.17-97 ncurses-base_5.9+20130608-1 ncurses-bin_5.9+20130608-1 passwd_1:4.1.5.1-1 patch_2.7.1-4 perl_5.18.1-5 perl-base_5.18.1-5 perl-modules_5.18.1-5 po-debconf_1.0.16+nmu2 readline-common_6.2+dfsg-0.1 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-lrzip-dummy_0.invalid.0 sed_4.2.2-3 sensible-utils_0.0.9 sudo_1.8.8-2 sysv-rc_2.88dsf-45 sysvinit_2.88dsf-45 sysvinit-core_2.88dsf-45 sysvinit-utils_2.88dsf-45 tar_1.27-4 tzdata_2013i-1 ucf_3.0027+nmu1 util-linux_2.20.1-5.5 vim_2:7.4.052-1 vim-common_2:7.4.052-1 vim-runtime_2:7.4.052-1 xz-utils_5.1.1alpha+20120614-2 zlib1g_1:1.2.8.dfsg-1 zlib1g-dev_1:1.2.8.dfsg-1

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Fri Feb 10 03:20:14 2012 UTC using RSA key ID 974B3E96
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./lrzip_0.608-2.dsc
dpkg-source: info: extracting lrzip in lrzip-0.608
dpkg-source: info: unpacking lrzip_0.608.orig.tar.gz
dpkg-source: info: unpacking lrzip_0.608-2.debian.tar.gz

Check disc space
────────────────

Sufficient free space for build

Hack binNMU version
───────────────────

Created changelog entry for binNMU version 0.608-2clang1

User Environment
────────────────

DEB_BUILD_OPTIONS=parallel=10
HOME=/sbuild-nonexistent
LOGNAME=user
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1000
SCHROOT_GROUP=user
SCHROOT_SESSION_ID=unstable-amd64-sbuild-a428ae7a-a73c-4292-9159-ad8a6e301215
SCHROOT_UID=1000
SCHROOT_USER=user
SHELL=/bin/sh
USER=user

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package lrzip
dpkg-buildpackage: source version 0.608-2clang1
dpkg-buildpackage: source distribution unstable
 dpkg-source --before-build lrzip-0.608
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh clean
   dh_testdir
   dh_auto_clean
   dh_clean
 debian/rules build-arch
dh build-arch
   dh_testdir -a
   debian/rules override_dh_auto_configure
make[1]: Entering directory `/«PKGBUILDDIR»'
# With pristine tarballs from version control, there is no ./configure
[ -f configure ] || autoreconf -vfi
dh_auto_configure -- LDFLAGS="-Wl,-z,relro -Wl,--as-needed" CFLAGS="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic"
configure: WARNING: unrecognized options: --disable-maintainer-mode
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking for style of include used by make... GNU
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking dependency style of gcc... none
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for a sed that does not truncate output... /bin/sed
checking for fgrep... /bin/grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 3458764513820540925
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for ar... ar
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for gcc... (cached) gcc
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to accept ISO C89... (cached) none needed
checking dependency style of gcc... (cached) none
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... none
checking whether we are using the GNU C++ compiler... (cached) yes
checking whether g++ accepts -g... (cached) yes
checking dependency style of g++... (cached) none
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /usr/bin/ld -m elf_x86_64
checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking for g++ option to produce PIC... -fPIC -DPIC
checking if g++ PIC flag -fPIC -DPIC works... yes
checking if g++ static flag -static works... yes
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking for pkg-config... no
checking whether ln -s works... yes
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for pod2man... yes
checking for nasm... no 
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking for unistd.h... (cached) yes
checking sys/mman.h usability... yes
checking sys/mman.h presence... yes
checking for sys/mman.h... yes
checking ctype.h usability... yes
checking ctype.h presence... yes
checking for ctype.h... yes
checking errno.h usability... yes
checking errno.h presence... yes
checking for errno.h... yes
checking sys/resource.h usability... yes
checking sys/resource.h presence... yes
checking for sys/resource.h... yes
checking endian.h usability... yes
checking endian.h presence... yes
checking for endian.h... yes
checking sys/endian.h usability... no
checking sys/endian.h presence... no
checking for sys/endian.h... no
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking for off_t... yes
checking for size_t... yes
checking for __attribute__... yes
checking size of int... 4
checking size of long... 8
checking size of short... 2
checking for large file support... yes
checking for inline... inline
checking for pthread_create in -lpthread... yes
checking for sqrt in -lm... yes
checking for compress2 in -lz... yes
checking for BZ2_bzBuffToBuffCompress in -lbz2... yes
checking for lzo1x_1_compress in -llzo2... yes
checking for mmap... yes
checking for strerror... yes
checking for getopt_long... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating lzma/Makefile
config.status: creating lzma/C/Makefile
config.status: creating doc/Makefile
config.status: creating man/Makefile
config.status: creating config.h
config.status: executing depfiles commands
config.status: executing libtool commands
configure: WARNING: unrecognized options: --disable-maintainer-mode



------------------------------------------------------------------------
lrzip 0.608
------------------------------------------------------------------------


Configuration Options Summary:

  ASM.(32 bit only)..: no
  Static binary......: no

Compilation............: make (or gmake)
  CPPFLAGS.............: -D_FORTIFY_SOURCE=2
  CFLAGS...............: -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic
  CXXFLAGS.............: -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security
  LDFLAGS..............: -Wl,-z,relro -Wl,--as-needed

Installation...........: make install (as root if needed, with 'su' or 'sudo')
  prefix...............: /usr

make[1]: Leaving directory `/«PKGBUILDDIR»'
   debian/rules override_dh_auto_build
make[1]: Entering directory `/«PKGBUILDDIR»'
/usr/bin/make NO_ASSEMBLER=1
make[2]: Entering directory `/«PKGBUILDDIR»'
/usr/bin/make  all-recursive
make[3]: Entering directory `/«PKGBUILDDIR»'
Making all in lzma
make[4]: Entering directory `/«PKGBUILDDIR»/lzma'
Making all in C
make[5]: Entering directory `/«PKGBUILDDIR»/lzma/C'
  CC     7zCrc.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o 7zCrc.lo 7zCrc.c
  CC     LzFind.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o LzFind.lo LzFind.c
  CC     LzFindMt.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o LzFindMt.lo LzFindMt.c
  CC     LzmaDec.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o LzmaDec.lo LzmaDec.c
  CC     LzmaEnc.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o LzmaEnc.lo LzmaEnc.c
  CC     LzmaLib.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o LzmaLib.lo LzmaLib.c
LzmaLib.c:11:48: warning: explicitly assigning a variable of type 'void *' to itself [-Wself-assign]
static void *SzAlloc(void *p, size_t size) { p = p; return MyAlloc(size); }
                                             ~ ^ ~
LzmaLib.c:12:48: warning: explicitly assigning a variable of type 'void *' to itself [-Wself-assign]
static void SzFree(void *p, void *address) { p = p; MyFree(address); }
                                             ~ ^ ~
2 warnings generated.
  CC     Alloc.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o Alloc.lo Alloc.c
  CC     Threads.lo
/bin/bash ../../libtool --silent --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../..   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c -o Threads.lo Threads.c
  CCLD   liblzma.la
make[5]: Leaving directory `/«PKGBUILDDIR»/lzma/C'
make[5]: Entering directory `/«PKGBUILDDIR»/lzma'
make[5]: Nothing to be done for `all-am'.
make[5]: Leaving directory `/«PKGBUILDDIR»/lzma'
make[4]: Leaving directory `/«PKGBUILDDIR»/lzma'
Making all in man
make[4]: Entering directory `/«PKGBUILDDIR»/man'
pod2man lrunzip.1.pod lrunzip.1
pod2man lrzcat.1.pod lrzcat.1
pod2man lrztar.1.pod lrztar.1
pod2man lrzuntar.1.pod lrzuntar.1
/usr/bin/make  all-am
make[5]: Entering directory `/«PKGBUILDDIR»/man'
make[5]: Nothing to be done for `all-am'.
make[5]: Leaving directory `/«PKGBUILDDIR»/man'
make[4]: Leaving directory `/«PKGBUILDDIR»/man'
Making all in doc
make[4]: Entering directory `/«PKGBUILDDIR»/doc'
make[4]: Nothing to be done for `all'.
make[4]: Leaving directory `/«PKGBUILDDIR»/doc'
make[4]: Entering directory `/«PKGBUILDDIR»'
  CXX    zpipe.o
g++ -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -c -o zpipe.o zpipe.cpp
zpipe.cpp:704:16: warning: assigning field to itself [-Wself-assign-field]
    case 64: a = a; break; // A=A
               ^
zpipe.cpp:713:16: warning: assigning field to itself [-Wself-assign-field]
    case 73: b = b; break; // B=B
               ^
zpipe.cpp:722:16: warning: assigning field to itself [-Wself-assign-field]
    case 82: c = c; break; // C=C
               ^
zpipe.cpp:731:16: warning: assigning field to itself [-Wself-assign-field]
    case 91: d = d; break; // D=D
               ^
zpipe.cpp:848:22: warning: self-comparison always evaluates to true [-Wtautological-compare]
    case 216: f = (a == a); break; // A==A
                     ^
zpipe.cpp:856:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    case 224: f = (a < a); break; // A<A
                     ^
zpipe.cpp:864:22: warning: self-comparison always evaluates to false [-Wtautological-compare]
    case 232: f = (a > a); break; // A>A
                     ^
7 warnings generated.
  CC     lrzip.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c lrzip.c
In file included from lrzip.c:49:
In file included from ./md5.h:30:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
In file included from lrzip.c:54:
./liblrzip.h:53:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
./liblrzip.h:58:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
./liblrzip.h:63:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
./liblrzip.h:68:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
In file included from lrzip.c:49:
In file included from ./md5.h:30:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
In file included from lrzip.c:54:
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
lrzip.c:165:55: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Unknown hash, falling back to CRC\n");
                                                                           ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:165:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Unknown hash, falling back to CRC\n");
                        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:181:83: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("Asked to decrypt a non-encrypted archive. Bypassing decryption.\n");
                                                                                                ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:220:42: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Outputting to stdout.\n");
                                                       ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:220:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Outputting to stdout.\n");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:281:56: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Dumping buffer to physical file.\n");
                                                                     ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:281:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Dumping buffer to physical file.\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:305:54: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Dumping temporary file to stdout.\n");
                                                                   ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:305:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Dumping temporary file to stdout.\n");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:485:35: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Enter passphrase: ");
                                         ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:487:19: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("\n");
                         ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:489:39: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("Re-enter passphrase: ");
                                                    ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:491:20: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("\n");
                                 ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:493:55: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("Passwords do not match. Try again.\n");
                                                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:646:117: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Warning, inadequate free space detected, but attempting to decompress due to -f option being used.\n");
                                                                                                                                                ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
lrzip.c:655:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Not performing MD5 hash check\n");
                                                               ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:655:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Not performing MD5 hash check\n");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:657:23: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("MD5 ");
                                    ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:657:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("MD5 ");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:659:25: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("CRC32 ");
                                      ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:659:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("CRC32 ");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:660:53: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_verbose("being used for integrity testing.\n");
                                                           ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:660:2: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_verbose("being used for integrity testing.\n");
        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:665:37: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_progress("Decompressing...\n");
                                           ^
./liblrzip.h:58:9: note: macro 'print_progress' defined here
#define print_progress(format, args...) do {\
        ^
./liblrzip.h:60:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:665:2: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_progress("Decompressing...\n");
        ^
./liblrzip.h:60:30: note: expanded from macro 'print_progress'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:673:21: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_progress("\r");
                           ^
./liblrzip.h:58:9: note: macro 'print_progress' defined here
#define print_progress(format, args...) do {\
        ^
./liblrzip.h:60:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:673:2: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_progress("\r");
        ^
./liblrzip.h:60:30: note: expanded from macro 'print_progress'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:681:71: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_progress("[OK]                                             \n");
                                                                                    ^
./liblrzip.h:58:9: note: macro 'print_progress' defined here
#define print_progress(format, args...) do {\
        ^
./liblrzip.h:60:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:681:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_progress("[OK]                                             \n");
                ^
./liblrzip.h:60:30: note: expanded from macro 'print_progress'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:747:17: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                d_den = den ? : 1;
                              ^
lrzip.c:801:77: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("Encrypted lrzip archive. No further information available\n");
                                                                                          ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:854:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Block\tComp\tPercent\tSize\n");
                                                            ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:854:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Block\tComp\tPercent\tSize\n");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:868:25: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("none");
                                                    ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:868:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("none");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:870:26: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("bzip2");
                                                     ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:870:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("bzip2");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:872:24: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("lzo");
                                                   ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:872:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("lzo");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:874:25: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("lzma");
                                                    ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:874:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("lzma");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:876:25: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("gzip");
                                                    ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:876:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("gzip");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:878:25: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("zpaq");
                                                    ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:878:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("zpaq");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:880:30: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Dunno wtf");
                                                         ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:880:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Dunno wtf");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:885:22: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("\n");
                                          ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
lrzip.c:885:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("\n");
                        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
lrzip.c:931:30: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Compression: ");
                                    ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:933:30: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip alone\n");
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:935:32: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip + bzip2\n");
                                             ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:937:30: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip + lzo\n");
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:939:31: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip + lzma\n");
                                            ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:941:31: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip + gzip\n");
                                            ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:943:31: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("rzip + zpaq\n");
                                            ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:945:29: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("Dunno wtf\n");
                                          ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
lrzip.c:954:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("MD5 used for integrity testing\n");
                                                               ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:959:23: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("MD5: ");
                                    ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
lrzip.c:962:20: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("\n");
                                 ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
lrzip.c:964:52: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_output("CRC32 used for integrity testing\n");
                                                                 ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
In file included from lrzip.c:49:
In file included from ./md5.h:30:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
In file included from lrzip.c:54:
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
172 warnings generated.
  CC     main.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c main.c
In file included from main.c:55:
In file included from ./rzip.h:22:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
main.c:98:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
main.c:103:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
main.c:108:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
main.c:113:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
main.c:163:55: warning: using length modifier 'L' with conversion specifier 'u' is not supported by ISO C [-Wformat-non-iso]
        while(!feof(meminfo) && !fscanf(meminfo, "MemTotal: %Lu kB", &ramsize)) {
                                                            ~^~
main.c:163:55: note: did you mean to use 'll'?
        while(!feof(meminfo) && !fscanf(meminfo, "MemTotal: %Lu kB", &ramsize)) {
                                                             ^
                                                             ll
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:180:54: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Copyright (C) Con Kolivas 2006-2011\n");
                                                            ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:181:31: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Based on rzip ");
                                     ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:182:60: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Copyright (C) Andrew Tridgell 1998-2003\n\n");
                                                                  ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:183:51: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Usage: lrzip [options] <file...>\n");
                                                         ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:184:35: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("General options:\n");
                                         ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:185:86: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -c            check integrity of file written on decompression\n");
                                                                                            ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:186:48: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -d            decompress\n");
                                                      ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:187:96: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -e            password protected sha512/aes128 encryption on compression\n");
                                                                                                      ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:188:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -h|-?         show help\n");
                                                     ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:189:76: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -H            display md5 hash integrity information\n");
                                                                                  ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:190:70: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -i            show compressed file information\n");
                                                                            ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:191:69: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -q            don't show compression progress\n");
                                                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:192:68: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -t            test compressed file integrity\n");
                                                                          ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:193:56: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -v[v]         Increase verbosity\n");
                                                              ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:194:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -V            show version\n");
                                                        ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:195:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Options affecting output:\n");
                                                  ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:196:59: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -D            delete existing files\n");
                                                                 ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:197:75: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -f            force overwrite of any existing files\n");
                                                                                 ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:198:73: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -k            keep broken or damaged output files\n");
                                                                               ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:199:78: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -o filename   specify the output file name and/or path\n");
                                                                                    ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:200:86: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -O directory  specify the output directory when -o is not used\n");
                                                                                            ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:201:80: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -S suffix     specify compressed suffix (default '.lrz')\n");
                                                                                      ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:202:49: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Options affecting compression:\n");
                                                       ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:203:55: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -b            bzip2 compression\n");
                                                             ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:204:65: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -g            gzip compression using zlib\n");
                                                                       ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:205:66: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -l            lzo compression (ultra fast)\n");
                                                                        ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:206:91: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -n            no backend compression - prepare for other compressor\n");
                                                                                                 ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:207:98: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -z            zpaq compression (best, extreme compression, extremely slow)\n");
                                                                                                        ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:208:37: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("Low level options:\n");
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:209:92: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -L level      set lzma/bzip2/gzip compression level (1-9, default 7)\n");
                                                                                                  ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:210:74: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -N value      Set nice value to value (default 19)\n");
                                                                                ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:211:87: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -p value      Set processor count to override number of threads\n");
                                                                                             ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:212:73: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -T            Disable LZO compressibility testing\n");
                                                                               ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:213:104: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -U            Use unlimited window size beyond ramsize (potentially much slower)\n");
                                                                                                              ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:214:82: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("     -w size       maximum compression window in hundreds of MB\n");
                                                                                        ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:215:105: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("                   default chosen by heuristic dependent on ram and chosen compression\n");
                                                                                                               ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:216:98: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("\nLRZIP=NOCONFIG environment variable setting can be used to bypass lrzip.conf.\n");
                                                                                                        ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:217:100: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("TMP environment variable will be used for storage of temporary files when needed.\n");
                                                                                                          ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:218:64: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("TMPDIR may also be stored in lrzip.conf file.\n");
                                                                      ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:219:83: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_output("\nIf no filenames or \"-\" is specified, stdin/out will be used.\n");
                                                                                         ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:248:34: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Show Progress\n");
                                               ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:248:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Show Progress\n");
                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:249:26: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Max ");
                                       ^
main.c:113:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
main.c:115:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:249:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Max ");
                ^
main.c:115:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:250:28: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Verbose\n");
                                         ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:250:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Verbose\n");
                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:252:37: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Overwrite Files\n");
                                                         ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:252:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Overwrite Files\n");
                        ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:254:54: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Remove input files on completion\n");
                                                                          ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:254:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Remove input files on completion\n");
                        ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:260:41: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Test file integrity\n");
                                                             ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:260:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Test file integrity\n");
                        ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:266:41: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Compression mode is: ");
                                                             ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:266:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Compression mode is: ");
                        ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:270:26: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("LZO\n");
                                                     ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:270:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("LZO\n");
                                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:274:27: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("GZIP\n");
                                                      ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:274:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("GZIP\n");
                                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:278:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("RZIP pre-processing only\n");
                                                                          ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:278:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("RZIP pre-processing only\n");
                                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:110:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:293:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Using Unlimited Window size\n");
                                                                             ^
main.c:108:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
main.c:110:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
main.c:293:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Using Unlimited Window size\n");
                                ^
main.c:110:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
main.c:98:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
main.c:99:32: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                      ^
main.c:115:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:115:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
In file included from main.c:55:
In file included from ./rzip.h:22:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
main.c:691:56: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Cannot have -v and -q options. -v wins.\n");
                                                                     ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:696:66: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("If -U used, cannot specify a window size with -w.\n");
                                                                               ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:704:67: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Cannot have -U and stdin, unlimited mode disabled.\n");
                                                                                ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:711:51: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                int level = control.compression_level * 7 / 9 ? : 1;
                                                                ^
main.c:723:51: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_err("Warning, unable to set nice value\n");
                                                                       ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:726:51: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_err("Warning, unable to set nice value\n");
                                                                       ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:776:75: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Will not read stdin from a terminal. Use -f to override.\n");
                                                                                                      ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:781:75: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Will not write stdout to a terminal. Use -f to override.\n");
                                                                                                      ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:789:64: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Can only check file written on decompression.\n");
                                                                                           ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:792:86: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Can't check file written when writing to stdout. Checking disabled.\n");
                                                                                                                 ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
main.c:105:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
main.c:99:34: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control.msgout, format, ##args);        \
                                        ^
185 warnings generated.
  CC     rzip.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c rzip.c
In file included from rzip.c:54:
In file included from ./md5.h:30:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
In file included from rzip.c:57:
./liblrzip.h:53:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
./liblrzip.h:58:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
./liblrzip.h:63:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
./liblrzip.h:68:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
In file included from rzip.c:54:
In file included from ./md5.h:30:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
In file included from rzip.c:57:
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:535:35: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                     primary * 100.0 / (total ? : 1));
                                                ^
./liblrzip.h:54:37: note: expanded from macro 'print_output'
        fprintf(control->msgout, format, ##args);       \
                                           ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:110:51: note: expanded from macro 'fprintf'
  __fprintf_chk (stream, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
                                                  ^
In file included from rzip.c:57:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:630:28: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                              (st->chunk_size ? : 1));
                                                ^
rzip.c:631:35: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                        chunk_pct = p / ((end / 100) ? : 1);
                                                       ^
In file included from rzip.c:57:
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:768:55: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_verbose("Beginning rzip pre-processing phase\n");
                                                             ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
rzip.c:768:2: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_verbose("Beginning rzip pre-processing phase\n");
        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:832:124: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Warning, possibly inadequate free space detected, but attempting to compress due to -f option being used.\n");
                                                                                                                                                       ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
In file included from rzip.c:57:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:934:114: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Compression window is larger than ram, will proceed with unlimited mode possibly much slower\n");
                                                                                                                                      ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
rzip.c:934:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Compression window is larger than ram, will proceed with unlimited mode possibly much slower\n");
                        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
rzip.c:939:39: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Will take 1 pass\n");
                                                                  ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
rzip.c:939:5: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_verbose("Will take 1 pass\n");
                                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:975:55: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                        finish_time = elapsed_time / ((pct_base / 100.0) ? : 1);
                                                                           ^
In file included from rzip.c:57:
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:1015:24: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("MD5: ");
                                            ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:1018:21: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("\n");
                                         ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
rzip.c:1033:81: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
        chunkmbs = (s.st_size / 1024 / 1024) / ((double)(current.tv_sec-start.tv_sec)? : 1);
                                                                                       ^
In file included from rzip.c:57:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
rzip.c:689:21: warning: unused function 'fake_mremap' [-Wunused-function]
static inline void *fake_mremap(void *old_address, size_t old_size, size_t new_size, int flags __UNUSED__)
                    ^
72 warnings generated.
  CC     runzip.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c runzip.c
In file included from runzip.c:43:
In file included from ./md5.h:30:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
In file included from runzip.c:48:
./liblrzip.h:53:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
./liblrzip.h:58:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
./liblrzip.h:63:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
./liblrzip.h:68:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
In file included from runzip.c:43:
In file included from ./md5.h:30:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
runzip.c:181:70: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Trying to read beyond end of tmpoutbuf in read_fdhist\n");
                                                                                   ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
In file included from runzip.c:48:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:60:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:359:64: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
                        (total / 1024 / 1024) / (double)((end.tv_sec-start.tv_sec)? : 1));
                                                                                    ^
./liblrzip.h:60:26: note: expanded from macro 'print_progress'
                print_output(format, ##args);   \
                                       ^
./liblrzip.h:54:37: note: expanded from macro 'print_output'
        fprintf(control->msgout, format, ##args);       \
                                           ^
/usr/include/x86_64-linux-gnu/bits/stdio2.h:110:51: note: expanded from macro 'fprintf'
  __fprintf_chk (stream, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
                                                  ^
runzip.c:379:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                        print_output("MD5 CHECK FAILED.\nStored:");
                                                                                 ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:382:35: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                        print_output("\nOutput file:");
                                                                     ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:390:24: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("MD5: ");
                                            ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:393:21: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("\n");
                                         ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
runzip.c:412:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                        print_output("MD5 CHECK FAILED.\nStored:");
                                                                                 ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:415:35: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                        print_output("\nOutput file:");
                                                                     ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
runzip.c:420:66: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_output("MD5 integrity of written file matches archive\n");
                                                                                      ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
runzip.c:424:36: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                "calculated on decompression\n");
                                                               ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
In file included from runzip.c:47:
./lrzip.h:40:13: warning: inline function 'clear_tmpinfile' is not defined [-Wundefined-inline]
inline void clear_tmpinfile(rzip_control *control);
            ^
runzip.c:353:4: note: used here
                        clear_tmpinfile(control);
                        ^
44 warnings generated.
  CC     stream.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c stream.c
In file included from stream.c:61:
In file included from ./util.h:22:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
In file included from stream.c:63:
./liblrzip.h:53:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
./liblrzip.h:58:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
./liblrzip.h:63:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
./liblrzip.h:68:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
stream.c:228:56: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Failed to fmemopen in zpaq_compress_buf\n");
                                                                     ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:234:69: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Failed to open_memstream in zpaq_compress_buf\n");
                                                                                  ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:234:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Failed to open_memstream in zpaq_compress_buf\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:248:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:248:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:272:63: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Unable to allocate c_buf in bzip2_compress_buf\n");
                                                                            ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:284:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:284:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:292:43: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("BZ2 compress failed\n");
                                                        ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:292:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("BZ2 compress failed\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:297:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:297:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:318:62: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Unable to allocate c_buf in gzip_compress_buf\n");
                                                                           ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:329:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:329:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:337:40: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("compress2 failed\n");
                                                     ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:337:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("compress2 failed\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:342:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:342:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:366:52: warning: use of GNU ?: conditional expression extension, omitting middle operand [-Wgnu-conditional-omitted-operand]
        lzma_level = control->compression_level * 7 / 9 ? : 1;
                                                          ^
stream.c:368:67: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_maxverbose("Starting lzma back end compression thread...\n");
                                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:368:2: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
        print_maxverbose("Starting lzma back end compression thread...\n");
        ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:373:62: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Unable to allocate c_buf in lzma_compress_buf\n");
                                                                           ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
In file included from stream.c:63:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
In file included from stream.c:61:
In file included from ./util.h:22:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
In file included from stream.c:63:
./liblrzip.h:65:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:414:120: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Unable to allocate enough RAM for any sized compression window, falling back to bzip2 compression.\n");
                                                                                                                                            ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:414:4: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_verbose("Unable to allocate enough RAM for any sized compression window, falling back to bzip2 compression.\n");
                        ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:423:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:423:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:445:46: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Failed to malloc wkmem\n");
                                                           ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:445:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Failed to malloc wkmem\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:451:59: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Unable to allocate c_buf in lzo_compress_buf");
                                                                        ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:462:44: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                                                         ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:462:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Incompressible block\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
stream.c:492:58: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Failed to fmemopen in zpaq_decompress_buf\n");
                                                                       ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:497:64: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Failed to open_memstream in zpaq_decompress_buf\n");
                                                                             ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
stream.c:677:82: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Unable to decompress entirely in ram, will use physical files\n");
                                                                                               ^
./liblrzip.h:63:9: note: macro 'print_verbose' defined here
#define print_verbose(format, args...)  do {\
        ^
./liblrzip.h:65:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:677:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_verbose("Unable to decompress entirely in ram, will use physical files\n");
                ^
./liblrzip.h:65:30: note: expanded from macro 'print_verbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
In file included from stream.c:61:
In file included from ./util.h:22:
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
In file included from stream.c:63:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:1120:59: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_err("Failed to read eof flag in open_stream_in\n");
                                                                               ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
In file included from stream.c:63:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:1129:65: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Failed to read in chunk size in open_stream_in\n");
                                                                                            ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
In file included from stream.c:63:
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:1195:50: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                        print_err("Enabling stream close workaround\n");
                                                                      ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
stream.c:1203:34: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                                print_err("Wrong password?\n");
                                                             ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                                ^
./lrzip_private.h:180:26: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
stream.c:1279:60: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Warning, unable to set nice value on thread\n");
                                                                         ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:1328:115: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Unable to compress in parallel, waiting for previous thread to complete before trying again\n");
                                                                                                                                ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:1328:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Unable to compress in parallel, waiting for previous thread to complete before trying again\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:1497:60: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_err("Warning, unable to set nice value on thread\n");
                                                                         ^
./lrzip_private.h:179:9: note: macro 'print_err' defined here
#define print_err(format, args...)      do {\
        ^
./lrzip_private.h:180:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(stderr, format, ##args);        \
                              ^
stream.c:1528:117: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Unable to decompress in parallel, waiting for previous thread to complete before trying again\n");
                                                                                                                                  ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
stream.c:1528:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Unable to decompress in parallel, waiting for previous thread to complete before trying again\n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
stream.c:162:21: warning: unused function 'fake_fmemopen' [-Wunused-function]
static inline FILE *fake_fmemopen(void *buf, size_t buflen, char *mode)
                    ^
stream.c:177:21: warning: unused function 'fake_open_memstream' [-Wunused-function]
static inline FILE *fake_open_memstream(char **buf, size_t *length)
                    ^
stream.c:189:19: warning: unused function 'fake_open_memstream_update_buffer' [-Wunused-function]
static inline int fake_open_memstream_update_buffer(FILE *fp, uchar **buf, size_t *length)
                  ^
stream.c:830:19: warning: unused function 'read_i64' [-Wunused-function]
static inline int read_i64(rzip_control *control, int f, i64 *v)
                  ^
174 warnings generated.
  CC     util.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c util.c
In file included from util.c:54:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
In file included from util.c:55:
./liblrzip.h:53:34: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_output(format, args...)   do {\
                                 ^
./liblrzip.h:58:36: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_progress(format, args...) do {\
                                   ^
./liblrzip.h:63:35: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_verbose(format, args...)  do {\
                                  ^
./liblrzip.h:68:38: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_maxverbose(format, args...)       do {\
                                     ^
util.c:207:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Encrypting data        \n");
                                                            ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
util.c:207:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Encrypting data        \n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
util.c:223:47: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Decrypting data        \n");
                                                            ^
./liblrzip.h:68:9: note: macro 'print_maxverbose' defined here
#define print_maxverbose(format, args...)       do {\
        ^
./liblrzip.h:70:22: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                   ^
util.c:223:3: warning: must specify at least one argument for '...' parameter of variadic macro [-Wgnu-zero-variadic-macro-arguments]
                print_maxverbose("Decrypting data        \n");
                ^
./liblrzip.h:70:30: note: expanded from macro 'print_maxverbose'
                print_output(format, ##args);   \
                                           ^
./liblrzip.h:53:9: note: macro 'print_output' defined here
#define print_output(format, args...)   do {\
        ^
./liblrzip.h:54:33: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                       ^
./liblrzip.h:70:24: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
                print_output(format, ##args);   \
                                     ^
./liblrzip.h:54:35: warning: token pasting of ',' and __VA_ARGS__ is a GNU extension [-Wgnu-zero-variadic-macro-arguments]
        fprintf(control->msgout, format, ##args);       \
                                         ^
15 warnings generated.
  CC     md5.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c md5.c
In file included from md5.c:33:
In file included from ./md5.h:30:
./lrzip_private.h:179:31: warning: named variadic macros are a GNU extension [-Wvariadic-macros]
#define print_err(format, args...)      do {\
                              ^
1 warning generated.
  CC     aes.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c aes.c
  CC     sha4.o
gcc -DHAVE_CONFIG_H -I.   -D_FORTIFY_SOURCE=2 -I lzma/C -DNDEBUG -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -pedantic -c sha4.c
  CXXLD  lrzip
runzip.o: In function `runzip_fd':
/«PKGBUILDDIR»/runzip.c:351: undefined reference to `clear_tmpinbuf'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[4]: *** [lrzip] Error 1
make[4]: Leaving directory `/«PKGBUILDDIR»'
make[3]: *** [all-recursive] Error 1
make[2]: *** [all] Error 2
make[1]: *** [override_dh_auto_build] Error 2
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[2]: Leaving directory `/«PKGBUILDDIR»'
make[1]: Leaving directory `/«PKGBUILDDIR»'
make: *** [build-arch] Error 2
dpkg-buildpackage: error: debian/rules build-arch gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20140106-0824

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Build Architecture: amd64
Build-Space: 5520
Build-Time: 28
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 11
Job: lrzip_0.608-2
Machine Architecture: amd64
Package: lrzip
Package-Time: 91
Source-Version: 0.608-2
Space: 5520
Status: attempted
Version: 0.608-2clang1
────────────────────────────────────────────────────────────────────────────────
Finished at 20140106-0824
Build needed 00:01:31, 5520k disc space
DC-Status: Failed 92.277882346s
