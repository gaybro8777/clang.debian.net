DC-Build-Header: libbpp-phyl 2.1.0-1 / 2013-07-15 18:38:39 +0000
DC-Task: source:libbpp-phyl version:2.1.0-1 architecture:any chroot:unstable esttime:1344 logfile:/tmp/libbpp-phyl_2.1.0-1_unstable_clang.log modes:binary-only:clang
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang --append-to-version "clang1" --maintainer "Lucas Nussbaum <lucas@debian.org>" --uploader "Lucas Nussbaum <lucas@debian.org>" libbpp-phyl_2.1.0-1'
sbuild (Debian sbuild) 0.63.2 (18 Aug 2012) on ip-10-235-1-44.ec2.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ libbpp-phyl 2.1.0-1clang1 (amd64)                          15 Jul 2013 18:38 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: libbpp-phyl
Version: 2.1.0-1clang1
Source Version: 2.1.0-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64

I: NOTICE: Log filtering will replace 'build/libbpp-phyl-geXS7K/libbpp-phyl-2.1.0' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/libbpp-phyl-geXS7K' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-9034cb9f-aaff-4725-b4f1-ef61ab5989d5' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Get:1 http://localhost:9999 unstable InRelease [204 kB]
Get:2 http://localhost:9999 unstable/main Sources/DiffIndex [7876 B]
Get:3 http://localhost:9999 unstable/main amd64 Packages/DiffIndex [7876 B]
Get:4 http://localhost:9999 unstable/main Translation-en/DiffIndex [7876 B]
Get:5 http://localhost:9999 unstable/main 2013-07-13-2032.15.pdiff [23.1 kB]
Get:6 http://localhost:9999 unstable/main amd64 2013-07-13-2032.15.pdiff [16.9 kB]
Get:7 http://localhost:9999 unstable/main 2013-07-13-2032.15.pdiff [23.1 kB]
Get:8 http://localhost:9999 unstable/main 2013-07-13-2032.15.pdiff [1809 B]
Get:9 http://localhost:9999 unstable/main amd64 2013-07-13-2032.15.pdiff [16.9 kB]
Get:10 http://localhost:9999 unstable/main 2013-07-14-0231.07.pdiff [12.9 kB]
Get:11 http://localhost:9999 unstable/main 2013-07-13-2032.15.pdiff [1809 B]
Get:12 http://localhost:9999 unstable/main amd64 2013-07-14-0231.07.pdiff [14.9 kB]
Get:13 http://localhost:9999 unstable/main 2013-07-14-0231.07.pdiff [12.9 kB]
Get:14 http://localhost:9999 unstable/main 2013-07-14-0231.07.pdiff [1384 B]
Get:15 http://localhost:9999 unstable/main amd64 2013-07-14-0231.07.pdiff [14.9 kB]
Get:16 http://localhost:9999 unstable/main 2013-07-14-0832.16.pdiff [4670 B]
Get:17 http://localhost:9999 unstable/main 2013-07-14-0231.07.pdiff [1384 B]
Get:18 http://localhost:9999 unstable/main amd64 2013-07-14-0832.16.pdiff [1624 B]
Get:19 http://localhost:9999 unstable/main 2013-07-14-0832.16.pdiff [4670 B]
Get:20 http://localhost:9999 unstable/main 2013-07-14-0832.16.pdiff [337 B]
Get:21 http://localhost:9999 unstable/main amd64 2013-07-14-0832.16.pdiff [1624 B]
Get:22 http://localhost:9999 unstable/main 2013-07-14-1431.18.pdiff [11.4 kB]
Get:23 http://localhost:9999 unstable/main 2013-07-14-0832.16.pdiff [337 B]
Get:24 http://localhost:9999 unstable/main amd64 2013-07-14-1431.18.pdiff [8223 B]
Get:25 http://localhost:9999 unstable/main 2013-07-14-1431.18.pdiff [11.4 kB]
Get:26 http://localhost:9999 unstable/main 2013-07-14-1431.18.pdiff [887 B]
Get:27 http://localhost:9999 unstable/main amd64 2013-07-14-1431.18.pdiff [8223 B]
Get:28 http://localhost:9999 unstable/main 2013-07-14-2031.21.pdiff [9038 B]
Get:29 http://localhost:9999 unstable/main 2013-07-14-1431.18.pdiff [887 B]
Get:30 http://localhost:9999 unstable/main amd64 2013-07-14-2031.21.pdiff [9955 B]
Get:31 http://localhost:9999 unstable/main 2013-07-14-2031.21.pdiff [9038 B]
Get:32 http://localhost:9999 unstable/main 2013-07-14-2031.21.pdiff [2736 B]
Get:33 http://localhost:9999 unstable/main amd64 2013-07-14-2031.21.pdiff [9955 B]
Get:34 http://localhost:9999 unstable/main 2013-07-15-0229.01.pdiff [9715 B]
Get:35 http://localhost:9999 unstable/main 2013-07-14-2031.21.pdiff [2736 B]
Get:36 http://localhost:9999 unstable/main amd64 2013-07-15-0229.01.pdiff [12.7 kB]
Get:37 http://localhost:9999 unstable/main 2013-07-15-0229.01.pdiff [9715 B]
Get:38 http://localhost:9999 unstable/main 2013-07-15-0229.01.pdiff [2239 B]
Get:39 http://localhost:9999 unstable/main amd64 2013-07-15-0229.01.pdiff [12.7 kB]
Get:40 http://localhost:9999 unstable/main 2013-07-15-0830.19.pdiff [3273 B]
Get:41 http://localhost:9999 unstable/main 2013-07-15-0229.01.pdiff [2239 B]
Get:42 http://localhost:9999 unstable/main amd64 2013-07-15-0830.19.pdiff [3964 B]
Get:43 http://localhost:9999 unstable/main 2013-07-15-0830.19.pdiff [3273 B]
Get:44 http://localhost:9999 unstable/main 2013-07-15-0830.19.pdiff [1357 B]
Get:45 http://localhost:9999 unstable/main amd64 2013-07-15-0830.19.pdiff [3964 B]
Get:46 http://localhost:9999 unstable/main 2013-07-15-1432.36.pdiff [5326 B]
Get:47 http://localhost:9999 unstable/main 2013-07-15-0830.19.pdiff [1357 B]
Get:48 http://localhost:9999 unstable/main amd64 2013-07-15-1432.36.pdiff [9809 B]
Get:49 http://localhost:9999 unstable/main 2013-07-15-1432.36.pdiff [5326 B]
Get:50 http://localhost:9999 unstable/main 2013-07-15-1432.36.pdiff [322 B]
Get:51 http://localhost:9999 unstable/main amd64 2013-07-15-1432.36.pdiff [9809 B]
Get:52 http://localhost:9999 unstable/main 2013-07-15-1432.36.pdiff [322 B]
Fetched 397 kB in 31s (12.6 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be upgraded:
  initscripts sysv-rc sysvinit sysvinit-utils
4 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 405 kB of archives.
After this operation, 20.5 kB disk space will be freed.
Get:1 http://localhost:9999/debian/ unstable/main sysvinit amd64 2.88dsf-42 [134 kB]
Get:2 http://localhost:9999/debian/ unstable/main sysv-rc all 2.88dsf-42 [80.4 kB]
Get:3 http://localhost:9999/debian/ unstable/main sysvinit-utils amd64 2.88dsf-42 [103 kB]
Get:4 http://localhost:9999/debian/ unstable/main initscripts amd64 2.88dsf-42 [87.1 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 405 kB in 0s (2973 kB/s)
(Reading database ... 13844 files and directories currently installed.)
Preparing to replace sysvinit 2.88dsf-41 (using .../sysvinit_2.88dsf-42_amd64.deb) ...
Unpacking replacement sysvinit ...
Setting up sysvinit (2.88dsf-42) ...
Not restarting sysvinit
(Reading database ... 13844 files and directories currently installed.)
Preparing to replace sysv-rc 2.88dsf-41 (using .../sysv-rc_2.88dsf-42_all.deb) ...
Unpacking replacement sysv-rc ...
Preparing to replace sysvinit-utils 2.88dsf-41 (using .../sysvinit-utils_2.88dsf-42_amd64.deb) ...
Unpacking replacement sysvinit-utils ...
Setting up sysvinit-utils (2.88dsf-42) ...
Setting up sysv-rc (2.88dsf-42) ...
(Reading database ... 13844 files and directories currently installed.)
Preparing to replace initscripts 2.88dsf-41 (using .../initscripts_2.88dsf-42_amd64.deb) ...
Removing unmodified and obsolete conffile /etc/init.d/mtab.sh ...
Unpacking replacement initscripts ...
Setting up initscripts (2.88dsf-42) ...
Installing new version of config file /etc/init.d/bootmisc.sh ...
Installing new version of config file /etc/init.d/checkfs.sh ...
Installing new version of config file /etc/init.d/checkroot.sh ...
Installing new version of config file /etc/init.d/checkroot-bootclean.sh ...
Installing new version of config file /etc/init.d/mountdevsubfs.sh ...
Installing new version of config file /etc/init.d/mountkernfs.sh ...
Installing new version of config file /etc/init.d/rmnologin ...
Installing new version of config file /etc/network/if-up.d/mountnfs ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 574 kB of source archives.
Get:1 http://localhost:9999/debian/ unstable/main libbpp-phyl 2.1.0-1 (dsc) [1117 B]
Get:2 http://localhost:9999/debian/ unstable/main libbpp-phyl 2.1.0-1 (tar) [568 kB]
Get:3 http://localhost:9999/debian/ unstable/main libbpp-phyl 2.1.0-1 (diff) [4697 B]
Fetched 574 kB in 0s (2048 kB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ echo 'Install of clang'
Install of clang
+ apt-get update
Hit http://localhost:9999 unstable InRelease
Hit http://localhost:9999 unstable/main Sources/DiffIndex
Hit http://localhost:9999 unstable/main amd64 Packages/DiffIndex
Hit http://localhost:9999 unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-3.3
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-3.3-dev libclang1-3.3 libffi6 libllvm3.3 libobjc-4.7-dev
  libobjc4 libstdc++6-4.7-dev
Suggested packages:
  libstdc++6-4.7-doc
Recommended packages:
  llvm-3.3-dev python
The following NEW packages will be installed:
  clang-3.3 libclang-common-3.3-dev libclang1-3.3 libffi6 libllvm3.3
  libobjc-4.7-dev libobjc4 libstdc++6-4.7-dev
0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
Need to get 27.2 MB of archives.
After this operation, 80.8 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libffi6 amd64 3.0.13-4 [21.6 kB]
Get:2 http://localhost:9999/debian/ unstable/main libllvm3.3 amd64 1:3.3-3 [8575 kB]
Get:3 http://localhost:9999/debian/ unstable/main libobjc4 amd64 4.8.1-6 [160 kB]
Get:4 http://localhost:9999/debian/ unstable/main libstdc++6-4.7-dev amd64 4.7.3-5 [1695 kB]
Get:5 http://localhost:9999/debian/ unstable/main libobjc-4.7-dev amd64 4.7.3-5 [719 kB]
Get:6 http://localhost:9999/debian/ unstable/main libclang-common-3.3-dev amd64 1:3.3-3 [574 kB]
Get:7 http://localhost:9999/debian/ unstable/main libclang1-3.3 amd64 1:3.3-3 [4579 kB]
Get:8 http://localhost:9999/debian/ unstable/main clang-3.3 amd64 1:3.3-3 [10.9 MB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 27.2 MB in 1s (23.6 MB/s)
Selecting previously unselected package libffi6:amd64.
(Reading database ... 13843 files and directories currently installed.)
Unpacking libffi6:amd64 (from .../libffi6_3.0.13-4_amd64.deb) ...
Selecting previously unselected package libllvm3.3:amd64.
Unpacking libllvm3.3:amd64 (from .../libllvm3.3_1%3a3.3-3_amd64.deb) ...
Selecting previously unselected package libobjc4:amd64.
Unpacking libobjc4:amd64 (from .../libobjc4_4.8.1-6_amd64.deb) ...
Selecting previously unselected package libstdc++6-4.7-dev:amd64.
Unpacking libstdc++6-4.7-dev:amd64 (from .../libstdc++6-4.7-dev_4.7.3-5_amd64.deb) ...
Selecting previously unselected package libobjc-4.7-dev:amd64.
Unpacking libobjc-4.7-dev:amd64 (from .../libobjc-4.7-dev_4.7.3-5_amd64.deb) ...
Selecting previously unselected package libclang-common-3.3-dev.
Unpacking libclang-common-3.3-dev (from .../libclang-common-3.3-dev_1%3a3.3-3_amd64.deb) ...
Selecting previously unselected package libclang1-3.3.
Unpacking libclang1-3.3 (from .../libclang1-3.3_1%3a3.3-3_amd64.deb) ...
Selecting previously unselected package clang-3.3.
Unpacking clang-3.3 (from .../clang-3.3_1%3a3.3-3_amd64.deb) ...
Setting up libffi6:amd64 (3.0.13-4) ...
Setting up libllvm3.3:amd64 (1:3.3-3) ...
Setting up libobjc4:amd64 (4.8.1-6) ...
Setting up libstdc++6-4.7-dev:amd64 (4.7.3-5) ...
Setting up libobjc-4.7-dev:amd64 (4.7.3-5) ...
Setting up libclang-common-3.3-dev (1:3.3-3) ...
Setting up libclang1-3.3 (1:3.3-3) ...
Setting up clang-3.3 (1:3.3-3) ...
Processing triggers for libc-bin ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8'
+ cd /usr/bin
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.6 gcc-4.6 cpp-4.6
+ ln -s clang++ g++-4.6
+ ln -s clang gcc-4.6
+ ln -s clang cpp-4.6
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ for VERSION in '$VERSIONS'
+ rm -f g++-4.8 gcc-4.8 cpp-4.8
+ ln -s clang++ g++-4.8
+ ln -s clang gcc-4.8
+ ln -s clang cpp-4.8
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
+ echo 'cpp-4.8 hold'
+ dpkg --set-selections
+ echo 'g++-4.8 hold'
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-vgAHn2/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/710 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 14698 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5), cmake (>= 2.6), libbpp-seq-dev (>= 2.1.0)
Filtered Build-Depends: base-files, base-passwd, bash, bsdutils, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, libc-bin, login, mount, ncurses-base, ncurses-bin, perl-base, sed, sysvinit, sysvinit-utils, tar, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5), cmake (>= 2.6), libbpp-seq-dev (>= 2.1.0)
dpkg-deb: building package `sbuild-build-depends-libbpp-phyl-dummy' in `/«BUILDDIR»/resolver-60dVz6/apt_archive/sbuild-build-depends-libbpp-phyl-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install libbpp-phyl build dependencies (apt-based resolver)                  │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  bsdmainutils cmake cmake-data debhelper emacsen-common file gettext
  gettext-base groff-base intltool-debian libarchive13 libasprintf0c2
  libbpp-core-dev libbpp-core2 libbpp-seq-dev libbpp-seq9 libcroco3
  libcurl3-gnutls libexpat1 libgcrypt11 libglib2.0-0 libgnutls26 libgpg-error0
  libgssapi-krb5-2 libidn11 libk5crypto3 libkeyutils1 libkrb5-3
  libkrb5support0 libldap-2.4-2 liblzo2-2 libmagic1 libncursesw5 libnettle4
  libp11-kit0 libpipeline1 libprocps1 librtmp0 libsasl2-2 libsasl2-modules
  libssh2-1 libssl1.0.0 libtasn1-3 libunistring0 libxml2 man-db po-debconf
  procps
Suggested packages:
  wamerican wordlist whois vacation codeblocks eclipse dh-make gettext-doc
  groff lrzip rng-tools krb5-doc krb5-user libsasl2-modules-otp
  libsasl2-modules-ldap libsasl2-modules-sql libsasl2-modules-gssapi-mit
  libsasl2-modules-gssapi-heimdal less www-browser libmail-box-perl
Recommended packages:
  curl wget lynx-cur autopoint libasprintf-dev libgettextpo-dev
  ca-certificates libglib2.0-data shared-mime-info krb5-locales xml-core
  libmail-sendmail-perl psmisc
The following NEW packages will be installed:
  bsdmainutils cmake cmake-data debhelper emacsen-common file gettext
  gettext-base groff-base intltool-debian libarchive13 libasprintf0c2
  libbpp-core-dev libbpp-core2 libbpp-seq-dev libbpp-seq9 libcroco3
  libcurl3-gnutls libexpat1 libgcrypt11 libglib2.0-0 libgnutls26 libgpg-error0
  libgssapi-krb5-2 libidn11 libk5crypto3 libkeyutils1 libkrb5-3
  libkrb5support0 libldap-2.4-2 liblzo2-2 libmagic1 libncursesw5 libnettle4
  libp11-kit0 libpipeline1 libprocps1 librtmp0 libsasl2-2 libsasl2-modules
  libssh2-1 libssl1.0.0 libtasn1-3 libunistring0 libxml2 man-db po-debconf
  procps sbuild-build-depends-libbpp-phyl-dummy
0 upgraded, 49 newly installed, 0 to remove and 0 not upgraded.
Need to get 24.8 MB/24.8 MB of archives.
After this operation, 71.8 MB of additional disk space will be used.
Get:1 http://localhost:9999/debian/ unstable/main libncursesw5 amd64 5.9+20130608-1 [141 kB]
Get:2 http://localhost:9999/debian/ unstable/main libpipeline1 amd64 1.2.4-1 [41.0 kB]
Get:3 http://localhost:9999/debian/ unstable/main libprocps1 amd64 1:3.3.8-2 [59.8 kB]
Get:4 http://localhost:9999/debian/ unstable/main libssl1.0.0 amd64 1.0.1e-3 [1242 kB]
Get:5 http://localhost:9999/debian/ unstable/main groff-base amd64 1.22.2-3 [747 kB]
Get:6 http://localhost:9999/debian/ unstable/main bsdmainutils amd64 9.0.5 [211 kB]
Get:7 http://localhost:9999/debian/ unstable/main man-db amd64 2.6.5-2 [976 kB]
Get:8 http://localhost:9999/debian/ unstable/main libasprintf0c2 amd64 0.18.2.1-1 [28.9 kB]
Get:9 http://localhost:9999/debian/ unstable/main libgpg-error0 amd64 1.10-3.1 [77.9 kB]
Get:10 http://localhost:9999/debian/ unstable/main libgcrypt11 amd64 1.5.2-3 [296 kB]
Get:11 http://localhost:9999/debian/ unstable/main libp11-kit0 amd64 0.18.4-1 [115 kB]
Get:12 http://localhost:9999/debian/ unstable/main libtasn1-3 amd64 2.14-3 [68.5 kB]
Get:13 http://localhost:9999/debian/ unstable/main libgnutls26 amd64 2.12.23-5 [617 kB]
Get:14 http://localhost:9999/debian/ unstable/main libkeyutils1 amd64 1.5.5-7 [8808 B]
Get:15 http://localhost:9999/debian/ unstable/main libkrb5support0 amd64 1.10.1+dfsg-6.1 [49.3 kB]
Get:16 http://localhost:9999/debian/ unstable/main libk5crypto3 amd64 1.10.1+dfsg-6.1 [112 kB]
Get:17 http://localhost:9999/debian/ unstable/main libkrb5-3 amd64 1.10.1+dfsg-6.1 [392 kB]
Get:18 http://localhost:9999/debian/ unstable/main libgssapi-krb5-2 amd64 1.10.1+dfsg-6.1 [147 kB]
Get:19 http://localhost:9999/debian/ unstable/main libidn11 amd64 1.25-2 [178 kB]
Get:20 http://localhost:9999/debian/ unstable/main libsasl2-modules amd64 2.1.25.dfsg1-13 [123 kB]
Get:21 http://localhost:9999/debian/ unstable/main libsasl2-2 amd64 2.1.25.dfsg1-13 [109 kB]
Get:22 http://localhost:9999/debian/ unstable/main libldap-2.4-2 amd64 2.4.31-1+nmu2 [243 kB]
Get:23 http://localhost:9999/debian/ unstable/main libmagic1 amd64 1:5.14-2 [216 kB]
Get:24 http://localhost:9999/debian/ unstable/main libxml2 amd64 2.9.1+dfsg1-2 [911 kB]
Get:25 http://localhost:9999/debian/ unstable/main liblzo2-2 amd64 2.06-1 [57.7 kB]
Get:26 http://localhost:9999/debian/ unstable/main libnettle4 amd64 2.7.1-1 [189 kB]
Get:27 http://localhost:9999/debian/ unstable/main libarchive13 amd64 3.1.2-7 [319 kB]
Get:28 http://localhost:9999/debian/ unstable/main libglib2.0-0 amd64 2.36.3-3 [2048 kB]
Get:29 http://localhost:9999/debian/ unstable/main libcroco3 amd64 0.6.8-2 [133 kB]
Get:30 http://localhost:9999/debian/ unstable/main librtmp0 amd64 2.4+20121230.gitdf6c518-1 [62.3 kB]
Get:31 http://localhost:9999/debian/ unstable/main libssh2-1 amd64 1.4.3-1 [135 kB]
Get:32 http://localhost:9999/debian/ unstable/main libcurl3-gnutls amd64 7.31.0-2 [279 kB]
Get:33 http://localhost:9999/debian/ unstable/main libexpat1 amd64 2.1.0-4 [138 kB]
Get:34 http://localhost:9999/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:35 http://localhost:9999/debian/ unstable/main procps amd64 1:3.3.8-2 [274 kB]
Get:36 http://localhost:9999/debian/ unstable/main file amd64 1:5.14-2 [54.0 kB]
Get:37 http://localhost:9999/debian/ unstable/main gettext-base amd64 0.18.2.1-1 [156 kB]
Get:38 http://localhost:9999/debian/ unstable/main emacsen-common all 2.0.5 [20.9 kB]
Get:39 http://localhost:9999/debian/ unstable/main cmake-data all 2.8.11.2-1 [1397 kB]
Get:40 http://localhost:9999/debian/ unstable/main cmake amd64 2.8.11.2-1 [5129 kB]
Get:41 http://localhost:9999/debian/ unstable/main gettext amd64 0.18.2.1-1 [2019 kB]
Get:42 http://localhost:9999/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:43 http://localhost:9999/debian/ unstable/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:44 http://localhost:9999/debian/ unstable/main debhelper all 9.20130630 [710 kB]
Get:45 http://localhost:9999/debian/ unstable/main libbpp-core2 amd64 2.1.0-1 [613 kB]
Get:46 http://localhost:9999/debian/ unstable/main libbpp-core-dev amd64 2.1.0-1 [1476 kB]
Get:47 http://localhost:9999/debian/ unstable/main libbpp-seq9 amd64 2.1.0-1 [515 kB]
Get:48 http://localhost:9999/debian/ unstable/main libbpp-seq-dev amd64 2.1.0-1 [1310 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 24.8 MB in 2s (12.4 MB/s)
Selecting previously unselected package libncursesw5:amd64.
(Reading database ... 14698 files and directories currently installed.)
Unpacking libncursesw5:amd64 (from .../libncursesw5_5.9+20130608-1_amd64.deb) ...
Selecting previously unselected package libpipeline1:amd64.
Unpacking libpipeline1:amd64 (from .../libpipeline1_1.2.4-1_amd64.deb) ...
Selecting previously unselected package libprocps1:amd64.
Unpacking libprocps1:amd64 (from .../libprocps1_1%3a3.3.8-2_amd64.deb) ...
Selecting previously unselected package libssl1.0.0:amd64.
Unpacking libssl1.0.0:amd64 (from .../libssl1.0.0_1.0.1e-3_amd64.deb) ...
Selecting previously unselected package groff-base.
Unpacking groff-base (from .../groff-base_1.22.2-3_amd64.deb) ...
Selecting previously unselected package bsdmainutils.
Unpacking bsdmainutils (from .../bsdmainutils_9.0.5_amd64.deb) ...
Selecting previously unselected package man-db.
Unpacking man-db (from .../man-db_2.6.5-2_amd64.deb) ...
Selecting previously unselected package libasprintf0c2:amd64.
Unpacking libasprintf0c2:amd64 (from .../libasprintf0c2_0.18.2.1-1_amd64.deb) ...
Selecting previously unselected package libgpg-error0:amd64.
Unpacking libgpg-error0:amd64 (from .../libgpg-error0_1.10-3.1_amd64.deb) ...
Selecting previously unselected package libgcrypt11:amd64.
Unpacking libgcrypt11:amd64 (from .../libgcrypt11_1.5.2-3_amd64.deb) ...
Selecting previously unselected package libp11-kit0:amd64.
Unpacking libp11-kit0:amd64 (from .../libp11-kit0_0.18.4-1_amd64.deb) ...
Selecting previously unselected package libtasn1-3:amd64.
Unpacking libtasn1-3:amd64 (from .../libtasn1-3_2.14-3_amd64.deb) ...
Selecting previously unselected package libgnutls26:amd64.
Unpacking libgnutls26:amd64 (from .../libgnutls26_2.12.23-5_amd64.deb) ...
Selecting previously unselected package libkeyutils1:amd64.
Unpacking libkeyutils1:amd64 (from .../libkeyutils1_1.5.5-7_amd64.deb) ...
Selecting previously unselected package libkrb5support0:amd64.
Unpacking libkrb5support0:amd64 (from .../libkrb5support0_1.10.1+dfsg-6.1_amd64.deb) ...
Selecting previously unselected package libk5crypto3:amd64.
Unpacking libk5crypto3:amd64 (from .../libk5crypto3_1.10.1+dfsg-6.1_amd64.deb) ...
Selecting previously unselected package libkrb5-3:amd64.
Unpacking libkrb5-3:amd64 (from .../libkrb5-3_1.10.1+dfsg-6.1_amd64.deb) ...
Selecting previously unselected package libgssapi-krb5-2:amd64.
Unpacking libgssapi-krb5-2:amd64 (from .../libgssapi-krb5-2_1.10.1+dfsg-6.1_amd64.deb) ...
Selecting previously unselected package libidn11:amd64.
Unpacking libidn11:amd64 (from .../libidn11_1.25-2_amd64.deb) ...
Selecting previously unselected package libsasl2-modules:amd64.
Unpacking libsasl2-modules:amd64 (from .../libsasl2-modules_2.1.25.dfsg1-13_amd64.deb) ...
Selecting previously unselected package libsasl2-2:amd64.
Unpacking libsasl2-2:amd64 (from .../libsasl2-2_2.1.25.dfsg1-13_amd64.deb) ...
Selecting previously unselected package libldap-2.4-2:amd64.
Unpacking libldap-2.4-2:amd64 (from .../libldap-2.4-2_2.4.31-1+nmu2_amd64.deb) ...
Selecting previously unselected package libmagic1:amd64.
Unpacking libmagic1:amd64 (from .../libmagic1_1%3a5.14-2_amd64.deb) ...
Selecting previously unselected package libxml2:amd64.
Unpacking libxml2:amd64 (from .../libxml2_2.9.1+dfsg1-2_amd64.deb) ...
Selecting previously unselected package liblzo2-2:amd64.
Unpacking liblzo2-2:amd64 (from .../liblzo2-2_2.06-1_amd64.deb) ...
Selecting previously unselected package libnettle4:amd64.
Unpacking libnettle4:amd64 (from .../libnettle4_2.7.1-1_amd64.deb) ...
Selecting previously unselected package libarchive13:amd64.
Unpacking libarchive13:amd64 (from .../libarchive13_3.1.2-7_amd64.deb) ...
Selecting previously unselected package libglib2.0-0:amd64.
Unpacking libglib2.0-0:amd64 (from .../libglib2.0-0_2.36.3-3_amd64.deb) ...
Selecting previously unselected package libcroco3:amd64.
Unpacking libcroco3:amd64 (from .../libcroco3_0.6.8-2_amd64.deb) ...
Selecting previously unselected package librtmp0:amd64.
Unpacking librtmp0:amd64 (from .../librtmp0_2.4+20121230.gitdf6c518-1_amd64.deb) ...
Selecting previously unselected package libssh2-1:amd64.
Unpacking libssh2-1:amd64 (from .../libssh2-1_1.4.3-1_amd64.deb) ...
Selecting previously unselected package libcurl3-gnutls:amd64.
Unpacking libcurl3-gnutls:amd64 (from .../libcurl3-gnutls_7.31.0-2_amd64.deb) ...
Selecting previously unselected package libexpat1:amd64.
Unpacking libexpat1:amd64 (from .../libexpat1_2.1.0-4_amd64.deb) ...
Selecting previously unselected package libunistring0:amd64.
Unpacking libunistring0:amd64 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package procps.
Unpacking procps (from .../procps_1%3a3.3.8-2_amd64.deb) ...
Selecting previously unselected package file.
Unpacking file (from .../file_1%3a5.14-2_amd64.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.2.1-1_amd64.deb) ...
Selecting previously unselected package emacsen-common.
Unpacking emacsen-common (from .../emacsen-common_2.0.5_all.deb) ...
Selecting previously unselected package cmake-data.
Unpacking cmake-data (from .../cmake-data_2.8.11.2-1_all.deb) ...
Selecting previously unselected package cmake.
Unpacking cmake (from .../cmake_2.8.11.2-1_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.2.1-1_amd64.deb) ...
Selecting previously unselected package intltool-debian.
Unpacking intltool-debian (from .../intltool-debian_0.35.0+20060710.1_all.deb) ...
Selecting previously unselected package po-debconf.
Unpacking po-debconf (from .../po-debconf_1.0.16+nmu2_all.deb) ...
Selecting previously unselected package debhelper.
Unpacking debhelper (from .../debhelper_9.20130630_all.deb) ...
Selecting previously unselected package libbpp-core2.
Unpacking libbpp-core2 (from .../libbpp-core2_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libbpp-core-dev.
Unpacking libbpp-core-dev (from .../libbpp-core-dev_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libbpp-seq9.
Unpacking libbpp-seq9 (from .../libbpp-seq9_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libbpp-seq-dev.
Unpacking libbpp-seq-dev (from .../libbpp-seq-dev_2.1.0-1_amd64.deb) ...
Selecting previously unselected package sbuild-build-depends-libbpp-phyl-dummy.
Unpacking sbuild-build-depends-libbpp-phyl-dummy (from .../sbuild-build-depends-libbpp-phyl-dummy.deb) ...
Setting up libncursesw5:amd64 (5.9+20130608-1) ...
Setting up libpipeline1:amd64 (1.2.4-1) ...
Setting up libprocps1:amd64 (1:3.3.8-2) ...
Setting up libssl1.0.0:amd64 (1.0.1e-3) ...
Setting up groff-base (1.22.2-3) ...
Setting up bsdmainutils (9.0.5) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up man-db (2.6.5-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up libasprintf0c2:amd64 (0.18.2.1-1) ...
Setting up libgpg-error0:amd64 (1.10-3.1) ...
Setting up libgcrypt11:amd64 (1.5.2-3) ...
Setting up libp11-kit0:amd64 (0.18.4-1) ...
Setting up libtasn1-3:amd64 (2.14-3) ...
Setting up libgnutls26:amd64 (2.12.23-5) ...
Setting up libkeyutils1:amd64 (1.5.5-7) ...
Setting up libkrb5support0:amd64 (1.10.1+dfsg-6.1) ...
Setting up libk5crypto3:amd64 (1.10.1+dfsg-6.1) ...
Setting up libkrb5-3:amd64 (1.10.1+dfsg-6.1) ...
Setting up libgssapi-krb5-2:amd64 (1.10.1+dfsg-6.1) ...
Setting up libidn11:amd64 (1.25-2) ...
Setting up libsasl2-modules:amd64 (2.1.25.dfsg1-13) ...
Setting up libsasl2-2:amd64 (2.1.25.dfsg1-13) ...
Setting up libldap-2.4-2:amd64 (2.4.31-1+nmu2) ...
Setting up libmagic1:amd64 (1:5.14-2) ...
Setting up libxml2:amd64 (2.9.1+dfsg1-2) ...
Setting up liblzo2-2:amd64 (2.06-1) ...
Setting up libnettle4:amd64 (2.7.1-1) ...
Setting up libarchive13:amd64 (3.1.2-7) ...
Setting up libglib2.0-0:amd64 (2.36.3-3) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.8-2) ...
Setting up librtmp0:amd64 (2.4+20121230.gitdf6c518-1) ...
Setting up libssh2-1:amd64 (1.4.3-1) ...
Setting up libcurl3-gnutls:amd64 (7.31.0-2) ...
Setting up libexpat1:amd64 (2.1.0-4) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up procps (1:3.3.8-2) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up file (1:5.14-2) ...
Setting up gettext-base (0.18.2.1-1) ...
Setting up emacsen-common (2.0.5) ...
Setting up cmake-data (2.8.11.2-1) ...
Install cmake-data for emacs
Setting up cmake (2.8.11.2-1) ...
Setting up gettext (0.18.2.1-1) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (9.20130630) ...
Setting up libbpp-core2 (2.1.0-1) ...
Setting up libbpp-core-dev (2.1.0-1) ...
-- Creating generic include file: /usr/include/Bpp.all
-- Creating generic include file: /usr/include/Bpp/App.all
-- Creating generic include file: /usr/include/Bpp/Graph.all
-- Creating generic include file: /usr/include/Bpp/Graphics.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Fig.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Font.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Latex.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Molscript.all
-- Creating generic include file: /usr/include/Bpp/Graphics/R.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Svg.all
-- Creating generic include file: /usr/include/Bpp/Io.all
-- Creating generic include file: /usr/include/Bpp/Numeric.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Function.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Hmm.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Matrix.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Prob.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Random.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Stat.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Stat/Mva.all
-- Creating generic include file: /usr/include/Bpp/Seq.all
-- Creating generic include file: /usr/include/Bpp/Seq/Alphabet.all
-- Creating generic include file: /usr/include/Bpp/Seq/AlphabetIndex.all
-- Creating generic include file: /usr/include/Bpp/Seq/App.all
-- Creating generic include file: /usr/include/Bpp/Seq/Container.all
-- Creating generic include file: /usr/include/Bpp/Seq/GeneticCode.all
-- Creating generic include file: /usr/include/Bpp/Seq/Io.all
-- Creating generic include file: /usr/include/Bpp/Text.all
-- Creating generic include file: /usr/include/Bpp/Utils.all
Setting up libbpp-seq9 (2.1.0-1) ...
Setting up libbpp-seq-dev (2.1.0-1) ...
-- Creating generic include file: /usr/include/Bpp.all
-- Creating generic include file: /usr/include/Bpp/App.all
-- Creating generic include file: /usr/include/Bpp/Graph.all
-- Creating generic include file: /usr/include/Bpp/Graphics.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Fig.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Font.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Latex.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Molscript.all
-- Creating generic include file: /usr/include/Bpp/Graphics/R.all
-- Creating generic include file: /usr/include/Bpp/Graphics/Svg.all
-- Creating generic include file: /usr/include/Bpp/Io.all
-- Creating generic include file: /usr/include/Bpp/Numeric.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Function.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Hmm.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Matrix.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Prob.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Random.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Stat.all
-- Creating generic include file: /usr/include/Bpp/Numeric/Stat/Mva.all
-- Creating generic include file: /usr/include/Bpp/Seq.all
-- Creating generic include file: /usr/include/Bpp/Seq/Alphabet.all
-- Creating generic include file: /usr/include/Bpp/Seq/AlphabetIndex.all
-- Creating generic include file: /usr/include/Bpp/Seq/App.all
-- Creating generic include file: /usr/include/Bpp/Seq/Container.all
-- Creating generic include file: /usr/include/Bpp/Seq/GeneticCode.all
-- Creating generic include file: /usr/include/Bpp/Seq/Io.all
-- Creating generic include file: /usr/include/Bpp/Text.all
-- Creating generic include file: /usr/include/Bpp/Utils.all
Setting up sbuild-build-depends-libbpp-phyl-dummy (0.invalid.0) ...
Processing triggers for libc-bin ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.23.52.20130620-1 dpkg-dev_1.16.10 g++-4.6_4.6.4-4 g++-4.8_4.8.1-6 gcc-4.6_4.6.4-4 gcc-4.7_4.7.3-5 gcc-4.8_4.8.1-6 libc6-dev_2.17-7 libstdc++-4.8-dev_4.8.1-6 libstdc++6_4.8.1-6 libstdc++6-4.6-dev_4.6.4-4 libstdc++6-4.7-dev_4.7.3-5 linux-libc-dev_3.9.8-1
Package versions: apt_0.9.9.1 base-files_7.2 base-passwd_3.5.26 bash_4.2+dfsg-1 binutils_2.23.52.20130620-1 bsdmainutils_9.0.5 bsdutils_1:2.20.1-5.5 build-essential_11.6 bzip2_1.0.6-4 clang-3.3_1:3.3-3 cmake_2.8.11.2-1 cmake-data_2.8.11.2-1 coreutils_8.20-3 cpp_4:4.8.1-2 cpp-4.6_4.6.4-4 cpp-4.7_4.7.3-5 cpp-4.8_4.8.1-6 dash_0.5.7-3 debconf_1.5.50 debconf-i18n_1.5.50 debfoster_2.7-1.2 debhelper_9.20130630 debian-archive-keyring_2012.4 debianutils_4.3.4 diffutils_1:3.2-8 dpkg_1.16.10 dpkg-dev_1.16.10 e2fslibs_1.42.8-1 e2fsprogs_1.42.8-1 emacsen-common_2.0.5 fakeroot_1.19-2 file_1:5.14-2 findutils_4.4.2-6 g++_4:4.8.1-2 g++-4.6_4.6.4-4 g++-4.8_4.8.1-6 gcc_4:4.8.1-2 gcc-4.4-base_4.4.7-4 gcc-4.5-base_4.5.4-1 gcc-4.6_4.6.4-4 gcc-4.6-base_4.6.4-4 gcc-4.7_4.7.3-5 gcc-4.7-base_4.7.3-5 gcc-4.8_4.8.1-6 gcc-4.8-base_4.8.1-6 gettext_0.18.2.1-1 gettext-base_0.18.2.1-1 gnupg_1.4.12-7 gpgv_1.4.12-7 grep_2.14-2 groff-base_1.22.2-3 gzip_1.6-1 hostname_3.13 initscripts_2.88dsf-42 insserv_1.14.0-5 intltool-debian_0.35.0+20060710.1 libacl1_2.2.52-1 libapt-pkg4.12_0.9.9.1 libarchive13_3.1.2-7 libasan0_4.8.1-6 libasprintf0c2_0.18.2.1-1 libatomic1_4.8.1-6 libattr1_1:2.4.47-1 libblkid1_2.20.1-5.5 libbpp-core-dev_2.1.0-1 libbpp-core2_2.1.0-1 libbpp-seq-dev_2.1.0-1 libbpp-seq9_2.1.0-1 libbz2-1.0_1.0.6-4 libc-bin_2.17-7 libc-dev-bin_2.17-7 libc6_2.17-7 libc6-dev_2.17-7 libcap2_1:2.22-1.2 libclang-common-3.3-dev_1:3.3-3 libclang1-3.3_1:3.3-3 libclass-isa-perl_0.36-5 libcloog-isl4_0.18.0-2 libcloog-ppl1_0.16.1-3 libcomerr2_1.42.8-1 libcroco3_0.6.8-2 libcurl3-gnutls_7.31.0-2 libdb5.1_5.1.29-6 libdpkg-perl_1.16.10 libexpat1_2.1.0-4 libffi6_3.0.13-4 libfile-fcntllock-perl_0.14-2 libgc1c2_1:7.2d-5 libgcc-4.7-dev_4.7.3-5 libgcc-4.8-dev_4.8.1-6 libgcc1_1:4.8.1-6 libgcrypt11_1.5.2-3 libgdbm3_1.8.3-12 libglib2.0-0_2.36.3-3 libgmp10_2:5.1.2+dfsg-2 libgmpxx4ldbl_2:5.1.2+dfsg-2 libgnutls26_2.12.23-5 libgomp1_4.8.1-6 libgpg-error0_1.10-3.1 libgpm2_1.20.4-6.1 libgssapi-krb5-2_1.10.1+dfsg-6.1 libidn11_1.25-2 libisl10_0.11.2-1 libitm1_4.8.1-6 libk5crypto3_1.10.1+dfsg-6.1 libkeyutils1_1.5.5-7 libkrb5-3_1.10.1+dfsg-6.1 libkrb5support0_1.10.1+dfsg-6.1 libldap-2.4-2_2.4.31-1+nmu2 libllvm3.3_1:3.3-3 liblocale-gettext-perl_1.05-7+b1 liblzma5_5.1.1alpha+20120614-2 liblzo2-2_2.06-1 libmagic1_1:5.14-2 libmount1_2.20.1-5.5 libmpc2_0.9-4 libmpc3_1.0.1-1 libmpfr4_3.1.1-1 libncurses5_5.9+20130608-1 libncursesw5_5.9+20130608-1 libnettle4_2.7.1-1 libobjc-4.7-dev_4.7.3-5 libobjc4_4.8.1-6 libp11-kit0_0.18.4-1 libpam-modules_1.1.3-9 libpam-modules-bin_1.1.3-9 libpam-runtime_1.1.3-9 libpam0g_1.1.3-9 libpcre3_1:8.31-2 libpipeline1_1.2.4-1 libppl-c4_1:1.0-7 libppl12_1:1.0-7 libprocps1_1:3.3.8-2 libquadmath0_4.8.1-6 libreadline6_6.2+dfsg-0.1 librtmp0_2.4+20121230.gitdf6c518-1 libsasl2-2_2.1.25.dfsg1-13 libsasl2-modules_2.1.25.dfsg1-13 libselinux1_2.1.13-2 libsemanage-common_2.1.10-2 libsemanage1_2.1.10-2 libsepol1_2.1.9-2 libslang2_2.2.4-15 libss2_1.42.8-1 libssh2-1_1.4.3-1 libssl1.0.0_1.0.1e-3 libstdc++-4.8-dev_4.8.1-6 libstdc++6_4.8.1-6 libstdc++6-4.6-dev_4.6.4-4 libstdc++6-4.7-dev_4.7.3-5 libswitch-perl_2.16-2 libtasn1-3_2.14-3 libtext-charwidth-perl_0.04-7+b1 libtext-iconv-perl_1.7-5 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_1.2000-1 libtinfo5_5.9+20130608-1 libtsan0_4.8.1-6 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23.2 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5.5 libxml2_2.9.1+dfsg1-2 linux-libc-dev_3.9.8-1 login_1:4.1.5.1-1 lsb-base_4.1+Debian12 make_3.81-8.2 man-db_2.6.5-2 mawk_1.3.3-17 mount_2.20.1-5.5 multiarch-support_2.17-7 ncurses-base_5.9+20130608-1 ncurses-bin_5.9+20130608-1 passwd_1:4.1.5.1-1 patch_2.7.1-3 perl_5.14.2-21 perl-base_5.14.2-21 perl-modules_5.14.2-21 po-debconf_1.0.16+nmu2 procps_1:3.3.8-2 readline-common_6.2+dfsg-0.1 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-libbpp-phyl-dummy_0.invalid.0 sed_4.2.2-1 sensible-utils_0.0.9 sudo_1.8.5p2-1+nmu1 sysv-rc_2.88dsf-42 sysvinit_2.88dsf-42 sysvinit-utils_2.88dsf-42 tar_1.26+dfsg-6 tzdata_2013c-2 ucf_3.0027+nmu1 util-linux_2.20.1-5.5 vim_2:7.3.923-3 vim-common_2:7.3.923-3 vim-runtime_2:7.3.923-3 xz-utils_5.1.1alpha+20120614-2 zlib1g_1:1.2.8.dfsg-1

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Sun May 26 15:22:05 2013 UTC using DSA key ID 497A176D
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./libbpp-phyl_2.1.0-1.dsc
dpkg-source: info: extracting libbpp-phyl in libbpp-phyl-2.1.0
dpkg-source: info: unpacking libbpp-phyl_2.1.0.orig.tar.gz
dpkg-source: info: unpacking libbpp-phyl_2.1.0-1.debian.tar.gz

Check disc space
────────────────

Sufficient free space for build

Hack binNMU version
───────────────────

Created changelog entry for binNMU version 2.1.0-1clang1

User Environment
────────────────

HOME=/sbuild-nonexistent
LOGNAME=user
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable-amd64-sbuild
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1000
SCHROOT_GROUP=user
SCHROOT_SESSION_ID=unstable-amd64-sbuild-9034cb9f-aaff-4725-b4f1-ef61ab5989d5
SCHROOT_UID=1000
SCHROOT_USER=user
SHELL=/bin/sh
USER=user

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package libbpp-phyl
dpkg-buildpackage: source version 2.1.0-1clang1
 dpkg-source --before-build libbpp-phyl-2.1.0
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh_testdir
dh_testroot
# Add here commands to clean up after the build process.
[ ! -f Makefile ] || /usr/bin/make clean;
[ ! -f Makefile ] || rm Makefile;
[ ! -f src/Makefile ] || rm src/Makefile;
[ ! -f test/Makefile ] || rm test/Makefile;
rm -f config.sub config.guess
rm -f build-stamp
rm -f CMakeCache.txt
rm -f *.cmake
rm -f src/*.cmake
rm -f test/*.cmake
rm -rf CMakeFiles
rm -rf src/CMakeFiles
rm -rf test/CMakeFiles
rm -rf _CPack_Packages
rm -rf Testing
rm -f DartConfiguration.tcl
dh_clean 
dpkg-buildpackage: warning: debian/rules must be updated to support the 'build-arch' and 'build-indep' targets (at least 'build-arch' seems to be missing)
 debian/rules build
cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTING=OFF .
-- The CXX compiler identification is Clang 3.3.0
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Library bpp-seq found here:
   includes : /usr/include
   libraries: /usr/lib/libbpp-seq.so
-- Library bpp-core found here:
   includes : /usr/include
   libraries: /usr/lib/libbpp-core.so
-- Could NOT find Doxygen (missing:  DOXYGEN_EXECUTABLE) 
-- Configuring done
-- Generating done
-- Build files have been written to: /«PKGBUILDDIR»
dh_testdir
dh_testdir
# Add here commands to compile the package.
/usr/bin/make
make[1]: Entering directory `/«PKGBUILDDIR»'
make[2]: Entering directory `/«PKGBUILDDIR»'
make[3]: Entering directory `/«PKGBUILDDIR»'
Scanning dependencies of target bppphyl-shared
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[3]: Entering directory `/«PKGBUILDDIR»'
[  0%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.h:51:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Model/Protein/Coala.h:104:8: warning: 'bpp::Coala::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
  void setFreqFromData(const SequenceContainer& data, bool param = true);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:49:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/NaiveSubstitutionCount.h:140:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      return label_(initialState, finalState);
             ~~~~~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/NaiveSubstitutionCount.h:140:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      return label_(initialState, finalState);
             ~~~~~~               ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/NaiveSubstitutionCount.h:151:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      v[0] = label_(initialState, finalState);
             ~~~~~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/NaiveSubstitutionCount.h:151:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      v[0] = label_(initialState, finalState);
             ~~~~~~               ^~~~~~~~~~
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:50:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/OneJumpSubstitutionCount.h:91:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~        ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Mapping/OneJumpSubstitutionCount.h:91:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~                      ^~~~~~~~~~
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:51:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../OptimizationTools.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:51:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../OptimizationTools.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:51:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../OptimizationTools.h:47:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Parsimony/DRTreeParsimonyScore.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../Parsimony/AbstractTreeParsimonyScore.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Parsimony/../Model/StateMap.h:139:129: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        catch (ElementNotFoundException<int>& ex) { throw Exception("AbstractStateMap::whichState. Unsupported alphabet char: " + code); }
                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Parsimony/../Model/StateMap.h:139:129: note: use array indexing to silence this warning
        catch (ElementNotFoundException<int>& ex) { throw Exception("AbstractStateMap::whichState. Unsupported alphabet char: " + code); }
                                                                                                                                ^
                                                                    &                                                           [     ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:51:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/App/../OptimizationTools.h:49:
/«PKGBUILDDIR»/src/Bpp/Phyl/App/../Distance/DistanceEstimation.h:392:55: warning: field 'defaultOptimizer_' is uninitialized when used here [-Wuninitialized]
      defaultOptimizer_(dynamic_cast<MetaOptimizer *>(defaultOptimizer_->clone())),
                                                      ^
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:570:114: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      const MixedSubstitutionModel* pSM = dynamic_cast<const MixedSubstitutionModel*>(mixedModelSet.getModel(num - 1));
                                                                                      ~~~~~~~~~~~~~          ~~~~^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:575:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      mixedModelSet.addToHyperNode(num - 1, submodnb);
      ~~~~~~~~~~~~~                ~~~~^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:638:25: warning: implicit conversion changes signedness: 'int' to 'const value_type' (aka 'const unsigned long') [-Wsign-conversion]
      classes.push_back(TextTools::toInt(strtok2.nextToken()));
      ~~~~~~~           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:951:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        optNumFirst, tolBefore, tolDuring, nbEvalMax, topoNbStep, messageHandler, profiler,
                                           ^~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:974:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        optNumFirst, tolBefore, tolDuring, nbEvalMax, topoNbStep, messageHandler, profiler,
                                           ^~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:1471:25: warning: 'reinterpret_cast' from class 'bpp::LabelSubstitutionCount *' to its virtual base 'bpp::SubstitutionCount *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
    substitutionCount = reinterpret_cast<SubstitutionCount*>(new LabelSubstitutionCount(alphabet));
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:1471:25: note: use 'static_cast' to adjust the pointer correctly while upcasting
    substitutionCount = reinterpret_cast<SubstitutionCount*>(new LabelSubstitutionCount(alphabet));
                        ^~~~~~~~~~~~~~~~
                        static_cast
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:1475:25: warning: 'reinterpret_cast' from class 'bpp::OneJumpSubstitutionCount *' to its virtual base 'bpp::SubstitutionCount *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
    substitutionCount = reinterpret_cast<SubstitutionCount*>(new OneJumpSubstitutionCount(model));
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/App/PhylogeneticsApplicationTools.cpp:1475:25: note: use 'static_cast' to adjust the pointer correctly while upcasting
    substitutionCount = reinterpret_cast<SubstitutionCount*>(new OneJumpSubstitutionCount(model));
                        ^~~~~~~~~~~~~~~~
                        static_cast
29 warnings generated.
[  0%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/BipartitionList.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionList.cpp:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionList.cpp:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionList.cpp:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionList.cpp:326:59: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
  bitBipartitionList_.erase(bitBipartitionList_.begin() + i);
                            ~~~~~~~~~~~~~~~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionList.cpp:522:88: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
  bitBipartitionList_.erase(bitBipartitionList_.begin(), bitBipartitionList_.begin() + nbbip);
                                                         ~~~~~~~~~~~~~~~~~~~           ^~~~~
12 warnings generated.
[  1%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/BipartitionTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:42:
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:73:13: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  plist += (num / LWORD);
            ^~~ ~
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:74:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *plist |= (1 << (num % LWORD));
                   ^~~ ~
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:82:13: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  plist += (num / LWORD);
            ^~~ ~
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:83:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  *plist &=  ~(1 << (num % LWORD));
                     ^~~ ~
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:120:13: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  plist += (num / LWORD);
            ^~~ ~
/«PKGBUILDDIR»/src/Bpp/Phyl/BipartitionTools.cpp:121:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
  return (*plist) & (1 << (num % LWORD));
                           ^~~ ~
16 warnings generated.
[  1%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  1%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/BioNJ.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/BioNJ.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  2%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/DistanceEstimation.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:41:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.h:392:55: warning: field 'defaultOptimizer_' is uninitialized when used here [-Wuninitialized]
      defaultOptimizer_(dynamic_cast<MetaOptimizer *>(defaultOptimizer_->clone())),
                                                      ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:143:49: warning: field 'brLenConstraint_' is uninitialized when used here [-Wuninitialized]
  brLenConstraint_   (dynamic_cast<Constraint*>(brLenConstraint_->clone())),
                                                ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:267:63: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return rootLikelihoods_[rootPatternLinks_[site]][rateClass][state];
         ~~~~~~~~~~~~~~~~                                     ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:274:67: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return log(rootLikelihoods_[rootPatternLinks_[site]][rateClass][state]);
             ~~~~~~~~~~~~~~~~                                     ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/DistanceEstimation.cpp:658:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
  optimizer_->setVerbose(static_cast<size_t>(max(static_cast<int>(verbose_) - 2, 0)));
  ~~~~~~~~~~             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
17 warnings generated.
[  2%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/NeighborJoining.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/NeighborJoining.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  2%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/PGMA.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/PGMA.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  3%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Distance/HierarchicalClustering.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/HierarchicalClustering.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Distance/AbstractAgglomerativeDistanceMethod.h:46:
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Distance/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  3%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/AbstractDendrogramPlot.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  3%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/AbstractTreeDrawing.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  4%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/CladogramPlot.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/CladogramPlot.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  4%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/PhylogramPlot.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/PhylogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractDendrogramPlot.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  4%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:167:46: warning: 'reinterpret_cast' from class 'bpp::NodesIdTreeDrawingListener *' to its virtual base 'bpp::TreeDrawingListener *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
      addListener(PROPERTY_NODE_IDS        , reinterpret_cast<TreeDrawingListener*>(new NodesIdTreeDrawingListener        (settings_, true)));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:167:46: note: use 'static_cast' to adjust the pointer correctly while upcasting
      addListener(PROPERTY_NODE_IDS        , reinterpret_cast<TreeDrawingListener*>(new NodesIdTreeDrawingListener        (settings_, true)));
                                             ^~~~~~~~~~~~~~~~
                                             static_cast
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:168:46: warning: 'reinterpret_cast' from class 'bpp::LeafNamesTreeDrawingListener *' to its virtual base 'bpp::TreeDrawingListener *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
      addListener(PROPERTY_LEAF_NAMES      , reinterpret_cast<TreeDrawingListener*>(new LeafNamesTreeDrawingListener      (settings_, true)));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:168:46: note: use 'static_cast' to adjust the pointer correctly while upcasting
      addListener(PROPERTY_LEAF_NAMES      , reinterpret_cast<TreeDrawingListener*>(new LeafNamesTreeDrawingListener      (settings_, true)));
                                             ^~~~~~~~~~~~~~~~
                                             static_cast
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:169:46: warning: 'reinterpret_cast' from class 'bpp::BranchLengthsTreeDrawingListener *' to its virtual base 'bpp::TreeDrawingListener *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
      addListener(PROPERTY_BRANCH_LENGTHS  , reinterpret_cast<TreeDrawingListener*>(new BranchLengthsTreeDrawingListener  (settings_, true)));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:169:46: note: use 'static_cast' to adjust the pointer correctly while upcasting
      addListener(PROPERTY_BRANCH_LENGTHS  , reinterpret_cast<TreeDrawingListener*>(new BranchLengthsTreeDrawingListener  (settings_, true)));
                                             ^~~~~~~~~~~~~~~~
                                             static_cast
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:170:46: warning: 'reinterpret_cast' from class 'bpp::BootstrapValuesTreeDrawingListener *' to its virtual base 'bpp::TreeDrawingListener *' behaves differently from 'static_cast' [-Wreinterpret-base-class]
      addListener(PROPERTY_BOOTSTRAP_VALUES, reinterpret_cast<TreeDrawingListener*>(new BootstrapValuesTreeDrawingListener(settings_, true)));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingDisplayControler.h:170:46: note: use 'static_cast' to adjust the pointer correctly while upcasting
      addListener(PROPERTY_BOOTSTRAP_VALUES, reinterpret_cast<TreeDrawingListener*>(new BootstrapValuesTreeDrawingListener(settings_, true)));
                                             ^~~~~~~~~~~~~~~~
                                             static_cast
4 warnings generated.
[  5%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Graphics/TreeDrawingListener.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingListener.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingListener.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/TreeDrawingListener.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/AbstractTreeDrawing.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Graphics/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  5%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/../Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoDistanceMatrixFactory.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Distance/DistanceEstimation.h:392:55: warning: field 'defaultOptimizer_' is uninitialized when used here [-Wuninitialized]
      defaultOptimizer_(dynamic_cast<MetaOptimizer *>(defaultOptimizer_->clone())),
                                                      ^
13 warnings generated.
[  6%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/IoTreeFactory.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoTreeFactory.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoTreeFactory.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoTreeFactory.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  6%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/Newick.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Newick.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  6%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/NexusIoTree.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/NexusIoTree.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  7%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/Nhx.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/Nhx.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  7%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/PhylipDistanceMatrixFormat.cpp.o
[  7%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/IoPairedSiteLikelihoods.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoPairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoPairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/IoPairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[  8%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/IoSubstitutionModelFactory.cpp.o
[  8%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:63:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/RE08.h:173:10: warning: 'bpp::RE08::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data) {}
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:66:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/F84.h:207:12: warning: 'bpp::F84::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
    double Pij_t    (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:66:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/F84.h:208:12: warning: 'bpp::F84::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
    double dPij_dt  (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:66:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/F84.h:209:12: warning: 'bpp::F84::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
    double d2Pij_dt2(int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:69:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95.h:166:10: warning: 'bpp::RN95::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
  double Pij_t    (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:69:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95.h:167:10: warning: 'bpp::RN95::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
  double dPij_dt  (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:69:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95.h:168:10: warning: 'bpp::RN95::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
  double d2Pij_dt2(int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:71:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95s.h:141:10: warning: 'bpp::RN95s::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
  double Pij_t    (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:71:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95s.h:142:10: warning: 'bpp::RN95s::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
  double dPij_dt  (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:71:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/RN95s.h:143:10: warning: 'bpp::RN95s::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
  double d2Pij_dt2(int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:72:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/HKY85.h:207:10: warning: 'bpp::HKY85::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
                double Pij_t    (int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:72:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/HKY85.h:208:10: warning: 'bpp::HKY85::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
                double dPij_dt  (int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:72:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/HKY85.h:209:10: warning: 'bpp::HKY85::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
                double d2Pij_dt2(int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:74:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/JCnuc.h:166:8: warning: 'bpp::JCnuc::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
  void setFreqFromData(const SequenceContainer& data) {}
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:75:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/T92.h:181:10: warning: 'bpp::T92::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
  double Pij_t    (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:75:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/T92.h:182:10: warning: 'bpp::T92::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
  double dPij_dt  (int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:75:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/T92.h:183:10: warning: 'bpp::T92::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
  double d2Pij_dt2(int i, int j, double d) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:76:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/K80.h:172:12: warning: 'bpp::K80::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
    double Pij_t    (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:76:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/K80.h:173:12: warning: 'bpp::K80::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
    double dPij_dt  (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:76:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/K80.h:174:12: warning: 'bpp::K80::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
    double d2Pij_dt2(int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:76:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/K80.h:188:10: warning: 'bpp::K80::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer & data) {}
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:77:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/TN93.h:160:10: warning: 'bpp::TN93::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
                double Pij_t    (int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:77:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/TN93.h:161:10: warning: 'bpp::TN93::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
                double dPij_dt  (int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:77:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Nucleotide/TN93.h:162:10: warning: 'bpp::TN93::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
                double d2Pij_dt2(int i, int j, double d) const;
                       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:82:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/Coala.h:104:8: warning: 'bpp::Coala::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
  void setFreqFromData(const SequenceContainer& data, bool param = true);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:84:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/DSO78.h:143:10: warning: 'bpp::DSO78::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:86:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/JCprot.h:192:12: warning: 'bpp::JCprot::Pij_t' hides overloaded virtual functions [-Woverloaded-virtual]
    double Pij_t    (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:278:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t    (size_t i, size_t j, double t) const { return getPij_t(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:257:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::Pij_t' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double Pij_t(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:86:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/JCprot.h:193:12: warning: 'bpp::JCprot::dPij_dt' hides overloaded virtual functions [-Woverloaded-virtual]
    double dPij_dt  (int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:279:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt  (size_t i, size_t j, double t) const { return getdPij_dt(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:264:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::dPij_dt' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double dPij_dt(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:86:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/JCprot.h:194:12: warning: 'bpp::JCprot::d2Pij_dt2' hides overloaded virtual functions [-Woverloaded-virtual]
    double d2Pij_dt2(int i, int j, double d) const;
           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:280:18: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const { return getd2Pij_dt2(t) (i, j); }
                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:271:18: note: hidden overloaded virtual function 'bpp::SubstitutionModel::d2Pij_dt2' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'int')
  virtual double d2Pij_dt2(size_t i, size_t j, double t) const = 0;
                 ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:86:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/JCprot.h:224:10: warning: 'bpp::JCprot::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:88:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/JTT92.h:143:10: warning: 'bpp::JTT92::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:90:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/LG08.h:141:10: warning: 'bpp::LG08::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:91:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/UserProteinSubstitutionModel.h:151:10: warning: 'bpp::UserProteinSubstitutionModel::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:93:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/Protein/WAG01.h:148:10: warning: 'bpp::WAG01::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
    void setFreqFromData(const SequenceContainer& data);
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: different number of parameters (2 vs 1)
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:97:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:97:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:97:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/PhylogeneticsApplicationTools.h:49:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/HomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:97:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/PhylogeneticsApplicationTools.h:51:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../App/../Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:569:30: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        unsigned int nbCat = TextTools::toInt(args["nbCat"]);
                     ~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:590:38: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        model.reset(new Coala(alpha, TextTools::toInt(nbrOfParametersPerBranch), exchangeability, file));
                        ~~~~~        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOSubstitutionModelFormat.cpp:1295:22: warning: implicit conversion changes signedness: 'unsigned int' to 'const key_type' (aka 'const int') [-Wsign-conversion]
        frequencies[i++] = TextTools::toDouble(strtok.nextToken());
        ~~~~~~~~~~~ ~^~
48 warnings generated.
[  8%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/IoFrequenciesSetFactory.cpp.o
[  9%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/BppOFrequenciesSetFormat.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOFrequenciesSetFormat.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/FrequenciesSet/MvaFrequenciesSet.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/FrequenciesSet/../Protein/Coala.h:104:8: warning: 'bpp::Coala::setFreqFromData' hides overloaded virtual functions [-Woverloaded-virtual]
  void setFreqFromData(const SequenceContainer& data, bool param = true);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/FrequenciesSet/../Protein/../AbstractSubstitutionModel.h:284:8: note: hidden overloaded virtual function 'bpp::AbstractSubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0);
       ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/../Model/SubstitutionModel.h:448:16: note: hidden overloaded virtual function 'bpp::SubstitutionModel::setFreqFromData' declared here: type mismatch at 2nd parameter ('double' vs 'bool')
  virtual void setFreqFromData(const SequenceContainer& data, double pseudoCount = 0) = 0;
               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Io/BppOFrequenciesSetFormat.cpp:552:15: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        psc = TextTools::toInt(unparsedArguments_["observedPseudoCount"]);
            ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
[  9%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Io/BppORateDistributionFormat.cpp.o
[  9%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 10%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
12 warnings generated.
[ 10%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 10%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 11%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASDRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 11%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRASRTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihoodData.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 12%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:146:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLikelihoodForASite' hides overloaded virtual function [-Woverloaded-virtual]
  double getLikelihoodForASite (unsigned int site) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:150:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLikelihoodForASite' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLikelihoodForASite (size_t site) const;
           ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:147:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLogLikelihoodForASite' hides overloaded virtual function [-Woverloaded-virtual]
  double getLogLikelihoodForASite(unsigned int site) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:151:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLogLikelihoodForASite' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLogLikelihoodForASite(size_t site) const;
           ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:156:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLikelihoodForASiteForARateClass' hides overloaded virtual function [-Woverloaded-virtual]
  double getLikelihoodForASiteForARateClass(unsigned int site, unsigned int rateClass) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:163:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLikelihoodForASiteForARateClass' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLikelihoodForASiteForARateClass(size_t site, size_t rateClass) const;
           ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:157:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLogLikelihoodForASiteForARateClass' hides overloaded virtual function [-Woverloaded-virtual]
  double getLogLikelihoodForASiteForARateClass(unsigned int site, unsigned int rateClass) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:164:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLogLikelihoodForASiteForARateClass' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLogLikelihoodForASiteForARateClass(size_t site, size_t rateClass) const;
           ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:158:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLikelihoodForASiteForARateClassForAState' hides overloaded virtual function [-Woverloaded-virtual]
  double getLikelihoodForASiteForARateClassForAState(unsigned int site, unsigned int rateClass, int state) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:165:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLikelihoodForASiteForARateClassForAState' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLikelihoodForASiteForARateClassForAState(size_t site, size_t rateClass, int state) const;
           ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.cpp:39:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousMixedTreeLikelihood.h:159:10: warning: 'bpp::DRHomogeneousMixedTreeLikelihood::getLogLikelihoodForASiteForARateClassForAState' hides overloaded virtual function [-Woverloaded-virtual]
  double getLogLikelihoodForASiteForARateClassForAState(unsigned int site, unsigned int rateClass, int state) const;
         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:166:12: note: hidden overloaded virtual function 'bpp::DRHomogeneousTreeLikelihood::getLogLikelihoodForASiteForARateClassForAState' declared here: type mismatch at 1st parameter ('size_t' (aka 'unsigned long') vs 'unsigned int')
    double getLogLikelihoodForASiteForARateClassForAState(size_t site, size_t rateClass, int state) const;
           ^
18 warnings generated.
[ 12%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:221:108: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return likelihoodData_->getRootLikelihoodArray()[likelihoodData_->getRootArrayPosition(site)][rateClass][state];
         ~~~~~~~~~~~~~~~                                                                                   ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.cpp:228:112: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return log(likelihoodData_->getRootLikelihoodArray()[likelihoodData_->getRootArrayPosition(site)][rateClass][state]);
             ~~~~~~~~~~~~~~~                                                                                   ^~~~~
14 warnings generated.
[ 12%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp:225:108: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return likelihoodData_->getRootLikelihoodArray()[likelihoodData_->getRootArrayPosition(site)][rateClass][state];
         ~~~~~~~~~~~~~~~                                                                                   ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRNonHomogeneousTreeLikelihood.cpp:232:112: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return log(likelihoodData_->getRootLikelihoodArray()[likelihoodData_->getRootArrayPosition(site)][rateClass][state]);
             ~~~~~~~~~~~~~~~                                                                                   ^~~~~
12 warnings generated.
[ 13%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 13%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp:61:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      ancestors[i] = (int)j;
                   ~ ^~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/MarginalAncestralStateReconstruction.cpp:92:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            ancestors[i] = (int)j;
                         ~ ^~~~~~
12 warnings generated.
[ 13%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NNIHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
12 warnings generated.
[ 14%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp:42:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PseudoNewtonOptimizer.cpp:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DRHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
12 warnings generated.
[ 14%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RASTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RASTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/DiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 14%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousClockTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
12 warnings generated.
[ 15%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.cpp:39:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousMixedTreeLikelihood.h:42:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
12 warnings generated.
[ 15%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractDiscreteRatesAcrossSitesTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:199:28: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                const SubstitutionModel* getSubstitutionModel() const { return model_; }
                                         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractHomogeneousTreeLikelihood.h:201:22: warning: 'bpp::AbstractHomogeneousTreeLikelihood::getSubstitutionModel' hides overloaded virtual functions [-Woverloaded-virtual]
                SubstitutionModel* getSubstitutionModel() { return model_; }
                                   ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:344:38: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual const SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) const throw (NodeNotFoundException) = 0;
                                     ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:355:32: note: hidden overloaded virtual function 'bpp::TreeLikelihood::getSubstitutionModel' declared here: different number of parameters (2 vs 0)
    virtual SubstitutionModel* getSubstitutionModel(int nodeId, size_t siteIndex) throw (NodeNotFoundException) = 0;
                               ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:238:133: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return likelihoodData_->getLikelihoodArray(tree_->getRootNode()->getId())[likelihoodData_->getRootArrayPosition(site)][rateClass][state];
         ~~~~~~~~~~~~~~~                                                                                                            ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RHomogeneousTreeLikelihood.cpp:245:137: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return log(likelihoodData_->getLikelihoodArray(tree_->getRootNode()->getId())[likelihoodData_->getRootArrayPosition(site)][rateClass][state]);
             ~~~~~~~~~~~~~~~                                                                                                            ^~~~~
14 warnings generated.
[ 15%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:216:62: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        mapmodels[*it] = static_cast<int>(hyperNode_.getNode(*it).size());
                                          ~~~~~~~~~~         ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:217:21: warning: implicit conversion changes signedness: 'mapped_type' (aka 'int') to 'unsigned long' [-Wsign-conversion]
        ttmodels *= mapmodels[*it];
                 ~~ ^~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:229:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            hn.setModel(j, Vint(1, hyperNode_.getNode(j)[s % mapmodels[static_cast<int>(j)]]));
                                   ~~~~~~~~~~            ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:738:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      vModel.push_back(mmodel->getNModel(nd[i]));
                       ~~~~~~            ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousMixedTreeLikelihood.cpp:739:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      vProba.push_back(mmodel->getNProbability(nd[i]));
                       ~~~~~~                  ^~~~~
15 warnings generated.
[ 16%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp:41:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/AbstractNonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/NonHomogeneousTreeLikelihood.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp:242:133: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return likelihoodData_->getLikelihoodArray(tree_->getRootNode()->getId())[likelihoodData_->getRootArrayPosition(site)][rateClass][state];
         ~~~~~~~~~~~~~~~                                                                                                            ^~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/RNonHomogeneousTreeLikelihood.cpp:249:137: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  return log(likelihoodData_->getLikelihoodArray(tree_->getRootNode()->getId())[likelihoodData_->getRootArrayPosition(site)][rateClass][state]);
             ~~~~~~~~~~~~~~~                                                                                                            ^~~~~
12 warnings generated.
[ 16%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/TreeLikelihoodTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 17%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.cpp:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.h:48:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/PairedSiteLikelihoods.cpp:184:12: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    ++v.at(RandomTools::giveIntRandomNumberBetweenZeroAndEntry(static_cast<int>(length)));
      ~    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
11 warnings generated.
[ 17%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/GlobalClockTreeLikelihoodFunctionWrapper.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihood.h:46:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/TreeLikelihoodData.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Likelihood/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
10 warnings generated.
[ 17%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:72:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      MatrixTools::pow(Q, p, M3);         // Q^p -> M5
      ~~~~~~~~~~~         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:74:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      MatrixTools::pow(Q, n - p - 1, M3); // Q^(n-p-1) -> M3
      ~~~~~~~~~~~         ~~~~~~^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:98:15: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return m_(initialState, finalState);
           ~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:98:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return m_(initialState, finalState);
           ~~               ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:105:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return m_(initialState, finalState);
         ~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/LaplaceSubstitutionCount.cpp:105:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return m_(initialState, finalState);
         ~~               ^~~~~~~~~~
7 warnings generated.
[ 18%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.h:91:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~        ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.h:91:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~                      ^~~~~~~~~~
3 warnings generated.
[ 18%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
11 warnings generated.
[ 18%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/WeightedSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.h:140:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      return label_(initialState, finalState);
             ~~~~~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.h:140:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      return label_(initialState, finalState);
             ~~~~~~               ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.h:151:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      v[0] = label_(initialState, finalState);
             ~~~~~~ ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.h:151:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      v[0] = label_(initialState, finalState);
             ~~~~~~               ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:47:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  RowMatrix<double>* mat = new RowMatrix<double>(n, n);
                               ~~~~~~~~~         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:47:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  RowMatrix<double>* mat = new RowMatrix<double>(n, n);
                               ~~~~~~~~~            ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:52:14: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      (*mat)(i, j) = (register_->getType(i, j) == type ? (weights_ ? weights_->getIndex(i, j) : 1.) : 0.);
      ~      ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:52:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      (*mat)(i, j) = (register_->getType(i, j) == type ? (weights_ ? weights_->getIndex(i, j) : 1.) : 0.);
      ~         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:65:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      if (i == j) label_(i, j) = 0;
                  ~~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:65:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      if (i == j) label_(i, j) = 0;
                  ~~~~~~    ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:66:19: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else label_(i, j) = ++count;
           ~~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/NaiveSubstitutionCount.cpp:66:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else label_(i, j) = ++count;
           ~~~~~~    ^
13 warnings generated.
[ 19%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/WeightedSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:85:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
        ~~~~~~~~~~        ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:85:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
        ~~~~~~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:85:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
                                  ~~~~~~      ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:85:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
                                  ~~~~~~         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:215:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return counts_[type - 1](initialState, finalState);
         ~~~~~~~           ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:215:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return counts_[type - 1](initialState, finalState);
         ~~~~~~~                         ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:231:23: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    v[t] = counts_[t](initialState, finalState);
           ~~~~~~~    ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/DecompositionSubstitutionCount.cpp:231:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    v[t] = counts_[t](initialState, finalState);
           ~~~~~~~                  ^~~~~~~~~~
9 warnings generated.
[ 19%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/WeightedSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:106:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
        ~~~~~~~~~~        ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:106:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
        ~~~~~~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:106:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
                                  ~~~~~~      ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:106:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        bMatrices_[i - 1](j, k) = model_->Qij(j, k) * (weights_ ? weights_->getIndex(j, k) : 1);
                                  ~~~~~~         ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:192:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return counts_[type - 1](initialState, finalState);
         ~~~~~~~           ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:192:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
  return counts_[type - 1](initialState, finalState);
         ~~~~~~~                         ^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:208:23: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    v[t] = counts_[t](initialState, finalState);
           ~~~~~~~    ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/UniformizationSubstitutionCount.cpp:208:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    v[t] = counts_[t](initialState, finalState);
           ~~~~~~~                  ^~~~~~~~~~
9 warnings generated.
[ 19%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/WeightedSubstitutionCount.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/WeightedSubstitutionCount.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/WeightedSubstitutionCount.h:43:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
1 warning generated.
[ 20%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:45:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTools.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:411:36: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
      sons_.insert(sons_.begin() + pos, node);
                   ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:436:60: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    if (search == sons_.end() || search == sons_.begin() + pos)
                                           ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:448:33: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
    sons_.erase(sons_.begin() + pos);
                ~~~~~           ^~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:461:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        sons_.erase(sons_.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:497:62: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  Node* operator[](int i) { return (i < 0) ? father_ : sons_[i]; }
                                                       ~~~~~ ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../Node.h:499:74: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
  const Node* operator[](int i) const { return (i < 0) ? father_ : sons_[i]; }
                                                                   ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:325:20: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
               ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:327:37: warning: implicit conversion changes signedness: 'size_t' (aka 'unsigned long') to 'const difference_type' (aka 'const long') [-Wsign-conversion]
        names.erase(names.begin() + i);
                    ~~~~~           ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplateTools.h:325:72: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        size_t i = RandomTools::giveIntRandomNumberBetweenZeroAndEntry(n);
                   ~~~~~~~~~~~                                         ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMapping.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:391:112: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                            ~~~^~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/../TreeTemplate.h:391:112: note: use array indexing to silence this warning
    if (nodes.size() == 0) throw NodeNotFoundException("TreeTemplate:swapNodes(): Node with id not found.", "" + parentId);
                                                                                                               ^
                                                                                                            &  [         ]
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/ProbabilisticSubstitutionMapping.h:44:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionCount.h:178:53: warning: field 'register_' is uninitialized when used here [-Wuninitialized]
      register_(dynamic_cast<SubstitutionRegister*>(register_->clone()))
                                                    ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/SubstitutionMappingTools.h:45:
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.h:91:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~        ^~~~~~~~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Mapping/OneJumpSubstitutionCount.h:91:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
      else return 1. - model_->Pij_t(initialState, finalState, length);
                       ~~~~~~                      ^~~~~~~~~~
13 warnings generated.
[ 20%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Model/StateMap.cpp.o
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Model/StateMap.cpp:40:
/«PKGBUILDDIR»/src/Bpp/Phyl/Model/StateMap.h:139:129: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
        catch (ElementNotFoundException<int>& ex) { throw Exception("AbstractStateMap::whichState. Unsupported alphabet char: " + code); }
                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
/«PKGBUILDDIR»/src/Bpp/Phyl/Model/StateMap.h:139:129: note: use array indexing to silence this warning
        catch (ElementNotFoundException<int>& ex) { throw Exception("AbstractStateMap::whichState. Unsupported alphabet char: " + code); }
                                                                                                                                ^
                                                                    &                                                           [     ]
/«PKGBUILDDIR»/src/Bpp/Phyl/Model/StateMap.cpp:48:23: warning: implicit conversion changes signedness: 'unsigned int' to 'const value_type' (aka 'const int') [-Wsign-conversion]
    states_.push_back(i);
    ~~~~~~~           ^
2 warnings generated.
[ 20%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Model/BinarySubstitutionModel.cpp.o
[ 21%] Building CXX object src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Model/AbstractSubstitutionModel.cpp.o
/«PKGBUILDDIR»/src/Bpp/Phyl/Model/AbstractSubstitutionModel.cpp:393:11: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    freq_[i] = freqs[i];
    ~~~~~ ^
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Model/AbstractSubstitutionModel.cpp:40:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Model/AbstractSubstitutionModel.h:43:
In file included from /«PKGBUILDDIR»/src/Bpp/Phyl/Model/SubstitutionModel.h:51:
In file included from /usr/include/Bpp/Numeric/VectorTools.h:44:
/usr/include/Bpp/Numeric/NumTools.h:116:50: error: call to function 'operator*' that is neither visible in the template definition nor found by argument-dependent lookup
  template<class T> static T sqr(T a) { return a * a; }
                                                 ^
/«PKGBUILDDIR»/src/Bpp/Phyl/Model/AbstractSubstitutionModel.cpp:281:55: note: in instantiation of function template specialization 'bpp::NumTools::sqr<std::vector<double, std::allocator<double> > >' requested here
      MatrixTools::mult(rightEigenVectors_, NumTools::sqr(rate_ * eigenValues_) * VectorTools::exp(eigenValues_ * (rate_ * t)), leftEigenVectors_, d2pijt_);
                                                      ^
/usr/include/Bpp/Numeric/VectorTools.h:128:16: note: 'operator*' should be declared prior to the call site
std::vector<T> operator*(const std::vector<T>& v1, const std::vector<T>& v2) throw (DimensionException)
               ^
1 warning and 1 error generated.
make[3]: *** [src/CMakeFiles/bppphyl-shared.dir/Bpp/Phyl/Model/AbstractSubstitutionModel.cpp.o] Error 1
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[2]: *** [src/CMakeFiles/bppphyl-shared.dir/all] Error 2
make[1]: *** [all] Error 2
make: *** [build-stamp] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
make[2]: Leaving directory `/«PKGBUILDDIR»'
make[1]: Leaving directory `/«PKGBUILDDIR»'
────────────────────────────────────────────────────────────────────────────────
Build finished at 20130715-1842

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Build Architecture: amd64
Build-Space: 89036
Build-Time: 175
Distribution: unstable
Fail-Stage: build
Host Architecture: amd64
Install-Time: 15
Job: libbpp-phyl_2.1.0-1
Machine Architecture: amd64
Package: libbpp-phyl
Package-Time: 245
Source-Version: 2.1.0-1
Space: 89036
Status: attempted
Version: 2.1.0-1clang1
────────────────────────────────────────────────────────────────────────────────
Finished at 20130715-1842
Build needed 00:04:05, 89036k disc space
DC-Status: Failed 246.344239297s
DC-Time-Estimation: 246.344239297 versus expected 1344 (r/m: 4.455780106063829 ; m: 246.344239297)
