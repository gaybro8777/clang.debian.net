DC-Build-Header: cafeobj 1.6.0-2 / 2020-02-25 03:42:45 +0000
DC-Task: type:rebuild-binarch-only source:cafeobj version:1.6.0-2 chroot:unstable esttime:89 logfile:/tmp/cafeobj_1.6.0-2_unstable_clang9.log modes:clang9:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang9 cafeobj_1.6.0-2'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-12-161.eu-central-1.compute.internal

+==============================================================================+
| cafeobj 1.6.0-2 (amd64)                      Tue, 25 Feb 2020 03:42:46 +0000 |
+==============================================================================+

Package: cafeobj
Version: 1.6.0-2
Source Version: 1.6.0-2
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-a3f2d5be-808a-4106-84ef-a65aa666f392' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang9
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=9
+ echo 'Install of clang-9'
Install of clang-9
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6572 kB in 8s (849 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-9 libomp-9-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc4 libomp5-9 libstdc++-8-dev libz3-4
Suggested packages:
  clang-9-doc libomp-9-doc libstdc++-8-doc
Recommended packages:
  llvm-9-dev python3
The following NEW packages will be installed:
  clang-9 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-9-dev libomp5-9
  libstdc++-8-dev libz3-4
0 upgraded, 21 newly installed, 0 to remove and 2 not upgraded.
Need to get 43.9 MB of archives.
After this operation, 237 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm9 amd64 1:9.0.1-8 [15.0 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp9 amd64 1:9.0.1-8 [8429 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-9-dev amd64 1:9.0.1-8 [3727 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-9 amd64 1:9.0.1-8 [1156 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp5-9 amd64 1:9.0.1-8 [333 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp-9-dev amd64 1:9.0.1-8 [66.2 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 43.9 MB in 2s (26.4 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm9:amd64.
Preparing to unpack .../03-libllvm9_1%3a9.0.1-8_amd64.deb ...
Unpacking libllvm9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libclang-cpp9.
Preparing to unpack .../04-libclang-cpp9_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-cpp9 (1:9.0.1-8) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../05-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../06-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../07-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../08-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../09-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../10-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../11-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../12-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../13-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../14-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../15-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-9-dev.
Preparing to unpack .../16-libclang-common-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-common-9-dev (1:9.0.1-8) ...
Selecting previously unselected package clang-9.
Preparing to unpack .../17-clang-9_1%3a9.0.1-8_amd64.deb ...
Unpacking clang-9 (1:9.0.1-8) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../18-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-9:amd64.
Preparing to unpack .../19-libomp5-9_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp5-9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libomp-9-dev.
Preparing to unpack .../20-libomp-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp-9-dev (1:9.0.1-8) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-9:amd64 (1:9.0.1-8) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libomp-9-dev (1:9.0.1-8) ...
Setting up libllvm9:amd64 (1:9.0.1-8) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libclang-cpp9 (1:9.0.1-8) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-9-dev (1:9.0.1-8) ...
Setting up clang-9 (1:9.0.1-8) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-9 g++-4.6
+ ln -s clang-9 gcc-4.6
+ ln -s clang-9 cpp-4.6
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-9 g++-4.7
+ ln -s clang-9 gcc-4.7
+ ln -s clang-9 cpp-4.7
+ ln -s clang-9 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-9 g++-4.8
+ ln -s clang-9 gcc-4.8
+ ln -s clang-9 cpp-4.8
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-4.8 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-9 g++-4.9
+ ln -s clang-9 gcc-4.9
+ ln -s clang-9 cpp-4.9
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-4.9 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-9 g++-5
+ ln -s clang-9 gcc-5
+ ln -s clang-9 cpp-5
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-5 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-9 g++-6
+ ln -s clang-9 gcc-6
+ ln -s clang-9 cpp-6
+ ln -s clang-9 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-9 g++-7
+ ln -s clang-9 gcc-7
+ ln -s clang-9 cpp-7
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-7 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-9 g++-8
+ ln -s clang-9 gcc-8
+ ln -s clang-9 cpp-8
+ ln -s clang-9 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-8 hold'
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-9 g++-9
+ ln -s clang-9 gcc-9
+ ln -s clang-9 cpp-9
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-9 g++-10
+ ln -s clang-9 gcc-10
+ ln -s clang-9 cpp-10
+ ln -s clang-9 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/cafeobj-dikWfR
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang9'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/cafeobj-dikWfR/resolver-bnNAR5' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (2250 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'cafeobj' packaging is maintained in the 'Git' version control system at:
https://github.com/CafeOBJ/cafeobj.git
Please use:
git clone https://github.com/CafeOBJ/cafeobj.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 8477 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main cafeobj 1.6.0-2 (dsc) [1515 B]
Get:2 http://127.0.0.1:12990/debian sid/main cafeobj 1.6.0-2 (tar) [8468 kB]
Get:3 http://127.0.0.1:12990/debian sid/main cafeobj 1.6.0-2 (diff) [6832 B]
Fetched 8477 kB in 1s (14.5 MB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/cafeobj-dikWfR/cafeobj-1.6.0' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/cafeobj-dikWfR' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 10), sbcl, build-essential, fakeroot
Filtered Build-Depends: debhelper (>= 10), sbcl, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [370 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [452 B]
Fetched 1779 B in 0s (18.7 kB/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libpipeline1 libsigsegv2 libsub-override-perl libtool libuchardet0
  libxml2 m4 man-db po-debconf sbcl sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff
  libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc apparmor less
  www-browser libmail-box-perl sbcl-doc sbcl-source slime
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs libltdl-dev libmail-sendmail-perl binfmt-support
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libpipeline1 libsigsegv2 libsub-override-perl libtool libuchardet0
  libxml2 m4 man-db po-debconf sbcl sbuild-build-depends-main-dummy
  sensible-utils
0 upgraded, 35 newly installed, 0 to remove and 0 not upgraded.
Need to get 27.7 MB of archives.
After this operation, 114 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [876 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 sbcl amd64 2:2.0.1-3 [8516 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 27.7 MB in 1s (21.9 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../16-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../17-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../18-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../25-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../26-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../27-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../28-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../29-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../30-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../31-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../32-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package sbcl.
Preparing to unpack .../33-sbcl_2%3a2.0.1-3_amd64.deb ...
Unpacking sbcl (2:2.0.1-3) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../34-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up sbcl (2:2.0.1-3) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up m4 (1.4.18-4) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.19.8.1-10) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up po-debconf (1.0.21) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-9_1:9.0.1-8 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-9-dev_1:9.0.1-8 libclang-cpp9_1:9.0.1-8 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm9_1:9.0.1-8 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-9-dev_1:9.0.1-8 libomp5-9_1:9.0.1-8 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libquadmath0_10-20200222-1 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libss2_1.45.5-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 sbcl_2:2.0.1-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 3.0 (quilt)
Source: cafeobj
Binary: cafeobj, cafeobj-mode
Architecture: any all
Version: 1.6.0-2
Maintainer: Norbert Preining <norbert@preining.info>
Homepage: http://cafeobj.org/
Standards-Version: 4.5.0
Vcs-Browser: https://github.com/CafeOBJ/cafeobj
Vcs-Git: https://github.com/CafeOBJ/cafeobj.git
Build-Depends: debhelper (>= 10), sbcl
Package-List:
 cafeobj deb science optional arch=any
 cafeobj-mode deb science optional arch=all
Checksums-Sha1:
 0e154b4b1b61c871491882b14911548e1dc65f5d 8468232 cafeobj_1.6.0.orig.tar.gz
 9d3fe7ed9c6091f97e44ed16ba722eb4fe52b97e 6832 cafeobj_1.6.0-2.debian.tar.xz
Checksums-Sha256:
 ab97d3cf22d8556524c86540cbb11d4e2eb1ba38cb0198eb068a4493b745d560 8468232 cafeobj_1.6.0.orig.tar.gz
 3151920bbd74a69c881d41d437a3618ff9e5ebb6213456e87a9f05a81fc0c302 6832 cafeobj_1.6.0-2.debian.tar.xz
Files:
 100d2b48686f9a80506235d9e2bc7528 8468232 cafeobj_1.6.0.orig.tar.gz
 48d8b00182a0898965ad7fc4f3c671c5 6832 cafeobj_1.6.0-2.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCgAdFiEE68ws0vrA2voQX53I2A4JsIcUAGYFAl5MSfIACgkQ2A4JsIcU
AGZBoQf/SRDc5bQKbXx+w1hnrNWLCDKs36KgKEq6vygNtmZUu00oCizw3Sy6YrlU
jwdDuZ8RV2jNQKYBaI9lDOJLRbyCmx+Uc79VeR9xoeX5Kzw7IurTtkRhHDth4vvX
Gd0glSxtOVefvw8jwxll3/iqd5oGmvnQzc5CZRXrWPD32TSupjKgmh3h5chLFKU8
9VYTVWqf1aVlRVgh+Qygf8M038AsKbbWw3v59jReFrljnhEYJu7n95tPk+OXmRkT
mcR9YnFbUkN3pwIFwtcSDNZeui/TOZStdmlAwa3RIX0zLcK5A59m/jYflCXTnKt3
Aeeogv+SdW9EfG7AKmyE5iGHkAGF1Q==
=TxBv
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Tue Feb 18 20:32:50 2020 UTC
gpgv:                using RSA key EBCC2CD2FAC0DAFA105F9DC8D80E09B087140066
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./cafeobj_1.6.0-2.dsc
dpkg-source: info: extracting cafeobj in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking cafeobj_1.6.0.orig.tar.gz
dpkg-source: info: unpacking cafeobj_1.6.0-2.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying armhf-remove-buildopts

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-a3f2d5be-808a-4106-84ef-a65aa666f392
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package cafeobj
dpkg-buildpackage: info: source version 1.6.0-2
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Norbert Preining <norbert@preining.info>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh_testdir
dh_testroot
[ ! -f Makefile ] || /usr/bin/make distclean
rm -f install-arch-stamp install-indep-stamp
rm -f build-arch-stamp build-indep-stamp
rm -rf /<<PKGBUILDDIR>>/tmpcache
dh_clean
 debian/rules build
dh_testdir
./configure --prefix=/usr --with-lisp=sbcl
checking for a BSD-compatible install... /usr/bin/install -c
checking for gcl... no
checking for lisp... no
checking for sbcl... /usr/bin/sbcl
checking for alisp... no
checking for clisp... no
checking for ccl... no
checking for ccl64... no
checking whether make sets $(MAKE)... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
configure: Building for the following lisp interpreters:  sbcl
checking for emacs... no
checking for xemacs... no
checking where .elc files should go... ${datadir}/emacs/site-lisp
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking size of long... 8
configure: creating ./config.status
config.status: creating Makefile
config.status: creating make-cafeobj.lisp
config.status: creating version.lisp
config.status: creating xbin/cafeobj.in
config.status: creating doc/refman/Makefile
config.status: creating doc/manual/Makefile
config.status: creating doc/RefCard/Makefile
config.status: creating doc/PigNose/Makefile
config.status: creating doc/citp-manual/Makefile
config.status: creating doc/namespace/Makefile
config.status: creating doc/etc/Makefile
config.status: creating doc/search/Makefile
#./configure --prefix=/usr --with-lisp=sbcl --enable-rebuild-doc
# remove prebuild documentation pdf and rebuild them
#rm -f doc/manual/manual.pdf
#rm -f doc/refman/reference-manual.pdf
#rm -f doc/PigNose/pnguide.pdf
#rm -f doc/RefCard/interp.pdf
#rm -f doc/RefCard/syntax.pdf
#rm -f doc/namespace/namespace.pdf
make build
make[1]: Entering directory '/<<PKGBUILDDIR>>'
mkdir -p dumps/sbcl/
sbcl --dynamic-space-size 4096 < make-cafeobj.lisp
This is SBCL 2.0.1.debian, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* NIL
* #<PACKAGE "COMMON-LISP-USER">
* #<PACKAGE "CHAOS">
* *CHAOS-ROOT*
* "."
* CHAOS::*CAFEOBJ-INSTALL-DIR*
* "."
* CHAOS::*MAKE-BIGPINK*
* (:BIGPINK :X86-64 :64-BIT :ANSI-CL :COMMON-LISP :ELF :GENCGC
 :IEEE-FLOATING-POINT :LINUX :LITTLE-ENDIAN :PACKAGE-LOCAL-NICKNAMES
 :SB-CORE-COMPRESSION :SB-LDB :SB-PACKAGE-LOCKS :SB-THREAD :SB-UNICODE :SBCL
 :UNIX)
* NIL
* ; in: DEFUN MAKE-EXEC-IMAGE
;     (SETQ *CHAOS-NEW* T)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::*CHAOS-NEW*

;     (SETQ CHAOS::-CAFEOBJ-LOAD-TIME- (CHAOS::GET-TIME-STRING))
; 
; caught WARNING:
;   undefined variable: CHAOS::-CAFEOBJ-LOAD-TIME-

;     (CHAOS::GET-TIME-STRING)
; 
; caught STYLE-WARNING:
;   undefined function: CHAOS::GET-TIME-STRING

;     (CHAOS::SET-CAFEOBJ-STANDARD-LIBRARY-PATH)
; 
; caught STYLE-WARNING:
;   undefined function: CHAOS::SET-CAFEOBJ-STANDARD-LIBRARY-PATH
; 
; compilation unit finished
;   Undefined functions:
;     CHAOS::GET-TIME-STRING CHAOS::SET-CAFEOBJ-STANDARD-LIBRARY-PATH
;   Undefined variables:
;     *CHAOS-NEW* CHAOS::-CAFEOBJ-LOAD-TIME-
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions
MAKE-EXEC-IMAGE
* CHAOS::*COMPILE-BUILTIN-AXIOM*
* MAKE-CAFEOBJ
* 
** making CafeOBJ (STYLE-WARNING: using deprecated EVAL-WHEN situation names LOAD EVAL
WARNING:
   System definition file #P"/<<PKGBUILDDIR>>/sysdef.asd"
   contains definition for system "chaosx". Please only define "sysdef" and
   secondary systems with a name starting with "sysdef/" (e.g. "sysdef/test")
   in that file.
WARNING:
   System definition file
   #P"/<<PKGBUILDDIR>>/cl-ppcre/cl-ppcre.asd" contains
   definition for system "cl-ppcre-test". Please only define "cl-ppcre" and
   secondary systems with a name starting with "cl-ppcre/" (e.g.
   "cl-ppcre/test") in that file.
WARNING: System definition file #P"/<<PKGBUILDDIR>>/cl-ppcre/cl-ppcre.asd" contains definition for system "cl-ppcre-test". Please only define "cl-ppcre" and secondary systems with a name starting with "cl-ppcre/" (e.g. "cl-ppcre/test") in that file.
.)
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/packages.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-USER)
; compiling (DEFPACKAGE :CL-PPCRE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/packages-tmpGHU3ALSV.fasl
; compilation finished in 0:00:00.010
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/specials.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFVAR *STANDARD-OPTIMIZE-SETTINGS* ...)
; compiling (DEFVAR *SPECIAL-OPTIMIZE-SETTINGS* ...)
; compiling (DEFVAR *EXTENDED-MODE-P* ...)
; compiling (DECLAIM (BOOLEAN *EXTENDED-MODE-P*))
; compiling (DEFVAR *REGEX-CHAR-CODE-LIMIT* ...)
; compiling (DECLAIM (FIXNUM *REGEX-CHAR-CODE-LIMIT*))
; compiling (DEFVAR *STRING* ...)
; compiling (DECLAIM (SIMPLE-STRING *STRING*))
; compiling (DEFVAR *START-POS* ...)
; compiling (DECLAIM (FIXNUM *START-POS*))
; compiling (DEFVAR *REAL-START-POS* ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *END-POS* ...)
; compiling (DECLAIM (FIXNUM *END-POS*))
; compiling (DEFVAR *REG-STARTS* ...)
; compiling (DECLAIM (SIMPLE-VECTOR *REG-STARTS*))
; compiling (DEFVAR *REGS-MAYBE-START* ...)
; compiling (DECLAIM (SIMPLE-VECTOR *REGS-MAYBE-START*))
; compiling (DEFVAR *REG-ENDS* ...)
; compiling (DECLAIM (SIMPLE-VECTOR *REG-ENDS*))
; compiling (DEFVAR *END-STRING-POS* ...)
; compiling (DEFVAR *REP-NUM* ...)
; compiling (DECLAIM (FIXNUM *REP-NUM*))
; compiling (DEFVAR *ZERO-LENGTH-NUM* ...)
; compiling (DECLAIM (FIXNUM *ZERO-LENGTH-NUM*))
; compiling (DEFVAR *REPEAT-COUNTERS* ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *LAST-POS-STORES* ...)
; compiling (DECLAIM (SIMPLE-VECTOR *LAST-POS-STORES*))
; compiling (DEFVAR *USE-BMH-MATCHERS* ...)
; compiling (DEFVAR *OPTIMIZE-CHAR-CLASSES* ...)
; compiling (DEFVAR *PROPERTY-RESOLVER* ...)
; compiling (DEFVAR *ALLOW-QUOTING* ...)
; compiling (DEFVAR *ALLOW-NAMED-REGISTERS* ...)
; compiling (PUSHNEW :CL-PPCRE ...)
; compiling (DEFVAR *HYPERDOC-BASE-URI* ...)
; compiling (LET (#) ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/specials-tmpAAURSO1.fasl
; compilation finished in 0:00:00.030
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/util.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFMACRO DEFCONSTANT ...)
; compiling (DEFMACRO WITH-UNIQUE-NAMES ...)
; compiling (DEFMACRO WITH-REBINDING ...)
; compiling (DECLAIM (INLINE DIGIT-CHAR-P))
; compiling (DEFUN DIGIT-CHAR-P ...)
; compiling (DECLAIM (INLINE WORD-CHAR-P))
; compiling (DEFUN WORD-CHAR-P ...)
; compiling (DEFCONSTANT +WHITESPACE-CHAR-STRING+ ...)
; compiling (DEFUN WHITESPACEP ...)
; compiling (DEFMACRO MAYBE-COERCE-TO-SIMPLE-STRING ...)
; compiling (DECLAIM (INLINE NSUBSEQ))
; compiling (DEFUN NSUBSEQ ...)
; compiling (DEFUN NORMALIZE-VAR-LIST ...)
; compiling (DEFUN STRING-LIST-TO-SIMPLE-STRING ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/util.lisp
; in: DEFUN STRING-LIST-TO-SIMPLE-STRING
;     (REPLACE CL-PPCRE::RESULT-STRING STRING :START1 CL-PPCRE::CURR-POS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a STRING, not a (SIMPLE-ARRAY CHARACTER (*)).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a STRING, not a SIMPLE-BASE-STRING.

; compiling (DEFUN COMPLEMENT* ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/util.lisp
; in: DEFUN COMPLEMENT*
;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/util-tmp5GEXGEG5.fasl
; compilation finished in 0:00:00.109
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/errors.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFVAR *SYNTAX-ERROR-STRING* ...)
; compiling (DEFINE-CONDITION PPCRE-ERROR ...)
; compiling (DEFINE-CONDITION PPCRE-SYNTAX-ERROR ...)
; compiling (SETF (DOCUMENTATION # ...) ...)
; compiling (SETF (DOCUMENTATION # ...) ...)
; compiling (DEFINE-CONDITION PPCRE-INVOCATION-ERROR ...)
; compiling (DEFMACRO SIGNAL-SYNTAX-ERROR* ...)
; compiling (DEFMACRO SIGNAL-SYNTAX-ERROR ...)
; compiling (DEFMACRO SIGNAL-INVOCATION-ERROR ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/errors-tmpAR3FSGEY.fasl
; compilation finished in 0:00:00.039
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/charset.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFCONSTANT +PROBE-DEPTH+ ...)
; compiling (DEFUN MAKE-CHAR-VECTOR ...)
; compiling (DEFSTRUCT (CHARSET #) ...)
; compiling (DEFMETHOD MAKE-LOAD-FORM ...)
; compiling (DECLAIM (INLINE MIX))
; compiling (DEFUN MIX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charset.lisp
; in: DEFUN MIX
;     (+ CL-PPCRE::CODE CL-PPCRE::HASH)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 64) &REST
;                                                          T).
;       etc.

; compiling (DECLAIM (INLINE COMPUTE-INDEX))
; compiling (DEFUN COMPUTE-INDEX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charset.lisp
; in: DEFUN COMPUTE-INDEX
;     (LENGTH VECTOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR)))
; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (TRUNCATE NUMBER SB-C::DIVISOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a DOUBLE-FLOAT.

;     (1+ (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR))))
; ==>
;   (+ (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR))) 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a (OR
;                            (RATIONAL (-4611686018427387899)
;                                      (4611686018427387899))
;                            DOUBLE-FLOAT SINGLE-FLOAT), not a RATIONAL.

;     (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR)))
; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF NOT IF ZEROP 
; ==>
;   (= REM 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR
;                            (RATIONAL (-4611686018427387899)
;                                      (4611686018427387899))
;                            DOUBLE-FLOAT SINGLE-FLOAT), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF MINUSP 
; ==>
;   (< NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FLOOR 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF VALUES 
; ==>
;   (+ REM SB-C::DIVISOR)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR
;                                (RATIONAL (-4611686018427387899)
;                                          (4611686018427387899))
;                                DOUBLE-FLOAT SINGLE-FLOAT), not a FIXNUM.
;       The result is a (VALUES
;                        (OR
;                         (RATIONAL (-4611686018427387899) (4611686018427387899))
;                         DOUBLE-FLOAT SINGLE-FLOAT)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a (OR
;                                (RATIONAL (-4611686018427387899)
;                                          (4611686018427387899))
;                                DOUBLE-FLOAT SINGLE-FLOAT), not a (SIGNED-BYTE
;                                                                   64).
;       The result is a (VALUES
;                        (OR
;                         (RATIONAL (-4611686018427387899) (4611686018427387899))
;                         DOUBLE-FLOAT SINGLE-FLOAT)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (1+ (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR))))
; ==>
;   (+ (MOD CL-PPCRE::HASH (1- (LENGTH VECTOR))) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (OR
;                                (RATIONAL (-4611686018427387899)
;                                          (4611686018427387899))
;                                DOUBLE-FLOAT SINGLE-FLOAT), not a FIXNUM.
;       The result is a (VALUES
;                        (OR SINGLE-FLOAT DOUBLE-FLOAT
;                            (RATIONAL (-4611686018427387898)
;                                      (4611686018427387900)))
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR
;                                (RATIONAL (-4611686018427387899)
;                                          (4611686018427387899))
;                                DOUBLE-FLOAT SINGLE-FLOAT), not a FIXNUM.
;       The result is a (VALUES
;                        (OR SINGLE-FLOAT DOUBLE-FLOAT
;                            (RATIONAL (-4611686018427387898)
;                                      (4611686018427387900)))
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN IN-CHARSET-P ...)
; compiling (DEFUN ADD-TO-CHARSET ...)
; compiling (DEFUN %ADD-TO-CHARSET ...)
; compiling (DEFUN %ADD-TO-CHARSET/EXPAND ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charset.lisp
; in: DEFUN %ADD-TO-CHARSET/EXPAND
;     (* 2 CL-PPCRE::NEW-SIZE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (>= CL-PPCRE::NEW-SIZE 371370)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 371370.0d0)
;                               (SINGLE-FLOAT * 371370.0)
;                               (RATIONAL * 371370)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (* 2 CL-PPCRE::NEW-SIZE)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (>= CL-PPCRE::NEW-SIZE 371370)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (LET* ((CL-PPCRE::OLD-VECTOR (CL-PPCRE::CHARSET-VECTOR SET))
;            (CL-PPCRE::NEW-SIZE (* 2 (LENGTH CL-PPCRE::OLD-VECTOR))))
;       (TAGBODY
;        :RETRY
;         (MULTIPLE-VALUE-BIND (CL-PPCRE::NEW-DEPTH CL-PPCRE::NEW-VECTOR)
;             (IF (>= CL-PPCRE::NEW-SIZE 371370)
;                 (VALUES 0 #)
;                 (VALUES CL-PPCRE::+PROBE-DEPTH+ #))
;           (SETF # CL-PPCRE::NEW-DEPTH
;                 # CL-PPCRE::NEW-VECTOR)
;           (FLET (#)
;             (CL-PPCRE::TRY-ADD CHAR)
;             (DOTIMES # #))))
;       (INCF (CL-PPCRE::CHARSET-COUNT SET))
;       T)
; 
; note: doing signed word to integer coercion (cost 20) to NEW-SIZE

; compiling (DEFUN MAP-CHARSET ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charset.lisp
; in: DEFUN MAP-CHARSET
;     (ZEROP (DECF CL-PPCRE::N))
; ==>
;   (= (DECF CL-PPCRE::N) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (DECF CL-PPCRE::N)
; --> SETQ THE SB-IMPL::XSUBTRACT BLOCK 
; ==>
;   (- SB-IMPL::B SB-IMPL::A)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN CREATE-CHARSET-FROM-TEST-FUNCTION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charset.lisp
; in: DEFUN CREATE-CHARSET-FROM-TEST-FUNCTION
;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (LOOP CL-PPCRE::WITH CL-PPCRE::CHARSET = (CL-PPCRE::MAKE-CHARSET)
;           CL-PPCRE::FOR CL-PPCRE::CODE CL-PPCRE::FROM CL-PPCRE::START CL-PPCRE::BELOW
;           CL-PPCRE::END
;           CL-PPCRE::FOR ...)
; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/charset-tmpJAIDFZTC.fasl
; compilation finished in 0:00:00.211
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/charmap.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFSTRUCT (CHARMAP #) ...)
; compiling (DEFMETHOD MAKE-LOAD-FORM ...)
; compiling (DECLAIM (INLINE IN-CHARMAP-P))
; compiling (DEFUN IN-CHARMAP-P ...)
; compiling (DEFUN CHARMAP-CONTENTS ...)
; compiling (DEFUN MAKE-CHARMAP ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charmap.lisp
; in: DEFUN MAKE-CHARMAP
;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

; compiling (DEFUN CREATE-CHARMAP-FROM-TEST-FUNCTION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/charmap.lisp
; in: DEFUN CREATE-CHARMAP-FROM-TEST-FUNCTION
;     (LOOP CL-PPCRE::FOR CL-PPCRE::CODE CL-PPCRE::FROM (1-
;                                                        CL-PPCRE::END) CL-PPCRE::DOWNTO CL-PPCRE::START
;           CL-PPCRE::FOR CHAR = (CODE-CHAR CL-PPCRE::CODE)
;           CL-PPCRE::UNTIL ...)
; --> BLOCK LET LET TAGBODY WHEN IF 
; ==>
;   (< CL-PPCRE::CODE #:LOOP-LIMIT-18)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (LOOP CL-PPCRE::FOR CL-PPCRE::CODE CL-PPCRE::FROM CL-PPCRE::START CL-PPCRE::BELOW
;           CL-PPCRE::END
;           CL-PPCRE::FOR CHAR = (CODE-CHAR CL-PPCRE::CODE)
;           CL-PPCRE::UNTIL ...)
; --> BLOCK LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> BLOCK LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> BLOCK LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> BLOCK LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

;     (1- CL-PPCRE::END)
; ==>
;   (- CL-PPCRE::END 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (LOOP CL-PPCRE::FOR CL-PPCRE::CODE CL-PPCRE::FROM (1-
;                                                        CL-PPCRE::END) CL-PPCRE::DOWNTO CL-PPCRE::START
;           CL-PPCRE::FOR CHAR = (CODE-CHAR CL-PPCRE::CODE)
;           CL-PPCRE::UNTIL ...)
; --> BLOCK LET LET TAGBODY WHEN IF 
; ==>
;   (< CL-PPCRE::CODE #:LOOP-LIMIT-18)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/charmap-tmp8V3J6PE9.fasl
; compilation finished in 0:00:00.184
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/chartest.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFUN CREATE-HASH-TABLE-FROM-TEST-FUNCTION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/chartest.lisp
; in: DEFUN CREATE-HASH-TABLE-FROM-TEST-FUNCTION
;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (LOOP CL-PPCRE::WITH HASH-TABLE = (MAKE-HASH-TABLE)
;           CL-PPCRE::FOR CL-PPCRE::CODE CL-PPCRE::FROM CL-PPCRE::START CL-PPCRE::BELOW
;           CL-PPCRE::END
;           CL-PPCRE::FOR ...)
; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> BLOCK LET LET LET TAGBODY WHEN IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFUN CREATE-OPTIMIZED-TEST-FUNCTION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/chartest.lisp
; in: DEFUN CREATE-OPTIMIZED-TEST-FUNCTION
;     (CEILING (- CL-PPCRE::END CL-PPCRE::START) 2)
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (TRUNCATE NUMBER SB-C::DIVISOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert division by 2^k to shift
; due to type uncertainty:
;   The first argument is a REAL, not a INTEGER.
; 
; note: unable to
;   convert integer division to multiplication
; due to type uncertainty:
;   The first argument is a REAL, not a (UNSIGNED-BYTE 64).

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF NOT IF ZEROP 
; ==>
;   (= REM 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (RATIONAL (-2) (2)) DOUBLE-FLOAT
;                               SINGLE-FLOAT), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (TRUNCATE NUMBER SB-C::DIVISOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert division by 2^k to shift
; due to type uncertainty:
;   The first argument is a REAL, not a INTEGER.
; 
; note: unable to
;   convert integer division to multiplication
; due to type uncertainty:
;   The first argument is a REAL, not a (UNSIGNED-BYTE 64).

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF NOT IF ZEROP 
; ==>
;   (= REM 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (RATIONAL (-2) (2)) DOUBLE-FLOAT
;                               SINGLE-FLOAT), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (- CL-PPCRE::END CL-PPCRE::START)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES DOUBLE-FLOAT &REST
;                                                              T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES SINGLE-FLOAT &REST
;                                                              T).
;       etc.

;     (CEILING (- CL-PPCRE::END CL-PPCRE::START) 2)
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF VALUES 
; ==>
;   (+ SB-C::TRU 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (<= (HASH-TABLE-COUNT HASH-TABLE)
;         (CEILING (- CL-PPCRE::END CL-PPCRE::START) 2))
; --> IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a INTEGER, not a FIXNUM.

;     (- CL-PPCRE::END CL-PPCRE::START)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES DOUBLE-FLOAT &REST
;                                                              T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES SINGLE-FLOAT &REST
;                                                              T).
;       etc.

;     (CEILING (- CL-PPCRE::END CL-PPCRE::START) 2)
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF VALUES 
; ==>
;   (+ SB-C::TRU 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (<= (CL-PPCRE::CHARSET-COUNT CL-PPCRE::CHARSET)
;         (CEILING (- CL-PPCRE::END CL-PPCRE::START) 2))
; --> IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a INTEGER, not a FIXNUM.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/chartest-tmp9V47YWQF.fasl
; compilation finished in 0:00:00.112
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DECLAIM (INLINE MAP-CHAR-TO-SPECIAL-CLASS))
; compiling (DEFUN MAP-CHAR-TO-SPECIAL-CHAR-CLASS ...)
; compiling (DEFSTRUCT (LEXER #) ...)
; compiling (DEFUN MAKE-LEXER ...)
; compiling (DECLAIM (INLINE END-OF-STRING-P))
; compiling (DEFUN END-OF-STRING-P ...)
; compiling (DECLAIM (INLINE LOOKING-AT-P))
; compiling (DEFUN LOOKING-AT-P ...)
; compiling (DECLAIM (INLINE NEXT-CHAR-NON-EXTENDED))
; compiling (DEFUN NEXT-CHAR-NON-EXTENDED ...)
; compiling (DEFUN NEXT-CHAR ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp
; in: DEFUN NEXT-CHAR
;     (- (CL-PPCRE::LEXER-POS CL-PPCRE::LEXER) 2)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DECLAIM (INLINE FAIL))
; compiling (DEFUN FAIL ...)
; compiling (DEFUN GET-NUMBER ...)
; compiling (DECLAIM (INLINE TRY-NUMBER))
; compiling (DEFUN TRY-NUMBER ...)
; compiling (DECLAIM (INLINE MAKE-CHAR-FROM-CODE))
; compiling (DEFUN MAKE-CHAR-FROM-CODE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp
; in: DEFUN MAKE-CHAR-FROM-CODE
;     (CL-PPCRE::SIGNAL-SYNTAX-ERROR* CL-PPCRE::ERROR-POS
;                                     "No character for hex-code ~X." NUMBER)
; --> ERROR 
; ==>
;   CL-PPCRE::ERROR-POS
; 
; note: deleting unreachable code

; compiling (DEFUN UNESCAPE-CHAR ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp
; in: DEFUN UNESCAPE-CHAR
;     (CL-PPCRE::MAKE-CHAR-FROM-CODE NUMBER CL-PPCRE::ERROR-POS)
; --> BLOCK LET OR LET IF CL-PPCRE::SIGNAL-SYNTAX-ERROR* ERROR LIST CONS 
; ==>
;   NUMBER
; 
; note: deleting unreachable code
; 
; note: deleting unreachable code

;     (CHAR-UPCASE CL-PPCRE::NEXT-CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

; compiling (DEFUN READ-CHAR-PROPERTY ...)
; compiling (DEFUN COLLECT-CHAR-CLASS ...)
; compiling (DEFUN MAYBE-PARSE-FLAGS ...)
; compiling (DEFUN GET-QUANTIFIER ...)
; compiling (DEFUN PARSE-REGISTER-NAME-AUX ...)
; compiling (DEFUN GET-TOKEN ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp
; in: DEFUN GET-TOKEN
;     (CL-PPCRE::SIGNAL-SYNTAX-ERROR "End of string following '(?<'.")
; --> CL-PPCRE::SIGNAL-SYNTAX-ERROR* ERROR 
; ==>
;   "End of string following '(?<'."
; 
; note: deleting unreachable code

; compiling (DECLAIM (INLINE UNGET-TOKEN))
; file: /<<PKGBUILDDIR>>/cl-ppcre/lexer.lisp
; in: DECLAIM (INLINE UNGET-TOKEN)
;     (DECLAIM (INLINE CL-PPCRE::UNGET-TOKEN))
; --> EVAL-WHEN 
; ==>
;   (SB-C::%PROCLAIM '(INLINE CL-PPCRE::UNGET-TOKEN) (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   Proclaiming CL-PPCRE::UNGET-TOKEN to be INLINE, but 1 call to it was previously
;   compiled. A declaration of NOTINLINE at the call site will eliminate this
;   warning, as will proclaiming and defining the function before its first
;   potential use.

; compiling (DEFUN UNGET-TOKEN ...)
; compiling (DECLAIM (INLINE START-OF-SUBEXPR-P))
; compiling (DEFUN START-OF-SUBEXPR-P ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/lexer-tmp9BN22RMA.fasl
; compilation finished in 0:00:00.440
WARNING:
   Lisp compilation had style-warnings while
   compiling #<CL-SOURCE-FILE "cl-ppcre" "lexer">
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/parser.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFUN GROUP ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/parser.lisp
; in: DEFUN GROUP
;     (+ CL-PPCRE::OPEN-PAREN-POS 2)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN GREEDY-QUANT ...)
; compiling (DEFUN QUANT ...)
; compiling (DEFUN SEQ ...)
; compiling (DEFUN REG-EXPR ...)
; compiling (DEFUN PARSE-STRING ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/parser-tmp1CXFJSK9.fasl
; compilation finished in 0:00:00.086
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/regex-class.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFCLASS REGEX ...)
; compiling (DEFCLASS SEQ ...)
; compiling (DEFCLASS ALTERNATION ...)
; compiling (DEFCLASS LOOKAHEAD ...)
; compiling (DEFCLASS LOOKBEHIND ...)
; compiling (DEFCLASS REPETITION ...)
; compiling (DEFMETHOD PRINT-OBJECT ...)
; compiling (DEFCLASS REGISTER ...)
; compiling (DEFMETHOD PRINT-OBJECT ...)
; compiling (DEFCLASS STANDALONE ...)
; compiling (DEFCLASS BACK-REFERENCE ...)
; compiling (DEFCLASS CHAR-CLASS ...)
; compiling (DEFCLASS STR ...)
; compiling (DEFMETHOD PRINT-OBJECT ...)
; compiling (DEFCLASS ANCHOR ...)
; compiling (DEFCLASS EVERYTHING ...)
; compiling (DEFCLASS WORD-BOUNDARY ...)
; compiling (DEFCLASS BRANCH ...)
; compiling (DEFCLASS FILTER ...)
; compiling (DEFCLASS VOID ...)
; compiling (DEFMETHOD INITIALIZE-INSTANCE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class.lisp
; in: DEFMETHOD INITIALIZE-INSTANCE :AFTER (STR)
;     (COERCE CL-PPCRE::STR-SLOT 'SIMPLE-STRING)
; --> THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (LENGTH (CL-PPCRE::STR CL-PPCRE::STR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/regex-class-tmpX4BRKI0R.fasl
; compilation finished in 0:00:00.075
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFMETHOD LEN ...)
; compiling (DEFMETHOD STR ...)
; compiling (DEFMETHOD SKIP ...)
; compiling (DEFMETHOD START-OF-END-STRING-P ...)
; compiling (DEFGENERIC CASE-MODE ...)
; compiling (DEFMETHOD CASE-MODE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD CASE-MODE (STR T)
;     (ZEROP (CL-PPCRE::LEN CL-PPCRE::STR))
; ==>
;   (= (CL-PPCRE::LEN CL-PPCRE::STR) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFMETHOD CASE-MODE ...)
; compiling (DEFGENERIC COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFMETHOD COPY-REGEX ...)
; compiling (DEFGENERIC REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFMETHOD REMOVE-REGISTERS ...)
; compiling (DEFGENERIC EVERYTHINGP ...)
; compiling (DEFMETHOD EVERYTHINGP ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD EVERYTHINGP (SEQ)
;     (LENGTH CL-PPCRE::CLEANED-ELEMENTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFMETHOD EVERYTHINGP ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD EVERYTHINGP (ALTERNATION)
;     (DEFMETHOD CL-PPCRE::EVERYTHINGP
;                ((CL-PPCRE::ALTERNATION CL-PPCRE::ALTERNATION))
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (WITH-SLOTS (CL-PPCRE::CHOICES)
;           CL-PPCRE::ALTERNATION
;         (AND (= 1 (LENGTH CL-PPCRE::CHOICES))
;              (CL-PPCRE::EVERYTHINGP (FIRST CL-PPCRE::CHOICES)))))
; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF = 
; ==>
;   (LENGTH (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::CHOICES))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFMETHOD EVERYTHINGP ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD EVERYTHINGP (REPETITION)
;     (DEFMETHOD CL-PPCRE::EVERYTHINGP
;                ((CL-PPCRE::REPETITION CL-PPCRE::REPETITION))
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (WITH-SLOTS (CL-PPCRE::MAXIMUM CL-PPCRE::MINIMUM CL-PPCRE::REGEX)
;           CL-PPCRE::REPETITION
;         (AND CL-PPCRE::MAXIMUM (= 1 CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM)
;              (CL-PPCRE::EVERYTHINGP CL-PPCRE::REGEX))))
; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF = 
; --> (LAMBDA (#:G4 #:G3 #:G2) (DECLARE (TYPE NUMBER #:G4 #:G3 #:G2)) (IF (= #:G4 #:G3) (IF (= #:G3 #:G2) T NIL) NIL)) 
; --> SB-C::%FUNCALL IF 
; ==>
;   (= #:G4 #:G3)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF = 
; --> (LAMBDA (#:G4 #:G3 #:G2) (DECLARE (TYPE NUMBER #:G4 #:G3 #:G2)) (IF (= #:G4 #:G3) (IF (= #:G3 #:G2) T NIL) NIL)) 
; --> SB-C::%FUNCALL IF IF 
; ==>
;   (= #:G3 #:G2)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 1.0d0 1.0d0) (SINGLE-FLOAT 1.0 1.0)
;                               (INTEGER 1 1)
;                               (COMPLEX (DOUBLE-FLOAT 1.0d0 1.0d0))
;                               (COMPLEX (SINGLE-FLOAT 1.0 1.0))
;                               (COMPLEX (INTEGER 1 1))), not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 1.0d0 1.0d0) (SINGLE-FLOAT 1.0 1.0)
;                               (INTEGER 1 1)
;                               (COMPLEX (DOUBLE-FLOAT 1.0d0 1.0d0))
;                               (COMPLEX (SINGLE-FLOAT 1.0 1.0))
;                               (COMPLEX (INTEGER 1 1))), not a (OR
;                                                                (COMPLEX
;                                                                 SINGLE-FLOAT)
;                                                                (COMPLEX
;                                                                 DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR (DOUBLE-FLOAT 1.0d0 1.0d0)
;                                   (SINGLE-FLOAT 1.0 1.0) (INTEGER 1 1)
;                                   (COMPLEX (DOUBLE-FLOAT 1.0d0 1.0d0))
;                                   (COMPLEX (SINGLE-FLOAT 1.0 1.0))
;                                   (COMPLEX (INTEGER 1 1))), not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR (DOUBLE-FLOAT 1.0d0 1.0d0)
;                                   (SINGLE-FLOAT 1.0 1.0) (INTEGER 1 1)
;                                   (COMPLEX (DOUBLE-FLOAT 1.0d0 1.0d0))
;                                   (COMPLEX (SINGLE-FLOAT 1.0 1.0))
;                                   (COMPLEX (INTEGER 1 1))), not a (COMPLEX
;                                                                    DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; compiling (DEFMETHOD EVERYTHINGP ...)
; compiling (DEFMETHOD EVERYTHINGP ...)
; compiling (DEFMETHOD EVERYTHINGP ...)
; compiling (DEFMETHOD EVERYTHINGP ...)
; compiling (DEFGENERIC REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-LENGTH (SEQ)
;     (LOOP CL-PPCRE::FOR CL-PPCRE::SUB-REGEX CL-PPCRE::IN (CL-PPCRE::ELEMENTS
;                                                           CL-PPCRE::SEQ)
;           CL-PPCRE::FOR CL-PPCRE::LEN = (CL-PPCRE::REGEX-LENGTH
;                                          CL-PPCRE::SUB-REGEX)
;           IF (NOT CL-PPCRE::LEN)
;           DO ...)
; --> BLOCK LET LET SB-LOOP::WITH-SUM-COUNT LET TAGBODY SETQ THE 
; ==>
;   (+ #:LOOP-SUM-4 CL-PPCRE::LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD REGEX-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-LENGTH (ALTERNATION)
;     (/= CL-PPCRE::LEN CL-PPCRE::OLD-LEN)
; --> IF 
; ==>
;   (= CL-PPCRE::LEN CL-PPCRE::OLD-LEN)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; compiling (DEFMETHOD REGEX-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-LENGTH (BRANCH)
;     (EQL CL-PPCRE::THEN-LENGTH
;          (CL-PPCRE::REGEX-LENGTH (CL-PPCRE::ELSE-REGEX CL-PPCRE::BRANCH)))
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (NOT NULL), not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (NOT NULL), not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; compiling (DEFMETHOD REGEX-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-LENGTH (REPETITION)
;     (DEFMETHOD CL-PPCRE::REGEX-LENGTH
;                ((CL-PPCRE::REPETITION CL-PPCRE::REPETITION))
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (WITH-SLOTS (CL-PPCRE::LEN CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM)
;           CL-PPCRE::REPETITION
;         (IF (AND CL-PPCRE::LEN (EQL CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM))
;             (* CL-PPCRE::MINIMUM CL-PPCRE::LEN)
;             NIL)))
; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF 
; ==>
;   (* (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;      (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN))
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
;   The second argument is a NUMBER, not a INTEGER.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF 
; ==>
;   (EQL (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;        (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MAXIMUM))
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF 
; ==>
;   (* (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;      (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN))
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline float arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES
;                                                         (COMPLEX SINGLE-FLOAT)
;                                                         &REST T).
;       etc.

; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFMETHOD REGEX-LENGTH ...)
; compiling (DEFGENERIC REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-MIN-LENGTH (SEQ)
;     (LOOP CL-PPCRE::FOR CL-PPCRE::SUB-REGEX CL-PPCRE::IN (CL-PPCRE::ELEMENTS
;                                                           CL-PPCRE::SEQ)
;           CL-PPCRE::FOR CL-PPCRE::LEN = (CL-PPCRE::REGEX-MIN-LENGTH
;                                          CL-PPCRE::SUB-REGEX)
;           CL-PPCRE::SUM CL-PPCRE::LEN)
; --> BLOCK LET LET SB-LOOP::WITH-SUM-COUNT LET TAGBODY SETQ THE 
; ==>
;   (+ #:LOOP-SUM-4 CL-PPCRE::LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-MIN-LENGTH (ALTERNATION)
;     (LOOP CL-PPCRE::FOR CL-PPCRE::SUB-REGEX CL-PPCRE::IN (CL-PPCRE::CHOICES
;                                                           CL-PPCRE::ALTERNATION)
;           CL-PPCRE::FOR CL-PPCRE::LEN = (CL-PPCRE::REGEX-MIN-LENGTH
;                                          CL-PPCRE::SUB-REGEX)
;           CL-PPCRE::MINIMIZE CL-PPCRE::LEN)
; --> BLOCK LET LET SB-LOOP::WITH-MINIMAX-VALUE LET TAGBODY 
; --> SB-LOOP::LOOP-ACCUMULATE-MINIMAX-VALUE PROGN WHEN IF OR LET IF < IF 
; ==>
;   (< #:LOOP-MAXMIN-TEMP-8 #:LOOP-MAXMIN-7)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-MIN-LENGTH (BRANCH)
;     (MIN (CL-PPCRE::REGEX-MIN-LENGTH (CL-PPCRE::THEN-REGEX CL-PPCRE::BRANCH))
;          (CL-PPCRE::REGEX-MIN-LENGTH (CL-PPCRE::ELSE-REGEX CL-PPCRE::BRANCH)))
; --> LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD REGEX-MIN-LENGTH (REPETITION)
;     (* (CL-PPCRE::MINIMUM CL-PPCRE::REPETITION)
;        (CL-PPCRE::MIN-LEN CL-PPCRE::REPETITION))
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
;   The second argument is a NUMBER, not a INTEGER.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline float arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES
;                                                         (COMPLEX SINGLE-FLOAT)
;                                                         &REST T).
;       etc.

; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFMETHOD REGEX-MIN-LENGTH ...)
; compiling (DEFGENERIC COMPUTE-OFFSETS ...)
; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (ALTERNATION T)
;     (/= CL-PPCRE::CURR-OFFSET CL-PPCRE::OLD-OFFSET)
; --> IF 
; ==>
;   (= CL-PPCRE::CURR-OFFSET CL-PPCRE::OLD-OFFSET)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (BRANCH T)
;     (EQL CL-PPCRE::THEN-OFFSET
;          (CL-PPCRE::COMPUTE-OFFSETS (CL-PPCRE::ELSE-REGEX CL-PPCRE::BRANCH)
;           CL-PPCRE::START-POS))
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (NOT NULL), not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (NOT NULL), not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (REPETITION T)
;     (DEFMETHOD CL-PPCRE::COMPUTE-OFFSETS
;                ((CL-PPCRE::REPETITION CL-PPCRE::REPETITION) CL-PPCRE::START-POS)
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (WITH-SLOTS (CL-PPCRE::LEN CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM)
;           CL-PPCRE::REPETITION
;         (IF (AND CL-PPCRE::LEN (EQ CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM))
;             (+ CL-PPCRE::START-POS (* CL-PPCRE::MINIMUM CL-PPCRE::LEN))
;             NIL)))
; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF + 
; ==>
;   (* (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;      (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN))
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
;   The second argument is a NUMBER, not a INTEGER.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline float arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES
;                                                         (COMPLEX SINGLE-FLOAT)
;                                                         &REST T).
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF 
; ==>
;   (+ CL-PPCRE::START-POS
;      (* (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;         (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN)))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (CHAR-CLASS T)
;     (1+ CL-PPCRE::START-POS)
; ==>
;   (+ CL-PPCRE::START-POS 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (EVERYTHING T)
;     (1+ CL-PPCRE::START-POS)
; ==>
;   (+ CL-PPCRE::START-POS 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (STR T)
;     (+ CL-PPCRE::START-POS (CL-PPCRE::LEN CL-PPCRE::STR))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; compiling (DEFMETHOD COMPUTE-OFFSETS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/regex-class-util.lisp
; in: DEFMETHOD COMPUTE-OFFSETS (FILTER T)
;     (+ CL-PPCRE::START-POS CL-PPCRE::LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-OFFSETS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/regex-class-util-tmpQ371UGST.fasl
; compilation finished in 0:00:00.752
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/convert.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFMACRO CASE-INSENSITIVE-MODE-P ...)
; compiling (DEFMACRO MULTI-LINE-MODE-P ...)
; compiling (DEFMACRO SINGLE-LINE-MODE-P ...)
; compiling (DEFUN SET-FLAG ...)
; compiling (DEFGENERIC RESOLVE-PROPERTY ...)
; compiling (DEFUN CONVERT-CHAR-CLASS-TO-TEST-FUNCTION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFUN CONVERT-CHAR-CLASS-TO-TEST-FUNCTION
;     (FUNCALL CL-PPCRE::TEST-FUNCTION (CHAR-DOWNCASE CHAR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-DOWNCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION (CHAR-UPCASE CHAR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-UPCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION (CHAR-DOWNCASE CHAR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-DOWNCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION (CHAR-UPCASE CHAR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-UPCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CHAR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-DOWNCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-UPCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CL-PPCRE::CHAR-DOWN)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CL-PPCRE::CHAR-UP)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (CHAR-DOWNCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-UPCASE CHAR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CL-PPCRE::CHAR-DOWN)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

;     (FUNCALL CL-PPCRE::TEST-FUNCTION CL-PPCRE::CHAR-UP)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TEST-FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST-FUNCTION is not known to be a function

; compiling (DEFUN MAYBE-SPLIT-REPETITION ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFUN MAYBE-SPLIT-REPETITION
;     (- CL-PPCRE::MAXIMUM CL-PPCRE::MINIMUM)
; 
; note: doing signed word to integer coercion (cost 20)

; compiling (DEFUN MAYBE-ACCUMULATE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFUN MAYBE-ACCUMULATE
;     (SETF (SUBSEQ (SLOT-VALUE CL-PPCRE::STARTS-WITH 'CL-PPCRE::STR)
;                   (- (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH)
;                      (CL-PPCRE::LEN CL-PPCRE::STR)))
;             (CL-PPCRE::STR CL-PPCRE::STR)
;           (CL-PPCRE::SKIP CL-PPCRE::STR) T)
; --> PROGN SETF LET* 
; ==>
;   (REPLACE #:SEQUENCE #:NEW1 :START1 #:START :END1 NIL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The second argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES SIMPLE-BASE-STRING
;                                                              &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY CHARACTER
;                                                        (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY SINGLE-FLOAT (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY SINGLE-FLOAT (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        SINGLE-FLOAT (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY DOUBLE-FLOAT (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY DOUBLE-FLOAT (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        DOUBLE-FLOAT (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SIMPLE-BIT-VECTOR.
;   The second argument is a SEQUENCE, not a SIMPLE-BIT-VECTOR.
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES SIMPLE-BIT-VECTOR
;                                                              &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 2) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 2) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 2) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 4) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 4) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 4) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 7) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 7) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 7) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 8) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 8) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 8) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 15) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 15)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 15) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 16) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 16)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 16) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 31) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 31)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 31) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 32) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 32)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 32) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 62) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 62)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 62) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 63) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 63)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 63) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 64) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 64)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (UNSIGNED-BYTE 64) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 8) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 8) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (SIGNED-BYTE 8) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 16) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 16) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (SIGNED-BYTE 16) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 32) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 32) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (SIGNED-BYTE 32) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY FIXNUM (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY FIXNUM (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY FIXNUM (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 64) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 64) (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (SIGNED-BYTE 64) (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX SINGLE-FLOAT)
;                                            (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX SINGLE-FLOAT)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (COMPLEX SINGLE-FLOAT)
;                                                        (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX DOUBLE-FLOAT)
;                                            (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX DOUBLE-FLOAT)
;                                             (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY
;                                                        (COMPLEX DOUBLE-FLOAT)
;                                                        (*))
;                                                       &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SIMPLE-VECTOR.
;   The second argument is a SEQUENCE, not a SIMPLE-VECTOR.
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES SIMPLE-VECTOR
;                                                              &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES SIMPLE-BASE-STRING
;                                                              &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The second argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The result is a (VALUES SEQUENCE &OPTIONAL), not a (VALUES
;                                                       (SIMPLE-ARRAY CHARACTER
;                                                        (*))
;                                                       &REST T).

;     (+ (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH) (CL-PPCRE::LEN CL-PPCRE::STR))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (- (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH) (CL-PPCRE::LEN CL-PPCRE::STR))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DECLAIM (INLINE CONVERT-AUX))
; compiling (DEFUN CONVERT-AUX ...)
; compiling (DEFGENERIC CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ((EQL :BRANCH) T)
;     (LENGTH (CL-PPCRE::CHOICES CL-PPCRE::ALTERNATIONS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ((EQL :GREEDY-REPETITION) T)
;     (ZEROP LENGTH)
; --> = IF 
; ==>
;   (= LENGTH 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ((EQL :NAMED-REGISTER) T)
;     (COPY-SEQ (SECOND CL-PPCRE::PARSE-TREE))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ((EQL :BACK-REFERENCE) T)
;     (STRING= CL-PPCRE::NAME CL-PPCRE::BACKREF-NAME)
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                (AND (NOT NULL) SYMBOL) CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SIMPLE-STRING.
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                (AND (NOT NULL) SYMBOL)
;                                CHARACTER), not a SIMPLE-STRING.

;     (COPY-SEQ CL-PPCRE::BACKREF-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (- CL-PPCRE::REG-NUM CL-PPCRE::REG-INDEX)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The second argument is a UNSIGNED-BYTE, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (LOOP CL-PPCRE::FOR CL-PPCRE::NAME CL-PPCRE::IN CL-PPCRE::REG-NAMES
;           CL-PPCRE::FOR CL-PPCRE::REG-INDEX CL-PPCRE::FROM 0
;           WHEN (STRING= CL-PPCRE::NAME CL-PPCRE::BACKREF-NAME)
;           CL-PPCRE::COLLECT ...)
; --> BLOCK LET LET SB-LOOP::WITH-LOOP-LIST-COLLECTION-HEAD LET* TAGBODY 
; --> SB-LOOP::LOOP-DESETQ SETQ THE 1+ 
; ==>
;   (+ CL-PPCRE::REG-INDEX 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (1- CL-PPCRE::BACKREF-NUMBER)
; ==>
;   (- CL-PPCRE::BACKREF-NUMBER 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-COMPOUND-PARSE-TREE ...)
; compiling (DEFGENERIC CONVERT-SIMPLE-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-SIMPLE-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-SIMPLE-PARSE-TREE ...)
; compiling (DEFMETHOD CONVERT-SIMPLE-PARSE-TREE ...)
; compiling (DEFUN CONVERT ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/convert.lisp
; in: DEFUN CONVERT
;     (COERCE (SLOT-VALUE CL-PPCRE::STARTS-WITH 'CL-PPCRE::STR) 'SIMPLE-STRING)
; --> THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/convert-tmp2OWI3Q7U.fasl
; compilation finished in 0:00:00.660
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFGENERIC FLATTEN ...)
; compiling (DEFMETHOD FLATTEN ...)
; compiling (DEFMETHOD FLATTEN ...)
; compiling (DEFMETHOD FLATTEN ...)
; compiling (DEFMETHOD FLATTEN ...)
; compiling (DEFGENERIC GATHER-STRINGS ...)
; compiling (DEFMETHOD GATHER-STRINGS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD GATHER-STRINGS (SEQ)
;     (MAKE-ARRAY CL-PPCRE::COLLECTOR-LENGTH :INITIAL-CONTENTS CL-PPCRE::COLLECTOR
;                 :ELEMENT-TYPE 'CHARACTER :FILL-POINTER T :ADJUSTABLE T)
; --> LET TRULY-THE SB-C::MAKE-ARRAY-HEADER* LET 
; ==>
;   (REPLACE SB-C::DATA SB-C::INITIAL-CONTENTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a VECTOR, not a (SIMPLE-ARRAY CHARACTER (*)).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a VECTOR, not a SIMPLE-BASE-STRING.

;     (SETF (SUBSEQ CL-PPCRE::COLLECTOR CL-PPCRE::OLD-COLLECTOR-LENGTH)
;             (CL-PPCRE::STR CL-PPCRE::ELEMENT)
;           CL-PPCRE::SKIP (CL-PPCRE::SKIP CL-PPCRE::ELEMENT))
; --> PROGN SETF LET* 
; ==>
;   (REPLACE #:SEQUENCE #:NEW1 :START1 #:START :END1 NIL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-BASE-STRING.
;   The second argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES SIMPLE-BASE-STRING
;                                                            &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY CHARACTER
;                                                      (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY SINGLE-FLOAT (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY SINGLE-FLOAT (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY SINGLE-FLOAT
;                                                      (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY DOUBLE-FLOAT (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY DOUBLE-FLOAT (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY DOUBLE-FLOAT
;                                                      (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-BIT-VECTOR.
;   The second argument is a SEQUENCE, not a SIMPLE-BIT-VECTOR.
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES SIMPLE-BIT-VECTOR
;                                                            &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 2) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 2) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 2) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 4) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 4) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 4) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 7) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 7) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 7) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 8) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 8) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 8) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 15) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 15)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 15) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 16) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 16)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 16) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 31) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 31)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 31) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 32) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 32)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 32) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 62) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 62)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 62) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 63) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 63)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 63) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 64) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (UNSIGNED-BYTE 64)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 64) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (SIGNED-BYTE 8) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 8) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 8) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (SIGNED-BYTE 16) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 16) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 16) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (SIGNED-BYTE 32) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 32) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 32) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY FIXNUM (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY FIXNUM (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY FIXNUM (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (SIGNED-BYTE 64) (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (SIGNED-BYTE 64) (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 64) (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (COMPLEX SINGLE-FLOAT)
;                                          (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX SINGLE-FLOAT)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (COMPLEX SINGLE-FLOAT)
;                                                      (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY (COMPLEX DOUBLE-FLOAT)
;                                          (*)).
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY (COMPLEX DOUBLE-FLOAT)
;                                             (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY
;                                                      (COMPLEX DOUBLE-FLOAT)
;                                                      (*))
;                                                     &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-VECTOR.
;   The second argument is a SEQUENCE, not a SIMPLE-VECTOR.
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES SIMPLE-VECTOR &REST
;                                                            T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-BASE-STRING.
;   The second argument is a SEQUENCE, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES SIMPLE-BASE-STRING
;                                                            &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a (SIMPLE-ARRAY CHARACTER (*)).
;   The second argument is a SEQUENCE, not a SIMPLE-BASE-STRING.
;   The result is a (VALUES VECTOR &OPTIONAL), not a (VALUES
;                                                     (SIMPLE-ARRAY CHARACTER
;                                                      (*))
;                                                     &REST T).

;     (INCF CL-PPCRE::COLLECTOR-LENGTH (CL-PPCRE::LEN CL-PPCRE::ELEMENT))
; --> SETQ THE 
; ==>
;   (+ (CL-PPCRE::LEN CL-PPCRE::ELEMENT) CL-PPCRE::COLLECTOR-LENGTH)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DEFMETHOD GATHER-STRINGS ...)
; compiling (DEFMETHOD GATHER-STRINGS ...)
; compiling (DEFMETHOD GATHER-STRINGS ...)
; compiling (DEFGENERIC START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD START-ANCHORED-P (REPETITION)
;     (PLUSP (CL-PPCRE::MINIMUM CL-PPCRE::REPETITION))
; ==>
;   (> (CL-PPCRE::MINIMUM CL-PPCRE::REPETITION) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; compiling (DEFMETHOD START-ANCHORED-P ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD START-ANCHORED-P (REGEX)
;     (ZEROP (CL-PPCRE::LEN CL-PPCRE::REGEX))
; ==>
;   (= (CL-PPCRE::LEN CL-PPCRE::REGEX) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFGENERIC END-STRING-AUX ...)
; compiling (DEFMETHOD END-STRING-AUX ...)
; compiling (DEFMETHOD END-STRING-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD END-STRING-AUX (SEQ)
;     (ZEROP (CL-PPCRE::LEN CL-PPCRE::ELEMENT-END))
; --> = IF 
; ==>
;   (= (CL-PPCRE::LEN CL-PPCRE::ELEMENT-END) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (MAKE-ARRAY CL-PPCRE::CONCATENATED-LENGTH :INITIAL-CONTENTS
;                 (REVERSE (CL-PPCRE::STR CL-PPCRE::CONCATENATED-START))
;                 :ELEMENT-TYPE 'CHARACTER :FILL-POINTER T :ADJUSTABLE T)
; --> UNLESS IF = 
; ==>
;   (LENGTH SB-C::INITIAL-CONTENTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; --> UNLESS IF ERROR 
; ==>
;   (LENGTH SB-C::INITIAL-CONTENTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; --> LET TRULY-THE SB-C::MAKE-ARRAY-HEADER* LET 
; ==>
;   (REPLACE SB-C::DATA SB-C::INITIAL-CONTENTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                                SB-KERNEL:EXTENDED-SEQUENCE), not a (SIMPLE-ARRAY
;                                                                     CHARACTER
;                                                                     (*)).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                                SB-KERNEL:EXTENDED-SEQUENCE), not a SIMPLE-BASE-STRING.

;     (CHAR CL-PPCRE::STR CL-PPCRE::I)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFMETHOD END-STRING-AUX ...)
; compiling (DEFMETHOD END-STRING-AUX ...)
; compiling (DEFMETHOD END-STRING-AUX ...)
; compiling (DEFUN END-STRING ...)
; compiling (DEFGENERIC COMPUTE-MIN-REST ...)
; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (ALTERNATION T)
;     (LOOP CL-PPCRE::FOR CL-PPCRE::CHOICE CL-PPCRE::IN (CL-PPCRE::CHOICES
;                                                        CL-PPCRE::ALTERNATION)
;           CL-PPCRE::MINIMIZE (CL-PPCRE::COMPUTE-MIN-REST CL-PPCRE::CHOICE
;                               CL-PPCRE::CURRENT-MIN-REST))
; --> BLOCK LET SB-LOOP::WITH-MINIMAX-VALUE LET TAGBODY 
; --> SB-LOOP::LOOP-ACCUMULATE-MINIMAX-VALUE PROGN WHEN IF OR LET IF < IF 
; ==>
;   (< #:LOOP-MAXMIN-TEMP-9 #:LOOP-MAXMIN-8)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (BRANCH T)
;     (MIN
;      (CL-PPCRE::COMPUTE-MIN-REST (CL-PPCRE::THEN-REGEX CL-PPCRE::BRANCH)
;       CL-PPCRE::CURRENT-MIN-REST)
;      (CL-PPCRE::COMPUTE-MIN-REST (CL-PPCRE::ELSE-REGEX CL-PPCRE::BRANCH)
;       CL-PPCRE::CURRENT-MIN-REST))
; --> LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (STR T)
;     (+ CL-PPCRE::CURRENT-MIN-REST (CL-PPCRE::LEN CL-PPCRE::STR))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (FILTER T)
;     (+ CL-PPCRE::CURRENT-MIN-REST (OR (CL-PPCRE::LEN CL-PPCRE::FILTER) 0))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (REPETITION T)
;     (* (CL-PPCRE::MINIMUM CL-PPCRE::REPETITION)
;        (CL-PPCRE::MIN-LEN CL-PPCRE::REPETITION))
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
;   The second argument is a NUMBER, not a INTEGER.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline float arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES
;                                                         (COMPLEX SINGLE-FLOAT)
;                                                         &REST T).
;       etc.

;     (+ CL-PPCRE::CURRENT-MIN-REST
;        (* (CL-PPCRE::MINIMUM CL-PPCRE::REPETITION)
;           (CL-PPCRE::MIN-LEN CL-PPCRE::REPETITION)))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (LOOKBEHIND T)
;     (+ CL-PPCRE::CURRENT-MIN-REST (CL-PPCRE::LEN CL-PPCRE::LOOKBEHIND))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFMETHOD COMPUTE-MIN-REST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/optimize.lisp
; in: DEFMETHOD COMPUTE-MIN-REST (REGEX T)
;     (1+ CL-PPCRE::CURRENT-MIN-REST)
; ==>
;   (+ CL-PPCRE::CURRENT-MIN-REST 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/optimize-tmp9KKTJMYV.fasl
; compilation finished in 0:00:00.336
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/closures.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DECLAIM (INLINE *STRING*= ...))
; compiling (DEFUN *STRING*= ...)
; compiling (DEFUN *STRING*-EQUAL ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFUN *STRING*-EQUAL
;     (CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                 (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; compiling (DEFGENERIC CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (LOOKBEHIND T)
;     (- CL-PPCRE::START-POS CL-PPCRE::LEN)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFMACRO INSERT-CHAR-CLASS-TESTER ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (CHAR-CLASS T)
;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::CHAR-CLASS
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::START-POS))
;       (LAMBDA (CL-PPCRE::START-POS)
;         (DECLARE (FIXNUM CL-PPCRE::START-POS))
;         (AND (< CL-PPCRE::START-POS CL-PPCRE::*END-POS*)
;              (CL-PPCRE::CHAR-CLASS-TEST)
;              (FUNCALL CL-PPCRE::NEXT-FN (1+ CL-PPCRE::START-POS)))))
; --> LET LET LAMBDA FUNCTION AND IF IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL #:TEST-FUNCTION5)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (STR T)
;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::START-POS
;      CL-PPCRE::NEXT-POS 0 CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::START-POS) CL-PPCRE::CHR)
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::START-POS)
;                              CL-PPCRE::CHR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (LENGTH CL-PPCRE::END-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::END-STRING CL-PPCRE::START-POS
;      CL-PPCRE::TEST-END-POS 0 CL-PPCRE::END-STRING-LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (+ CL-PPCRE::START-POS CL-PPCRE::LEN)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DECLAIM (INLINE WORD-BOUNDARY-P))
; compiling (DEFUN WORD-BOUNDARY-P ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (BACK-REFERENCE T)
;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::*STRING* CL-PPCRE::START-POS
;      CL-PPCRE::NEXT-POS CL-PPCRE::REG-START CL-PPCRE::REG-END)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (FILTER T)
;     (FUNCALL CL-PPCRE::FN CL-PPCRE::START-POS)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::FN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   FN is not known to be a function

;     (FUNCALL CL-PPCRE::NEXT-FN CL-PPCRE::NEXT-POS)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::NEXT-FN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-FN is not known to be a function

; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/closures-tmpJU0JWO19.fasl
; compilation finished in 0:00:00.202
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFMACRO INCF-AFTER ...)
; compiling (DEFMACRO GREEDY-CONSTANT-LENGTH-CLOSURE ...)
; compiling (DEFUN CREATE-GREEDY-EVERYTHING-MATCHER ...)
; compiling (DEFGENERIC CREATE-GREEDY-CONSTANT-LENGTH-MATCHER ...)
; compiling (DEFMETHOD CREATE-GREEDY-CONSTANT-LENGTH-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-GREEDY-CONSTANT-LENGTH-MATCHER (REPETITION T)
;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> BLOCK TAGBODY WHEN IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL #:TEST-FUNCTION25)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                               (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                               CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL CL-PPCRE::CHR
;                              (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                               (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                               CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*= CL-PPCRE::STR CL-PPCRE::CURR-POS
;                           (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0 CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR= CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*= CL-PPCRE::STR CL-PPCRE::CURR-POS
;                           (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0 CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR/= #\Newline (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (FUNCALL CL-PPCRE::INNER-MATCHER CL-PPCRE::CURR-POS))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR/= #\Newline (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> LET LET CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION LET 
; --> MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*= CL-PPCRE::STR CL-PPCRE::CURR-POS
;                           (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0 CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR= CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFGENERIC CREATE-GREEDY-NO-ZERO-MATCHER ...)
; compiling (DEFMETHOD CREATE-GREEDY-NO-ZERO-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-GREEDY-NO-ZERO-MATCHER (REPETITION T)
;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; compiling (DEFGENERIC CREATE-GREEDY-MATCHER ...)
; compiling (DEFMETHOD CREATE-GREEDY-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-GREEDY-MATCHER (REPETITION T)
;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0
;           (SVREF CL-PPCRE::*LAST-POS-STORES* CL-PPCRE::ZERO-LENGTH-NUM) NIL)
; --> PROGN SETF LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; compiling (DEFMACRO NON-GREEDY-CONSTANT-LENGTH-CLOSURE ...)
; compiling (DEFGENERIC CREATE-NON-GREEDY-CONSTANT-LENGTH-MATCHER ...)
; compiling (DEFMETHOD CREATE-NON-GREEDY-CONSTANT-LENGTH-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-NON-GREEDY-CONSTANT-LENGTH-MATCHER (REPETITION T)
;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET LOOP BLOCK LET LET TAGBODY UNLESS IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL #:TEST-FUNCTION97)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                               (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                               CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL CL-PPCRE::CHR
;                              (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                               (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                               CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR= CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*= CL-PPCRE::STR CL-PPCRE::CURR-POS
;                           (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0 CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE T)
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR/= #\Newline (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (FUNCALL CL-PPCRE::INNER-MATCHER CL-PPCRE::CURR-POS))
; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET MIN LET LET IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163709
;                                13835058055282163712), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ 
; ==>
;   (+ (- CL-PPCRE::*END-POS* CL-PPCRE::LEN CL-PPCRE::MIN-REST) 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163710
;                                13835058055282163711), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163709 13835058055282163712)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR/= #\Newline (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE T)
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE (CL-PPCRE::CHAR-CLASS-TEST)))
; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> LET LET CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE IF LAMBDA FUNCTION 
; --> LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*= CL-PPCRE::STR CL-PPCRE::CURR-POS
;                           (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0 CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS
;                                (+ CL-PPCRE::CURR-POS CL-PPCRE::LEN) 0
;                                CL-PPCRE::LEN))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR= CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (CL-PPCRE::NON-GREEDY-CONSTANT-LENGTH-CLOSURE
;      (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS)))
; --> IF LAMBDA FUNCTION LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET 1+ + - 
; ==>
;   (- (- CL-PPCRE::*END-POS* CL-PPCRE::LEN) CL-PPCRE::MIN-REST)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; --> IF LAMBDA FUNCTION LET MIN LET LET MIN LET 
; ==>
;   (+ CL-PPCRE::START-POS (THE FIXNUM (* CL-PPCRE::LEN CL-PPCRE::MAXIMUM)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFGENERIC CREATE-NON-GREEDY-NO-ZERO-MATCHER ...)
; compiling (DEFMETHOD CREATE-NON-GREEDY-NO-ZERO-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-NON-GREEDY-NO-ZERO-MATCHER (REPETITION T)
;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; compiling (DEFGENERIC CREATE-NON-GREEDY-MATCHER ...)
; compiling (DEFMETHOD CREATE-NON-GREEDY-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-NON-GREEDY-MATCHER (REPETITION T)
;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0
;           (SVREF CL-PPCRE::*LAST-POS-STORES* CL-PPCRE::ZERO-LENGTH-NUM) NIL)
; --> PROGN SETF LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; compiling (DEFMACRO CONSTANT-REPETITION-CONSTANT-LENGTH-CLOSURE ...)
; compiling (DEFGENERIC CREATE-CONSTANT-REPETITION-CONSTANT-LENGTH-MATCHER ...)
; compiling (DEFMETHOD CREATE-CONSTANT-REPETITION-CONSTANT-LENGTH-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in:
;      DEFMETHOD CREATE-CONSTANT-REPETITION-CONSTANT-LENGTH-MATCHER (REPETITION T)
;     (CL-PPCRE::INSERT-CHAR-CLASS-TESTER (CL-PPCRE::REGEX
;                                          (SCHAR CL-PPCRE::*STRING*
;                                                 CL-PPCRE::CURR-POS))
;       (CL-PPCRE::CONSTANT-REPETITION-CONSTANT-LENGTH-CLOSURE
;        (AND (CL-PPCRE::CHAR-CLASS-TEST) (1+ CL-PPCRE::CURR-POS))))
; --> LET LET CL-PPCRE::CONSTANT-REPETITION-CONSTANT-LENGTH-CLOSURE LAMBDA 
; --> FUNCTION LET AND IF IF LOOP BLOCK LET TAGBODY UNLESS IF AND IF FUNCALL 
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL #:TEST-FUNCTION35)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CHAR-EQUAL CL-PPCRE::CHR (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL CL-PPCRE::CHR
;                              (SCHAR CL-PPCRE::*STRING* CL-PPCRE::CURR-POS))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::*STRING*-EQUAL CL-PPCRE::STR CL-PPCRE::CURR-POS CL-PPCRE::NEXT-POS
;                               0 CL-PPCRE::LEN)
; --> BLOCK LOOP BLOCK LET LET TAGBODY UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; compiling (DEFGENERIC CREATE-CONSTANT-REPETITION-MATCHER ...)
; compiling (DEFMETHOD CREATE-CONSTANT-REPETITION-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-CONSTANT-REPETITION-MATCHER (REPETITION T)
;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (SETF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM) 0
;           (AREF CL-PPCRE::*LAST-POS-STORES* CL-PPCRE::ZERO-LENGTH-NUM) NIL)
; --> PROGN SETF LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (ZEROP (CL-PPCRE::MIN-LEN CL-PPCRE::REPETITION))
; ==>
;   (= (CL-PPCRE::MIN-LEN CL-PPCRE::REPETITION) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (INCF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* + AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

;     (DECF (AREF CL-PPCRE::*REPEAT-COUNTERS* CL-PPCRE::REP-NUM))
; --> LET* SB-IMPL::XSUBTRACT AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a (VECTOR FIXNUM), not a SIMPLE-ARRAY.

; compiling (DEFMETHOD CREATE-MATCHER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/repetition-closures.lisp
; in: DEFMETHOD CREATE-MATCHER-AUX (REPETITION T)
;     (DEFMETHOD CL-PPCRE::CREATE-MATCHER-AUX
;                ((CL-PPCRE::REPETITION CL-PPCRE::REPETITION) CL-PPCRE::NEXT-FN)
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (WITH-SLOTS (CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM CL-PPCRE::LEN
;                                      CL-PPCRE::MIN-LEN CL-PPCRE::GREEDYP
;                                      CL-PPCRE::CONTAINS-REGISTER-P)
;           CL-PPCRE::REPETITION
;         (COND
;          ((AND CL-PPCRE::MAXIMUM #)
;           (ERROR "Got REPETITION with MAXIMUM 0 (should not happen)"))
;          ((AND CL-PPCRE::MAXIMUM #)
;           (ERROR
;            "Got REPETITION with MAXIMUM 1 and MINIMUM 1 (should not happen)"))
;          ((AND # CL-PPCRE::LEN #)
;           (CL-PPCRE::CREATE-CONSTANT-REPETITION-CONSTANT-LENGTH-MATCHER
;            CL-PPCRE::REPETITION CL-PPCRE::NEXT-FN))
;          ((EQL CL-PPCRE::MINIMUM CL-PPCRE::MAXIMUM)
;           (CL-PPCRE::CREATE-CONSTANT-REPETITION-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN))
;          ((AND CL-PPCRE::GREEDYP CL-PPCRE::LEN #)
;           (CL-PPCRE::CREATE-GREEDY-CONSTANT-LENGTH-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN))
;          ((AND CL-PPCRE::GREEDYP #)
;           (CL-PPCRE::CREATE-GREEDY-NO-ZERO-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN))
;          (CL-PPCRE::GREEDYP
;           (CL-PPCRE::CREATE-GREEDY-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN))
;          ((AND CL-PPCRE::LEN # #)
;           (CL-PPCRE::CREATE-NON-GREEDY-CONSTANT-LENGTH-MATCHER
;            CL-PPCRE::REPETITION CL-PPCRE::NEXT-FN))
;          ((OR # #)
;           (CL-PPCRE::CREATE-NON-GREEDY-NO-ZERO-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN))
;          (T
;           (CL-PPCRE::CREATE-NON-GREEDY-MATCHER CL-PPCRE::REPETITION
;            CL-PPCRE::NEXT-FN)))))
; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF ZEROP 
; ==>
;   (= (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MAXIMUM) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF = 
; --> (LAMBDA (#:G7 #:G6 #:G5) (DECLARE (TYPE NUMBER #:G7 #:G6 #:G5)) (IF (= #:G7 #:G6) (IF (= #:G6 #:G5) T NIL) NIL)) 
; --> SB-C::%FUNCALL IF 
; ==>
;   (= #:G7 #:G6)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF = 
; --> (LAMBDA (#:G7 #:G6 #:G5) (DECLARE (TYPE NUMBER #:G7 #:G6 #:G5)) (IF (= #:G7 #:G6) (IF (= #:G6 #:G5) T NIL) NIL)) 
; --> SB-C::%FUNCALL IF IF 
; ==>
;   (= #:G6 #:G5)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a (OR
;                                                           (COMPLEX
;                                                            SINGLE-FLOAT)
;                                                           (COMPLEX
;                                                            DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF 
; --> LET PLUSP > IF 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MIN-LEN) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF IF 
; --> IF IF PLUSP 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF IF 
; --> IF LET PLUSP > IF 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MIN-LEN) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF = 
; --> (LAMBDA (#:G7 #:G6 #:G5) (DECLARE (TYPE NUMBER #:G7 #:G6 #:G5)) (IF (= #:G7 #:G6) (IF (= #:G6 #:G5) T NIL) NIL)) 
; --> SB-C::%FUNCALL IF 
; ==>
;   (= #:G7 #:G6)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF 
; ==>
;   (EQL (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;        (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MAXIMUM))
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF 
; ==>
;   (EQL (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MINIMUM)
;        (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MAXIMUM))
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF 
; --> LET PLUSP > IF 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MIN-LEN) 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF IF 
; --> IF IF PLUSP 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::LEN) 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> PROGN EVAL-WHEN SB-PCL::%DEFMETHOD-EXPANDER SB-PCL::LOAD-DEFMETHOD 
; --> SB-PCL::LOAD-DEFMETHOD LIST* LET* SB-INT:NAMED-LAMBDA FUNCTION 
; --> SYMBOL-MACROLET SB-PCL::FAST-LEXICAL-METHOD-FUNCTIONS 
; --> SB-PCL::BIND-FAST-LEXICAL-METHOD-FUNCTIONS FLET SB-PCL::BIND-ARGS LET* 
; --> LOCALLY SYMBOL-MACROLET BLOCK LET SYMBOL-MACROLET IF IF IF IF IF IF IF IF 
; --> IF LET PLUSP > IF 
; ==>
;   (> (SB-PCL::ACCESSOR-SLOT-VALUE #:G0 'CL-PPCRE::MIN-LEN) 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/repetition-closures-tmpZX2WN8N4.fasl
; compilation finished in 0:00:00.689
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/scanner.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFMACRO BMH-MATCHER-AUX ...)
; compiling (DEFUN CREATE-BMH-MATCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/scanner.lisp
; in: DEFUN CREATE-BMH-MATCHER
;     (CL-PPCRE::BMH-MATCHER-AUX :CASE-INSENSITIVE-P T)
; --> LAMBDA FUNCTION IF LOOP BLOCK LET TAGBODY LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF AND IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::I)
;                              (SCHAR CL-PPCRE::PATTERN CL-PPCRE::J))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (LENGTH CL-PPCRE::PATTERN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CHAR-UPCASE (SCHAR CL-PPCRE::PATTERN CL-PPCRE::K))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (CHAR-DOWNCASE (SCHAR CL-PPCRE::PATTERN CL-PPCRE::K))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.

;     (SEARCH CL-PPCRE::PATTERN CL-PPCRE::*STRING* :START2 CL-PPCRE::START-POS
;             :END2 CL-PPCRE::*END-POS* :TEST CL-PPCRE::TEST)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (MAKE-ARRAY CL-PPCRE:*REGEX-CHAR-CODE-LIMIT* :ELEMENT-TYPE 'FIXNUM
;                 :INITIAL-ELEMENT CL-PPCRE::M)
; --> FILL LET* 
; ==>
;   (SB-KERNEL:UB64-BASH-FILL
;    (LET ((SB-C::RES (LDB # #)))
;      (DECLARE (TYPE WORD SB-C::RES))
;      SB-C::RES)
;    SB-C::SEQ (SB-KERNEL:CHECK-BOUND SB-C::SEQ SB-C::BOUND SB-C::START)
;    (-
;     (IF SB-C::END
;         (SB-KERNEL:CHECK-BOUND SB-C::SEQ SB-C::BOUND SB-C::END)
;         SB-C::LEN)
;     SB-C::START))
; 
; note: doing unsigned word to integer coercion (cost 20)

; compiling (DEFMACRO CHAR-SEARCHER-AUX ...)
; compiling (DEFUN CREATE-CHAR-SEARCHER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/scanner.lisp
; in: DEFUN CREATE-CHAR-SEARCHER
;     (CL-PPCRE::CHAR-SEARCHER-AUX :CASE-INSENSITIVE-P T)
; --> LAMBDA FUNCTION AND IF LOOP BLOCK LET LET TAGBODY WHEN IF SETQ THE AND IF 
; --> CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::I)
;                              CL-PPCRE::CHR)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; compiling (DECLAIM (INLINE NEWLINE-SKIPPER))
; compiling (DEFUN NEWLINE-SKIPPER ...)
; compiling (DEFMACRO INSERT-ADVANCE-FN ...)
; compiling (DEFUN CREATE-SCANNER-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/scanner.lisp
; in: DEFUN CREATE-SCANNER-AUX
;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS) CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS) CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FIXNUM CL-PPCRE::END-STRING-OFFSET CL-PPCRE::STARTS-WITH-LEN)
;                (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (LOOP (UNLESS (SETQ #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;             (LOCALLY
;              (DECLARE #)
;              (WHEN # #)
;              (LET #
;                #)))))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FIXNUM CL-PPCRE::END-STRING-OFFSET)
;                (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (LOOP (UNLESS (SETQ #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;             (LOCALLY
;              (DECLARE #)
;              (WHEN # #)
;              (LET #
;                #)))))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FIXNUM CL-PPCRE::END-STRING-OFFSET CL-PPCRE::STARTS-WITH-LEN)
;                (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (LOOP (UNLESS (SETQ #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;             (LOCALLY
;              (DECLARE #)
;              (WHEN # #)
;              (LET #
;                #)))))
; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF LOCALLY COND IF 
; --> AND IF NOT IF CL-PPCRE::*STRING*-EQUAL BLOCK LOOP BLOCK LET LET TAGBODY 
; --> UNLESS IF CHAR-EQUAL 
; ==>
;   (SB-INT:TWO-ARG-CHAR-EQUAL (SCHAR CL-PPCRE::*STRING* CL-PPCRE::STRING1-IDX)
;                              (SCHAR CL-PPCRE::STRING2 CL-PPCRE::STRING2-IDX))
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a CHARACTER, not a BASE-CHAR.
;   The second argument is a CHARACTER, not a BASE-CHAR.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS) CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (UNLESS (SETQ CL-PPCRE::POS #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;       (IF (<= (THE FIXNUM CL-PPCRE::POS) (THE FIXNUM CL-PPCRE::*END-STRING-POS*))
;           (RETURN-FROM CL-PPCRE::ADVANCE-FN CL-PPCRE::POS))
;       (UNLESS (SETQ CL-PPCRE::*END-STRING-POS* #)
;         (RETURN-FROM CL-PPCRE:SCAN NIL))
;       CL-PPCRE::POS))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FIXNUM CL-PPCRE::END-STRING-OFFSET CL-PPCRE::STARTS-WITH-LEN)
;                (FUNCTION CL-PPCRE::START-STRING-TEST CL-PPCRE::END-STRING-TEST))
;       (LOOP (UNLESS (SETQ #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;             (LOCALLY
;              (DECLARE #)
;              (WHEN # #)
;              (LET #
;                #)))))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CL-PPCRE::INSERT-ADVANCE-FN
;      (CL-PPCRE::ADVANCE-FN (CL-PPCRE::POS)
;       (DECLARE (FIXNUM CL-PPCRE::END-STRING-OFFSET)
;                (FUNCTION CL-PPCRE::END-STRING-TEST))
;       (LOOP (UNLESS (SETQ #) (RETURN-FROM CL-PPCRE:SCAN NIL))
;             (LOCALLY
;              (DECLARE #)
;              (WHEN # #)
;              (LET #
;                #)))))
; --> LAMBDA FUNCTION BLOCK LET* LABELS WHEN IF PROGN UNLESS IF AND IF <= OR 
; --> LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF < 
; ==>
;   (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF AND IF 
; ==>
;   (< (+ CL-PPCRE::*END-STRING-POS* CL-PPCRE::END-STRING-LEN)
;      CL-PPCRE::*END-POS*)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; --> LAMBDA FUNCTION BLOCK LET* LABELS COND IF PROGN WHEN IF BLOCK LOOP BLOCK 
; --> TAGBODY PROGN LET COND IF IF INCF SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::*END-STRING-POS*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (FUNCALL CL-PPCRE::END-STRING-TEST CL-PPCRE::TRY-POS)
; --> SB-C::%FUNCALL 
; ==>
;   CL-PPCRE::TRY-POS
; 
; note: doing signed word to integer coercion (cost 20) from TRY-POS
; 
; note: doing signed word to integer coercion (cost 20) from TRY-POS


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/scanner-tmpOU81XRV0.fasl
; compilation finished in 0:00:00.860
; compiling file "/<<PKGBUILDDIR>>/cl-ppcre/api.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CL-PPCRE)
; compiling (DEFGENERIC CREATE-SCANNER ...)
; compiling (DEFMETHOD CREATE-SCANNER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD CREATE-SCANNER (STRING)
;     (COPY-SEQ CL-PPCRE::QUOTED-REGEX-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFMETHOD CREATE-SCANNER ...)
; compiling (DEFMETHOD CREATE-SCANNER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD CREATE-SCANNER (T)
;     (PLUSP (CL-PPCRE::LEN CL-PPCRE::END-STRING))
; ==>
;   (> (CL-PPCRE::LEN CL-PPCRE::END-STRING) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (= 1 (CL-PPCRE::LEN CL-PPCRE::END-STRING))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (PLUSP (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH))
; ==>
;   (> (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (= 1 (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (PLUSP (CL-PPCRE::LEN CL-PPCRE::END-STRING))
; ==>
;   (> (CL-PPCRE::LEN CL-PPCRE::END-STRING) 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (PLUSP (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH))
; ==>
;   (> (CL-PPCRE::LEN CL-PPCRE::STARTS-WITH) 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFGENERIC SCAN ...)
; compiling (DEFMETHOD SCAN ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD SCAN (STRING T)
;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (FUNCALL (CL-PPCRE:CREATE-SCANNER CL-PPCRE::REGEX-STRING)
;              (CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING CL-PPCRE::TARGET-STRING)
;              CL-PPCRE::START CL-PPCRE::END)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CL-PPCRE:CREATE-SCANNER CL-PPCRE::REGEX-STRING))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING CL-PPCRE::TARGET-STRING)
; --> LET COND IF THE COERCE THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFMETHOD SCAN ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD SCAN #'T
;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING CL-PPCRE::TARGET-STRING)
; --> LET COND IF THE COERCE THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFMETHOD SCAN ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD SCAN (T T)
;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (FUNCALL (CL-PPCRE:CREATE-SCANNER CL-PPCRE::PARSE-TREE)
;              (CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING CL-PPCRE::TARGET-STRING)
;              CL-PPCRE::START CL-PPCRE::END)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CL-PPCRE:CREATE-SCANNER CL-PPCRE::PARSE-TREE))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING CL-PPCRE::TARGET-STRING)
; --> LET COND IF THE COERCE THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFINE-COMPILER-MACRO SCAN ...)
; compiling (DEFUN SCAN-TO-STRINGS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN SCAN-TO-STRINGS
;     (MAP 'VECTOR
;          (LAMBDA (CL-PPCRE::REG-START CL-PPCRE::REG-END)
;            (IF CL-PPCRE::REG-START
;                (FUNCALL CL-PPCRE::SUBSTR-FN CL-PPCRE::TARGET-STRING
;                         CL-PPCRE::REG-START CL-PPCRE::REG-END)
;                NIL))
;          CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS)
; --> TRULY-THE SB-KERNEL:%MAP MAP-INTO MAKE-SEQUENCE MIN LET 
; ==>
;   (LENGTH #:G33)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; --> TRULY-THE SB-KERNEL:%MAP MAP-INTO MAKE-SEQUENCE MIN LET LET MIN LET 
; ==>
;   (LENGTH #:G34)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFINE-COMPILER-MACRO SCAN-TO-STRINGS ...)
; compiling (DEFMACRO REGISTER-GROUPS-BIND ...)
; compiling (DEFMACRO DO-SCANS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMACRO DO-SCANS
;     (DEFMACRO CL-PPCRE:DO-SCANS
;               (
;                (CL-PPCRE::MATCH-START
;                 CL-PPCRE::MATCH-END
;                 CL-PPCRE::REG-STARTS
;                 CL-PPCRE::REG-ENDS
;                 CL-PPCRE::REGEX
;                 CL-PPCRE::TARGET-STRING
;                 &OPTIONAL
;                 CL-PPCRE::RESULT-FORM
;                 &KEY
;                 CL-PPCRE::START
;                 CL-PPCRE::END)
;                &BODY CL-PPCRE::BODY &ENVIRONMENT CL-PPCRE::ENV)
;       #<(SIMPLE-ARRAY CHARACTER
;          (495)) Iterates over TARGET-STRING and tries to match REGEX as often as
;   possible evaluating BODY with MATCH-START, MATCH-END, REG-STARTS, and
;   REG-ENDS bound to the four return values of each match in turn.  ... {100B4351AF}>
;       (CL-PPCRE::WITH-REBINDING (CL-PPCRE::TARGET-STRING)
;         (CL-PPCRE::WITH-UNIQUE-NAMES (CL-PPCRE::%START CL-PPCRE::%END
;                                       CL-PPCRE::%REGEX CL-PPCRE::SCANNER)
;           (DECLARE (IGNORABLE CL-PPCRE::%REGEX CL-PPCRE::SCANNER))
;           `(BLOCK NIL
;              (LET* #
;                #
;                #)))))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (MATCH-START MATCH-END
;                                                      REG-STARTS REG-ENDS REGEX
;                                                      TARGET-STRING &OPTIONAL
;                                                      RESULT-FORM &KEY START END)

; compiling (DEFMACRO DO-MATCHES ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMACRO DO-MATCHES
;     (DEFMACRO CL-PPCRE:DO-MATCHES
;               (
;                (CL-PPCRE::MATCH-START
;                 CL-PPCRE::MATCH-END
;                 CL-PPCRE::REGEX
;                 CL-PPCRE::TARGET-STRING
;                 &OPTIONAL
;                 CL-PPCRE::RESULT-FORM
;                 &KEY
;                 CL-PPCRE::START
;                 CL-PPCRE::END)
;                &BODY CL-PPCRE::BODY)
;       #<(SIMPLE-ARRAY CHARACTER
;          (477)) Iterates over TARGET-STRING and tries to match REGEX as often as
;   possible evaluating BODY with MATCH-START and MATCH-END bound to the
;   start/end positions of each match in turn.  After the last match,
;   ... {100B86A51F}>
;       (CL-PPCRE::WITH-UNIQUE-NAMES (CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS)
;         `(CL-PPCRE:DO-SCANS (,CL-PPCRE::MATCH-START ,CL-PPCRE::MATCH-END
;                              ,CL-PPCRE::REG-STARTS ,CL-PPCRE::REG-ENDS
;                              ,CL-PPCRE::REGEX ,CL-PPCRE::TARGET-STRING
;                              ,CL-PPCRE::RESULT-FORM :START ,CL-PPCRE::START :END
;                              ,CL-PPCRE::END)
;            ,@CL-PPCRE::BODY)))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (MATCH-START MATCH-END REGEX
;                                                      TARGET-STRING &OPTIONAL
;                                                      RESULT-FORM &KEY START END)

; compiling (DEFMACRO DO-MATCHES-AS-STRINGS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMACRO DO-MATCHES-AS-STRINGS
;     (DEFMACRO CL-PPCRE:DO-MATCHES-AS-STRINGS
;               (
;                (CL-PPCRE::MATCH-VAR
;                 CL-PPCRE::REGEX
;                 CL-PPCRE::TARGET-STRING
;                 &OPTIONAL
;                 CL-PPCRE::RESULT-FORM
;                 &KEY
;                 CL-PPCRE::START
;                 CL-PPCRE::END
;                 CL-PPCRE::SHAREDP)
;                &BODY CL-PPCRE::BODY)
;       #<(SIMPLE-ARRAY CHARACTER
;          (569)) Iterates over TARGET-STRING and tries to match REGEX as often as
;   possible evaluating BODY with MATCH-VAR bound to the substring of
;   TARGET-STRING corresponding to each match in turn.  After the last
;   ma... {100B9D31CF}>
;       (CL-PPCRE::WITH-REBINDING (CL-PPCRE::TARGET-STRING)
;         (CL-PPCRE::WITH-UNIQUE-NAMES (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                                       CL-PPCRE::SUBSTR-FN)
;           `(LET (#)
;              (CL-PPCRE:DO-MATCHES #
;                #)))))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (MATCH-VAR REGEX
;                                                      TARGET-STRING &OPTIONAL
;                                                      RESULT-FORM &KEY START END
;                                                      SHAREDP)

; compiling (DEFMACRO DO-REGISTER-GROUPS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMACRO DO-REGISTER-GROUPS
;     (DEFMACRO CL-PPCRE:DO-REGISTER-GROUPS
;               (CL-PPCRE::VAR-LIST
;                (CL-PPCRE::REGEX
;                 CL-PPCRE::TARGET-STRING
;                 &OPTIONAL
;                 CL-PPCRE::RESULT-FORM
;                 &KEY
;                 CL-PPCRE::START
;                 CL-PPCRE::END
;                 CL-PPCRE::SHAREDP)
;                &BODY CL-PPCRE::BODY)
;       #<(SIMPLE-ARRAY CHARACTER
;          (820)) Iterates over TARGET-STRING and tries to match REGEX as often as
;   possible evaluating BODY with the variables in VAR-LIST bound to the
;   corresponding register groups for each match in turn, i.e. each
;   va... {100BBB000F}>
;       (CL-PPCRE::WITH-REBINDING (CL-PPCRE::TARGET-STRING)
;         (CL-PPCRE::WITH-UNIQUE-NAMES (CL-PPCRE::SUBSTR-FN CL-PPCRE::MATCH-START
;                                       CL-PPCRE::MATCH-END CL-PPCRE::REG-STARTS
;                                       CL-PPCRE::REG-ENDS CL-PPCRE::START-INDEX)
;           `(LET (#)
;              (CL-PPCRE:DO-SCANS #
;                #)))))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (REGEX TARGET-STRING
;                                                            &OPTIONAL RESULT-FORM
;                                                            &KEY START END SHAREDP)

; compiling (DEFUN ALL-MATCHES ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN ALL-MATCHES
;     (CL-PPCRE:DO-MATCHES (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                           CL-PPCRE::REGEX CL-PPCRE::TARGET-STRING
;                           (NREVERSE CL-PPCRE::RESULT-LIST) :START CL-PPCRE::START
;                           :END CL-PPCRE::END)
;       (PUSH CL-PPCRE::MATCH-START CL-PPCRE::RESULT-LIST)
;       (PUSH CL-PPCRE::MATCH-END CL-PPCRE::RESULT-LIST))
; --> CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK TAGBODY PROGN 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK TAGBODY PROGN 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a RATIONAL.

;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CL-PPCRE:DO-MATCHES (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                           CL-PPCRE::REGEX CL-PPCRE::TARGET-STRING
;                           (NREVERSE CL-PPCRE::RESULT-LIST) :START CL-PPCRE::START
;                           :END CL-PPCRE::END)
;       (PUSH CL-PPCRE::MATCH-START CL-PPCRE::RESULT-LIST)
;       (PUSH CL-PPCRE::MATCH-END CL-PPCRE::RESULT-LIST))
; --> CL-PPCRE:DO-SCANS LET BLOCK LET* OR LET IF 
; ==>
;   (LENGTH #:TARGET-STRING3)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; --> CL-PPCRE:DO-SCANS LET BLOCK LET* SETQ THE 
; --> CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING LET COND IF THE COERCE THE IF 
; --> REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; --> CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK TAGBODY PROGN 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; --> CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK TAGBODY PROGN 
; --> MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFINE-COMPILER-MACRO ALL-MATCHES ...)
; compiling (DEFUN ALL-MATCHES-AS-STRINGS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN ALL-MATCHES-AS-STRINGS
;     (CL-PPCRE:DO-MATCHES-AS-STRINGS (CL-PPCRE::MATCH CL-PPCRE::REGEX
;                                      CL-PPCRE::TARGET-STRING
;                                      (NREVERSE CL-PPCRE::RESULT-LIST) :START
;                                      CL-PPCRE::START :END CL-PPCRE::END :SHAREDP
;                                      CL-PPCRE::SHAREDP)
;       (PUSH CL-PPCRE::MATCH CL-PPCRE::RESULT-LIST))
; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK 
; --> TAGBODY PROGN MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE 
; --> IF 
; ==>
;   (= #:MATCH-START2 #:MATCH-END3)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK 
; --> TAGBODY PROGN MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE 
; --> IF 1+ 
; ==>
;   (+ #:MATCH-END3 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a RATIONAL.

;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CL-PPCRE:DO-MATCHES-AS-STRINGS (CL-PPCRE::MATCH CL-PPCRE::REGEX
;                                      CL-PPCRE::TARGET-STRING
;                                      (NREVERSE CL-PPCRE::RESULT-LIST) :START
;                                      CL-PPCRE::START :END CL-PPCRE::END :SHAREDP
;                                      CL-PPCRE::SHAREDP)
;       (PUSH CL-PPCRE::MATCH CL-PPCRE::RESULT-LIST))
; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* OR LET IF 
; ==>
;   (LENGTH #:TARGET-STRING7)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* SETQ THE 
; --> CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING LET COND IF THE COERCE THE IF 
; --> REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK 
; --> TAGBODY PROGN MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE 
; --> IF 
; ==>
;   (= #:MATCH-START2 #:MATCH-END3)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; --> LET LET CL-PPCRE:DO-MATCHES CL-PPCRE:DO-SCANS LET BLOCK LET* LOOP BLOCK 
; --> TAGBODY PROGN MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION SETQ THE 
; --> IF 1+ 
; ==>
;   (+ #:MATCH-END3 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFINE-COMPILER-MACRO ALL-MATCHES-AS-STRINGS ...)
; compiling (DEFUN SPLIT ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN SPLIT
;     (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

;     (= CL-PPCRE::MATCH-START (CAR CL-PPCRE::POS-LIST))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a (OR
;                                                           (COMPLEX
;                                                            SINGLE-FLOAT)
;                                                           (COMPLEX
;                                                            DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

;     (LOOP CL-PPCRE::FOR CL-PPCRE::REG-START CL-PPCRE::ACROSS CL-PPCRE::REG-STARTS
;           CL-PPCRE::FOR CL-PPCRE::REG-END CL-PPCRE::ACROSS CL-PPCRE::REG-ENDS
;           IF CL-PPCRE::REG-START
;           DO ...)
; --> BLOCK LET LET LET LET TAGBODY SB-LOOP::LOOP-DESETQ SETQ THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

;     (CL-PPCRE:DO-SCANS (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                         CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS CL-PPCRE::REGEX
;                         CL-PPCRE::TARGET-STRING NIL :START CL-PPCRE::START :END
;                         CL-PPCRE::END)
;       (UNLESS
;           (AND (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
;                (= CL-PPCRE::MATCH-START (CAR CL-PPCRE::POS-LIST)))
;         (WHEN (AND CL-PPCRE::LIMIT (>= # CL-PPCRE::LIMIT)) (RETURN))
;         (PUSH CL-PPCRE::MATCH-START CL-PPCRE::POS-LIST)
;         (WHEN CL-PPCRE::WITH-REGISTERS-P
;           (LOOP CL-PPCRE::FOR CL-PPCRE::REG-START CL-PPCRE::ACROSS CL-PPCRE::REG-STARTS
;                 CL-PPCRE::FOR CL-PPCRE::REG-END CL-PPCRE::ACROSS CL-PPCRE::REG-ENDS
;                 IF CL-PPCRE::REG-START
;                 DO ...))
;         (PUSH CL-PPCRE::MATCH-END CL-PPCRE::POS-LIST)))
; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a RATIONAL.

;     (> CL-PPCRE::THIS-END CL-PPCRE::THIS-START)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CL-PPCRE:DO-SCANS (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                         CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS CL-PPCRE::REGEX
;                         CL-PPCRE::TARGET-STRING NIL :START CL-PPCRE::START :END
;                         CL-PPCRE::END)
;       (UNLESS
;           (AND (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
;                (= CL-PPCRE::MATCH-START (CAR CL-PPCRE::POS-LIST)))
;         (WHEN (AND CL-PPCRE::LIMIT (>= # CL-PPCRE::LIMIT)) (RETURN))
;         (PUSH CL-PPCRE::MATCH-START CL-PPCRE::POS-LIST)
;         (WHEN CL-PPCRE::WITH-REGISTERS-P
;           (LOOP CL-PPCRE::FOR CL-PPCRE::REG-START CL-PPCRE::ACROSS CL-PPCRE::REG-STARTS
;                 CL-PPCRE::FOR CL-PPCRE::REG-END CL-PPCRE::ACROSS CL-PPCRE::REG-ENDS
;                 IF CL-PPCRE::REG-START
;                 DO ...))
;         (PUSH CL-PPCRE::MATCH-END CL-PPCRE::POS-LIST)))
; --> LET BLOCK LET* OR LET IF 
; ==>
;   (LENGTH #:TARGET-STRING1)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; --> LET BLOCK LET* SETQ THE CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING LET COND 
; --> IF THE COERCE THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (>= (INCF CL-PPCRE::COUNTER) CL-PPCRE::LIMIT)
; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

;     (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

;     (= CL-PPCRE::MATCH-START (CAR CL-PPCRE::POS-LIST))
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a (COMPLEX
;                                                               DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

;     (INCF CL-PPCRE::COUNTER)
; --> SETQ THE 
; ==>
;   (+ 1 CL-PPCRE::COUNTER)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (>= (INCF CL-PPCRE::COUNTER) CL-PPCRE::LIMIT)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The second argument is a REAL, not a FIXNUM.

;     (> CL-PPCRE::THIS-END CL-PPCRE::THIS-START)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

;     (CL-PPCRE:DO-SCANS (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                         CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS CL-PPCRE::REGEX
;                         CL-PPCRE::TARGET-STRING NIL :START CL-PPCRE::START :END
;                         CL-PPCRE::END)
;       (UNLESS
;           (AND (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
;                (= CL-PPCRE::MATCH-START (CAR CL-PPCRE::POS-LIST)))
;         (WHEN (AND CL-PPCRE::LIMIT (>= # CL-PPCRE::LIMIT)) (RETURN))
;         (PUSH CL-PPCRE::MATCH-START CL-PPCRE::POS-LIST)
;         (WHEN CL-PPCRE::WITH-REGISTERS-P
;           (LOOP CL-PPCRE::FOR CL-PPCRE::REG-START CL-PPCRE::ACROSS CL-PPCRE::REG-STARTS
;                 CL-PPCRE::FOR CL-PPCRE::REG-END CL-PPCRE::ACROSS CL-PPCRE::REG-ENDS
;                 IF CL-PPCRE::REG-START
;                 DO ...))
;         (PUSH CL-PPCRE::MATCH-END CL-PPCRE::POS-LIST)))
; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFINE-COMPILER-MACRO SPLIT ...)
; compiling (DEFUN STRING-CASE-MODIFIER ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN STRING-CASE-MODIFIER
;     (CHAR CL-PPCRE::STR (1- CL-PPCRE::FROM))
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (CHAR CL-PPCRE::STR CL-PPCRE::FROM)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (CHAR CL-PPCRE::STR CL-PPCRE::TO)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (CHAR CL-PPCRE::STR (1- CL-PPCRE::TO))
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (CHAR CL-PPCRE::STR CL-PPCRE::INDEX)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFGENERIC BUILD-REPLACEMENT-TEMPLATE ...)
; compiling (LET* (# #) ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFMETHOD BUILD-REPLACEMENT-TEMPLATE (STRING)
;     (POSITION-IF #'CL-PPCRE::DIGIT-CHAR-P CL-PPCRE::REPLACEMENT-STRING :START
;                  CL-PPCRE::MATCH-START :END CL-PPCRE::MATCH-END)
; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%FIND-POSITION-IF
;    (SB-KERNEL:%COERCE-CALLABLE-TO-FUN SB-C::PREDICATE) SEQUENCE SB-C::FROM-END
;    SB-C::START SB-C::END (SB-KERNEL:EFFECTIVE-FIND-POSITION-KEY SB-C::KEY))
; 
; note: unable to
;   expand inline
; because:
;   upgraded array element type not known at compile time

;     (CHAR CL-PPCRE::REPLACEMENT-STRING (1+ CL-PPCRE::MATCH-START))
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (< CL-PPCRE::FROM CL-PPCRE::MATCH-START)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

;     (1-
;      (PARSE-INTEGER CL-PPCRE::REPLACEMENT-STRING :START CL-PPCRE::PARSE-START
;                     :JUNK-ALLOWED T))
; ==>
;   (-
;    (PARSE-INTEGER CL-PPCRE::REPLACEMENT-STRING :START CL-PPCRE::PARSE-START
;                   :JUNK-ALLOWED T)
;    1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (< CL-PPCRE::TOKEN 0)
; 
; note: forced to do FAST-IF-<-ZERO (cost 9)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.

; compiling (DEFMETHOD BUILD-REPLACEMENT-TEMPLATE ...)
; compiling (DEFMETHOD BUILD-REPLACEMENT-TEMPLATE ...)
; compiling (DEFMETHOD BUILD-REPLACEMENT-TEMPLATE ...)
; compiling (DEFUN BUILD-REPLACEMENT ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN BUILD-REPLACEMENT
;     (ARRAY-DIMENSION CL-PPCRE::REG-STARTS 0)
; 
; note: unable to
;   optimize
; because:
;   The array dimensions are unknown; must call ARRAY-DIMENSION at runtime.

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::MATCH-START
;                        CL-PPCRE::MATCH-END)
; --> BLOCK 
; ==>
;   (MAKE-ARRAY (- CL-PPCRE::END CL-PPCRE::START) :ELEMENT-TYPE
;               (ARRAY-ELEMENT-TYPE SEQUENCE) :DISPLACED-TO SEQUENCE
;               :DISPLACED-INDEX-OFFSET CL-PPCRE::START)
; 
; note: unable to optimize because: ELEMENT-TYPE is not constant.

;     (MAP 'LIST
;          (LAMBDA (CL-PPCRE::REG-START CL-PPCRE::REG-END)
;            (AND CL-PPCRE::REG-START
;                 (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::REG-START
;                                    CL-PPCRE::REG-END)))
;          CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS)
; --> TRULY-THE 
; ==>
;   (SB-KERNEL:%MAP SB-C::RESULT-TYPE-ARG SB-C::FUN #:G42 #:G43)
; 
; note: unable to open code because: can't determine sequence argument type

;     (APPLY CL-PPCRE::TOKEN
;            (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::MATCH-START
;                               CL-PPCRE::MATCH-END)
;            (MAP 'LIST
;                 (LAMBDA (CL-PPCRE::REG-START CL-PPCRE::REG-END)
;                   (AND CL-PPCRE::REG-START
;                        (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING
;                                           CL-PPCRE::REG-START
;                                           CL-PPCRE::REG-END)))
;                 CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TOKEN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TOKEN is not known to be a function

;     (MAP 'LIST
;          (LAMBDA (CL-PPCRE::REG-START CL-PPCRE::REG-END)
;            (AND CL-PPCRE::REG-START
;                 (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::REG-START
;                                    CL-PPCRE::REG-END)))
;          CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS)
; --> TRULY-THE 
; ==>
;   (SB-KERNEL:%MAP SB-C::RESULT-TYPE-ARG SB-C::FUN #:G46 #:G47)
; 
; note: unable to open code because: can't determine sequence argument type

;     (FUNCALL CL-PPCRE::TOKEN CL-PPCRE::TARGET-STRING CL-PPCRE::START
;              CL-PPCRE::END CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;              CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CL-PPCRE::TOKEN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TOKEN is not known to be a function

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::REG-START
;                        CL-PPCRE::REG-END)
; --> BLOCK 
; ==>
;   (MAKE-ARRAY (- CL-PPCRE::END CL-PPCRE::START) :ELEMENT-TYPE
;               (ARRAY-ELEMENT-TYPE SEQUENCE) :DISPLACED-TO SEQUENCE
;               :DISPLACED-INDEX-OFFSET CL-PPCRE::START)
; 
; note: unable to optimize because: ELEMENT-TYPE is not constant.

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::MATCH-START
;                        CL-PPCRE::MATCH-END)
; --> BLOCK 
; ==>
;   (MAKE-ARRAY (- CL-PPCRE::END CL-PPCRE::START) :ELEMENT-TYPE
;               (ARRAY-ELEMENT-TYPE SEQUENCE) :DISPLACED-TO SEQUENCE
;               :DISPLACED-INDEX-OFFSET CL-PPCRE::START)
; 
; note: unable to optimize because: ELEMENT-TYPE is not constant.

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::REG-START
;                        CL-PPCRE::REG-END)
; --> BLOCK 
; ==>
;   (MAKE-ARRAY (- CL-PPCRE::END CL-PPCRE::START) :ELEMENT-TYPE
;               (ARRAY-ELEMENT-TYPE SEQUENCE) :DISPLACED-TO SEQUENCE
;               :DISPLACED-INDEX-OFFSET CL-PPCRE::START)
; 
; note: unable to optimize because: ELEMENT-TYPE is not constant.

; --> BLOCK MAKE-ARRAY 
; ==>
;   (- CL-PPCRE::END CL-PPCRE::START)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (>= CL-PPCRE::TOKEN CL-PPCRE::REG-BOUND)
; --> IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.

;     (1+ CL-PPCRE::TOKEN)
; ==>
;   (+ CL-PPCRE::TOKEN 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::MATCH-START
;                        CL-PPCRE::MATCH-END)
; --> BLOCK MAKE-ARRAY 
; ==>
;   (- CL-PPCRE::END CL-PPCRE::START)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (CL-PPCRE::NSUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::REG-START
;                        CL-PPCRE::REG-END)
; --> BLOCK MAKE-ARRAY 
; ==>
;   (- CL-PPCRE::END CL-PPCRE::START)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; compiling (DEFUN REPLACE-AUX ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN REPLACE-AUX
;     (FUNCALL
;      (CL-PPCRE::STRING-CASE-MODIFIER CL-PPCRE::TARGET-STRING CL-PPCRE::FROM
;       CL-PPCRE::TO CL-PPCRE::START CL-PPCRE::END)
;      CL-PPCRE::CURR-REPLACEMENT)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CL-PPCRE::STRING-CASE-MODIFIER CL-PPCRE::TARGET-STRING CL-PPCRE::FROM
;     CL-PPCRE::TO CL-PPCRE::START CL-PPCRE::END))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN REGEX-REPLACE ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN REGEX-REPLACE
;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::START CL-PPCRE::END)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFINE-COMPILER-MACRO REGEX-REPLACE ...)
; compiling (DEFUN REGEX-REPLACE-ALL ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN REGEX-REPLACE-ALL
;     (CL-PPCRE:DO-SCANS (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                         CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS CL-PPCRE::REGEX
;                         CL-PPCRE::TARGET-STRING NIL :START CL-PPCRE::START :END
;                         CL-PPCRE::END)
;       (PUSH CL-PPCRE::MATCH-START CL-PPCRE::POS-LIST)
;       (PUSH CL-PPCRE::MATCH-END CL-PPCRE::POS-LIST)
;       (PUSH CL-PPCRE::REG-STARTS CL-PPCRE::REG-LIST)
;       (PUSH CL-PPCRE::REG-ENDS CL-PPCRE::REG-LIST))
; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                               (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                               (COMPLEX RATIONAL)), not a RATIONAL.

;     (SUBSEQ CL-PPCRE::TARGET-STRING CL-PPCRE::START CL-PPCRE::END)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (LENGTH CL-PPCRE::TARGET-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CL-PPCRE:DO-SCANS (CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END
;                         CL-PPCRE::REG-STARTS CL-PPCRE::REG-ENDS CL-PPCRE::REGEX
;                         CL-PPCRE::TARGET-STRING NIL :START CL-PPCRE::START :END
;                         CL-PPCRE::END)
;       (PUSH CL-PPCRE::MATCH-START CL-PPCRE::POS-LIST)
;       (PUSH CL-PPCRE::MATCH-END CL-PPCRE::POS-LIST)
;       (PUSH CL-PPCRE::REG-STARTS CL-PPCRE::REG-LIST)
;       (PUSH CL-PPCRE::REG-ENDS CL-PPCRE::REG-LIST))
; --> LET BLOCK LET* OR LET IF 
; ==>
;   (LENGTH #:TARGET-STRING1)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; --> LET BLOCK LET* SETQ THE CL-PPCRE::MAYBE-COERCE-TO-SIMPLE-STRING LET COND 
; --> IF THE COERCE THE IF REPLACE MAKE-ARRAY 
; ==>
;   (LENGTH SB-C::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS NULL
;                               (AND (NOT (SIMPLE-ARRAY CHARACTER (*)))
;                                    (NOT (SIMPLE-ARRAY NIL (*)))
;                                    (NOT SIMPLE-BASE-STRING) VECTOR)
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 
; ==>
;   (= CL-PPCRE::MATCH-START CL-PPCRE::MATCH-END)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;       etc.

; --> LET BLOCK LET* LOOP BLOCK TAGBODY PROGN MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL FUNCTION SETQ THE IF 1+ 
; ==>
;   (+ CL-PPCRE::MATCH-END 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIONAL
;                                   (COMPLEX SINGLE-FLOAT) (COMPLEX DOUBLE-FLOAT)
;                                   (COMPLEX RATIONAL)), not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFINE-COMPILER-MACRO REGEX-REPLACE-ALL ...)
; compiling (DEFMACRO REGEX-APROPOS-AUX ...)
; compiling (DEFUN REGEX-APROPOS-LIST ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN REGEX-APROPOS-LIST
;     (DEFUN CL-PPCRE:REGEX-APROPOS-LIST
;            (CL-PPCRE::REGEX
;             &OPTIONAL CL-PPCRE::PACKAGES
;             &KEY (CL-PPCRE::CASE-INSENSITIVE T))
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       #<(SIMPLE-ARRAY CHARACTER
;          (221)) Similar to the standard function APROPOS-LIST but returns a list of
;   all symbols which match the regular expression REGEX.  If
;   CASE-INSENSITIVE is true and REGEX isn't already a scanner, a
;   case-insensi... {100DA9F17F}>
;       (LET ((CL-PPCRE::COLLECTOR 'NIL))
;         (CL-PPCRE::REGEX-APROPOS-AUX (CL-PPCRE::REGEX CL-PPCRE::PACKAGES
;                                                       CL-PPCRE::CASE-INSENSITIVE
;                                                       CL-PPCRE::COLLECTOR)
;           (PUSH SYMBOL CL-PPCRE::COLLECTOR))))
; --> PROGN SB-IMPL::%DEFUN SB-IMPL::%DEFUN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA CL-PPCRE:REGEX-APROPOS-LIST
;         (CL-PPCRE::REGEX &OPTIONAL CL-PPCRE::PACKAGES &KEY
;                          (CL-PPCRE::CASE-INSENSITIVE T))
;       (DECLARE (SB-C::TOP-LEVEL-FORM))
;       #<(SIMPLE-ARRAY CHARACTER
;          (221)) Similar to the standard function APROPOS-LIST but returns a list of
; all symbols which match the regular expression REGEX.  If
; CASE-INSENSITIVE is true and REGEX isn't already a scanner, a
; case-insensi... {100DA9F17F}>
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (BLOCK CL-PPCRE:REGEX-APROPOS-LIST
;         (LET ((CL-PPCRE::COLLECTOR 'NIL))
;           (CL-PPCRE::REGEX-APROPOS-AUX (CL-PPCRE::REGEX CL-PPCRE::PACKAGES
;                                                         CL-PPCRE::CASE-INSENSITIVE
;                                                         CL-PPCRE::COLLECTOR)
;             (PUSH SYMBOL CL-PPCRE::COLLECTOR)))))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (REGEX &OPTIONAL PACKAGES
;                                                            &KEY
;                                                            (CASE-INSENSITIVE T))

; compiling (DEFUN PRINT-SYMBOL-INFO ...)
; compiling (DEFUN REGEX-APROPOS ...)
; file: /<<PKGBUILDDIR>>/cl-ppcre/api.lisp
; in: DEFUN REGEX-APROPOS
;     (DEFUN CL-PPCRE:REGEX-APROPOS
;            (CL-PPCRE::REGEX
;             &OPTIONAL CL-PPCRE::PACKAGES
;             &KEY (CL-PPCRE::CASE-INSENSITIVE T))
;       #<(SIMPLE-ARRAY CHARACTER
;          (216)) Similar to the standard function APROPOS but returns a list of all
;   symbols which match the regular expression REGEX.  If CASE-INSENSITIVE
;   is true and REGEX isn't already a scanner, a case-insensitive ... {100DFC282F}>
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (CL-PPCRE::REGEX-APROPOS-AUX (CL-PPCRE::REGEX CL-PPCRE::PACKAGES
;                                                     CL-PPCRE::CASE-INSENSITIVE)
;         (CL-PPCRE::PRINT-SYMBOL-INFO SYMBOL))
;       (VALUES))
; --> PROGN SB-IMPL::%DEFUN SB-IMPL::%DEFUN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA CL-PPCRE:REGEX-APROPOS
;         (CL-PPCRE::REGEX &OPTIONAL CL-PPCRE::PACKAGES &KEY
;                          (CL-PPCRE::CASE-INSENSITIVE T))
;       (DECLARE (SB-C::TOP-LEVEL-FORM))
;       #<(SIMPLE-ARRAY CHARACTER
;          (216)) Similar to the standard function APROPOS but returns a list of all
; symbols which match the regular expression REGEX.  If CASE-INSENSITIVE
; is true and REGEX isn't already a scanner, a case-insensitive ... {100DFC282F}>
;       (DECLARE
;        (OPTIMIZE SPEED (SAFETY 0) (SPACE 0) (DEBUG 1) (COMPILATION-SPEED 0)))
;       (BLOCK CL-PPCRE:REGEX-APROPOS
;         (CL-PPCRE::REGEX-APROPOS-AUX (CL-PPCRE::REGEX CL-PPCRE::PACKAGES
;                                                       CL-PPCRE::CASE-INSENSITIVE)
;           (CL-PPCRE::PRINT-SYMBOL-INFO SYMBOL))
;         (VALUES)))
; 
; caught STYLE-WARNING:
;   &OPTIONAL and &KEY found in the same lambda list: (REGEX &OPTIONAL PACKAGES
;                                                            &KEY
;                                                            (CASE-INSENSITIVE T))

; compiling (LET* (# #) ...)
; compiling (LET* (# # ...) ...)
; compiling (LET* (# # ...) ...)
; compiling (DEFUN PARSE-TREE-SYNONYM ...)
; compiling (DEFUN (SETF PARSE-TREE-SYNONYM) ...)
; compiling (DEFMACRO DEFINE-PARSE-TREE-SYNONYM ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cl-ppcre/api-tmpY2ML9CFA.fasl
; compilation finished in 0:00:00.941
WARNING:
   Lisp compilation had style-warnings while
   compiling #<CL-SOURCE-FILE "cl-ppcre" "api">
; 
; compilation unit finished
;   caught 7 STYLE-WARNING conditions
;   printed 647 notes
STYLE-WARNING: using deprecated EVAL-WHEN situation names LOAD EVAL
WARNING: System definition file #P"/<<PKGBUILDDIR>>/sysdef.asd" contains definition for system "chaosx". Please only define "sysdef" and secondary systems with a name starting with "sysdef/" (e.g. "sysdef/test") in that file.
; compiling file "/<<PKGBUILDDIR>>/chaos-package.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (PUSHNEW :BIGPINK ...)
; compiling (REQUIRE :ASDF)
; compiling (DEFPACKAGE :CL-PPCRE-ASD ...)
; compiling (DEFPACKAGE :CL-PPCRE ...)
; compiling (DEFPACKAGE "CHAOS" ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos-package-tmpX2JYJDQE.fasl
; compilation finished in 0:00:00.008
; compiling file "/<<PKGBUILDDIR>>/version.lisp" (written 25 FEB 2020 03:44:38 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFVAR CAFEOBJ-VERSION)
; compiling (DEFVAR CAFEOBJ-VERSION-MAJOR)
; compiling (DEFVAR CAFEOBJ-VERSION-MINOR)
; compiling (DEFVAR CAFEOBJ-VERSION-MEMO)
; compiling (DEFVAR PATCH-LEVEL ...)
; compiling (SETQ CAFEOBJ-VERSION-MAJOR ...)
; compiling (SETQ CAFEOBJ-VERSION-MEMO ...)
; compiling (SETQ PATCH-LEVEL ...)
; compiling (IF (NOT #) ...)
; compiling (SETQ CAFEOBJ-VERSION ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/version-tmpOPCILR65.fasl
; compilation finished in 0:00:00.025
; compiling file "/<<PKGBUILDDIR>>/comlib/globals.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *CURRENT-MODULE* ...))
; compiling (DEFVAR *TOP-LEVEL-DEFINITION-IN-PROGRESS* ...)
; compiling (DECLAIM (SPECIAL *OPEN-MODULE* ...))
; compiling (DEFVAR *CURRENT-MODULE* ...)
; compiling (DEFVAR *CURRENT-SORT-ORDER* ...)
; compiling (DEFVAR *CURRENT-OPINFO-TABLE* ...)
; compiling (DEFVAR *CURRENT-EXT-RULE-TABLE* ...)
; compiling (DEFVAR *OPEN-MODULE* ...)
; compiling (DEFVAR *LAST-BEFORE-OPEN* ...)
; compiling (DEFVAR *CHAOS-FEATURES* ...)
; compiling (DECLAIM (SPECIAL *CHAOS-VERBOSE* ...))
; compiling (DEFVAR *CHAOS-VERBOSE* ...)
; compiling (DEFVAR *CHAOS-QUIET* ...)
; compiling (DEFVAR *CHAOS-INPUT-SOURCE* ...)
; compiling (DECLAIM (SPECIAL *CHAOS-INPUT-LEVEL*) ...)
; compiling (DEFVAR *CHAOS-INPUT-LEVEL* ...)
; compiling (DEFVAR *CHAOS-INPUT-NESTING-LIMIT* ...)
; compiling (DECLAIM (SPECIAL *AUTO-CONTEXT-CHANGE*))
; compiling (DEFVAR *AUTO-CONTEXT-CHANGE* ...)
; compiling (DEFVAR *SYSTEM-PRELUDE-DIR* ...)
; compiling (DEFVAR *SYSTEM-LIB-DIR* ...)
; compiling (DEFVAR *SYSTEM-EX-DIR* ...)
; compiling (DECLAIM (SPECIAL *TRACE-LEVEL*))
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *TRACE-LEVEL* ...)
; compiling (DECLAIM (SPECIAL *SELF*))
; compiling (DEFVAR *SELF* ...)
; compiling (DEFVAR $$COND ...)
; compiling (DEFVAR $$TRACE-REWRITE ...)
; compiling (DEFVAR $$TRACE-REWRITE-WHOLE ...)
; compiling (DEFVAR $$TRACE-PROOF ...)
; compiling (DEFVAR *PROOF-TREE* ...)
; compiling (DEFVAR *NEXT-DEFAULT-PROOF-NODE* ...)
; compiling (DEFVAR *CITP-VERBOSE* ...)
; compiling (DEFVAR *CITP-NORMALIZE-INSTANCE* ...)
; compiling (DEFVAR *REWRITE-STEPPING* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *REWRITE-COUNT-LIMIT* ...)
; compiling (DEFVAR *REWRITE-STOP-PATTERN* ...)
; compiling (DEFVAR *STEPS-TO-BE-DONE* ...)
; compiling (DEFVAR $$MOD ...)
; compiling (DEFVAR *OLD-CONTEXT* ...)
; compiling (DECLAIM (SPECIAL *OLD-CONTEXT*))
; compiling (DECLAIM (SPECIAL *ALLOW-$$TERM*))
; compiling (DEFVAR *ALLOW-$$TERM* ...)
; compiling (DEFVAR $$TERM ...)
; compiling (DEFVAR $$SUBTERM ...)
; compiling (DEFVAR $$TERM-CONTEXT ...)
; compiling (DEFVAR $$SELECTION-STACK ...)
; compiling (DEFVAR $$ACTION-STACK ...)
; compiling (DEFVAR $$NORM ...)
; compiling (DEFVAR $$SHOW-RED ...)
; compiling (DEFVAR *PERFORM-ON-DEMAND-REDUCTION* ...)
; compiling (DECLAIM (SPECIAL *REWRITE-EXEC-MODE*))
; compiling (DEFVAR *REWRITE-EXEC-MODE* ...)
; compiling (DECLAIM (SPECIAL *CEXEC-TARGET*))
; compiling (DEFVAR *CEXEC-TARGET* ...)
; compiling (DECLAIM (SPECIAL *REWRITE-EXEC-CONDITION*))
; compiling (DEFVAR *REWRITE-EXEC-CONDITION* ...)
; compiling (DECLAIM (SPECIAL *REWRITE-SEMANTIC-REDUCE*) ...)
; compiling (DEFVAR *REWRITE-SEMANTIC-REDUCE* ...)
; compiling (DECLAIM (SPECIAL *BEH-REWRITE*) ...)
; compiling (DEFVAR *BEH-REWRITE* ...)
; compiling (DECLAIM (TYPE FIXNUM ...) ...)
; compiling (DEFVAR *RULE-COUNT* ...)
; compiling (DEFVAR *SHOW-STATS* ...)
; compiling (DEFVAR *TRY-TRY* ...)
; compiling (DEFVAR *REDUCE-CONDITIONS* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR $$TRIALS ...)
; compiling (DECLAIM (TYPE FIXNUM ...) ...)
; compiling (DEFVAR $$MATCHES ...)
; compiling (DEFVAR *ON-REDUCTION* ...)
; compiling (DEFVAR *REDUCE-BUILTIN-EAGER* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER .CONDITION-TRIAL-LIMIT-DEFAULT. ...)
; compiling (DEFVAR *CONDITION-TRIAL-LIMIT* ...)
; compiling (DEFVAR *MEL-SORT* ...)
; compiling (DEFVAR *MEL-ALWAYS* ...)
; compiling (DEFVAR *M-PATTERN-SUBST* ...)
; compiling (DEFVAR *MEMO-REWRITE* ...)
; compiling (DEFVAR *CLEAN-MEMO-IN-NORMALIZE* ...)
; compiling (DEFVAR *ALWAYS-MEMO* ...)
; compiling (DECLAIM (SPECIAL *TERM-MEMO-HASH-HIT*) ...)
; compiling (DEFVAR *TERM-MEMO-HASH-HIT* ...)
; compiling (DECLAIM (SPECIAL .HASH-SIZE.) ...)
; compiling (DEFVAR .HASH-SIZE. ...)
; compiling (DEFVAR *ALLOW-ILLEGAL-BEH-AXIOM* ...)
; compiling (DECLAIM (SPECIAL *REGULARIZE-SIGNATURE*))
; compiling (DEFVAR *REGULARIZE-SIGNATURE* ...)
; compiling (DEFVAR *CHECK-REGULARITY* ...)
; compiling (DECLAIM (SPECIAL *CHECK-COMPATIBILITY*))
; compiling (DEFVAR *CHECK-COMPATIBILITY* ...)
; compiling (DECLAIM (SPECIAL *CHECK-SENSIBLENESS*))
; compiling (DEFVAR *CHECK-SENSIBLENESS* ...)
; compiling (DECLAIM (SPECIAL *CHECK-RWL-COHERENCY*))
; compiling (DEFVAR *CHECK-RWL-COHERENCY* ...)
; compiling (DECLAIM (SPECIAL *BUILTIN-OVERLOADING-CHECK*))
; compiling (DEFVAR *BUILTIN-OVERLOADING-CHECK* ...)
; compiling (DECLAIM (SPECIAL *PRINT-INDENT*))
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *MODULE-ALL-RULES-EVERY* ...)
; compiling (DEFVAR *FANCY-PRINT* ...)
; compiling (DEFVAR *PRINT-TERM-STRUCT* ...)
; compiling (DEFVAR *PRINT-XMODE* ...)
; compiling (DEFVAR *SHOW-MODE* ...)
; compiling (DEFVAR *PRINT-INDENT* ...)
; compiling (DEFPARAMETER *PRINT-INDENT-INCREMENT* ...)
; compiling (DEFVAR *PRINT-EXPLICIT* ...)
; compiling (DEFVAR *PRINT-ABBREV-MOD* ...)
; compiling (DEFVAR *PRINT-ABBREV-NUM* ...)
; compiling (DEFVAR *PRINT-ABBREV-TABLE* ...)
; compiling (DEFVAR *PRINT-ABBREV-QUALS* ...)
; compiling (DEFVAR *PRINT-WITH-SORT* ...)
; compiling (DEFVAR *PRINT-OPERATOR-TABLE* ...)
; compiling (DEFVAR *PRINT-FLAG-MODULE-VALUES* ...)
; compiling (DEFVAR *PRINT-INDENT-CONTIN* ...)
; compiling (DEFVAR *PRINT-LINE-LIMIT* ...)
; compiling (DEFVAR *PRINT-MODE* ...)
; compiling (DEFVAR *PRINT-ALL-EQNS* ...)
; compiling (DEFVAR *PRINT-EXEC-RULE* ...)
; compiling (DEFVAR *PRINT-EVERY-EXEC-FINDING* ...)
; compiling (DEFVAR *PRINT-IGNORE-MODS* ...)
; compiling (DEFVAR *CHAOS-PRINT-LEVEL* ...)
; compiling (DEFVAR *CHAOS-PRINT-LENGTH* ...)
; compiling (DEFVAR *CHAOS-PRINT-ERRORS* ...)
; compiling (DEFVAR *CHAOS-INPUT-QUIET* ...)
; compiling (DEFVAR *PRINT-VARIABLES* ...)
; compiling (DEFVAR *GRIND-BOOL-TERM* ...)
; compiling (DECLAIM (SPECIAL .FILE-COL.) ...)
; compiling (DEFVAR .FILE-COL. ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *TERM-PRINT-DEPTH* ...)
; compiling (DEFVAR *SHOW-TREE-HORIZONTAL* ...)
; compiling (DEFVAR *CAFEOBJ-BATCH* ...)
; compiling (DEFVAR *CAFEOBJ-INPUT-QUIET* ...)
; compiling (DEFVAR $)
; compiling (DEFVAR -CAFEOBJ-LOAD-TIME- ...)
; compiling (DEFVAR *CAFEOBJ-STANDARD-PRELUDE-PATH* ...)
; compiling (DEFCONSTANT $NAME-SORT ...)
; compiling (DEFCONSTANT $NAME-GEN-SORT ...)
; compiling (DEFCONSTANT $NAME-BI-SORT ...)
; compiling (DEFCONSTANT $NAME-IDENTIFIER ...)
; compiling (DEFCONSTANT $NAME-COSMOS ...)
; compiling (DEFCONSTANT $NAME-UNIVERSAL ...)
; compiling (DEFCONSTANT $NAME-HUNIVERSAL ...)
; compiling (DEFCONSTANT $NAME-TERM ...)
; compiling (DEFCONSTANT $NAME-BOTTOM ...)
; compiling (DEFCONSTANT $NAME-HBOTTOM ...)
; compiling (DEFCONSTANT $NAME-RECORD ...)
; compiling (DEFCONSTANT $NAME-CLASS ...)
; compiling (DEFCONSTANT $NAME-AND-SORT ...)
; compiling (DEFCONSTANT $NAME-OR-SORT ...)
; compiling (DEFCONSTANT $NAME-ERR-SORT ...)
; compiling (DEFCONSTANT $NAME-OPERATOR ...)
; compiling (DEFCONSTANT $NAME-OPTHEORY ...)
; compiling (DEFCONSTANT $NAME-MODULE ...)
; compiling (DEFCONSTANT $NAME-SIGNATURE ...)
; compiling (DEFCONSTANT $NAME-AXIOMSET ...)
; compiling (DEFCONSTANT $NAME-TRS ...)
; compiling (DEFCONSTANT $NAME-AXIOM ...)
; compiling (DEFCONSTANT $NAME-CHAOS-OBJECT ...)
; compiling (DEFCONSTANT $NAME-CHAOS-EXPR ...)
; compiling (DEFCONSTANT $NAME-TERM-TYPE ...)
; compiling (DEFCONSTANT $NAME-CHAOS-LIST ...)
; compiling (DEFCONSTANT $NAME-VOID ...)
; compiling (DEFCONSTANT $NAME-IMPORT ...)
; compiling (DEFCONSTANT $NAME-SUBST ...)
; compiling (DEFCONSTANT $NAME-PARAMETER ...)
; compiling (DEFVAR *COSMOS* ...)
; compiling (DEFVAR *CHAOS-OBJECT* ...)
; compiling (DEFVAR *CHAOS-EXPR-SORT* ...)
; compiling (DEFVAR *TERM-SORT* ...)
; compiling (DEFVAR *UNIVERSAL-SORT* ...)
; compiling (DEFVAR *HUNIVERSAL-SORT* ...)
; compiling (DEFVAR *BOTTOM-SORT* ...)
; compiling (DEFVAR *HBOTTOM-SORT* ...)
; compiling (DEFVAR *SORT-SORT* ...)
; compiling (DEFVAR *GENERAL-SORT* ...)
; compiling (DEFVAR *BUILTIN-SORT* ...)
; compiling (DEFVAR *IDENTIFIER-SORT* ...)
; compiling (DEFVAR *ID-SORT* ...)
; compiling (DEFVAR *QID-SORT* ...)
; compiling (DEFVAR *SYNTAX-ERR-SORT* ...)
; compiling (DEFVAR *TYPE-ERR-SORT* ...)
; compiling (DEFVAR *OP-ERR-SORT* ...)
; compiling (DEFVAR *AND-SORT* ...)
; compiling (DEFVAR *OR-SORT* ...)
; compiling (DEFVAR *ERR-SORT* ...)
; compiling (DEFVAR *SORT-ERROR* ...)
; compiling (DEFVAR *RECORD-SORT* ...)
; compiling (DEFVAR *CLASS-SORT* ...)
; compiling (DEFVAR *OPERATOR-SORT* ...)
; compiling (DEFVAR *OPTHEORY-SORT* ...)
; compiling (DEFVAR *MODULE-SORT* ...)
; compiling (DEFVAR *IMPORT-SORT* ...)
; compiling (DEFVAR *SIGNATURE-SORT* ...)
; compiling (DEFVAR *AXIOMSET-SORT* ...)
; compiling (DEFVAR *TRS-SORT* ...)
; compiling (DEFVAR *VARIABLE-SORT* ...)
; compiling (DEFVAR *APPL-FORM-SORT* ...)
; compiling (DEFVAR *PVARIABLE-SORT* ...)
; compiling (DEFVAR *LISP-TERM-SORT* ...)
; compiling (DEFVAR *SLISP-TERM-SORT* ...)
; compiling (DEFVAR *GLISP-TERM-SORT* ...)
; compiling (DEFVAR *BCONST-TERM-SORT* ...)
; compiling (DEFVAR *MODEXPR-SORT* ...)
; compiling (DEFVAR *CHAOS-LIST-SORT* ...)
; compiling (DEFVAR *CHAOS-VOID-SORT* ...)
; compiling (DEFVAR *BOOL-SORT* ...)
; compiling (DEFVAR *SORT-ID-SORT* ...)
; compiling (DEFVAR *STRING-SORT* ...)
; compiling (DEFVAR *CHAOS-VALUE-SORT* ...)
; compiling (DEFVAR *CHARACTER-SORT* ...)
; compiling (DEFVAR *AXIOM-SORT* ...)
; compiling (DEFVAR *OBJECT-IDENTIFIER-SORT* ...)
; compiling (DEFVAR *OBJECT-SORT* ...)
; compiling (DEFVAR *RECORD-INSTANCE-SORT* ...)
; compiling (DEFVAR *CLASS-ID-SORT* ...)
; compiling (DEFVAR *RECORD-ID-SORT* ...)
; compiling (DEFVAR *ATTRIBUTE-ID-SORT* ...)
; compiling (DEFVAR *ATTRIBUTE-SORT* ...)
; compiling (DEFVAR *ATTRIBUTE-LIST-SORT* ...)
; compiling (DEFVAR *ATTR-VALUE-SORT* ...)
; compiling (DEFVAR *MESSAGE-SORT* ...)
; compiling (DEFVAR *CONFIGURATION-SORT* ...)
; compiling (DEFVAR *ACZ-CONFIGURATION-SORT* ...)
; compiling (DEFVAR *SUBST-SORT* ...)
; compiling (DEFVAR *SORT_BUILTIN* ...)
; compiling (DEFVAR *PARAMETER-SORT* ...)
; compiling (DEFVAR *CONDITION-SORT* ...)
; compiling (DEFVAR SUP-UNIVERSAL-SORT-NAME ...)
; compiling (DEFVAR SUP-HUNIVERSAL-SORT-NAME ...)
; compiling (DEFVAR *SYSTEM-STANDARD-PRELUDE* ...)
; compiling (DEFVAR *SYSTEM-SOFT-WIRED* ...)
; compiling (DEFVAR *KERNEL-HARD-WIRED-BUILTIN-MODULES* ...)
; compiling (DEFVAR *SYSTEM-MODULE* ...)
; compiling (DEFVAR *CHAOS-META* ...)
; compiling (DEFVAR *CHAOS-MODULE* ...)
; compiling (DEFVAR *CHAOS-OBJECT-MODULE* ...)
; compiling (DEFVAR *BUILTIN-METALEVEL-SORT* ...)
; compiling (DEFVAR *STRING-NOT-FOUND* ...)
; compiling (DEFVAR *CHAOS-SORT-ORDER* ...)
; compiling (DEFVAR *PARSER-SORT-ORDER* ...)
; compiling (DEFVAR *SYSTEM-OBJECT-MODULE* ...)
; compiling (DEFVAR *IDENTIFIER-MODULE* ...)
; compiling (DEFVAR *UNIVERSAL-MODULE* ...)
; compiling (DEFVAR *PARSER-MODULE* ...)
; compiling (DEFVAR *QID-MODULE* ...)
; compiling (DEFVAR *ID-MODULE* ...)
; compiling (DEFVAR .INT-MODULE. ...)
; compiling (DEFVAR *BUILTIN-METHOD* ...)
; compiling (DEFVAR *BUILTIN-OP* ...)
; compiling (DEFVAR *PARTIAL-OP* ...)
; compiling (DEFVAR *VOID-OP* ...)
; compiling (DEFVAR *PARTIAL-METHOD* ...)
; compiling (DEFVAR *VOID-METHOD* ...)
; compiling (DEFVAR *TYPE-ERR-OP* ...)
; compiling (DEFVAR *TYPE-ERR-METHOD* ...)
; compiling (DEFVAR *OP-ERR-OP* ...)
; compiling (DEFVAR *OP-ERR-METHOD* ...)
; compiling (DEFVAR *OP-TERM* ...)
; compiling (DEFVAR *TRUTH-VALUE-MODULE* ...)
; compiling (DEFVAR *TRUTH-MODULE* ...)
; compiling (DEFVAR *BOOL-MODULE* ...)
; compiling (DEFVAR *IDENTICAL-MODULE* ...)
; compiling (DEFVAR *EQL-MODULE* ...)
; compiling (DEFVAR *BOOTSTRAPPING-BOOL* ...)
; compiling (DEFVAR *BOOL-TRUE* ...)
; compiling (DEFVAR *BOOL-TRUE-METH* ...)
; compiling (DEFVAR *BOOL-FALSE* ...)
; compiling (DEFVAR *BOOL-FALSE-METH* ...)
; compiling (DEFVAR *BOOL-AND* ...)
; compiling (DEFVAR *BOOL-OR* ...)
; compiling (DEFVAR *BOOL-NOT* ...)
; compiling (DEFVAR *SORT-MEMBERSHIP* ...)
; compiling (DEFVAR *BOOL-IF* ...)
; compiling (DEFVAR *BOOL-IMPLY* ...)
; compiling (DEFVAR *BOOL-XOR* ...)
; compiling (DEFVAR *BOOL-EQUAL* ...)
; compiling (DEFVAR *BOOL-MATCH* ...)
; compiling (DEFVAR *BEH-EQUAL* ...)
; compiling (DEFVAR *BOOL-NONEQUAL* ...)
; compiling (DEFVAR *BEH-EQ-PRED* ...)
; compiling (DEFVAR *BOOL-AND-ALSO* ...)
; compiling (DEFVAR *BOOL-OR-ELSE* ...)
; compiling (DEFVAR *BOOL-IFF* ...)
; compiling (DEFVAR *BOOL-COND-OP* ...)
; compiling (DEFVAR *EQL-OP* ...)
; compiling (DEFVAR *M-AND-OP* ...)
; compiling (DEFVAR *M-OR-OP* ...)
; compiling (DEFVAR *RWL-MODULE* ...)
; compiling (DEFVAR *RWL-NAT-STAR-SORT* ...)
; compiling (DEFVAR *RWL-PREDICATE* ...)
; compiling (DEFVAR *RWL-PREDICATE2* ...)
; compiling (DEFVAR .RWL-SCH-CONTEXT. ...)
; compiling (DEFVAR .RWL-CONTEXT-STACK. ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR .RWL-STATES-SO-FAR. ...)
; compiling (DEFVAR *RWL-SEARCH-NO-STATE-REPORT* ...)
; compiling (DEFVAR *IDENTICAL* ...)
; compiling (DEFVAR *NONIDENTICAL* ...)
; compiling (DEFVAR *ATTRIBUTE-CONSTRUCTOR* ...)
; compiling (DEFVAR *ATTRIBUTE-LIST-CONSTRUCTOR* ...)
; compiling (DEFVAR *ATTRIBUTE-LIST-AUX-VARIABLE* ...)
; compiling (DEFVAR *OBJECT-REFERENCE-METHOD* ...)
; compiling (DEFVAR *OBJECT-CONSTRUCTOR-METHOD* ...)
; compiling (DEFVAR *OBJECT-CONSTRUCTOR-OP* ...)
; compiling (DEFVAR *RECORD-CONSTRUCTOR-METHOD* ...)
; compiling (DEFVAR *RECORD-CONSTRUCTOR-OP* ...)
; compiling (DEFVAR *VOID-OBJECT* ...)
; compiling (DEFVAR *VOID-RECORD* ...)
; compiling (DECLAIM (SPECIAL *PARSE-VARIABLES* ...))
; compiling (DECLAIM (SPECIAL *READER-SCHEMA-ENV* ...))
; compiling (DECLAIM (SPECIAL *MACROEXPAND*))
; compiling (DEFVAR *FILL-RC-ATTRIBUTE* ...)
; compiling (DEFVAR *PARSING-AXIOM-LHS* ...)
; compiling (DEFVAR *PARSE-LHS-ATTR-VARS* ...)
; compiling (DEFVAR *LHS-ATTRID-VARS* ...)
; compiling (DEFPARAMETER .LISP-START-SYMBOL. ...)
; compiling (DEFVAR *PARSE-VARIABLES* ...)
; compiling (DEFCONSTANT PARSER-MIN-PRECEDENCE ...)
; compiling (DEFCONSTANT PARSER-MAX-PRECEDENCE ...)
; compiling (DEFVAR *READER-SCHEMA-ENV* ...)
; compiling (DEFVAR *READER-CURRENT-SCHEMA* ...)
; compiling (DEFVAR *READER-CURRENT-CONTEXT* ...)
; compiling (DEFVAR *READER-STARTING-POSITION* ...)
; compiling (DEFVAR *BUILTIN-AST-DICT* ...)
; compiling (DEFVAR *PARSE-NORMALIZE* ...)
; compiling (DEFVAR *MACROEXPAND* ...)
; compiling (DEFVAR *INCLUDE-BOOL* ...)
; compiling (DEFVAR *INCLUDE-BOOL-SAVE*)
; compiling (DEFVAR *INCLUDE-RWL* ...)
; compiling (DEFVAR *INCLUDE-FOPL* ...)
; compiling (DEFVAR *COMPILE-LISP-RHS* ...)
; compiling (DEFVAR *RUNNING-WITH-TK* ...)
; compiling (DEFVAR *SUB-PROMPT* ...)
; compiling (DEFVAR *NO-PROMPT* ...)
; compiling (DEFVAR *CONSIDER-OBJECT* ...)
; compiling (DEFVAR *AUTO-RECONSTRUCT* ...)
; compiling (DEFVAR *SAVE-DEFINITION* ...)
; compiling (DECLAIM (SPECIAL *MODMORPH-NEW-MODULE*))
; compiling (DEFVAR *MODMORPH-NEW-MODULE* ...)
; compiling (DEFVAR *TIME-ZONE* ...)
; compiling (DEFVAR *ALLOW-GENERAL-TERM-INPUT* ...)
; compiling (DEFVAR *CHAOS-LIBPATH* ...)
; compiling (DECLAIM (SPECIAL *BEH-PROOF-IN-PROGRESS*))
; compiling (DEFVAR *BEH-PROOF-IN-PROGRESS* ...)
; compiling (DEFVAR *USER-BOOL* ...)
; compiling (DEFVAR *TRAM-PATH* ...)
; compiling (DEFVAR *TRAM-OPTIONS* ...)
; compiling (DEFVAR *TRAM-BUILTIN-MODULES*)
; compiling (DEFVAR *TRAM-BOOL-MODULES*)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *CEXEC-LIMIT* ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *CEXEC-TRACE* ...)
; compiling (DEFVAR *CEXEC-NORMALIZE* ...)
; compiling (DEFVAR *CEXEC-FIND-ALL-SOLUTIONS* ...)
; compiling (DEFVAR *COMPILE-BUILTIN-AXIOM* ...)
; compiling (DEFVAR *BI-UNIVERSAL-OPERATORS* ...)
; compiling (DEFVAR *ALLOW-UNIVERSAL-SORT* ...)
; compiling (DEFVAR *AUTOLOAD-ALIST* ...)
; compiling (DEFVAR *SELECT-AMBIG-TERM* ...)
; compiling (DEFVAR *ACCEPT-SYSTEM-PROOF* ...)
; compiling (DEFVAR *FIND-ALL-RULES* ...)
; compiling (DEFVAR *DEVELOPMENT-MODE* ...)
; compiling (DEFVAR *NO-ID-COMPLETION* ...)
; compiling (DEFVAR *REWRITE-DEBUG* ...)
; compiling (DEFVAR *ON-TERM-HASH-DEBUG* ...)
; compiling (DEFVAR *ON-AXIOM-DEBUG* ...)
; compiling (DEFVAR *BEH-DEBUG* ...)
; compiling (DEFVAR *GEN-RULE-DEBUG* ...)
; compiling (DEFVAR *ON-CHANGE-DEBUG* ...)
; compiling (DEFVAR *ON-OPERATOR-DEBUG* ...)
; compiling (DEFVAR *ON-SORT-DEBUG* ...)
; compiling (DEFVAR *ON-TRS-DEBUG* ...)
; compiling (DEFVAR *ON-IMPORT-DEBUG* ...)
; compiling (DEFVAR *ON-MODEXP-DEBUG* ...)
; compiling (DEFVAR *ON-VIEW-DEBUG* ...)
; compiling (DEFVAR *MATCH-DEBUG* ...)
; compiling (DEFVAR *MODULE-DEP-DEBUG* ...)
; compiling (DEFVAR *TERM-DEBUG* ...)
; compiling (DEFVAR *ON-PARSE-DEBUG* ...)
; compiling (DEFVAR *REGULARIZE-DEBUG* ...)
; compiling (DEFVAR *ON-TRAM-DEBUG* ...)
; compiling (DEFVAR *MEL-DEBUG* ...)
; compiling (DEFVAR *CHECK-IMPORT-MODE* ...)
; compiling (DEFVAR *CEXEC-DEBUG* ...)
; compiling (DEFVAR *DEBUG-META* ...)
; compiling (DEFVAR *DEBUG-CITP* ...)
; compiling (DEFVAR *DEBUG-PRINT* ...)
; compiling (DEFVAR *DEBUG-BTERM* ...)
; compiling (PROCLAIM (QUOTE #))
; compiling (DEFVAR *TOP-LEVEL-TAG* ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/globals-tmpRV9F8A9A.fasl
; compilation finished in 0:00:00.146
; compiling file "/<<PKGBUILDDIR>>/comlib/macros.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO ONCE-ONLY ...)
; compiling (DEFMACRO MEMQ ...)
; compiling (DEFMACRO ASSQ ...)
; compiling (DEFMACRO POSQ ...)
; compiling (DEFMACRO MEMEQ ...)
; compiling (DEFMACRO ASSEQ ...)
; compiling (DEFMACRO POSEQ ...)
; compiling (DEFMACRO CASE-EQUAL ...)
; compiling (DEFMACRO DOTIMES-FIXNUM ...)
; compiling (DEFMACRO MSETQ ...)
; compiling (DEFMACRO MLET ...)
; compiling (DEFMACRO LET-IF ...)
; compiling (DEFMACRO WHEN-BIND ...)
; compiling (DEFMACRO WHILE ...)
; compiling (DEFMACRO WHILE-NOT ...)
; compiling (DEFMACRO DEF-SYNONYM ...)
; compiling (DEFMACRO FIXNUMP ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/macros-tmpK2ZAJT4I.fasl
; compilation finished in 0:00:00.158
; compiling file "/<<PKGBUILDDIR>>/comlib/print-utils.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (INLINE FILECOL) ...)
; compiling (DEFUN FILECOL ...)
; compiling (DECLAIM (FTYPE # ...))
; compiling (DEFUN FILE-COLUMN ...)
; compiling (DEFUN PRINT-CHECK ...)
; compiling (DEFUN PRINT-INDENT ...)
; compiling (DEFCONSTANT .TERMINAL-WIDTH. ...)
; compiling (DEFUN PRINT-CENTERING ...)
; compiling (DEFUN PRINT-TO-RIGHT ...)
; file: /<<PKGBUILDDIR>>/comlib/print-utils.lisp
; in: DEFUN PRINT-TO-RIGHT
;     (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM) CHAOS::*PRINT-INDENT*
;        (THE FIXNUM (LENGTH STRING)))
; --> - 
; ==>
;   (- (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM))
;      CHAOS::*PRINT-INDENT*)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -4611686018427387834 4611686018427387973), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -9223372036854775737 9223372036854775877)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -9223372036854775737 9223372036854775877)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; ==>
;   (-
;    (- (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM))
;       CHAOS::*PRINT-INDENT*)
;    (THE FIXNUM (LENGTH STRING)))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775737 9223372036854775877), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163637 9223372036854775877)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a (INTEGER -9223372036854775737 9223372036854775877), not a (SIGNED-BYTE
;                                                                                          64).
;       The result is a (VALUES
;                        (INTEGER -13835058055282163637 9223372036854775877)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (DOTIMES
;         (CHAOS::X
;          (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM)
;             CHAOS::*PRINT-INDENT* (THE FIXNUM (LENGTH STRING))))
;       (DECLARE (TYPE FIXNUM CHAOS::X))
;       (PRINC CHAOS::FILL-CHAR STREAM))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a (INTEGER -13835058055282163637
;                                 9223372036854775877), not a FIXNUM.

;     (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM) CHAOS::*PRINT-INDENT*
;        (THE FIXNUM (LENGTH STRING)))
; --> - 
; ==>
;   (- (- (1- CHAOS::.TERMINAL-WIDTH.) (CHAOS::FILECOL STREAM))
;      CHAOS::*PRINT-INDENT*)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; compiling (DEFUN PRINT-TO-LEFT ...)
; file: /<<PKGBUILDDIR>>/comlib/print-utils.lisp
; in: DEFUN PRINT-TO-LEFT
;     (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*
;        (CHAOS::FILECOL STREAM) (LENGTH STRING))
; --> - 
; ==>
;   (- (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*)
;      (CHAOS::FILECOL STREAM))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775808 9223372036854775806), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163711 13835058055282163710)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163711 13835058055282163710)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

; ==>
;   (-
;    (- (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*)
;       (CHAOS::FILECOL STREAM))
;    (LENGTH STRING))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -13835058055282163711
;                                13835058055282163710), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -18446744073709551611 13835058055282163710)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a (INTEGER -13835058055282163711
;                                13835058055282163710), not a (SIGNED-BYTE 64).
;       The result is a (VALUES
;                        (INTEGER -18446744073709551611 13835058055282163710)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (DOTIMES
;         (CHAOS::X
;          (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*
;             (CHAOS::FILECOL STREAM) (LENGTH STRING)))
;       (DECLARE (TYPE FIXNUM CHAOS::X))
;       (PRINC CHAOS::FILL-CHAR STREAM))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a (INTEGER -18446744073709551611
;                                 13835058055282163710), not a FIXNUM.

;     (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*
;        (CHAOS::FILECOL STREAM) (LENGTH STRING))
; --> - 
; ==>
;   (- (- (1- CHAOS::*PRINT-LINE-LIMIT*) CHAOS::*PRINT-INDENT*)
;      (CHAOS::FILECOL STREAM))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

; compiling (DEFUN PRINT-NEXT ...)
; compiling (DEFUN PRINT-NEXT-PREFIX ...)
; compiling (DEFUN PRINT-SIMPLE ...)
; compiling (DEFUN PRINT-SIMPLE-PRINC ...)
; compiling (DEFUN PRINT-SIMPLE-PRINC-OPEN ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/print-utils-tmpUX5S4ADN.fasl
; compilation finished in 0:00:00.100
; compiling file "/<<PKGBUILDDIR>>/comlib/message.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN FLUSH-ALL ...)
; compiling (DEFUN FRESH-ALL ...)
; compiling (DEFVAR *MESSAGE-DB* ...)
; compiling (DEFUN GET-MSG-TYPE ...)
; compiling (DEFUN GET-MSG-LEVEL ...)
; compiling (DEFUN GET-MSG-FMT ...)
; compiling (DEFUN GET-MSG-DESCRIPTION ...)
; compiling (DEFUN REGISTER-MESSAGE ...)
; compiling (DEFVAR *MSG-LVL* ...)
; compiling (DEFVAR *OLD-MSG-LVL* ...)
; compiling (DEFUN SET-VERBOSE-LVL ...)
; file: /<<PKGBUILDDIR>>/comlib/message.lisp
; in: DEFUN SET-VERBOSE-LVL
;     (<= CHAOS::LVL 3)
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 3.0d0) (SINGLE-FLOAT 3.0)
;                               (RATIONAL 3)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFUN SET-VERBOSE-ON ...)
; compiling (DEFUN SET-VERBOSE-OFF ...)
; file: /<<PKGBUILDDIR>>/comlib/message.lisp
; in: DEFUN SET-VERBOSE-OFF
;     (ZEROP CHAOS::*MSG-LVL*)
; ==>
;   (= CHAOS::*MSG-LVL* 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN SET-EXPERT-ON ...)
; compiling (DEFUN SET-EXPORT-OFF ...)
; file: /<<PKGBUILDDIR>>/comlib/message.lisp
; in: DEFUN SET-EXPORT-OFF
;     (= CHAOS::*MSG-LVL* 2)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN SET-QUIET-ON ...)
; compiling (DEFUN SET-QUIET-OFF ...)
; file: /<<PKGBUILDDIR>>/comlib/message.lisp
; in: DEFUN SET-QUIET-OFF
;     (= CHAOS::*MSG-LVL* 3)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN OUTPUT-MSG ...)
; file: /<<PKGBUILDDIR>>/comlib/message.lisp
; in: DEFUN OUTPUT-MSG
;     (STRING CHAOS::ID)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (>= (CHAOS::GET-MSG-LEVEL CHAOS::ID) CHAOS::*MSG-LVL*)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFMACRO WITH-OUTPUT-CHAOS-ERROR-N ...)
; compiling (DEFMACRO WITH-OUTPUT-CHAOS-WARNING-N ...)
; compiling (DEFMACRO WITH-OUTPUT-PANIC-MESSAGE-N ...)
; compiling (DEFMACRO WITH-OUTPUT-MSG-N ...)
; compiling (DEFMACRO WITH-OUTPUT-SIMPLE-MSG-N ...)
; compiling (DEFMACRO WITH-OUTPUT-CHAOS-ERROR ...)
; compiling (DEFMACRO WITH-OUTPUT-CHAOS-WARNING ...)
; compiling (DEFMACRO WITH-OUTPUT-PANIC-MESSAGE ...)
; compiling (DEFMACRO WITH-OUTPUT-MSG ...)
; compiling (DEFMACRO WITH-OUTPUT-SIMPLE-MSG ...)
; compiling (DEFUN PRINT-IN-PROGRESS ...)
; compiling (DEFMACRO I-MISS-CURRENT-MODULE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/message-tmp10401X32.fasl
; compilation finished in 0:00:00.428
; compiling file "/<<PKGBUILDDIR>>/comlib/error.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *SUPPRESS-ERR-HANDLER-MSG*))
; compiling (DEFVAR *SUPPRESS-ERR-HANDLER-MSG* ...)
; compiling (DEFUN CHAOS-ERROR ...)
; compiling (DEFUN CHAOS-EXIT-WITH-ERROR-CODE ...)
; compiling (DEFUN GET-CHAOS-ERROR-PROC ...)
; compiling (DEFMACRO WITH-CHAOS-ERROR ...)
; compiling (DEFUN CHAOS-INDICATE-POSITION ...)
; compiling (DEFUN CHAOS-TO-TOP ...)
; compiling (DEFMACRO WITH-CHAOS-TOP-ERROR ...)
; compiling (DEFMACRO IGNORING-CHAOS-ERROR ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/error-tmpZ7CBRM0G.fasl
; compilation finished in 0:00:00.065
; compiling file "/<<PKGBUILDDIR>>/comlib/misc.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *KEYWORD-PACKAGE* ...)
; compiling (DEFUN MAKE-KEYWORD ...)
; compiling (DEFMACRO ALLOC-SVEC ...)
; compiling (DEFMACRO ALLOC-SVEC-FIXNUM ...)
; compiling (DEFMACRO %SVREF ...)
; compiling (DEFUN AT-TOP-LEVEL ...)
; compiling (DEFUN GET-ENVIRONMENT-VARIABLE ...)
; compiling (DEFVAR *ON-DEBUG* ...)
; compiling (DEFVAR *DEBUG-LEVEL* ...)
; compiling (DEFMACRO DEBUG-MSG ...)
; compiling (DEFMACRO DEBUG-FORM ...)
; compiling (DEFUN ON-DEBUG ...)
; compiling (DEFUN OFF-DEBUG ...)
; compiling (DEFUN OB< ...)
; compiling (DEFUN OB-COMPARE ...)
; file: /<<PKGBUILDDIR>>/comlib/misc.lisp
; in: DEFUN OB-COMPARE
;     (< CHAOS::X CHAOS::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (< CHAOS::Y CHAOS::X)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a RATIONAL.

;     (LENGTH CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR
;                            (AND (NOT BASE-STRING) (NOT (VECTOR NIL))
;                                 (NOT (VECTOR CHARACTER)) VECTOR)
;                            SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (LENGTH CHAOS::Y)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (ELT CHAOS::X CHAOS::I)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR
;                            (AND (NOT BASE-STRING) (NOT (VECTOR NIL))
;                                 (NOT (VECTOR CHARACTER)) VECTOR)
;                            SB-KERNEL:EXTENDED-SEQUENCE), not a (SIMPLE-ARRAY *
;                                                                 (*)).

;     (ELT CHAOS::Y CHAOS::I)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a (SIMPLE-ARRAY * (*)).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (< CHAOS::X CHAOS::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.

;     (< CHAOS::Y CHAOS::X)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a (OR SINGLE-FLOAT DOUBLE-FLOAT RATIO), not a DOUBLE-FLOAT.

;     (< (THE INTEGER CHAOS::X) (THE INTEGER CHAOS::Y))
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.

;     (< (THE INTEGER CHAOS::Y) (THE INTEGER CHAOS::X))
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.

; compiling (DEFUN TOPO-SORT ...)
; compiling (DEFCONSTANT .32BIT. ...)
; compiling (DECLAIM (INLINE ADDR-OF))
; compiling (DEFUN ADDR-OF ...)
; compiling (DEFUN PRINT-ADDR ...)
; compiling (DEFUN QUERY-INPUT ...)
; compiling (DEFUN INTERNAL-REAL-TIME-IN-SECONDS ...)
; compiling (DEFUN READ-CHAR-WAIT ...)
; file: /<<PKGBUILDDIR>>/comlib/misc.lisp
; in: DEFUN READ-CHAR-WAIT
;     (< (+ CHAOS::START CHAOS::TIMEOUT) (CHAOS::INTERNAL-REAL-TIME-IN-SECONDS))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (+ CHAOS::START CHAOS::TIMEOUT)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (RATIONAL 0 2305843009213693951/1000), not a FIXNUM.
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a (RATIONAL 0 2305843009213693951/1000), not a (SIGNED-BYTE
;                                                                             64).
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (< (+ CHAOS::START CHAOS::TIMEOUT) (CHAOS::INTERNAL-REAL-TIME-IN-SECONDS))
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       The second argument is a (RATIONAL 0 2305843009213693951/1000), not a FIXNUM.

; compiling (DEFVAR *USE-TIMEOUTS* ...)
; compiling (DEFVAR *CLEAR-INPUT-BEFORE-QUERY* ...)
; compiling (DEFUN Y-OR-N-P-WAIT ...)
; compiling (DEFSTRUCT (MULTISET # ...) ...)
; compiling (DEFMACRO MULTISET-NEW ...)
; compiling (DEFMACRO MULTISET-IS-EMPTY ...)
; compiling (DEFMACRO MULTISET-INSERT ...)
; compiling (DEFMACRO LIST-TO-MULTISET ...)
; compiling (DEFMACRO MULTISET-TO-SET ...)
; compiling (DEFMACRO MULTISET-DELETE ...)
; compiling (DEFMACRO MULTISET-MERGE ...)
; compiling (DEFMACRO MULTISET-INTERSECTIN ...)
; compiling (DEFMACRO MULTISET-DIFF ...)
; compiling (DEFMACRO MULTISET-COUNT ...)
; compiling (DEFUN GET-TIME-STRING ...)
; compiling (DEFUN ELAPSED-TIME-IN-SECONDS ...)
; file: /<<PKGBUILDDIR>>/comlib/misc.lisp
; in: DEFUN ELAPSED-TIME-IN-SECONDS
;     (- CHAOS::NOW CHAOS::BASE)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 64) &REST
;                                                          T).
;       etc.

;     (COERCE (/ (- CHAOS::NOW CHAOS::BASE) INTERNAL-TIME-UNITS-PER-SECOND) 'FLOAT)
; --> THE 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::X)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 64).

; compiling (DEFUN TIME-IN-SECONDS ...)
; file: /<<PKGBUILDDIR>>/comlib/misc.lisp
; in: DEFUN TIME-IN-SECONDS
;     (COERCE (/ CHAOS::SUM INTERNAL-TIME-UNITS-PER-SECOND) 'FLOAT)
; --> THE 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::X)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 64).

; compiling (DEFMACRO EVERY2LEN ...)
; compiling (DEFUN LIST2ARRAY ...)
; compiling (DEFUN MAKE-LIST-1-N ...)
; compiling (DEFUN MAKE-LIST-1-N-0 ...)
; compiling (DEFMACRO FIND-IN-ASSOC-TABLE ...)
; compiling (DEFMACRO GET-ENTRY-IN-ASSOC-TABLE ...)
; compiling (DEFMACRO DELETE-ENTRY-FROM-ASSOC-TABLE ...)
; compiling (DEFMACRO DELETE-OBJECT-FROM-ASSOC-TABLE ...)
; compiling (DEFMACRO ADD-TO-ASSOC-TABLE ...)
; compiling (DEFMACRO OBJECT-IS-IN-ASSOC-TABLE? ...)
; compiling (DEFMACRO TEST-AND ...)
; compiling (DEFMACRO MAKE-AND ...)
; compiling (DEFMACRO MAKE-OR ...)
; compiling (DEFMACRO MAKE-XOR ...)
; compiling (DEFMACRO EXPT2 ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/misc-tmp9OZEQ0G2.fasl
; compilation finished in 0:00:00.454
; compiling file "/<<PKGBUILDDIR>>/comlib/string.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PARSE-WITH-DELIMITER ...)
; compiling (DEFUN PARSE-WITH-DELIMITER2 ...)
; compiling (DEFMACRO NUMERIC-CHAR-P ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/string-tmpB2JTL1W9.fasl
; compilation finished in 0:00:00.060
; compiling file "/<<PKGBUILDDIR>>/comlib/list.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN FLATTEN-LIST ...)
; compiling (DEFUN FIRSTN ...)
; compiling (DEFUN IN-ORDER-UNION ...)
; compiling (DEFUN TRUE-LIST-P ...)
; compiling (DEFUN ROTATE-LIST ...)
; compiling (DEFUN DELETE-NTH ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/list-tmpP3BI68WQ.fasl
; compilation finished in 0:00:00.018
; compiling file "/<<PKGBUILDDIR>>/comlib/dag.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT DAG-NODE ...)
; compiling (DEFMACRO CREATE-DAG-NODE ...)
; compiling (DEFMACRO ADD-SUBNODES ...)
; compiling (DEFMACRO PUSH-SUB-NODE ...)
; compiling (DEFMACRO DAG-NODE-IS-MARKED? ...)
; compiling (DEFMACRO MARK-DAG-NODE ...)
; compiling (DEFMACRO UNMARK-DAG-NODE ...)
; compiling (DEFUN UNMARK-ALL-DAG-NODES ...)
; compiling (DEFUN DAG-DFS ...)
; compiling (DEFUN DAG-WFS ...)
; compiling (DEFSTRUCT (BDAG #) ...)
; compiling (DEFMACRO CREATE-BDAG-NODE ...)
; compiling (DEFMACRO ADD-BDAG-SUBNODES ...)
; compiling (DEFMACRO PUSH-BDAG-NODE ...)
; compiling (DEFUN GET-BDAG-PARENTS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/dag-tmpQDARA81Z.fasl
; compilation finished in 0:00:00.168
; compiling file "/<<PKGBUILDDIR>>/comlib/fsys.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (REQUIRE (QUOTE SB-POSIX))
; compiling (DEFUN LOAD-FILE ...)
; compiling (DECLAIM (FTYPE # ...))
; compiling (DEFUN EXPAND-FILE-NAME ...)
; compiling (DEFMACRO DOFILE ...)
; compiling (DEFUN IS-DIRECTORY? ...)
; compiling (DEFUN IS-RELATIVE-FILE-NAME? ...)
; compiling (DEFUN SUPPLY-SUFFIXES ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN SUPPLY-SUFFIXES
;     (MAPCAR #'PATHNAME
;             (MAPCAR
;              #'(LAMBDA (CHAOS::X)
;                  (CONCATENATE 'STRING (NAMESTRING CHAOS::PATH)
;                               (NAMESTRING CHAOS::X)))
;              CHAOS::SUFFIXES))
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK LET TAGBODY TAGBODY SB-KERNEL:%RPLACD 
; --> SETQ THE CONS FUNCALL SB-C::%FUNCALL 
; ==>
;   (PATHNAME (CAR #:G1))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               PATHNAME SYNONYM-STREAM
;                               FILE-STREAM), not a PATHNAME.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               PATHNAME SYNONYM-STREAM
;                               FILE-STREAM), not a STRING.

; compiling (DEFUN CHAOS-GET-RELATIVE-PATH ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN CHAOS-GET-RELATIVE-PATH
;     (PATHNAME CHAOS::FILE-PATH)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYNONYM-STREAM FILE-STREAM), not a STRING.

; compiling (DEFUN CHAOS-PROBE-FILE ...)
; compiling (DEFUN BARE-CHAOS-PWD ...)
; compiling (DEFUN CHAOS-PWD ...)
; compiling (DEFUN CHAOS-LS ...)
; compiling (DEFVAR *CHAOS-DIRECTORY-STACK* ...)
; compiling (DEFUN CHAOS-PRINT-DIRECTORY-STACK ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN CHAOS-PRINT-DIRECTORY-STACK
;     (FORMAT STREAM "~%~a" CHAOS::*CHAOS-DIRECTORY-STACK*)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\Newline STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G3)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN FSYS-PARSE-NUMBER ...)
; compiling (DEFUN CHAOS-PUSHD ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN CHAOS-PUSHD
;     (LENGTH CHAOS::*CHAOS-DIRECTORY-STACK*)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN CHAOS-POPD ...)
; compiling (DEFUN CHAOS-CD ...)
; compiling (DEFPARAMETER *CHAOS-BINARY-MAGIC* ...)
; compiling (DEFUN CHAOS-BINARY-FILE? ...)
; compiling (DEFPARAMETER *CHAOS-BIN-SUFFIX* ...)
; compiling (DEFUN CHAOS-INPUT-FILE ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN CHAOS-INPUT-FILE
;     (APPLY CHAOS::PROC CHAOS::ARGS)
; --> MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (>= (FILE-WRITE-DATE CHAOS::BIN-FNAME) (FILE-WRITE-DATE CHAOS::FNAME))
; --> IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a UNSIGNED-BYTE, not a FIXNUM.

; compiling (DEFUN SET-SEARCH-PATH ...)
; compiling (DEFUN SET-SEARCH-PATH-PLUS ...)
; compiling (DEFUN SET-SEARCH-PATH-MINUS ...)
; compiling (DEFUN PR-SEARCH-PATH ...)
; file: /<<PKGBUILDDIR>>/comlib/fsys.lisp
; in: DEFUN PR-SEARCH-PATH
;     (FORMAT STREAM "libpath = ~{~a~^:~}" CHAOS::*CHAOS-LIBPATH*)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$libpath = ~{~a~^:~}"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "libpath = " STREAM)
;               (LET* (# #)
;                 (DECLARE #)
;                 (LOOP #
;                       #
;                       #
;                       #)))
;             NIL)
;           #:G3)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN CHAOS-INITIALIZE-FSYS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/fsys-tmpYEMMM7SE.fasl
; compilation finished in 0:00:00.546
; compiling file "/<<PKGBUILDDIR>>/comlib/tree-display.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFPARAMETER TREE-SPACING ...)
; compiling (DEFPARAMETER LEAVES-AT-BOTTOM? ...)
; compiling (DECLAIM (SPECIAL LEAF? ...))
; compiling (DEFVAR LEAF? ...)
; compiling (DEFVAR LEAF-NAME ...)
; compiling (DEFVAR LEAF-INFO ...)
; compiling (DEFVAR INT-NODE-NAME ...)
; compiling (DEFVAR INT-NODE-CHILDREN ...)
; compiling (DEFUN MAKE-AUGM-LEAF ...)
; compiling (DEFUN MAKE-AUGM-PAD ...)
; compiling (DEFUN MAKE-AUGM-INT-NODE ...)
; compiling (DEFUN AUGM-TREE-INT-NODE? ...)
; compiling (DEFUN AUGM-TREE-PAD? ...)
; compiling (DEFUN AUGM-TREE-WIDTH ...)
; compiling (DEFUN AUGM-TREE-ROOT ...)
; compiling (DEFUN AUGM-TREE-NAME ...)
; compiling (DEFUN AUGM-LEAF-INFO ...)
; compiling (DEFUN AUGM-INT-NODE-LPAD ...)
; compiling (DEFUN AUGM-INT-NODE-RPAD ...)
; compiling (DEFUN AUGM-INT-NODE-CHILDREN ...)
; compiling (DEFUN PAD ...)
; compiling (DEFUN FIELD-WIDTH ...)
; compiling (DEFUN AUGMENT-TREE ...)
; file: /<<PKGBUILDDIR>>/comlib/tree-display.lisp
; in: DEFUN AUGMENT-TREE
;     (FUNCALL CHAOS::LEAF? CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF?)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::LEAF-INFO CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-INFO)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::INT-NODE-CHILDREN CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::INT-NODE-CHILDREN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::INT-NODE-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::INT-NODE-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (* (- (THE FIXNUM (LENGTH (THE LIST CHAOS::CHILDREN))) 1) CHAOS::TREE-SPACING)
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The second argument is a NUMBER, not a INTEGER.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (+ (* (- (THE FIXNUM (LENGTH #)) 1) CHAOS::TREE-SPACING)
;        (THE FIXNUM (APPLY #'+ (MAPCAR #'CHAOS::AUGM-TREE-WIDTH CHAOS::CHILDREN))))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       etc.

;     (+ (- CHAOS::WIDTH (THE FIXNUM (CHAOS::AUGM-TREE-WIDTH CHAOS::LAST-CHILD)))
;        (+ (THE FIXNUM (CHAOS::AUGM-TREE-ROOT CHAOS::FIRST-CHILD))
;           (THE FIXNUM (CHAOS::AUGM-TREE-ROOT CHAOS::LAST-CHILD))))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -18446744073709551615 18446744073709551613)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -18446744073709551615 18446744073709551613)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC-+
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the second argument of GENERIC-+

;     (+ CHAOS::MAX-LEFT CHAOS::MAX-RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::MAX-LEFT CHAOS::LEFT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::MAX-RIGHT CHAOS::RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DECLAIM (TYPE HASH-TABLE ...) ...)
; compiling (DEFVAR _DUP-HASH_ ...)
; compiling (DEFVAR _REF-NUM-COUNTER_ ...)
; compiling (DEFVAR _DUP-INFOS_ ...)
; compiling (DEFUN AUGMENT-TREE-AS-GRAPH ...)
; compiling (DEFSTRUCT GRPH-INFO ...)
; compiling (DEFSTRUCT (GRPH-INT-NODE-INFO #))
; compiling (DEFSTRUCT (GRPH-LEAF-INFO #) ...)
; compiling (DEFUN TRAVERSE-TREE-CHECKING-DUPS ...)
; file: /<<PKGBUILDDIR>>/comlib/tree-display.lisp
; in: DEFUN TRAVERSE-TREE-CHECKING-DUPS
;     (FUNCALL CHAOS::LEAF? CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF?)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::LEAF-INFO CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-INFO)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::INT-NODE-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::INT-NODE-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::INT-NODE-CHILDREN CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::INT-NODE-CHILDREN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN AUGMENT-TREE-AS-GRAPH-AUX ...)
; file: /<<PKGBUILDDIR>>/comlib/tree-display.lisp
; in: DEFUN AUGMENT-TREE-AS-GRAPH-AUX
;     (FUNCALL CHAOS::INT-NODE-CHILDREN CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::INT-NODE-CHILDREN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (* (- (THE FIXNUM (LENGTH CHAOS::CHILDREN)) 1) CHAOS::TREE-SPACING)
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The second argument is a NUMBER, not a INTEGER.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (+ (* (- (THE FIXNUM (LENGTH CHAOS::CHILDREN)) 1) CHAOS::TREE-SPACING)
;        (THE FIXNUM (APPLY #'+ (MAPCAR #'CHAOS::AUGM-TREE-WIDTH CHAOS::CHILDREN))))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       etc.

;     (+ (- CHAOS::WIDTH (THE FIXNUM (CHAOS::AUGM-TREE-WIDTH CHAOS::LAST-CHILD)))
;        (+ (THE FIXNUM (CHAOS::AUGM-TREE-ROOT CHAOS::FIRST-CHILD))
;           (THE FIXNUM (CHAOS::AUGM-TREE-ROOT CHAOS::LAST-CHILD))))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The second argument is a (INTEGER -9223372036854775808
;                                 9223372036854775806), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -18446744073709551615 18446744073709551613)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -18446744073709551615 18446744073709551613)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC-+
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the second argument of GENERIC-+

;     (+ CHAOS::MAX-LEFT CHAOS::MAX-RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::MAX-LEFT CHAOS::LEFT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::MAX-RIGHT CHAOS::RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN ANY-INT-NODES? ...)
; compiling (DEFUN ALL-DONE? ...)
; compiling (DEFUN PRINT-SEQ ...)
; compiling (DEFUN PRINT-LOOP1 ...)
; file: /<<PKGBUILDDIR>>/comlib/tree-display.lisp
; in: DEFUN PRINT-LOOP1
;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::NAME-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::NAME-RIGHT)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (- CHAOS::ROOT CHAOS::NAME-LEFT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::NAME-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::NAME-RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT 1)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) 1)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN PRINT-LOOP2 ...)
; file: /<<PKGBUILDDIR>>/comlib/tree-display.lisp
; in: DEFUN PRINT-LOOP2
;     (+ CHAOS::ROOT 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::INFO-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::INFO-RIGHT)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The second argument is a (INTEGER -6917529027641081854
;                                 6917529027641081854), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -16140901064495857661 16140901064495857661)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -16140901064495857661 16140901064495857661)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::NAME-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::NAME-RIGHT)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -9223372036854775807 9223372036854775807), not a FIXNUM.
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The result is a (VALUES
;                        (INTEGER -13835058055282163710 13835058055282163711)
;                        &OPTIONAL), not a (VALUES (SIGNED-BYTE 64) &REST T).
;       etc.

;     (+ CHAOS::LPAD CHAOS::ROOT1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (+ CHAOS::ROOT CHAOS::TREE-SPACING CHAOS::RIGHT)
; --> + 
; ==>
;   (+ CHAOS::ROOT CHAOS::TREE-SPACING)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

; ==>
;   (+ (+ CHAOS::ROOT CHAOS::TREE-SPACING) CHAOS::RIGHT)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (+ CHAOS::ROOT 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (- CHAOS::WIDTH (+ CHAOS::ROOT 1))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (+ CHAOS::RIGHT CHAOS::RPAD)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (CHAOS::PRINT-LOOP3 (CDR CHAOS::CHILDREN)
;      (CONS CHAOS::CHILD1 (CHAOS::PAD CHAOS::LPAD 'NIL))
;      (- CHAOS::WIDTH1 (+ CHAOS::ROOT1 1)))
; 
; note: doing signed word to integer coercion (cost 20) to RIGHT

;     (- CHAOS::ROOT CHAOS::NAME-LEFT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::NAME-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::NAME-RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--

;     (- CHAOS::ROOT CHAOS::INFO-LEFT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT CHAOS::INFO-RIGHT)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) CHAOS::INFO-RIGHT)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first argument of GENERIC--
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the second argument of GENERIC--

;     (- CHAOS::TREE-WIDTH CHAOS::ROOT 1)
; ==>
;   (- (- CHAOS::TREE-WIDTH CHAOS::ROOT) 1)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN PRINT-TREES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/tree-display-tmp73HU0RPK.fasl
; compilation finished in 0:00:00.338
; compiling file "/<<PKGBUILDDIR>>/comlib/lex.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *BUILTIN-CATS* ...)
; compiling (DEFMACRO DEFINE-BUILTIN-TOKEN ...)
; compiling (DEFMACRO DECLARE-BI-TOKEN ...)
; compiling (DEFPARAMETER *LISP-ESCAPE-CHAR* ...)
; compiling (DEFPARAMETER .LISP-SIMPLE-SEXPR. ...)
; compiling (DEFPARAMETER .LISP-GENERAL-SEXPR. ...)
; compiling (DEFPARAMETER *CHAOS-ESCAPE-CHAR* ...)
; compiling (DEFPARAMETER .CHAOS-VALUE-SEXPR. ...)
; compiling (DEFPARAMETER .STRING-TOKEN. ...)
; compiling (DECLARE-BI-TOKEN (QUOTE %SLISP))
; compiling (DECLARE-BI-TOKEN (QUOTE %GLISP))
; compiling (DECLARE-BI-TOKEN (QUOTE |String|))
; compiling (DECLARE-BI-TOKEN (QUOTE |%Chaos|))
; compiling (DECLARE-BI-TOKEN (QUOTE |#\||))
; compiling (DECLARE-BI-TOKEN (QUOTE |\|#|))
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFPARAMETER .READER-CHAR-CODE-LIMIT. ...)
; compiling (DECLAIM (TYPE SIMPLE-VECTOR ...))
; compiling (DEFVAR *READER-READ-TABLE*)
; compiling (SETF *READER-READ-TABLE* ...)
; compiling (DEFMACRO !SET-SYNTAX ...)
; compiling (DEFUN LEX-SHOW-DELIMITERS ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN LEX-SHOW-DELIMITERS
;     (FORMAT STREAM "~%~S : ~S" (CODE-CHAR CHAOS::X) CHAOS::SYNTAX)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%~S : ~S"
;               (STREAM SB-FORMAT::FORMAT-ARG1 SB-FORMAT::FORMAT-ARG2 &REST
;                SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\Newline STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING " : " STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG2 STREAM))
;             NIL)
;           #:G5 #:G6)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN !INIT-READ-TABLE ...)
; compiling (DEFMACRO READER-GET-SYNTAX ...)
; compiling (DEFMACRO READER-VALID-CHAR-CODE ...)
; compiling (DEFUN !SET-SINGLE-READER ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN !SET-SINGLE-READER
;     (STRING CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               CHARACTER), not a STRING.

; compiling (DEFUN !SET-READER ...)
; compiling (DEFVAR *READER-INPUT* ...)
; compiling (DEFPARAMETER *READER-VOID* ...)
; compiling (DEFVAR *TOKEN-BUF* ...)
; compiling (DEFVAR *LAST-TOKEN* ...)
; compiling (DEFPARAMETER *LEX-EOF* ...)
; compiling (DEFMACRO !READ-IN ...)
; compiling (DEFMACRO !READ-DISCARD ...)
; compiling (DEFUN !READ-SYM ...)
; compiling (DEFUN TEST-LEX ...)
; compiling (DEFPARAMETER NEWLINE-STRING ...)
; compiling (DEFPARAMETER LINE-CONTINUE-CHAR ...)
; compiling (DEFPARAMETER .READ-LINE-EOF. ...)
; compiling (DECLAIM (SPECIAL *LIVE-NEWLINE*))
; compiling (DEFVAR *LIVE-NEWLINE* ...)
; compiling (DEFMACRO ADD-NEW-LINE ...)
; compiling (DEFUN READ-LINES ...)
; compiling (DEFVAR .READER-CH. ...)
; compiling (DECLAIM (SPECIAL .ESCAPE-CHAR.))
; compiling (DEFVAR .DEFAULT-ESCAPE-CHAR. ...)
; compiling (DEFPARAMETER CONTROL-D ...)
; compiling (DEFPARAMETER CONTROL-D-STRING ...)
; compiling (DEFPARAMETER INPUT-ESCAPE ...)
; compiling (DEFPARAMETER INPUT-ESCAPE-STRING ...)
; compiling (DEFMACRO SEE-CTRL-D ...)
; compiling (DEFMACRO READER-IS-AT-EOF ...)
; compiling (DEFMACRO AT-EOF ...)
; compiling (DEFMACRO AT-EOF-OR-CONTROL-D ...)
; compiling (DEFMACRO SEE-INPUT-ESCAPE ...)
; compiling (DEFUN STR-MATCH? ...)
; compiling (DEFUN LEX-STRING-MATCH ...)
; compiling (DECLAIM (SPECIAL .READER-ESCAPE.))
; compiling (DEFVAR .READER-ESCAPE. ...)
; compiling (DEFVAR .NEWLINE-COUNT. ...)
; compiling (DEFVAR *LAST-NEWLINE* ...)
; compiling (DEFPARAMETER EOF-CHAR ...)
; compiling (DEFUN READER-GET-CHAR ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN READER-GET-CHAR
;     (INCF CHAOS::.NEWLINE-COUNT.)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::.NEWLINE-COUNT.)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (> CHAOS::.NEWLINE-COUNT. 2)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (INCF CHAOS::.NEWLINE-COUNT.)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::.NEWLINE-COUNT.)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (> CHAOS::.NEWLINE-COUNT. 2)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DECLAIM (TYPE SIMPLE-STRING ...))
; compiling (DEFVAR .READER-BUF. ...)
; compiling (DEFPARAMETER .CHAOS-SIMPLE-LISP-KEYWORD. ...)
; compiling (DEFPARAMETER .CHAOS-GENERAL-LISP-KEYWORD. ...)
; compiling (DEFPARAMETER .CHAOS-VALUE-KEYWORD. ...)
; compiling (DEFPARAMETER .ML-BEGIN-CHAR. ...)
; compiling (DEFPARAMETER .ML-END-CHAR. ...)
; compiling (DEFVAR .LEX-INNER-MULTI-COMMENT. ...)
; compiling (DEFUN READ-LEXICON ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN READ-LEXICON
;     (STRING CHAOS::.READER-CH.)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN LEX-CONSIDER-TOKEN ...)
; compiling (DEFUN READER-SUPPRESS-CH ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN READER-SUPPRESS-CH
;     (STRING CHAOS::.READER-CH.)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN READER-UNREAD ...)
; compiling (DEFUN SKIP-MULTI-COMMENT ...)
; compiling (DEFUN UNREAD-TOKEN ...)
; compiling (DEFUN READ-SYM ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN READ-SYM
;     (STRING CHAOS::.READER-CH.)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN LEX-READ-STRING ...)
; compiling (DEFUN LEX-READ-LISP-ESCAPE ...)
; compiling (DEFUN LEX-READ-CHAOS-VALUE ...)
; compiling (DEFUN LEX-READ-LIST ...)
; compiling (DEFUN LEX-READ-REST-OF-LIST ...)
; compiling (DEFUN BI-TOKEN? ...)
; compiling (DEFUN LEX-READ ...)
; compiling (DEFMACRO ALL-DIGIT? ...)
; compiling (DEFPARAMETER .DEFAULT-SPACE-CHARS. ...)
; compiling (DEFPARAMETER .DEFAULT-RETURN-CHARS. ...)
; compiling (DEFPARAMETER .DEFAULT-SINGLE-CHARS. ...)
; compiling (DEFUN !FORCE-SINGLE-READER ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN !FORCE-SINGLE-READER
;     (CHAR (THE STRING CHAOS::X) 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (STRING CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN !UNSET-SINGLE-READER ...)
; file: /<<PKGBUILDDIR>>/comlib/lex.lisp
; in: DEFUN !UNSET-SINGLE-READER
;     (CHAR (THE STRING CHAOS::X) 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (ASSOC CHAOS::CHR CHAOS::.DEFAULT-SINGLE-CHARS.)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN !LEX-READ-INIT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/lex-tmpIO5N7K88.fasl
; compilation finished in 0:00:00.594
; compiling file "/<<PKGBUILDDIR>>/comlib/reader.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *READER-SPECIAL-SCHEMA-PATTERNS* ...)
; compiling (DEFUN READER ...)
; compiling (DEFUN ABORT-GENERAL-READER ...)
; compiling (DEFUN GENERAL-READ-EOF-ERROR ...)
; compiling (DEFUN GENERAL-READ-ABORT ...)
; compiling (DEFUN STRING-MATCH ...)
; file: /<<PKGBUILDDIR>>/comlib/reader.lisp
; in: DEFUN STRING-MATCH
;     (STRING CHAOS::Y)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR SYMBOL CHARACTER), not a SYMBOL.

; compiling (DEFUN GENERAL-READ-STRING-MATCHES ...)
; file: /<<PKGBUILDDIR>>/comlib/reader.lisp
; in: DEFUN GENERAL-READ-STRING-MATCHES
;     (FUNCALL (CADR CHAOS::Y) CHAOS::X)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CADR CHAOS::Y))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN GENERAL-READ-NUMBERP ...)
; compiling (DEFUN GENERAL-READ ...)
; compiling (DEFUN READ-NAMED ...)
; compiling (DEFUN READ-OPTIONAL ...)
; compiling (DEFUN READ-IF-PRESENT ...)
; compiling (DEFUN READ-ONE-OF ...)
; compiling (DEFUN READ-ONE-OF-DEFAULT ...)
; compiling (DEFUN READ-MANY-OF ...)
; compiling (DEFUN READ-SEQ-OF ...)
; compiling (DEFUN READ-ANY-ONE ...)
; compiling (DEFUN READ-CONTINUE ...)
; compiling (DEFUN READ-CONTINUE-APPEND ...)
; compiling (DEFUN GENERAL-READ-SHOW-CONTEXT ...)
; file: /<<PKGBUILDDIR>>/comlib/reader.lisp
; in: DEFUN GENERAL-READ-SHOW-CONTEXT
;     (EQUAL CHAOS::*READER-STARTING-POSITION* (FILE-POSITION *STANDARD-INPUT*))
; --> EQL IF 
; ==>
;   (EQL SB-C::X SB-C::Y)
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a T, not a FIXNUM.
;       The second argument is a (OR UNSIGNED-BYTE BOOLEAN), not a FIXNUM.
;       unable to do inline (signed-byte 64) comparison (cost 6) because:
;       The first argument is a T, not a (SIGNED-BYTE 64).
;       The second argument is a (OR UNSIGNED-BYTE BOOLEAN), not a (SIGNED-BYTE
;                                                                   64).
;       etc.

; compiling (DEFUN GENERAL-READ-IS-SIMPLE-SCHEMA ...)
; compiling (DEFUN GENERAL-READ-DISPLAY-SCHEMA ...)
; compiling (DEFUN GENERAL-READ-PRINT-SCHEMA-1 ...)
; compiling (DEFUN GENERAL-READ-PRINT-SCHEMA ...)
; file: /<<PKGBUILDDIR>>/comlib/reader.lisp
; in: DEFUN GENERAL-READ-PRINT-SCHEMA
;     (EQL CHAOS::CONTROL-D CHAOS::I)
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a ATOM, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a ATOM, not a SINGLE-FLOAT.
;       etc.

; compiling (DEFUN READ-COMMENT-LINE ...)
; compiling (DEFUN GENERAL-READ-COMMENTLONG ...)
; compiling (DECLAIM (INLINE READ-TERM-FROM-STRING))
; compiling (DEFPARAMETER .TERM-DELIMITING-CHARS. ...)
; compiling (DEFUN !SET-TERM-DELIM-CHARS ...)
; compiling (DEFUN READ-TERM-FROM-STRING ...)
; compiling (DEFUN READ-SEQ-OF-TERM-FROM-STRING ...)
; compiling (DEFUN READ-TERM-AT-TOP ...)
; compiling (DEFUN READ-SEQ-OF-TERM-AT-TOP ...)
; compiling (DEFUN READ-TERM ...)
; compiling (DEFUN READ-SEQ-OF-TERM ...)
; compiling (DEFUN READ-ARGS ...)
; compiling (DEFPARAMETER .OP-NAME-DELIMITING-CHARS. ...)
; compiling (DEFUN READ-SEQ-OF-OPNAME ...)
; compiling (DEFUN READ-OPNAME ...)
; compiling (DEFUN READ-OPNAME-AT-TOP ...)
; compiling (DEFUN READ-SEQ-OF-OPNAME-AT-TOP ...)
; compiling (DEFUN READ-OPNAME-FROM-STRING ...)
; compiling (DEFUN READ-SEQ-OF-OPNAME-FROM-STRING ...)
; compiling (DEFUN READ-SORT ...)
; compiling (DEFUN READ-SORTS ...)
; compiling (DEFUN READ-CHARS ...)
; compiling (DEFUN READ-OPATTR ...)
; compiling (DEFUN READ-SUPER-EXP ...)
; compiling (DEFUN READ-SUPEREXP ...)
; compiling (DEFUN READ-SUPEREXPR-DELIMITED ...)
; compiling (DEFVAR *MODEXP-PARSE-INPUT* ...)
; compiling (DEFMACRO MODEXP-SKIP ...)
; compiling (DEFUN SCAN-PARENTHESIZED-UNIT ...)
; compiling (DEFUN GROUP-PAREN-UNITS ...)
; compiling (DEFUN CHECK-ENCLOSING-PARENS ...)
; compiling (DEFUN READ-MODULE-EXP ...)
; compiling (DEFUN READ-MODEXP ...)
; compiling (DEFUN READ-MODEXP-DELIMITED ...)
; compiling (DEFUN READ-MODEXP-FROM-STRING ...)
; compiling (DEFVAR *INTERACTIVE-SESSION* ...)
; compiling (DEFUN SET-INTERACTIVE ...)
; compiling (DEFUN OFF-INTERACTIVE ...)
; compiling (DEFUN WAIT-UNTIL-NON-WHITE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/reader-tmpCM21U60Z.fasl
; compilation finished in 0:00:00.516
; compiling file "/<<PKGBUILDDIR>>/comlib/let-over-lambda.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (IF (STRING-LESSP # ...) ...)
; compiling (DEFUN GROUP ...)
; compiling (DEFUN MKSTR ...)
; compiling (DEFUN SYMB ...)
; compiling (DEFUN FLATTEN ...)
; compiling (DEFUN G!-SYMBOL-P ...)
; compiling (DEFUN O!-SYMBOL-P ...)
; compiling (DEFUN O!-SYMBOL-TO-G!-SYMBOL ...)
; compiling (DEFMACRO DEFMACRO/G! ...)
; compiling (DEFMACRO DEFMACRO! ...)
; compiling (DEFUN |#"-reader| ...)
; compiling (SET-DISPATCH-MACRO-CHARACTER #\# ...)
; compiling (DEFUN |#>-reader| ...)
; compiling (SET-DISPATCH-MACRO-CHARACTER #\# ...)
; compiling (DEFUN SEGMENT-READER ...)
; compiling (DEFMACRO! MATCH-MODE-PPCRE-LAMBDA-FORM ...)
; compiling (DEFMACRO! SUBST-MODE-PPCRE-LAMBDA-FORM ...)
; compiling (DEFUN |#~-reader| ...)
; compiling (SET-DISPATCH-MACRO-CHARACTER #\# ...)
; compiling (DEFMACRO! DLAMBDA ...)
; compiling (DEFMACRO ALAMBDA ...)
; compiling (DEFMACRO AIF ...)
; compiling (DEFUN |#`-reader| ...)
; compiling (SET-DISPATCH-MACRO-CHARACTER #\# ...)
; compiling (DEFMACRO ALET% ...)
; compiling (DEFMACRO ALET ...)
; compiling (DEFUN LET-BINDING-TRANSFORM ...)
; compiling (DEFMACRO PANDORICLET ...)
; compiling (DEFUN PANDORICLET-GET ...)
; compiling (DEFUN PANDORICLET-SET ...)
; compiling (DECLAIM (INLINE GET-PANDORIC))
; compiling (DEFUN GET-PANDORIC ...)
; compiling (DEFSETF GET-PANDORIC ...)
; compiling (DEFMACRO WITH-PANDORIC ...)
; compiling (DEFUN PANDORIC-HOTPATCH ...)
; compiling (DEFMACRO PANDORIC-RECODE ...)
; compiling (DEFMACRO PLAMBDA ...)
; compiling (DEFVAR PANDORIC-EVAL-TUNNEL)
; compiling (DEFMACRO PANDORIC-EVAL ...)
; compiling (SET-DISPATCH-MACRO-CHARACTER #\# ...)
; compiling (DEFMACRO FAST-PROGN ...)
; compiling (DEFMACRO SAFE-PROGN ...)
; compiling (DEFUN FFORMAT ...)
; compiling (DEFINE-COMPILER-MACRO FFORMAT ...)
; compiling (DECLAIM (INLINE MAKE-TLIST ...))
; compiling (DEFUN MAKE-TLIST ...)
; compiling (DEFUN TLIST-LEFT ...)
; compiling (DEFUN TLIST-RIGHT ...)
; compiling (DEFUN TLIST-EMPTY-P ...)
; compiling (DECLAIM (INLINE TLIST-ADD-LEFT ...))
; compiling (DEFUN TLIST-ADD-LEFT ...)
; compiling (DEFUN TLIST-ADD-RIGHT ...)
; compiling (DECLAIM (INLINE TLIST-REM-LEFT))
; compiling (DEFUN TLIST-REM-LEFT ...)
; compiling (DECLAIM (INLINE TLIST-UPDATE))
; compiling (DEFUN TLIST-UPDATE ...)
; compiling (DEFUN BUILD-BATCHER-SN ...)
; compiling (DEFMACRO! SORTF ...)
; compiling (DEFUN DOLLAR-SYMBOL-P ...)
; compiling (DEFUN PRUNE-IF-MATCH-BODIES-FROM-SUB-LEXICAL-SCOPE ...)
; compiling (DEFMACRO! IF-MATCH ...)
; compiling (DEFMACRO WHEN-MATCH ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/comlib/let-over-lambda-tmp9DT7SEFG.fasl
; compilation finished in 0:00:00.478
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bterm.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (BASE-TERM # ...) ...)
; compiling (DECLAIM (INLINE IS-BASE-TERM-VARIANT))
; compiling (DEFUN IS-BASE-TERM-VARIANT ...)
; compiling (DEFTYPE TERM-BODY ...)
; compiling (DEFCONSTANT VARIABLE-TYPE ...)
; compiling (DEFCONSTANT APPLICATION-FORM-TYPE ...)
; compiling (DEFCONSTANT SIMPLE-LISP-FORM-TYPE ...)
; compiling (DEFCONSTANT GENERAL-LISP-FORM-TYPE ...)
; compiling (DEFCONSTANT LISP-FORM-TYPE ...)
; compiling (DEFCONSTANT PSUEDO-CONSTANT-TYPE ...)
; compiling (DEFCONSTANT PURE-BUILTIN-CONSTANT-TYPE ...)
; compiling (DEFCONSTANT SYSTEM-OBJECT-TYPE ...)
; compiling (DEFCONSTANT BUILTIN-CONSTANT-TYPE ...)
; compiling (DEFCONSTANT REDUCED-FLAG ...)
; compiling (DEFCONSTANT LOWEST-PARSED-FLAG ...)
; compiling (DEFCONSTANT ON-DEMAND-FLAG ...)
; compiling (DEFCONSTANT RED-FLAG ...)
; compiling (DECLAIM (INLINE IS-TERM))
; compiling (DEFUN IS-TERM ...)
; compiling (DEFTYPE TERM ...)
; compiling (DEFMACRO TERM-BODY ...)
; compiling (DEFMACRO TERM-TYPE ...)
; compiling (DEFMACRO TERM-STATUS ...)
; compiling (DEFMACRO TERM-SORT ...)
; compiling (DEFMACRO CREATE-TERM ...)
; compiling (DEFMACRO NEW-TERM ...)
; compiling (DEFMACRO TERM-EQ ...)
; compiling (DEFMACRO TERM-EQUAL ...)
; compiling (DEFMACRO TERM? ...)
; compiling (DEFMACRO TERM-REPLACE ...)
; compiling (DEFSTRUCT (VARIABLE # ...) ...)
; compiling (DEFSTRUCT (PCONST # ...))
; compiling (DEFSTRUCT (APPLICATION # ...) ...)
; compiling (DEFSTRUCT (PURE-BUILTIN # ...) ...)
; compiling (DEFSTRUCT (SYSTEM-OBJECT # ...))
; compiling (DEFSTRUCT (SIMPLE-LISP-FORM # ...) ...)
; compiling (DEFSTRUCT (GENERAL-LISP-FORM # ...))
; compiling (DEFMACRO TERM-TYPE-EQ ...)
; compiling (DEFMACRO TERM$IS-VARIABLE? ...)
; compiling (DEFMACRO TERM$IS-APPLICATION-FORM? ...)
; compiling (DEFMACRO TERM$IS-APPLFORM? ...)
; compiling (DEFMACRO TERM$IS-SIMPLE-LISP-FORM? ...)
; compiling (DEFMACRO TERM$IS-GENERAL-LISP-FORM? ...)
; compiling (DEFMACRO TERM$IS-LISP-FORM? ...)
; compiling (DEFMACRO TERM$IS-PURE-BUILTIN-CONSTANT? ...)
; compiling (DEFMACRO TERM$IS-BUILTIN-CONSTANT? ...)
; compiling (DEFMACRO TERM$IS-PCONSTANT? ...)
; compiling (DEFMACRO TERM$IS-SYSTEM-OBJECT? ...)
; compiling (DEFMACRO TERM-IS-VARIABLE? ...)
; compiling (DEFMACRO TERM-IS-APPLICATION-FORM? ...)
; compiling (DEFMACRO TERM-IS-APPLFORM? ...)
; compiling (DEFMACRO TERM-IS-LISP-FORM? ...)
; compiling (DEFMACRO TERM-IS-SIMPLE-LISP-FORM? ...)
; compiling (DEFMACRO TERM-IS-GENERAL-LISP-FORM? ...)
; compiling (DEFMACRO TERM-IS-PURE-BUILTIN-CONSTANT? ...)
; compiling (DEFMACRO TERM-IS-BUILTIN-CONSTANT? ...)
; compiling (DEFMACRO TERM-IS-PCONSTANT? ...)
; compiling (DEFMACRO TERM-IS-SYSTEM-OBJECT? ...)
; compiling (DEFMACRO TERM-IS-CHAOS-EXPR? ...)
; compiling (DEFCONSTANT PRIORI-CONSTANT-TYPE ...)
; compiling (DEFMACRO TERM$IS-CONSTANT? ...)
; compiling (DEFMACRO TERM-IS-CONSTANT? ...)
; compiling (DEFMACRO TERM$TEST-REDUCED-FLAG ...)
; compiling (DEFMACRO TERM-IS-REDUCED? ...)
; compiling (DEFMACRO TERM$TEST-RED-FLAG ...)
; compiling (DEFMACRO TERM-IS-RED ...)
; compiling (DEFMACRO TERM-IS-GREEN ...)
; compiling (DEFMACRO TERM$TEST-LOWEST-PARSED-FLAG ...)
; compiling (DEFMACRO TERM-IS-LOWEST-PARSED? ...)
; compiling (DEFMACRO TERM$TEST-ON-DEMAND-FLAG ...)
; compiling (DEFMACRO TERM-IS-ON-DEMAND? ...)
; compiling (DEFMACRO TERM$SET-REDUCED-FLAG ...)
; compiling (DEFMACRO TERM-SET-REDUCED-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-REDUCED ...)
; compiling (DEFMACRO TERM$UNSET-REDUCED-FLAG ...)
; compiling (DEFMACRO TERM-UNSET-REDUCED-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-NOT-REDUCED ...)
; compiling (DEFMACRO TERM$SET-RED-FLAG ...)
; compiling (DEFMACRO TERM-SET-RED ...)
; compiling (DEFMACRO TERM$SET-GREEN ...)
; compiling (DEFMACRO TERM-SET-GREEN ...)
; compiling (DEFMACRO TERM$SET-LOWEST-PARSED-FLAG ...)
; compiling (DEFMACRO TERM-SET-LOWEST-PARSED-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-LOWEST-PARSED ...)
; compiling (DEFMACRO TERM$UNSET-LOWEST-PARSED-FLAG ...)
; compiling (DEFMACRO TERM-UNSET-LOWEST-PARSED-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-NOT-LOWEST-PARSED ...)
; compiling (DEFMACRO TERM$SET-ON-DEMAND-FLAG ...)
; compiling (DEFMACRO TERM-SET-ON-DEMAND-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-ON-DEMAND ...)
; compiling (DEFMACRO TERM$UNSET-ON-DEMAND-FLAG ...)
; compiling (DEFMACRO TERM-UNSET-ON-DEMAND-FLAG ...)
; compiling (DEFMACRO MARK-TERM-AS-NOT-ON-DEMAND ...)
; compiling (DEFMACRO TERM-HEAD ...)
; compiling (DEFMACRO CHANGE$HEAD-OPERATOR ...)
; compiling (DEFMACRO CHANGE-HEAD-OPERATOR ...)
; compiling (DEFMACRO TERM$SUBTERMS ...)
; compiling (DEFMACRO TERM$ARG-1 ...)
; compiling (DEFMACRO TERM$ARG-2 ...)
; compiling (DEFMACRO TERM$ARG-3 ...)
; compiling (DEFMACRO TERM$ARG-4 ...)
; compiling (DEFMACRO TERM$ARG-N ...)
; compiling (DEFMACRO TERM-SUBTERMS ...)
; compiling (DEFMACRO TERM-ARG-1 ...)
; compiling (DEFMACRO TERM-ARG-2 ...)
; compiling (DEFMACRO TERM-ARG-3 ...)
; compiling (DEFMACRO TERM-ARG-4 ...)
; compiling (DEFMACRO TERM-ARG-N ...)
; compiling (DEFMACRO VARIABLE-SORT ...)
; compiling (DEFMACRO VARIABLE-NAME ...)
; compiling (DEFMACRO VARIABLE-PRINT-NAME ...)
; compiling (DEFMACRO PCONST-SORT ...)
; compiling (DEFMACRO PCONST-NAME ...)
; compiling (DEFMACRO PCONST-PRINT-NAME ...)
; compiling (DEFMACRO TERM$BUILTIN-VALUE ...)
; compiling (DEFMACRO TERM-BUILTIN-VALUE ...)
; compiling (DEFMACRO TERM$BUILTIN-EQUAL ...)
; compiling (DEFMACRO TERM-BUILTIN-EQUAL ...)
; compiling (DEFMACRO CHAOS-FORM-EXPR ...)
; compiling (DEFMACRO CHAOS-ORIGINAL-EXPR ...)
; compiling (DEFMACRO TERM$PSUEDO-CONSTANT-NAME ...)
; compiling (DEFMACRO PSUEDO-CONSTANT-NAME ...)
; compiling (DEFMACRO TERM$LISP-FUNCTION ...)
; compiling (DEFMACRO TERM-LISP-FUNCTION ...)
; compiling (DEFMACRO LISP-FORM-FUNCTION ...)
; compiling (DEFMACRO TERM$LISP-CODE-ORIGINAL-FORM ...)
; compiling (DEFMACRO TERM$LISP-FORM-ORIGINAL-FORM ...)
; compiling (DEFMACRO LISP-CODE-ORIGINAL-FORM ...)
; compiling (DEFMACRO LISP-FORM-ORIGINAL-FORM ...)
; compiling (DEFMACRO TERM$SYSTEM-OBJECT ...)
; compiling (DEFMACRO TERM-SYSTEM-OBJECT ...)
; compiling (DEFCONSTANT VAR-CONST-CODE ...)
; compiling (DECLAIM (INLINE MAKE-VARIABLE-TERM))
; compiling (DECLAIM (INLINE MAKE-VARIABLE))
; compiling (DEFUN MAKE-VARIABLE-TERM ...)
; compiling (DEFMACRO VARIABLE-COPY ...)
; compiling (DECLAIM (INLINE MAKE-APPLICATION-TERM))
; compiling (DECLAIM (INLINE MAKE-APPLICATION))
; compiling (DEFUN MAKE-APPLICATION-TERM ...)
; compiling (DECLAIM (INLINE MAKE-SIMPLE-LISP-FORM-TERM) ...)
; compiling (DEFUN MAKE-SIMPLE-LISP-FORM-TERM ...)
; compiling (DECLAIM (INLINE MAKE-GENERAL-LISP-FORM-TERM) ...)
; compiling (DEFUN MAKE-GENERAL-LISP-FORM-TERM ...)
; compiling (DECLAIM (INLINE MAKE-BCONST-TERM) ...)
; compiling (DEFUN MAKE-BCONST-TERM ...)
; compiling (DECLAIM (INLINE MAKE-PCONST-TERM) ...)
; compiling (DEFUN MAKE-PCONST-TERM ...)
; compiling (DEFMACRO PCONST-COPY ...)
; compiling (DECLAIM (INLINE MAKE-SYSTEM-OBJECT-TERM))
; compiling (DEFUN MAKE-SYSTEM-OBJECT-TERM ...)
; compiling (DEFUN TERM-VARIABLES ...)
; compiling (DEFUN TERM-PVARIABLES ...)
; compiling (DECLAIM (INLINE VARIABLES-OCCUR-AT-TOP?))
; compiling (DEFUN VARIABLES-OCCUR-AT-TOP? ...)
; compiling (DEFMACRO TERM$IS-GROUND? ...)
; compiling (DEFUN TERM-IS-GROUND? ...)
; compiling (DECLAIM (INLINE SIMPLE-COPY-TERM))
; compiling (DEFUN SIMPLE-COPY-TERM ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bterm-tmp8065ESJT.fasl
; compilation finished in 0:00:00.723
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/defterm.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (%CHAOS-OBJECT #) ...)
; compiling (DEFUN CHAOS-PR-OBJECT ...)
; compiling (DEFSTRUCT (%CHAOS-STATIC-OBJECT) ...)
; compiling (DEFMACRO OBJECT-TYPE ...)
; compiling (DEFMACRO CHAOS-OBJECT? ...)
; compiling (DEFMACRO TYPE-P-CHAOS ...)
; compiling (DEFMACRO OBJECT-CATEGORY ...)
; compiling (DEFMACRO OBJECT-EVALUATOR ...)
; compiling (DEFMACRO OBJECT-PRINTER ...)
; compiling (DEFMACRO OBJECT-VISIBLE-SLOTS ...)
; compiling (DEFMACRO OBJECT-CONSTRUCTOR ...)
; compiling (DEFSTRUCT (%CHAOS-AST #) ...)
; compiling (DEFMACRO CHAOS-AST? ...)
; compiling (DEFMACRO AST-TYPE ...)
; compiling (DEFMACRO AST-CATEGORY ...)
; compiling (DEFMACRO AST-PRINTER ...)
; compiling (DEFMACRO AST-EVALUATOR ...)
; compiling (DEFUN %MAKE-KEYWORD ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/defterm.lisp
; in: DEFUN %MAKE-KEYWORD
;     (STRING CHAOS::SYMBOL-OR-STRING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR SYMBOL (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*))
;                               SIMPLE-BASE-STRING), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR SYMBOL (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*))
;                               SIMPLE-BASE-STRING), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR SYMBOL (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*))
;                               SIMPLE-BASE-STRING), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR SYMBOL (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*))
;                               SIMPLE-BASE-STRING), not a STRING.

; compiling (DEFMACRO DEFTERM ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/defterm.lisp
; in: DEFMACRO DEFTERM
;     (STRING CHAOS::CONC-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::CONC-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::CONC-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::CONC-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFMACRO DEFKEY ...)
; compiling (DEFUN %IS-CHAOS-TERM? ...)
; compiling (DECLAIM (INLINE IS-AST))
; compiling (DEFUN IS-AST ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/defterm-tmp7S8Z6FGF.fasl
; compilation finished in 0:00:00.464
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bobject.lisp" (written 04 MAR 2019 06:26:47 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (OBJECT # ...) ...)
; compiling (DEFMACRO OBJECT-INFO ...)
; compiling (DECLAIM (INLINE GET-CONTEXT-MODULE))
; compiling (DEFUN GET-CONTEXT-MODULE ...)
; compiling (DECLAIM (INLINE RESET-CONTEXT-MODULE))
; compiling (DEFUN RESET-CONTEXT-MODULE ...)
; compiling (DECLAIM (INLINE GET-OBJECT-CONTEXT))
; compiling (DEFUN GET-OBJECT-CONTEXT ...)
; compiling (DECLAIM (INLINE SET-OBJECT-CONTEXT-MODULE))
; compiling (DEFUN SET-OBJECT-CONTEXT-MODULE ...)
; compiling (DEFSTRUCT (EX-INTERFACE #) ...)
; compiling (DEFSTRUCT (TOP-OBJECT # ...) ...)
; compiling (DEFMACRO OBJECT-DEPEND-DAG ...)
; compiling (DEFUN OBJECT-PARAMETERS ...)
; compiling (DEFSETF OBJECT-PARAMETERS ...)
; compiling (DEFUN OBJECT-EXPORTING-OBJECTS ...)
; compiling (DEFSETF OBJECT-EXPORTING-OBJECTS ...)
; compiling (DEFUN OBJECT-DIRECT-SUB-OBJECTS ...)
; compiling (DEFUN OBJECT-ALL-SUB-OBJECTS ...)
; compiling (DEFUN GATHER-SUB-OBJECTS ...)
; compiling (DEFUN OBJECT-ALL-EXPORTING-OBJECTS ...)
; compiling (DEFUN GATHER-EXPORTING-OBJECTS ...)
; compiling (DEFUN INITIALIZE-DEPEND-DAG ...)
; compiling (DEFUN INITIALIZE-OBJECT-INTERFACE ...)
; compiling (DEFUN CLEAN-UP-EX-INTERFACE ...)
; compiling (DEFUN ADD-DEPEND-RELATION ...)
; compiling (DEFMACRO OBJECT-STATUS ...)
; compiling (DEFMACRO OBJECT-IS-INCONSISTENT ...)
; compiling (DEFMACRO MARK-OBJECT-AS-INCONSISTENT ...)
; compiling (DEFUN PROPAGATE-OBJECT-CHANGE ...)
; compiling (DEFMACRO OBJECT-DECL-FORM ...)
; compiling (DEFTERM SCRIPT ...)
; compiling (DEFUN SCRIPT? ...)
; compiling (DEFTERM AST ...)
; compiling (DEFUN AST? ...)
; compiling (DEFSTRUCT (PARSE-DICTIONARY #) ...)
; compiling (DEFSTRUCT (SIGNATURE-STRUCT # ...) ...)
; compiling (DEFSTRUCT (AXIOM-SET # ...) ...)
; compiling (DEFSTRUCT (MODULE-DYN-CONTEXT #) ...)
; compiling (DEFSTRUCT (MODULE # ...) ...)
; compiling (DEFMACRO MODULE-KIND ...)
; compiling (DEFMACRO MODULE-IS-THEORY ...)
; compiling (DEFMACRO MODULE-IS-OBJECT ...)
; compiling (DEFMACRO MODULE-IS-FINAL ...)
; compiling (DEFMACRO MODULE-IS-LOOSE ...)
; compiling (DEFMACRO MODULE-IS-INITIAL ...)
; compiling (DEFUN PRINT-MODULE-OBJECT ...)
; compiling (DEFUN PRINT-SIGNATURE ...)
; compiling (DEFUN PRINT-AXIOM-SET ...)
; compiling (LET (#) ...)
; compiling (DEFSTRUCT (TRS # ...) ...)
; compiling (DEFUN PRINT-TRS ...)
; compiling (DEFSTRUCT (VIEW-STRUCT # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-VIEW-STRUCT-OBJECT ...)
; compiling (DEFSTRUCT INT-INSTANTIATION ...)
; compiling (DEFSTRUCT INT-PLUS ...)
; compiling (DEFSTRUCT INT-RENAME ...)
; compiling (DEFUN VIEW-P ...)
; compiling (DEFUN MODEXP-IS-VIEW ...)
; compiling (DEFUN VIEW-IS-INCONSISTENT ...)
; compiling (DEFSTRUCT (SYMBOL-TABLE) ...)
; compiling (DEFSTRUCT (STABLE) ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bobject-tmpSIT3QPKP.fasl
; compilation finished in 0:00:00.791
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/absntax.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTERM SEQ ...)
; compiling (DEFTERM QUOTE ...)
; compiling (DEFTERM SORT-REF ...)
; compiling (DEFUN MAY-BE-ERROR-SORT-REF? ...)
; compiling (DEFTERM SORT-DECL ...)
; compiling (DEFTERM BSORT-DECL ...)
; compiling (DEFTERM SUBSORT-DECL ...)
; compiling (DEFTERM PSORT-DECL ...)
; compiling (DEFTERM ATTR-RENAME ...)
; compiling (DEFTERM SLOT ...)
; compiling (DEFTERM SUPER ...)
; compiling (DEFTERM RECORD-DECL ...)
; compiling (DEFTERM CLASS-DECL ...)
; compiling (DEFTERM OPREF ...)
; compiling (DEFTERM OPATTRS ...)
; compiling (DEFTERM OP-DECL ...)
; compiling (DEFTERM THEORY-DECL ...)
; compiling (DEFTERM OPATTR-DECL ...)
; compiling (DEFTERM METH-REF ...)
; compiling (DEFTERM VAR-DECL ...)
; compiling (DEFTERM PVAR-DECL ...)
; compiling (DEFTERM LET ...)
; compiling (DEFTERM MACRO ...)
; compiling (DEFTERM AXIOM-DECL ...)
; compiling (DEFTERM AXIOM-DECL-NOW ...)
; compiling (DEFUN CHANGE-AXIOM-DECL-TO-NOW ...)
; compiling (DEFTERM AX-REF ...)
; compiling (DEFTERM EQ-REF ...)
; compiling (DEFTERM RL-REF ...)
; compiling (DEFTERM RRULE-REF ...)
; compiling (DEFTERM IMPORT ...)
; compiling (DEFTERM SIGNATURE ...)
; compiling (DEFTERM AXIOMS ...)
; compiling (DEFTERM MODULE-DECL ...)
; compiling (DEFTERM VIEW-DECL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/absntax-tmpE0PA0714.fasl
; compilation finished in 0:00:01.841
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/script.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTERM EVAL ...)
; compiling (DEFTERM ERROR ...)
; compiling (DEFTERM LISP-EVAL ...)
; compiling (DEFTERM DYNA-COMMENT ...)
; compiling (DEFTERM REDUCE ...)
; compiling (DEFTERM TEST-REDUCE ...)
; compiling (DEFTERM PARSE ...)
; compiling (DEFTERM INPUT ...)
; compiling (DEFTERM TRACE ...)
; compiling (DEFTERM TRACE-WHOLE ...)
; compiling (DEFTERM STEP ...)
; compiling (DEFTERM DESCRIBE-MODULE ...)
; compiling (DEFTERM OPEN-MODULE ...)
; compiling (DEFTERM CLOSE-MODULE ...)
; compiling (DEFTERM SAVE ...)
; compiling (DEFTERM RESTORE ...)
; compiling (DEFTERM RESET ...)
; compiling (DEFTERM FULL-RESET ...)
; compiling (DEFTERM LOAD-PRELUDE ...)
; compiling (DEFTERM PROVIDE ...)
; compiling (DEFTERM REQUIRE ...)
; compiling (DEFTERM REWRITE-COUNT ...)
; compiling (DEFTERM STOP-AT ...)
; compiling (DEFTERM PROTECT ...)
; compiling (DEFTERM DRIBBLE ...)
; compiling (DEFTERM SAVE-CHAOS ...)
; compiling (DEFTERM LS ...)
; compiling (DEFTERM PWD ...)
; compiling (DEFTERM SHELL ...)
; compiling (DEFTERM CD ...)
; compiling (DEFTERM PUSHD ...)
; compiling (DEFTERM POPD ...)
; compiling (DEFTERM DIRS ...)
; compiling (DEFTERM SHOW ...)
; compiling (DEFTERM DESCRIBE ...)
; compiling (DEFTERM SELECT ...)
; compiling (DEFTERM SET ...)
; compiling (DEFTERM REGULARIZE ...)
; compiling (DEFTERM CHECK ...)
; compiling (DEFTERM TRAM ...)
; compiling (DEFTERM AUTOLOAD ...)
; compiling (DEFTERM NO-AUTOLOAD ...)
; compiling (DEFTERM CBRED ...)
; compiling (DEFTERM CHAOS ...)
; compiling (DEFTERM CONTINUE ...)
; compiling (DEFTERM WHAT-IS ...)
; compiling (DEFTERM INSPECT ...)
; compiling (DEFTERM LOOK-UP ...)
; compiling (DEFTERM DELIMITER ...)
; compiling (DEFTERM SCASE ...)
; compiling (DEFTERM GENDOC ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/script-tmpJRWHHVG0.fasl
; compilation finished in 0:00:02.129
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/op-theory.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTYPE OP-THEORY ...)
; compiling (DECLAIM (INLINE THEORY-MAKE))
; compiling (DEFUN THEORY-MAKE ...)
; compiling (DEFMACRO THEORY-INFO ...)
; compiling (DEFMACRO THEORY-ZERO ...)
; compiling (DECLAIM (INLINE ZERO-RULE-ONLY))
; compiling (DEFUN ZERO-RULE-ONLY ...)
; compiling (DEFTYPE THEORY-INFO ...)
; compiling (DEFMACRO THEORY-INFO-NAME ...)
; compiling (DEFMACRO THEORY-INFO-CODE ...)
; compiling (DEFMACRO THEORY-INFO-EMPTY-FOR-UNIFY ...)
; compiling (DEFMACRO THEORY-INFO-EMPTY-FOR-MATCHING ...)
; compiling (DEFMACRO THEORY-INFO-MATCH-EQUAL-FUN ...)
; compiling (DEFMACRO THEORY-INFO-MATCH-INIT-FUN ...)
; compiling (DEFMACRO THEORY-INFO-MATCH-NEXT-FUN ...)
; compiling (DEFMACRO THEORY-INFO-UNIFY-EQUAL-FUN ...)
; compiling (DEFMACRO THEORY-INFO-UNIFY-INIT-FUN ...)
; compiling (DEFMACRO THEORY-INFO-UNIFY-NEXT-FUN ...)
; compiling (DEFUN NEW-THEORY-INFO ...)
; compiling (DEFUN PR-THEORY-INFO ...)
; compiling (DEFUN PR-OPTHEORY-INTERNAL ...)
; compiling (DEFUN IS-OPERATOR-THEORY? ...)
; compiling (DEFMACRO THEORY-NAME ...)
; compiling (DEFMACRO THEORY-CODE ...)
; compiling (DEFMACRO THEORY-EMPTY-FOR-UNIFY ...)
; compiling (DEFMACRO THEORY-MATCH-EQUAL-FUN ...)
; compiling (DEFMACRO THEORY-MATCH-INIT-FUN ...)
; compiling (DEFMACRO THEORY-MATCH-NEXT-FUN ...)
; compiling (DEFMACRO THEORY-UNIFY-EQUAL-FUN ...)
; compiling (DEFMACRO THEORY-UNIFY-INIT-FUN ...)
; compiling (DEFMACRO THEORY-UNIFY-NEXT-FUN ...)
; compiling (DEFCONSTANT .E. ...)
; compiling (DEFCONSTANT .Z. ...)
; compiling (DEFCONSTANT .I. ...)
; compiling (DEFCONSTANT .C. ...)
; compiling (DEFCONSTANT .A. ...)
; compiling (DEFCONSTANT .AC. ...)
; compiling (DEFCONSTANT .AI. ...)
; compiling (DEFCONSTANT .AZ. ...)
; compiling (DEFCONSTANT .CZ. ...)
; compiling (DEFCONSTANT .CI. ...)
; compiling (DEFCONSTANT .IZ. ...)
; compiling (DEFCONSTANT .ACI. ...)
; compiling (DEFCONSTANT .ACZ. ...)
; compiling (DEFCONSTANT .CIZ. ...)
; compiling (DEFCONSTANT .AIZ. ...)
; compiling (DEFCONSTANT .ACIZ. ...)
; compiling (DEFMACRO TEST-THEORY ...)
; compiling (DEFMACRO UNSET-THEORY ...)
; compiling (DECLAIM (TYPE SIMPLE-VECTOR ...))
; compiling (DEFVAR *THEORY-INFO-ARRAY* ...)
; compiling (DEFMACRO THEORY-CODE-TO-INFO ...)
; compiling (DEFUN CREATE-THEORY ...)
; compiling (DECLAIM (SPECIAL THE-E-PROPERTY ...))
; compiling (DEFMACRO DEFINE-THEORY-INFO ...)
; compiling (DEFINE-THEORY-INFO THE-E-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-Z-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-I-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-IZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-C-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-CZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-CI-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-CIZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-A-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-AZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-AI-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-AIZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-AC-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-ACZ-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-ACI-PROPERTY ...)
; compiling (DEFINE-THEORY-INFO THE-ACIZ-PROPERTY ...)
; compiling (DEFVAR *THE-EMPTY-THEORY*)
; compiling (SETF *THE-EMPTY-THEORY* ...)
; compiling (DEFMACRO THEORY-INFO-IS-EMPTY-FOR-UNIFY ...)
; compiling (DEFMACRO THEORY-INFO-IS-EMPTY-FOR-MATCHING ...)
; compiling (DEFMACRO THEORY-IS-EMPTY-FOR-UNIFY ...)
; compiling (DEFMACRO THEORY-IS-EMPTY-FOR-MATCHING ...)
; compiling (DEFUN THEORY-INFO-IS-EMPTY-FOR-UNIFY-DIRECT ...)
; compiling (DEFMACRO THEORY-INFO-IS-EMPTY ...)
; compiling (DEFMACRO THEORY-INFO-IS-A ...)
; compiling (DEFMACRO THEORY-INFO-IS-C ...)
; compiling (DEFMACRO THEORY-INFO-IS-I ...)
; compiling (DEFMACRO THEORY-INFO-IS-Z ...)
; compiling (DEFMACRO THEORY-INFO-IS-AC ...)
; compiling (DEFMACRO THEORY-INFO-IS-AI ...)
; compiling (DEFMACRO THEORY-INFO-IS-AZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-CI ...)
; compiling (DEFMACRO THEORY-INFO-IS-CZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-IZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-ACI ...)
; compiling (DEFMACRO THEORY-INFO-IS-ACZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-AIZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-CIZ ...)
; compiling (DEFMACRO THEORY-INFO-IS-ACIZ ...)
; compiling (DECLAIM (INLINE THEORY-INFO-IS-RESTRICTION-OF))
; compiling (DEFUN THEORY-INFO-IS-RESTRICTION-OF ...)
; compiling (DECLAIM (INLINE THEORY-INFO-IS-RESTICTION-OF-IGNORING-ID))
; compiling (DEFUN THEORY-INFO-IS-RESTRICTION-OF-IGNORING-ID ...)
; compiling (DEFMACRO E-EQUAL-IN-THEORY ...)
; compiling (DEFMACRO THEORY-CONTAINS-ASSOCIATIVITY ...)
; compiling (DEFUN THEORY-CONTAINS-ASSOCIATIVITY-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-COMMUTATIVITY ...)
; compiling (DEFUN THEORY-CONTAINS-COMMUTATIVITY-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-AC ...)
; compiling (DEFUN THEORY-CONTAINS-AC-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-IDEMPOTENCY ...)
; compiling (DEFUN THEORY-CONTAINS-IDEMPOTENCY-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-IDENTITY ...)
; compiling (DEFUN THEORY-CONTAINS-IDENTITY-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-ACZ ...)
; compiling (DEFUN THEORY-CONTAINS-ACZ-DIRECT ...)
; compiling (DEFMACRO THEORY-CONTAINS-AZ ...)
; compiling (DEFUN THEORY-CONTAINS-AZ-DIRECT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/op-theory-tmp4WZVROCX.fasl
; compilation finished in 0:00:00.179
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bmodexp.lisp" (written 04 MAR 2019 06:39:10 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTYPE MODEXP ...)
; compiling (DEFPARAMETER .MODEXP-KEYWORDS. ...)
; compiling (DEFUN IS-MODEXP? ...)
; compiling (DEFTERM MODEXP ...)
; compiling (DEFTERM RMAP ...)
; compiling (DEFTERM REN-SORT ...)
; compiling (DEFTERM REN-HSORT ...)
; compiling (DEFTERM REN-OP ...)
; compiling (DEFTERM REN-BOP ...)
; compiling (DEFTERM VARS ...)
; compiling (DEFTERM REN-PARAM ...)
; compiling (DEFTERM + ...)
; compiling (DEFTERM * ...)
; compiling (DEFTERM ! ...)
; compiling (DEFTERM !ARG ...)
; compiling (DEFMACRO MAKE-?-NAME ...)
; compiling (DEFUN MODEXP-IS-?NAME? ...)
; compiling (DEFUN ?NAME-NAME ...)
; compiling (DEFUN MODEXP-IS-PARAMETER-THEORY ...)
; compiling (DEFTERM VIEW ...)
; compiling (DEFUN MODEXP-IS-ERROR ...)
; compiling (DEFUN MODEXP-IS-SIMPLE-NAME ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *MODEXP-VIEW-TABLE* ...)
; compiling (DEFUN FIND-VIEW-IN-ENV ...)
; compiling (DEFUN ADD-VIEW-DEFN ...)
; compiling (DEFSTRUCT (MODMORPH #) ...)
; compiling (DEFUN MODMORPH-IS-RENAME ...)
; compiling (DEFMACRO MODMORPH-ASSOC-IMAGE ...)
; compiling (DEFMACRO MODMORPH-ASSOC-IMAGES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bmodexp-tmpA0I3UKX8.fasl
; compilation finished in 0:00:00.538
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bmodule2.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MODULE-IS-PARAMETER-THEORY ...)
; compiling (DEFMACRO MODULE-DAG ...)
; compiling (DEFMACRO MODULE-PARAMETERS ...)
; compiling (DEFMACRO MODULE-EXPORTING-MODULES ...)
; compiling (DEFMACRO MODULE-DAG-SUBMODULES ...)
; compiling (DEFUN MODULE-DIRECT-SUBMODULES ...)
; compiling (DEFUN MODULE-SUBMODULES ...)
; compiling (DEFUN INITIALIZE-MODULE-DAG ...)
; compiling (DEFUN MODULE-ALL-SUBMODULES ...)
; compiling (DEFUN GATHER-SUBMODULES ...)
; compiling (DEFUN GET-MODULE-DEPENDENCY ...)
; compiling (DEFUN GATHER-MODULE-DEPENDENCY ...)
; compiling (DEFUN GET-IMPORTING-PATH ...)
; compiling (DEFUN GET-REAL-IMPORTING-MODE ...)
; compiling (DEFMACRO MODULE-EXTENDS ...)
; compiling (DEFMACRO MODULE-PROTECTS ...)
; compiling (DEFMACRO MODULE-USING ...)
; compiling (DEFMACRO MODULE-INCLUDING ...)
; compiling (DEFMACRO IMPORTED-MODULES ...)
; compiling (DEFMACRO PARAMETER-ARG-NAME ...)
; compiling (DEFMACRO PARAMETER-THEORY-MODULE ...)
; compiling (DEFMACRO PARAMETER-IMPORTED-MODE ...)
; compiling (DEFMACRO PARAMETER-CONTEXT ...)
; compiling (DEFUN PARAMETER-THEORY-ARG-NAME ...)
; compiling (DEFUN PARAMETER-MODULE-THEORY ...)
; compiling (DEFUN PARAMETER-MODULE-CONTEXT ...)
; compiling (DEFUN MODULE-DIRECT-EXPORTING-MODULES ...)
; compiling (DEFUN MODULE-ALL-EXPORTING-MODULES ...)
; compiling (DEFUN GATHER-EXPORTING-MODULES ...)
; compiling (DEFUN INITIALIZE-MODULE-INTERFACE ...)
; compiling (DEFMACRO MODULE-SORTS ...)
; compiling (DEFMACRO MODULE-OWN-SORTS ...)
; compiling (DEFMACRO MODULE-SORT-RELATIONS ...)
; compiling (DEFMACRO MODULE-OPERATORS ...)
; compiling (DEFMACRO MODULE-OPATTRS ...)
; compiling (DEFMACRO MODULE-PRINCIPAL-SORT ...)
; compiling (DEFUN INITIALIZE-SIGNATURE ...)
; compiling (DEFUN CLEAN-UP-SIGNATURE ...)
; compiling (DEFMACRO MODULE-VARIABLES ...)
; compiling (DEFMACRO MODULE-EQUATIONS ...)
; compiling (DEFMACRO MODULE-RULES ...)
; compiling (DEFUN INITIALIZE-AXIOM-SET ...)
; compiling (DEFUN CLEAN-UP-AXIOM-SET ...)
; compiling (DEFMACRO MODULE-DICTIONARY-TABLE ...)
; compiling (DEFMACRO MODULE-DICTIONARY-BUILTINS ...)
; compiling (DEFMACRO MODULE-JUXTAPOSITION ...)
; compiling (DEFUN CLEAR-PARSE-DICT ...)
; compiling (DEFUN INITIALIZE-PARSE-DICTIONARY ...)
; compiling (DEFUN CLEAN-UP-PARSE-DICTIONARY ...)
; compiling (DEFMACRO MODULE-REWRITE-RULES ...)
; compiling (DEFMACRO MODULE-ALL-RULES ...)
; compiling (DEFMACRO MODULE-ALL-SORTS ...)
; compiling (DEFMACRO MODULE-ALL-OPERATORS ...)
; compiling (DEFMACRO MODULE-SORT-ORDER ...)
; compiling (DEFMACRO MODULE-OPINFO-TABLE ...)
; compiling (DEFMACRO MODULE-EXT-RULE-TABLE ...)
; compiling (DEFMACRO MODULE-TRS-SORT-NAME-MAP ...)
; compiling (DEFMACRO MODULE-TRS-OP-INFO-MAP ...)
; compiling (DEFMACRO MODULE-TRS-OP-REV-TABLE ...)
; compiling (DEFMACRO MODULE-TRS-SORT-GRAPH ...)
; compiling (DEFMACRO MODULE-TRS-ERR-SORTS ...)
; compiling (DEFMACRO MODULE-TRS-DUMMY-METHODS ...)
; compiling (DEFMACRO MODULE-TRS-SEM-RELATIONS ...)
; compiling (DEFMACRO MODULE-TRS-SEM-AXIOMS ...)
; compiling (DEFMACRO MODULE-TRS-TRAM ...)
; compiling (DEFUN INITIALIZE-TRS-EXT-INTERFACE ...)
; compiling (DEFUN INITIALIZE-TRS ...)
; compiling (DEFUN CLEAN-UP-TRS ...)
; compiling (DEFMACRO MODULE-BINDINGS ...)
; compiling (DEFMACRO MODULE-SPECIAL-BINDINGS ...)
; compiling (DEFMACRO MODULE-$$TERM ...)
; compiling (DEFMACRO MODULE-$$SUBTERM ...)
; compiling (DEFMACRO MODULE-$$ACTION-STACK ...)
; compiling (DEFMACRO MODULE-$$SELECTION-STACK ...)
; compiling (DEFUN INITIALIZE-MODULE-CONTEXT ...)
; compiling (DEFUN CLEAN-UP-CONTEXT ...)
; compiling (DEFUN MODULE-INFOS ...)
; compiling (DEFSETF MODULE-INFOS ...)
; compiling (DEFMACRO MODULE-PROTECTED-MODULES ...)
; compiling (DEFMACRO MODULE-TYPE ...)
; compiling (DEFMACRO MODULE-IS-HARD-WIRED ...)
; compiling (DEFMACRO MODULE-IS-SYSTEM-MODULE ...)
; compiling (DEFMACRO MODULE-IS-USER-MODULE ...)
; compiling (DEFMACRO MODULE-DELAYED-DECLARATIONS ...)
; compiling (DEFMACRO MODULE-HIDDEN ...)
; compiling (DEFMACRO MODULE-IS-REGULAR ...)
; compiling (DEFUN ADD-MODULE-ALIAS ...)
; compiling (DEFUN ADD-IMPORTED-MODULE ...)
; compiling (DEFUN MODULE-INCLUDES-RWL ...)
; compiling (DEFMACRO MODULE-VOID-SORTS ...)
; compiling (DEFMACRO MODULE-VOID-METHODS ...)
; compiling (DEFMACRO MODULE-SORTS-FOR-REGULARITY ...)
; compiling (DEFMACRO MODULE-METHODS-FOR-REGULARITY ...)
; compiling (DEFMACRO MODULE-HAS-BEHAVIOURAL-AXIOMS ...)
; compiling (DEFMACRO MODULE-MACROS ...)
; compiling (DEFMACRO MODULE-SKOLEM-FUNCTIONS ...)
; compiling (DEFMACRO MODULE-INSTANCE-DB ...)
; compiling (DEFUN INITIALIZE-MODULE-INSTANCE-DB ...)
; compiling (DEFUN CLEAR-MODULE-INSTANCE-DB ...)
; compiling (DEFMACRO MODULE-PROTECTED-MODE ...)
; compiling (DEFMACRO MODULE-IS-WRITE-PROTECTED ...)
; compiling (DEFMACRO MODULE-CREATION-DATE ...)
; compiling (DEFMACRO MODULE-AXIOMS-TO-BE-FIXED ...)
; compiling (DEFMACRO MODULE-TERMS-TO-BE-FIXED ...)
; compiling (DEFMACRO MODULE-METHODS-WITH-RWL-AXIOM ...)
; compiling (DEFMACRO MODULE-RULES-WITH-RWL-AXIOM ...)
; compiling (DEFMACRO MODULE-BEH-STUFF ...)
; compiling (DEFMACRO MODULE-BEH-ATTRIBUTES ...)
; compiling (DEFMACRO MODULE-BEH-METHODS ...)
; compiling (DEFMACRO MODULE-NON-BEH-METHODS ...)
; compiling (DEFMACRO MODULE-NON-BEH-ATTRIBUTES ...)
; compiling (DEFMACRO MODULE-COBASIS ...)
; compiling (DEFMACRO MODULE-METHODS-WITH-BEH-AXIOM ...)
; compiling (DEFMACRO SORT-IS-FOR-REGULARITY? ...)
; compiling (DEFMACRO METHOD-IS-FOR-REGULARITY? ...)
; compiling (DEFMACRO MODULE-PSORT-DECLARATION ...)
; compiling (DEFMACRO MODULE-ERROR-OP-DECL ...)
; compiling (DEFMACRO MODULE-ERROR-SORTS ...)
; compiling (DEFMACRO MODULE-ERROR-METHODS ...)
; compiling (DEFMACRO MODULE-ERROR-VAR-DECL ...)
; compiling (DEFUN NEEDS-UPDATE-SORT-ORDER ...)
; compiling (DEFUN SET-NEEDS-UPDATE-SORT-ORDER ...)
; compiling (DEFUN UNSET-NEEDS-UPDATE-SORT-ORDER ...)
; compiling (DEFMACRO MODULE-AMBIG-SORTS ...)
; compiling (DEFMACRO MODULE-AMBIG-OPS ...)
; compiling (DEFPARAMETER MODULE-INITIAL ...)
; compiling (DEFPARAMETER MODULE-INCONSISTENT ...)
; compiling (DEFPARAMETER MODULE-REGULARIZED ...)
; compiling (DEFPARAMETER MODULE-READY-PARSING ...)
; compiling (DEFPARAMETER MODULE-READY-REWRITING ...)
; compiling (DEFUN MODULE-IS-INCONSISTENT ...)
; compiling (DEFUN MARK-MODULE-AS-INCONSISTENT ...)
; compiling (DEFMACRO NEED-PARSING-PREPARATION ...)
; compiling (DEFMACRO MODULE-IS-READY-FOR-PARSING ...)
; compiling (DEFMACRO MARK-MODULE-READY-FOR-PARSING ...)
; compiling (DEFMACRO MARK-NEED-PARSING-PREPARATION ...)
; compiling (DEFMACRO NEED-REWRITING-PREPARATION ...)
; compiling (DEFMACRO MODULE-IS-READY-FOR-REWRITING ...)
; compiling (DEFMACRO MARK-MODULE-AS-CONSISTENT ...)
; compiling (DEFMACRO MARK-MODULE-READY-FOR-REWRITING ...)
; compiling (DEFMACRO MARK-MODULE-NEED-REWRITING-PREPARATION ...)
; compiling (DEFMACRO SET-NEEDS-PARSE ...)
; compiling (DEFMACRO NEEDS-PARSE ...)
; compiling (DEFMACRO SET-NEEDS-RULE ...)
; compiling (DEFMACRO NEEDS-RULE ...)
; compiling (DEFMACRO WITH-IN-MODULE ...)
; compiling (DEFUN CHANGE-CURRENT-MODULE ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *MODULES-SO-FAR-TABLE* ...)
; compiling (DEFUN ADD-MODEXP-DEFN ...)
; compiling (DEFUN FIND-GLOBAL-MODULE ...)
; compiling (DEFUN EQUAL-TOP-LEVEL ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/bmodule2.lisp
; in: DEFUN EQUAL-TOP-LEVEL
;     (STRING= CHAOS::X CHAOS::Y)
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a SIMPLE-STRING.

;     (EQL CHAOS::X CHAOS::Y)
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (AND (NOT (VECTOR CHARACTER)) (NOT (VECTOR NIL))
;                                    (NOT BASE-STRING) ATOM), not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a (AND (NOT (VECTOR CHARACTER)) (NOT (VECTOR NIL))
;                                    (NOT BASE-STRING) ATOM), not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; compiling (DEFUN FIND-EQUIVALENT-MODULE-IN-ENV ...)
; compiling (DEFUN MODEXP-UPDATE-NAME ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *MODEXP-LOCAL-TABLE* ...)
; compiling (DEFUN ADD-MODEXP-LOCAL-DEFN ...)
; compiling (DEFUN GET-MODEXP-LOCAL ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *MODEXP-EVAL-TABLE* ...)
; compiling (DEFUN FIND-MODEXP-EVAL ...)
; compiling (DEFUN ADD-MODEXP-EVAL ...)
; compiling (DEFUN CLEAR-MODEXP-EVAL ...)
; compiling (DEFUN FIND-MODULE-IN-ENV ...)
; compiling (DEFUN FIND-MODULE-IN-ENV-EXT ...)
; compiling (DEFUN FIND-MODULE-IN-SUBLIST ...)
; compiling (DEFVAR .METHOD1. ...)
; compiling (DEFVAR .METHOD-TAB1. ...)
; compiling (DEFVAR .METHOD-VAL1. ...)
; compiling (DEFVAR .METHOD2. ...)
; compiling (DEFVAR .METHOD-TAB2. ...)
; compiling (DEFVAR .METHOD-VAL2. ...)
; compiling (DEFUN CLEAR-METHOD-INFO-HASH ...)
; compiling (DEFUN INITIALIZE-MODULE ...)
; compiling (DEFUN CLEAN-UP-MODULE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bmodule2-tmp267Y2N80.fasl
; compilation finished in 0:00:00.586
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bview2.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO VIEW-NAME ...)
; compiling (DEFMACRO VIEW-SRC ...)
; compiling (DEFMACRO VIEW-SOURCE ...)
; compiling (DEFMACRO VIEW-TARGET ...)
; compiling (DEFMACRO VIEW-SORT-MAPS ...)
; compiling (DEFMACRO VIEW-OP-MAPS ...)
; compiling (DEFMACRO VIEW-DECL-FORM ...)
; compiling (DEFMACRO VIEW-INTERFACE ...)
; compiling (DEFMACRO VIEW-EXPORTING-OBJECTS ...)
; compiling (DEFMACRO VIEW-STATUS ...)
; compiling (DEFUN MARK-VIEW-AS-CONSISTENT ...)
; compiling (DEFUN COPY-VIEW ...)
; compiling (DEFUN INITIALIZE-VIEW ...)
; compiling (DEFUN CLEAN-UP-VIEW ...)
; compiling (DEFUN MODULE-EQ ...)
; compiling (DEFMACRO SAME-RENAMED-MODULE ...)
; compiling (DEFMACRO SAME-VIEW-MAPPING ...)
; compiling (DEFUN OUTER-EQUAL ...)
; compiling (DEFUN SAME-TOP-LEVEL ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/bview2.lisp
; in: DEFUN SAME-TOP-LEVEL
;     (EVERY #'EQL CHAOS::ME1 CHAOS::ME2)
; --> BLOCK SB-INT:DX-FLET FLET #:WRAPPER10 BLOCK LET FUNCALL SB-C::%FUNCALL 
; --> EQL IF 
; ==>
;   (EQL #:G7 #:G8)
; 
; note: forced to do IF-EQL (cost 15)
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 4) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       etc.

; compiling (DEFMACRO GET-RENAME-INFO ...)
; compiling (DEFUN CREATE-DUMMY-MODULE ...)
; compiling (DEFUN CREATE-DUMMY-MODULE-THEN-MAP ...)
; compiling (DEFUN MODULE-IS-RENAME-DUMMY-FOR ...)
; compiling (DEFUN IS-DUMMY-MODULE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bview2-tmpOUPE5FSJ.fasl
; compilation finished in 0:00:00.132
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/parse-modexp.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PARSE-MODEXP ...)
; compiling (DEFUN DO-PARSE-MODEXP ...)
; compiling (DEFUN PARSE-RENAME-OR-INST ...)
; compiling (DEFUN PARSE-MAP-BODY ...)
; compiling (DEFUN PARSE-MAP-ELT ...)
; compiling (DEFUN PARSE-INSTANTIATION ...)
; compiling (DECLAIM (SPECIAL *POSITIONAL-ARG-POS* ...))
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *POSITIONAL-ARG-POS* ...)
; compiling (DEFVAR *ARG-TYPE* ...)
; compiling (DEFUN MODEXP-PARSE-ARGS ...)
; compiling (DEFUN PARSE-INSTANTIATE-ARG-NAME ...)
; compiling (DEFUN MODEXP-PARSE-ARG ...)
; compiling (DEFUN PARSE-VIEW ...)
; compiling (DEFUN DO-PARSE-VIEW ...)
; compiling (DEFUN PARSE-VIEW-BODY ...)
; compiling (DEFUN PARSE-VIEW-ELT ...)
; compiling (DEFUN PARSE-SORT-REFERENCE ...)
; compiling (DEFUN DO-PARSE-SORT-REF ...)
; compiling (DEFUN PARSE-OPERATOR-REFERENCE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/parse-modexp.lisp
; in: DEFUN PARSE-OPERATOR-REFERENCE
;     (POSITION #\. CHAOS::MOD-REF)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (LENGTH CHAOS::MOD-REF)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ CHAOS::MOD-REF (1+ CHAOS::POS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN PARSE-OP-SIMPLE-NAME ...)
; compiling (DEFUN MODEXP-PARSE-PARAM-SPECN ...)
; compiling (DEFUN PARSE-BALANCED-CONTEXT ...)
; compiling (DEFUN PARSE-BALANCED-CONTEXT-ONE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/parse-modexp-tmpIGHCU6ZA.fasl
; compilation finished in 0:00:00.517
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/normodexp.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *MODEXP-NORMALIZED-TABLE* ...)
; compiling (DEFUN FIND-NORMALIZED-MODEXP ...)
; compiling (DEFUN ADD-MODEXP-NORMALIZED ...)
; compiling (DEFUN NORMALIZE-MODEXP ...)
; compiling (DEFUN CANONICALIZE-SIMPLE-MODULE-NAME ...)
; compiling (DEFUN DO-NORMALIZE-MODEXP ...)
; compiling (DEFUN NORMALIZE-RENAME ...)
; compiling (DEFUN NORMALIZE-PLUS ...)
; compiling (DEFUN NORMALIZE-INSTANTIATION ...)
; compiling (DEFUN NORMALIZE-INSTANTIATION-ARGS ...)
; compiling (DEFUN REORDER-MAPS ...)
; compiling (DEFUN NORMALIZE-RENAME-MAP ...)
; compiling (DEFUN NORMALIZE-VIEW ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/normodexp-tmpBO0TUGLK.fasl
; compilation finished in 0:00:00.075
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bsort.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (SORT-STRUCT # ...) ...)
; compiling (DEFMACRO SORT-MODULE ...)
; compiling (SETF (GET # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFMACRO SORT= ...)
; compiling (DECLAIM (INLINE VARIABLE-EQUAL))
; compiling (DEFUN VARIABLE-EQUAL ...)
; compiling (DECLAIM (INLINE VARIABLE=))
; compiling (DEFUN VARIABLE= ...)
; compiling (DECLAIM (INLINE VARIABLE-EQ))
; compiling (DEFUN VARIABLE-EQ ...)
; compiling (DEFSTRUCT (SORT* # ...))
; compiling (SETF (GET # ...) ...)
; compiling (DEFMACRO SORT-TYPE ...)
; compiling (DEFMACRO SORT-NAME ...)
; compiling (DEFMACRO SORT-IS-INHABITED ...)
; compiling (DEFMACRO SORT-IS-HIDDEN ...)
; compiling (DEFMACRO SORT-IS-VISIBLE ...)
; compiling (DEFMACRO SORT-VISIBLE-TYPE ...)
; compiling (DEFMACRO SORT-CONSTRUCTORS ...)
; compiling (DEFUN SORT-IS-DERIVED-FROM ...)
; compiling (DEFUN GET-ORIGINAL-SORT ...)
; compiling (DEFMACRO SORT-IS-USER-DEFINED? ...)
; compiling (DEFUN SORT-VISIBLE-TYPE-PRINT ...)
; compiling (DEFUN PRINT-SORT-OBJECT ...)
; compiling (DEFUN NEW-GENERAL-SORT ...)
; compiling (DEFVAR *SORT-TABLE* ...)
; compiling (DEFUN GET-SORT-NAMED ...)
; compiling (DEFUN CLEAR-TMP-SORT-CACHE ...)
; compiling (DEFUN REGISTER-SORT-CACHE ...)
; compiling (DEFSTRUCT (BSORT # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-BSORT-OBJECT ...)
; compiling (DEFUN NEW-BI-SORT ...)
; compiling (DEFMACRO SORT-IS-BUILTIN ...)
; compiling (DEFMACRO BSORT-TOKEN-PREDICATE ...)
; compiling (DEFMACRO BSORT-TERM-CREATOR ...)
; compiling (DEFMACRO BSORT-TERM-PRINTER ...)
; compiling (DEFMACRO BSORT-TERM-PREDICATE ...)
; compiling (DEFVAR *BUILTIN-SORT-TABLE* ...)
; compiling (DEFUN GET-BUILTIN-SORT-NAMED ...)
; compiling (DEFUN REGISTER-BUILTIN-SORT ...)
; compiling (DEFUN CLEAR-BUILTIN-SORTS ...)
; compiling (DEFSTRUCT (AND-SORT # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-AND-SORT-OBJECT ...)
; compiling (DEFUN NEW-AND-SORT ...)
; compiling (DEFSTRUCT (OR-SORT # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-OR-SORT-OBJECT ...)
; compiling (DEFUN NEW-OR-SORT ...)
; compiling (DEFSTRUCT (ERR-SORT # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-ERR-SORT-OBJECT ...)
; compiling (DEFUN NEW-ERR-SORT ...)
; compiling (DEFUN SORT=* ...)
; compiling (DEFMACRO SORT-SET-EQUAL ...)
; compiling (DEFMACRO SORT-LIST= ...)
; compiling (DEFMACRO MAKE-SORT-RELATION ...)
; compiling (DEFMACRO COPY-SORT-RELATION ...)
; compiling (DEFMACRO SORT-RELATION-SORT ...)
; compiling (DEFMACRO _SUBSORTS ...)
; compiling (DEFMACRO _SUPERSORTS ...)
; compiling (DEFMACRO _ERR-SORT ...)
; compiling (DEFUN ELIM-SYS-SORTS-FROM-RELATION ...)
; compiling (DEFTYPE SORT-ORDER ...)
; compiling (DEFUN ALLOCATE-SORT-ORDER ...)
; compiling (DEFUN CLEAR-SORT-ORDER ...)
; compiling (DEFMACRO GET-SORT-RELATION ...)
; compiling (DEFUN COPY-SORT-ORDER ...)
; compiling (DEFUN GET-ALL-SORTS ...)
; compiling (DEFMACRO SUBSORTS ...)
; compiling (DEFMACRO SUB-OR-EQUAL-SORTS ...)
; compiling (DEFMACRO SUPERSORTS ...)
; compiling (DEFMACRO SUPERSORTS-NO-ERR ...)
; compiling (DEFMACRO SUPER-OR-EQUAL-SORTS ...)
; compiling (DEFUN THE-ERR-SORT ...)
; compiling (DEFSETF THE-ERR-SORT ...)
; compiling (DECLAIM (INLINE SORT<))
; compiling (DEFUN SORT< ...)
; compiling (DECLAIM (INLINE SORT<*))
; compiling (DEFUN SORT<* ...)
; compiling (DEFMACRO SORT<= ...)
; compiling (DECLAIM (INLINE SORT<=*))
; compiling (DEFUN SORT<=* ...)
; compiling (DEFMACRO SORT-IS-IN ...)
; compiling (DECLAIM (INLINE SORT-LIST<=))
; compiling (DEFUN SORT-LIST<= ...)
; compiling (DECLAIM (INLINE SORT-LIST<=-ANY))
; compiling (DEFUN SORT-LIST<=-ANY ...)
; compiling (DECLAIM (INLINE SORT-LIST<))
; compiling (DEFUN SORT-LIST< ...)
; compiling (DEFUN ADD-SORT-TO-ORDER ...)
; compiling (DEFUN GATHER-CONNECTED-RELATIONS-FROM-ORDER ...)
; compiling (DEFUN ADD-RELATION-TO-ORDER ...)
; compiling (DEFUN MAX-MINORANTS ...)
; compiling (DEFUN MAXIMAL-SORTS ...)
; compiling (DEFUN MAXIMAL-SORTS-NO-ERROR ...)
; compiling (DEFUN MINIMAL-SORTS ...)
; compiling (DEFUN MEET-OF-SORTS ...)
; compiling (DEFUN MERGE-SORT-RELATIONS ...)
; compiling (DEFUN MERGE-SORT-ORDER ...)
; compiling (DEFUN MERGE-SORT-ORDER-NO-EXTRA ...)
; compiling (DECLAIM (INLINE IS-IN-SAME-CONNECTED-COMPONENT))
; compiling (DEFUN IS-IN-SAME-CONNECTED-COMPONENT ...)
; compiling (DECLAIM (INLINE COMPONENT-TOP))
; compiling (DEFUN COMPONENT-TOP ...)
; compiling (DECLAIM (INLINE HAVE-COMMON-SUBSORT))
; compiling (DEFUN HAVE-COMMON-SUBSORT ...)
; compiling (DECLAIM (INLINE IS-IN-SAME-CONNECTED-COMPONENT*))
; compiling (DEFUN IS-IN-SAME-CONNECTED-COMPONENT* ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/bsort.lisp
; in: DEFUN IS-IN-SAME-CONNECTED-COMPONENT*
;     (CHAOS::SUB-OR-EQUAL-SORTS CHAOS::S1 CHAOS::SO)
; --> LET IF CONS CHAOS::ERR-SORT-LOWERS SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF 
; --> THE 
; ==>
;   CHAOS::S1
; 
; note: deleting unreachable code

;     (CHAOS::SUB-OR-EQUAL-SORTS CHAOS::S2 CHAOS::SO)
; --> LET IF CONS CHAOS::ERR-SORT-LOWERS SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF 
; --> THE 
; ==>
;   CHAOS::S2
; 
; note: deleting unreachable code

; --> LET IF CONS 
; ==>
;   CHAOS::S2
; 
; note: deleting unreachable code

;     (CHAOS::SUB-OR-EQUAL-SORTS CHAOS::S1 CHAOS::SO)
; --> LET IF CONS 
; ==>
;   CHAOS::S1
; 
; note: deleting unreachable code

;     (CHAOS::HAVE-COMMON-SUBSORT CHAOS::S1 CHAOS::S2 CHAOS::SO)
; --> BLOCK LET CHAOS::SUBSORTS LET IF CHAOS::ERR-SORT-LOWERS SB-KERNEL:THE* 
; --> SB-KERNEL:%INSTANCE-REF THE 
; ==>
;   CHAOS::S1
; 
; note: deleting unreachable code

; ==>
;   CHAOS::S2
; 
; note: deleting unreachable code

; compiling (DECLAIM (INLINE ALL-SORTS-IN-ORDER))
; compiling (DEFUN ALL-SORTS-IN-ORDER ...)
; compiling (DECLAIM (INLINE TOP-COMPONENTS))
; compiling (DEFUN TOP-COMPONENTS ...)
; compiling (DECLAIM (INLINE BOTTOM-COMPONENTS))
; compiling (DEFUN BOTTOM-COMPONENTS ...)
; compiling (DECLAIM (INLINE DIRECT-SUBSORTS))
; compiling (DEFUN DIRECT-SUBSORTS ...)
; compiling (DECLAIM (INLINE DIRECT-SUPERSORTS))
; compiling (DEFUN DIRECT-SUPERSORTS ...)
; compiling (DECLAIM (INLINE DIRECT-SUPERSORTS-NO-ERR))
; compiling (DEFUN DIRECT-SUPERSORTS-NO-ERR ...)
; compiling (DECLAIM (INLINE SORT-RELATIONS-TRANSITIVE-CLOSURE))
; compiling (DEFUN SORT-RELATIONS-TRANSITIVE-CLOSURE ...)
; compiling (DEFUN SORT-RELATIONS-TRANSITIVE-CLOSURE1 ...)
; compiling (DEFUN CHECK-CYCLIC-SORT-ORDER ...)
; compiling (DEFUN CLEAR-ERR-SORTS ...)
; compiling (DEFUN GET-KINDS ...)
; compiling (DEFUN GET-ERR-SORTS ...)
; compiling (DEFUN GET-FAMILY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bsort-tmpIIXPIQNW.fasl
; compilation finished in 0:00:01.053
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp" (written 10 DEC 2019 02:26:49 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT OPSYNTAX ...)
; compiling (DEFSTRUCT (OPERATOR # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-OPERATOR-OBJECT ...)
; compiling (DEFMACRO OPERATOR-MODULE ...)
; compiling (DEFMACRO OPERATOR-SYMBOL ...)
; compiling (DEFMACRO OPERATOR-NUM-ARGS ...)
; compiling (DEFMACRO OPERATOR-ID ...)
; compiling (DEFMACRO OPERATOR-MODULE-ID ...)
; compiling (DEFMACRO OPERATOR-REWRITE-STRATEGY ...)
; compiling (DEFUN EXPLODE-OPERATOR-NAME ...)
; compiling (DEFUN MAKE-OPERATOR-TOKEN-SEQ ...)
; compiling (DEFUN OPERATOR-SYNTACTIC-TYPE-FROM-NAME ...)
; compiling (DEFMACRO OPERATOR= ...)
; compiling (DEFMACRO OPERATOR-EQL ...)
; compiling (DEFMACRO OPERATOR-EQUAL ...)
; compiling (DEFMACRO OPERATOR-IS-BEHAVIOURAL ...)
; compiling (DEFVAR *OPNAME-TABLE* ...)
; compiling (DEFUN CANONICALIZE-OP-NAME ...)
; compiling (DEFUN ALLOCATE-OPERATOR ...)
; compiling (DEFUN NEW-OPERATOR ...)
; compiling (DEFMACRO OPERATOR-TOKEN-SEQUENCE ...)
; compiling (DEFMACRO OPERATOR-IS-MIXFIX ...)
; compiling (DEFMACRO OPERATOR-SYNTACTIC-TYPE ...)
; compiling (DEFMACRO OPERATOR-PRECEDENCE ...)
; compiling (DEFMACRO OPERATOR-COMPUTED-PRECEDENCE ...)
; compiling (DEFMACRO OPERATOR-ASSOCIATIVITY ...)
; compiling (DEFUN MAKE-PRINT-OPERATOR-ID ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN MAKE-PRINT-OPERATOR-ID
;     (STRING CHAOS::A)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a STRING.

;     (STRING CHAOS::B)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a STRING.

; compiling (DEFUN CMAKE-OPERATOR-PRINT-NAME ...)
; compiling (DEFUN MAKE-OPINFO ...)
; compiling (DEFUN OPINFO-P ...)
; compiling (DEFMACRO OPINFO-OPERATOR ...)
; compiling (DEFMACRO OPINFO-METHODS ...)
; compiling (DEFMACRO OPINFO-METHOD-TABLE ...)
; compiling (DEFMACRO GET-OPERATOR-INFO ...)
; compiling (DEFMACRO OPERATOR-METHODS ...)
; compiling (DEFMACRO OPERATOR-METHOD-TABLE ...)
; compiling (DEFMACRO OPERATOR-THEORY-INFO ...)
; compiling (DEFMACRO OPERATOR-IS-ASSOCIATIVE ...)
; compiling (DEFMACRO OPERATOR-IS-IDENTITY ...)
; compiling (DEFMACRO OPERATOR-IS-COMMUTATIVE ...)
; compiling (DEFSTRUCT (METHOD # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-METHOD-OBJECT ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN PRINT-METHOD-OBJECT
;     (FORMAT STREAM ":op[~a]" (CHAOS::METHOD-NAME CHAOS::OBJ))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$:op[~a]"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING ":op[" STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\] STREAM))
;             NIL)
;           #:G7)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFMACRO CREATE-OPERATOR-METHOD ...)
; compiling (DEFMACRO OPERATOR-METHOD-P ...)
; compiling (DEFMACRO METHOD-MODULE ...)
; compiling (DEFMACRO METHOD-SYMBOL ...)
; compiling (DEFMACRO METHOD-NUM-ARGS ...)
; compiling (DEFMACRO METHOD-IS-BEHAVIOURAL ...)
; compiling (DEFMACRO METHOD-IS-USER-DEFINED-ERROR-METHOD ...)
; compiling (DEFMACRO METHOD-IS-FOR-CR ...)
; compiling (DEFUN METHOD-IS-DERIVED-FROM ...)
; compiling (DEFMACRO METHOD-IS-CONSTRUCTOR? ...)
; compiling (DEFMACRO METHOD-IS-META-DEMOD ...)
; compiling (DECLAIM (INLINE ALLOCATE-OPERATOR-METHOD))
; compiling (DEFUN ALLOCATE-OPERATOR-METHOD ...)
; compiling (DEFUN MAKE-METHOD-ID-SYMBOL ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN MAKE-METHOD-ID-SYMBOL
;     (FIND-IF #'(LAMBDA (CHAOS::X) (STRING= CHAOS::X "_")) (CAR CHAOS::NAM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (STRING= CHAOS::X "_")
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SIMPLE-STRING.

; compiling (DECLAIM (INLINE MAKE-OPERATOR-METHOD))
; compiling (DEFUN MAKE-OPERATOR-METHOD ...)
; compiling (DEFMACRO METHOD-EQUAL ...)
; compiling (DEFMACRO METHOD= ...)
; compiling (DEFUN METHOD-W= ...)
; compiling (DEFMACRO METHOD-HAS-SAME-NAME ...)
; compiling (DECLAIM (INLINE METHOD-IS-OF-SAME-OPERATOR))
; compiling (DEFUN METHOD-IS-OF-SAME-OPERATOR ...)
; compiling (DEFMACRO METHOD-IS-OF-SAME-OPERATOR+ ...)
; compiling (DECLAIM (INLINE METHOD-IS-PREDICATE))
; compiling (DEFUN METHOD-IS-PREDICATE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN METHOD-IS-PREDICATE
;     (MEMBER CHAOS::*BOOL-SORT* (CHAOS::METHOD-ARITY CHAOS::METHOD))
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN FIND-METHOD-IN-METHOD-LIST ...)
; compiling (DEFSTRUCT (!METHOD-INFO # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DECLAIM (INLINE GET-METHOD-INFO))
; compiling (DEFUN GET-METHOD-INFO ...)
; compiling (DEFSETF GET-METHOD-INFO ...)
; compiling (DEFMACRO METHOD-OPERATOR ...)
; compiling (DEFMACRO METHOD-THEORY ...)
; compiling (DEFMACRO METHOD-THEORY-INFO-FOR-MATCHING ...)
; compiling (DEFMACRO METHOD-LOWER-METHODS ...)
; compiling (DEFMACRO METHOD-OVERLOADED-METHODS ...)
; compiling (DEFMACRO METHOD-RULES-WITH-SAME-TOP ...)
; compiling (DEFMACRO METHOD-RULES-WITH-DIFFERENT-TOP ...)
; compiling (DEFMACRO METHOD-MACROS ...)
; compiling (DEFMACRO METHOD-RULES ...)
; compiling (DEFMACRO METHOD-STRICTLY-OVERLOADED ...)
; compiling (DEFMACRO METHOD-REW-STRATEGY ...)
; compiling (DEFMACRO METHOD-REWRITE-STRATEGY ...)
; compiling (DEFMACRO METHOD-HAS-TRANS-RULE ...)
; compiling (DEFMACRO METHOD-IS-COHERENT ...)
; compiling (DEFMACRO METHOD-COHERENT ...)
; compiling (DEFUN ALLOCATE-METHOD-INFO ...)
; compiling (DEFUN MAKE-METHOD-INFO ...)
; compiling (DEFUN COMPUTE-METHOD-THEORY-INFO-FOR-MATCHING ...)
; compiling (DEFUN GET-METHOD-PRECEDENCE ...)
; compiling (DEFPARAMETER .DEFAULT-PREC. ...)
; compiling (DEFPARAMETER .DEFAULT-UNARY-PREC. ...)
; compiling (DEFUN COMPUTE-OPERATOR-PRECEDENCE ...)
; compiling (DEFSTRUCT (RULE-RING #) ...)
; compiling (DEFUN CREATE-RULE-RING ...)
; compiling (DEFUN ADD-RULE-TO-RING ...)
; compiling (DECLAIM (INLINE INITIALIZE-RULE-RING))
; compiling (DEFUN INITIALIZE-RULE-RING ...)
; compiling (DECLAIM (INLINE RULE-RING-SET-MARK))
; compiling (DEFUN RULE-RING-SET-MARK ...)
; compiling (DECLAIM (INLINE RULE-RING-NEXT))
; compiling (DEFUN RULE-RING-NEXT ...)
; compiling (DECLAIM (INLINE END-OF-RULE-RING))
; compiling (DEFUN END-OF-RULE-RING ...)
; compiling (DECLAIM (INLINE RULE-RING-IS-EMPTY))
; compiling (DEFUN RULE-RING-IS-EMPTY ...)
; compiling (DECLAIM (INLINE RULE-RING-TO-LIST))
; compiling (DEFUN RULE-RING-TO-LIST ...)
; compiling (DEFUN COPY-RULE-RING ...)
; compiling (DEFUN METHOD-IS-ERROR-METHOD ...)
; compiling (DEFUN METHOD-IS-UNIVERSAL ...)
; compiling (DEFUN METHOD-IS-UNIVERSAL* ...)
; compiling (DECLAIM (INLINE METHOD-IS-ASSOCIATIVE))
; compiling (DEFUN METHOD-IS-ASSOCIATIVE ...)
; compiling (DECLAIM (INLINE METHOD-IS-IDENTITY))
; compiling (DEFUN METHOD-IS-IDENTITY ...)
; compiling (DECLAIM (INLINE METHOD-IS-COMMUTATIVE))
; compiling (DEFUN METHOD-IS-COMMUTATIVE ...)
; compiling (DECLAIM (INLINE METHOD-IS-IDEMPOTENT))
; compiling (DEFUN METHOD-IS-IDEMPOTENT ...)
; compiling (DEFUN METHOD-IS-OVERLOADED-WITH ...)
; compiling (DEFUN METHOD-IS-IN-SAME-COMPONENT ...)
; compiling (DEFUN METHOD-IS-INSTANCE-OF ...)
; compiling (DEFUN METHOD-IS-SAME-QUAL-METHOD ...)
; compiling (DEFUN METHOD<= ...)
; compiling (DEFUN METHOD-IS-RESTRICTION-OF ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN METHOD-IS-RESTRICTION-OF
;     (BREAK "HiGo")
; ==>
;   "HiGo"
; 
; note: deleting unreachable code

; compiling (DECLAIM (INLINE METHOD-IS-ASSOCIATIVE-RESTRICTION-OF))
; compiling (DEFUN METHOD-IS-ASSOCIATIVE-RESTRICTION-OF ...)
; compiling (DECLAIM (INLINE METHOD-IS-AC-RESTRICTION-OF))
; compiling (DEFUN METHOD-IS-AC-RESTRICTION-OF ...)
; compiling (DECLAIM (INLINE METHOD-IS-COMMUTATIVE-RESTRICTION-OF))
; compiling (DEFUN METHOD-IS-COMMUTATIVE-RESTRICTION-OF ...)
; compiling (DEFUN METHOD-IS-OVERLOADED-WITH-AC-ATTRIBUTE ...)
; compiling (DEFUN GREATEST-AC-METHOD-LESS-THAN ...)
; compiling (DEFUN LIST-ASSOCIATIVE-METHOD-ABOVE ...)
; compiling (DEFUN HIGHEST-METHODS-BELOW ...)
; compiling (DEFUN GET-DEFAULT-METHODS ...)
; compiling (DEFUN LOWEST-METHOD-DIRECT ...)
; compiling (DEFUN HIGHEST-METHOD-DIRECT ...)
; compiling (DEFUN STRICT-LOWER-COARITIES-DIRECT ...)
; compiling (DEFUN CHOOSE-MOST-GENERAL-OP ...)
; compiling (DEFUN CHOOSE-LOWEST-OP ...)
; compiling (DEFUN LOWEST-METHOD ...)
; compiling (DEFUN LOWEST-METHOD! ...)
; compiling (DEFUN LOWEST-METHOD* ...)
; compiling (DEFUN HIGHEST-METHOD ...)
; compiling (DEFUN GET-STRICT-LOWER-COARITIES ...)
; compiling (DEFUN METHOD-ALL-RULES ...)
; compiling (DEFUN MAKE-OPERATOR-INTERNAL ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/boperator.lisp
; in: DEFUN MAKE-OPERATOR-INTERNAL
;     (INCF CHAOS::T-CNT)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::T-CNT)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (> CHAOS::T-CNT 0)
; 
; note: forced to do FAST-IF->-ZERO (cost 8)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/boperator-tmpOHM494YR.fasl
; compilation finished in 0:00:01.425
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/baxioms.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (REWRITE-RULE # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-RULE-OBJECT ...)
; compiling (DEFMACRO RULE-TYPE ...)
; compiling (DEFMACRO RULE-IS-RULE ...)
; compiling (DEFMACRO RULE-IS-EQUATION ...)
; compiling (DEFMACRO RULE-LHS ...)
; compiling (DEFMACRO RULE-RHS ...)
; compiling (DEFMACRO RULE-CONDITION ...)
; compiling (DEFMACRO RULE-ID-CONDITION ...)
; compiling (DEFMACRO RULE-FIRST-MATCH-METHOD ...)
; compiling (DEFMACRO RULE-NEXT-MATCH-METHOD ...)
; compiling (DEFMACRO RULE-LABELS ...)
; compiling (DEFMACRO RULE-IS-BEHAVIOURAL ...)
; compiling (DEFMACRO RULE-TRACE-FLAG ...)
; compiling (DEFMACRO RULE-NEED-COPY ...)
; compiling (DEFMACRO RULE-NON-EXEC ...)
; compiling (DEFMACRO RULE-META-AND-OR ...)
; compiling (DEFSTRUCT (EX-REWRITE-RULE # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFMACRO RULE-EXTENSIONS ...)
; compiling (DEFMACRO CREATE-REWRITE-RULE ...)
; compiling (DEFSTRUCT (AXIOM # ...) ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-AXIOM-OBJECT ...)
; compiling (DEFMACRO AXIOM-IS-BEHAVIOURAL ...)
; compiling (DEFMACRO AXIOM-IS-FOR-CR ...)
; compiling (DEFMACRO AXIOM-CONTAINS-MATCH-OP ...)
; compiling (DEFUN AXIOM-EXTENSIONS ...)
; compiling (DEFSETF AXIOM-EXTENSIONS ...)
; compiling (DEFMACRO AXIOM-AC-EXTENSION ...)
; compiling (DEFMACRO AXIOM-A-EXTENSIONS ...)
; compiling (DEFMACRO !AXIOM-AC-EXTENSION ...)
; compiling (DEFMACRO !AXIOM-A-EXTENSIONS ...)
; compiling (DEFUN CREATE-AXIOM ...)
; compiling (DEFMACRO RULE-IS-BUILTIN ...)
; compiling (DEFUN AXIOM-CONTAINS-ERROR-METHOD? ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/baxioms-tmpOVFB07XF.fasl
; compilation finished in 0:00:00.348
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/bmacro.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (MACRO #) ...)
; compiling (DEFUN PRINT-MACRO ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/bmacro-tmpG6VFGMYP.fasl
; compilation finished in 0:00:00.045
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/gen-eval.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *DRIBBLE-AST* ...))
; compiling (DEFVAR *DRIBBLE-AST* ...)
; compiling (DEFVAR *DRIBBLE-STREAM* ...)
; compiling (DEFVAR *AST-LOG* ...)
; compiling (DEFVAR *NO-LOG-PARAMETER* ...)
; compiling (DECLAIM (SPECIAL *EVAL-AST*))
; compiling (DEFVAR *EVAL-AST* ...)
; compiling (DEFUN AST-TO-BE-DRIBBLED? ...)
; compiling (DEFUN EVAL-AST ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-eval.lisp
; in: DEFUN EVAL-AST
;     (STRING CHAOS::MODULE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT NULL) SYMBOL) CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT NULL) SYMBOL) CHARACTER), not a STRING.

;     (FUNCALL CHAOS::EVALUATOR CHAOS::AST)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::EVALUATOR)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   EVALUATOR is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   EVALUATOR is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   EVALUATOR is not known to be a function

; compiling (DEFUN EVAL-SEQ ...)
; compiling (DEFUN EVAL-AST2 ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/gen-eval-tmp4QIPRMOF.fasl
; compilation finished in 0:00:00.059
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/meta.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFUN CLEAR-METALEVEL-SORT ...)
; compiling (DEFUN REGISTER-METALEVEL-SORT ...)
; compiling (CLEAR-METALEVEL-SORT)
; compiling (DEFSTRUCT (CHAOS-LIST #) ...)
; compiling (DEFPARAMETER *CHAOS-NULL* ...)
; compiling (DEFUN MNTH ...)
; compiling (DEFUN MNTHCDR ...)
; compiling (DEFUN MLENGTH ...)
; compiling (DEFUN PR-CHAOS-LIST ...)
; compiling (DEFUN MAKE-META-TERM ...)
; compiling (DEFUN META-TERM-TERM ...)
; compiling (DEFSTRUCT (SUBST* #) ...)
; compiling (DEFUN CREATE-NEW-SUBST ...)
; compiling (DEFUN PR-SUBST ...)
; compiling (DEFUN CREATE-SYSTEM-OBJECT-TERM ...)
; compiling (DEFUN MSUBTERMS ...)
; compiling (DEFUN MTERM-SORT ...)
; compiling (DEFUN CREATE-LIST-OF-OBJECTS ...)
; compiling (DEFUN DO-APPLY!! ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/meta.lisp
; in: DEFUN DO-APPLY!!
;     (CHAOS::CREATE-SYSTEM-OBJECT-TERM NIL)
; 
; note: deleting unreachable code

; compiling (DEFUN DO-APPLY! ...)
; compiling (DEFUN CREATE-CHAOS-LIST ...)
; compiling (DEFUN BVALUE ...)
; compiling (DEFUN SORT-COMPARE ...)
; compiling (DEFUN IN-SAME-CC ...)
; compiling (DEFUN META-GET-CONTEXT-MODULE ...)
; compiling (DEFUN META-GET-TERM ...)
; compiling (DEFUN META-GET-INTEGER ...)
; compiling (DEFUN META-GET-LIST-INTEGERS ...)
; compiling (DEFVAR *META-MATCH-DEPTH* ...)
; compiling (DEFVAR *USE-CHOOSE-MATCH* ...)
; compiling (DEFUN DO-META-MATCH ...)
; compiling (DEFUN META-SUBST-IMAGE ...)
; compiling (DEFUN META-GET-OCCUR ...)
; compiling (DEFUN META-OCCUR-AT ...)
; compiling (DEFUN SUBTERM-OP ...)
; compiling (DEFUN PERFORM-META-MATCH* ...)
; compiling (DEFUN CHECK-RWL-COHERENCY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/meta-tmpGW0QV22K.fasl
; compilation finished in 0:00:00.381
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp" (written 30 SEP 2019 05:33:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *CURRENT-TERM-DEPTH*) ...)
; compiling (DEFVAR *CURRENT-TERM-DEPTH* ...)
; compiling (DECLAIM (SPECIAL .PRINTED-VARS-SO-FAR.))
; compiling (DEFVAR .PRINTED-VARS-SO-FAR. ...)
; compiling (DECLAIM (SPECIAL **PRINT-VAR-SORT**) ...)
; compiling (DEFVAR **PRINT-VAR-SORT** ...)
; compiling (DEFUN PRINT-VARIABLE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN PRINT-VARIABLE
;     (STRING (CHAOS::VARIABLE$PRINT-NAME CHAOS::BODY))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-AST-VD ...)
; compiling (DEFVAR *PRINT-TERM-COLOR* ...)
; compiling (DEFUN PVARIABLE-TERM? ...)
; compiling (DEFUN PVARIABLE-TERM-BODY? ...)
; compiling (DEFUN VARIABLE-PRINT-STRING ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN VARIABLE-PRINT-STRING
;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN BCONST-PRINT-STRING ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN BCONST-PRINT-STRING
;     (FUNCALL (CHAOS::BSORT-TERM-PRINTER (CHAOS::TERM-SORT CHAOS::TERM))
;              CHAOS::VAL)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::BSORT-TERM-PRINTER (CHAOS::TERM-SORT CHAOS::TERM)))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN TERM-TO-SEXPR ...)
; compiling (DECLAIM (INLINE IS-SELF-TERMINATING))
; compiling (DEFUN IS-SELF-TERMINATING ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN IS-SELF-TERMINATING
;     (CHAR CHAOS::TOK 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFUN TERM-PRINT1 ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN TERM-PRINT1
;     (STRING CHAOS::I)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT (MEMBER T)) SYMBOL)
;                               CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT (MEMBER T)) SYMBOL)
;                               CHARACTER), not a STRING.

; compiling (DEFUN TERM-PRINT2 ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN TERM-PRINT2
;     (STRING CHAOS::I)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT (MEMBER T)) SYMBOL)
;                               CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               (AND (NOT (MEMBER T)) SYMBOL)
;                               CHARACTER), not a STRING.

;     (<= CHAOS::PREC (CHAOS::GET-METHOD-PRECEDENCE CHAOS::HD))
; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

;     (* CHAOS::X 15)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER * 4611686018427387900), not a FIXNUM.
;       The result is a (VALUES (INTEGER * 69175290276410818500) &OPTIONAL), not a (VALUES
;                                                                                   FIXNUM
;                                                                                   &REST
;                                                                                   T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER * 4611686018427387900), not a FIXNUM.
;       The result is a (VALUES (INTEGER * 69175290276410818500) &OPTIONAL), not a (VALUES
;                                                                                   FIXNUM
;                                                                                   &REST
;                                                                                   T).
;       etc.

;     (1- CHAOS::X)
; ==>
;   (- CHAOS::X 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER * 4611686018427387900), not a FIXNUM.
;       The result is a (VALUES (INTEGER * 4611686018427387899) &OPTIONAL), not a (VALUES
;                                                                                  FIXNUM
;                                                                                  &REST
;                                                                                  T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER * 4611686018427387900), not a FIXNUM.
;       The result is a (VALUES (INTEGER * 4611686018427387899) &OPTIONAL), not a (VALUES
;                                                                                  FIXNUM
;                                                                                  &REST
;                                                                                  T).
;       etc.

; compiling (DEFUN TERM-PRINT ...)
; compiling (DEFUN TERM-PRINT-WITH-SORT ...)
; compiling (DEFUN TERM-PRINT-WITH-SORT-STRING ...)
; compiling (DEFUN PRINT-TERM-SEQ ...)
; compiling (DEFVAR *SHOW-SORT* ...)
; compiling (DEFUN PRINT-TERM-TREE ...)
; compiling (DEFUN PRINT-TERM-GRAPH ...)
; compiling (DEFUN !PRINT-TERM-TREE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN !PRINT-TERM-TREE
;     (IF SORT
;         (CHAOS::SORT-ID SORT)
;         "unknown")
; ==>
;   "unknown"
; 
; note: deleting unreachable code

;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN PRINT-AST ...)
; compiling (DEFUN PRINT-CHAOS-OBJECT ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/gen-print.lisp
; in: DEFUN PRINT-CHAOS-OBJECT
;     (FUNCALL CHAOS::PRINTER CHAOS::OBJECT STREAM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

;     (FORMAT STREAM "~%-- delcrations -------------------")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%-- delcrations -------------------"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; -- delcrations -------------------"
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.

; compiling (DEFUN PRINT-OBJ-LIST ...)
; compiling (DEFUN PRINT-THEORY-BRIEF ...)
; compiling (DEFUN PRINT-THEORY ...)
; compiling (DEFUN PRINT-THEORY-INFO ...)
; compiling (DEFUN PRINT-SIMPLE-PRINC-FLAT ...)
; compiling (DEFUN DUMP-CHAOS-HASH ...)
; compiling (DEFUN DUMP-CHAOS-ASSOC-TABLE ...)
; compiling (DEFUN DUMP-MODEXP-LOCAL ...)
; compiling (DEFUN DUMP-MODULES-SO-FAR ...)
; compiling (DEFUN DUMP-MODEXP-EVAL ...)
; compiling (DEFUN DUMP-MODEXP-VIEW ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/gen-print-tmp2K9J0HSR.fasl
; compilation finished in 0:00:00.537
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/context.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN GET-CONTEXT ...)
; compiling (DEFUN IS-SPECIAL-LET-VARIABLE? ...)
; compiling (DEFUN CHECK-$$TERM-CONTEXT ...)
; compiling (DEFUN GET-BOUND-VALUE ...)
; compiling (DEFUN SET-BOUND-VALUE ...)
; compiling (DEFUN SAVE-CONTEXT ...)
; compiling (DEFUN NEW-CONTEXT ...)
; compiling (DEFUN CHANGE-CONTEXT ...)
; compiling (DEFUN RESET-TARGET-TERM ...)
; compiling (DEFUN CONTEXT-PUSH ...)
; compiling (DEFUN CONTEXT-POP ...)
; compiling (DEFUN CONTEXT-PUSH-AND-MOVE ...)
; compiling (DEFUN CONTEXT-POP-AND-RECOVER ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/context-tmpP44I4E0Y.fasl
; compilation finished in 0:00:00.051
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR **SA-DEBUG** ...)
; compiling (DECLAIM (INLINE MAKE-TERM-WITH-SORT-CHECK))
; compiling (DEFUN MAKE-TERM-WITH-SORT-CHECK ...)
; compiling (DEFUN MAKE-TERM-WITH-SORT-CHECK-BIN ...)
; compiling (DECLAIM (INLINE MAKE-TERM-CHECK-OP))
; compiling (DEFUN MAKE-TERM-CHECK-OP ...)
; compiling (DEFUN MAKE-TERM-CHECK-OP-WITH-SORT-CHECK ...)
; compiling (DECLAIM (INLINE MAKE-APPL-FORM))
; compiling (DEFUN MAKE-APPLFORM ...)
; compiling (DEFUN RESET-REDUCED-FLAG ...)
; compiling (DEFTYPE SUBSTITUTION ...)
; compiling (DEFMACRO SUBSTITUTION-CREATE ...)
; compiling (DEFMACRO SUBSTITUTION-BINDINGS ...)
; compiling (DEFMACRO ASSOC-IN-SUBSTITUTION ...)
; compiling (DEFMACRO CREATE-EMPTY-SUBSTITUTION ...)
; compiling (DECLAIM (INLINE NEW-SUBSTITUTION))
; compiling (DEFUN NEW-SUBSTITUTION ...)
; compiling (DEFMACRO SUBSTITUTION-COPY ...)
; compiling (DEFMACRO SUBSTITUTION-IS-EMPTY ...)
; compiling (DEFMACRO SUBSTITUTION-DOMAIN ...)
; compiling (DEFMACRO VARIABLE-IMAGE ...)
; compiling (DEFMACRO VARIABLE-IMAGE-FAST ...)
; compiling (DEFMACRO VARIABLE-IMAGE-SLOW ...)
; compiling (DEFMACRO SUBSTITUTION-LIST-OF-PAIRS ...)
; compiling (DEFMACRO SUBSTITUTION-ADD ...)
; compiling (DEFMACRO SUBSTITUTION-DELETE ...)
; compiling (DEFMACRO SUBSTITUTION-CHANGE ...)
; compiling (DEFMACRO SUBSTITUTION-SET ...)
; compiling (DEFUN CANONICALIZE-SUBSTITUTION ...)
; compiling (DEFUN SUBSTITUTION-EQUAL ...)
; compiling (DEFUN SUBSTITUTION-RESTRICT ...)
; compiling (DEFUN SUBSTITUTION-SUBSET ...)
; compiling (DEFUN SUBSTITUTION-SUBSET-LIST ...)
; compiling (DEFUN SUBSTITUTION-DOMAIN-RESTRICTION ...)
; compiling (DEFUN SUBSTITUTION-UNION ...)
; compiling (DEFUN SUBSTITUTION-COMPOSIT ...)
; compiling (DEFMACRO SUBSTITUTION-FOREACH ...)
; compiling (DEFUN SUBSTITUTION-CHECK-BUILT-IN ...)
; compiling (DEFUN SUBSTITUTION-COMPOSE ...)
; compiling (DEFUN SUBSTITUTION-COMPOSE-CHAOS ...)
; compiling (DEFUN SUBSTITUTION-IMAGE-NO-COPY ...)
; compiling (DEFUN SUBSTITUTION-CAN ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN SUBSTITUTION-CAN
;     (STRING (CHAOS::VARIABLE-NAME (CAR CHAOS::X)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME (CAR CHAOS::Y)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN SUBSTITUTION-SIMPLE-IMAGE ...)
; compiling (DEFVAR *VARIABLE-AS-CONSTANT* ...)
; compiling (DEFUN MAKE-PCONST-FROM-VAR ...)
; compiling (DEFUN VARIABLES->PCONSTANTS ...)
; compiling (DEFUN REVERT-PCONSTANTS ...)
; compiling (DEFMACRO WITH-VARIABLE-AS-CONSTANT ...)
; compiling (DEFUN TERM-IS-AN-ERROR ...)
; compiling (DEFUN TERM-HEAD-IS-ERROR ...)
; compiling (DEFUN TERM-HEAD-IS-USER-DEFINED-ERROR ...)
; compiling (DEFUN TERM-IS-REALLY-WELL-DEFINED ...)
; compiling (DEFUN MAKE-DIRECTLY-ILL-TERM ...)
; compiling (DEFUN MAKE-INHERITEDLY-ILL-TERM ...)
; compiling (DEFUN TERM-ERROR-OPERATORS&VARIABLES ...)
; compiling (DEFUN GATHER-ERROR-METHODS-AND-VARIABLES ...)
; compiling (DEFUN TERM-CONTAINS-ERROR-METHOD ...)
; compiling (DEFUN TERM-CONTAINS-USER-DEFINED-ERROR-METHOD ...)
; compiling (DEFUN TERM-CONTAINS-MATCH-OP ...)
; compiling (DEFUN TERM-CONTAINS-SP-SCH-PREDICATE ...)
; compiling (DEFUN SET-IF-THEN-ELSE-SORT ...)
; compiling (DEFUN SELECT-IF-THEN-LEAST ...)
; compiling (DECLAIM (SPECIAL *UPDATE-LOWEST-PARSE-IN-PROGRESS*))
; compiling (DEFVAR *UPDATE-LOWEST-PARSE-IN-PROGRESS* ...)
; compiling (DEFVAR *DO-ASSOC-ARRANGEMENT* ...)
; compiling (DEFUN UPDATE-LOWEST-PARSE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN UPDATE-LOWEST-PARSE
;     (FUNCALL (CHAOS::BSORT-TERM-PREDICATE CHAOS::S) CHAOS::VAL)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::BSORT-TERM-PREDICATE CHAOS::S))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFMACRO IS-TRUE? ...)
; compiling (DEFMACRO IS-FALSE? ...)
; compiling (DEFUN TERM-IS-ZERO-FOR-METHOD ...)
; compiling (DEFUN TERM-OP-CONTAINS-THEORY ...)
; compiling (DEFUN TERM-IS-CONGRUENT? ...)
; compiling (DEFVAR *USED==* ...)
; compiling (DEFUN MATCH-WITH-EMPTY-THEORY ...)
; compiling (DEFUN TERM-EQUATIONAL-EQUAL ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN TERM-EQUATIONAL-EQUAL
;     (CHAOS::E-EQUAL-IN-THEORY (CHAOS::METHOD-THEORY CHAOS::F1) CHAOS::T1
;                               CHAOS::T2)
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-EQUAL-FUN
;     (CHAOS::THEORY-INFO (CHAOS::METHOD-THEORY CHAOS::F1))))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN TERM-IS-SIMILAR? ...)
; compiling (DEFUN LIST-ASSOC-SUBTERMS-AUX ...)
; compiling (DEFUN LIST-ASSOC-SUBTERMS ...)
; compiling (DEFUN LIST-ASSOC-ID-SUBTERMS ...)
; compiling (DEFUN LIST-ASSOC-ID-SUBTERMS-AUX ...)
; compiling (DEFUN LIST-AC-SUBTERMS-AUX ...)
; compiling (DEFUN LIST-AC-SUBTERMS ...)
; compiling (DEFUN GATHER-TERM-AC-LEAF-ORDERED ...)
; compiling (DEFUN LIST-ACZ-SUBTERMS-AUX ...)
; compiling (DEFUN LIST-ACZ-SUBTERMS ...)
; compiling (DEFUN MAKE-RIGHT-ASSOC-NORMAL-FORM ...)
; compiling (DEFUN MAKE-RIGHT-ASSOC-NORMAL-FORM-WITH-SORT-CHECK ...)
; compiling (DEFUN RIGHT-ASSOCIATIVE-NORMAL-FORM ...)
; compiling (DEFUN RIGHT-ASSOCIATIVE-ID-NORMAL-FORM ...)
; compiling (DEFUN ID-NORMAL-FORM ...)
; compiling (DEFUN MAKE-RIGHT-ASSOC-ID-NORMAL-FORM ...)
; compiling (DEFUN FILTER-ZERO ...)
; compiling (DEFUN TERM-COPY-AND-RETURNS-LIST-VARIABLES ...)
; compiling (DEFUN COPY-LIST-TERM-USING-LIST-VAR ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN COPY-LIST-TERM-USING-LIST-VAR
;     (ASSOC CHAOS::TERM CHAOS::LIST-NEW-VAR :TEST CHAOS::TEST)
; --> SB-KERNEL:%ASSOC-TEST 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-TO-FUN SB-C::TEST)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TEST is not known to be a function

; compiling (DEFUN COPY-TERM-USING-VARIABLE ...)
; compiling (DEFUN THEORY-STANDARD-FORM ...)
; compiling (DEFUN A-IDEMPOTENT-NORMAL-FORM ...)
; compiling (DEFUN AC-IDEMPOTENT-NORMAL-FORM ...)
; compiling (DEFUN GET-TERM-ALL-METHODS ...)
; compiling (DEFUN TERM-HEADS ...)
; compiling (DEFMACRO TERM-OPERATORS ...)
; compiling (DEFUN CLEAN-TERM ...)
; compiling (DEFUN TERM-MAKE-ZERO ...)
; compiling (DEFUN SUPPLY-PCONSTANTS ...)
; compiling (DEFUN TERM-IS-OF-FUNCTIONAL? ...)
; compiling (DEFUN TERM-IS-OF-BEHAVIOURAL? ...)
; compiling (DEFUN TERM-IS-OF-BEHAVIOURAL*? ...)
; compiling (DEFUN TERM-IS-BEHAVIOURAL? ...)
; compiling (DEFUN TERM-CAN-BE-IN-BEH-AXIOM? ...)
; compiling (DEFUN TERM-IS-NON-BEHAVIOURAL? ...)
; compiling (DEFUN TERM-IS-CONSTRUCTOR? ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *VAR-NUM*)
; compiling (LET (#) ...)
; compiling (DEFUN INSPECT-TERM ...)
; compiling (DEFUN REPLACE-VARIABLES-WITH-TOC ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN REPLACE-VARIABLES-WITH-TOC
;     (FORMAT T WARN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a STRING, not a SIMPLE-STRING.

;     (ASSOC CHAOS::VAR SUBST)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN CANONICALIZE-VARIABLES ...)
; compiling (DEFUN PRINT-TERM-STRUCT ...)
; compiling (DEFUN SUBSTITUTION-IMAGE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN SUBSTITUTION-IMAGE
;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN SUBSTITUTION-IMAGE! ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN SUBSTITUTION-IMAGE!
;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN SUBSTITUTION-IMAGE-CP ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN SUBSTITUTION-IMAGE-CP
;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN SUBSTITUTION-PARTIAL-IMAGE ...)
; compiling (DEFUN SUBSTITUTION-IMAGE-SIMPLIFYING ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/term-utils.lisp
; in: DEFUN SUBSTITUTION-IMAGE-SIMPLIFYING
;     (FUNCALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CHAOS-FORM-EXPR CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/term-utils-tmp63LQ7EX6.fasl
; compilation finished in 0:00:01.622
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/find.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN FIND-MODULE-OR-ERROR ...)
; compiling (DEFUN SORT-NAME-IS-AMBIGUOUS ...)
; compiling (DEFUN SORT-IS-AMBIGUOUS ...)
; compiling (DEFUN FIND-SORTS-IN-MODULE ...)
; compiling (DEFUN CHECK-QUALIFIED-SORT-NAME ...)
; compiling (DEFUN FIND-QUAL-SORT ...)
; compiling (DEFPARAMETER *UNIVERSAL-SORT-NAMES* ...)
; compiling (DEFUN FIND-SORT-IN ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN FIND-SORT-IN
;     (STRING CHAOS::SORT-ID)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a STRING.

; compiling (DEFUN FIND-ERROR-SORT-IN ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN FIND-ERROR-SORT-IN
;     (STRING CHAOS::SORT-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY CHARACTER (*))
;                               (SIMPLE-ARRAY NIL (*)) SIMPLE-BASE-STRING
;                               SYMBOL), not a STRING.

; compiling (DEFUN FIND-ALL-SORTS-IN ...)
; compiling (DEFUN FIND-SORT-IN-KEEP ...)
; compiling (DEFUN FIND-SORTS-IN-KEEP ...)
; compiling (DEFUN SIMPLE-FIND-SORT-IN-LOCAL ...)
; compiling (DEFUN FIND-MODULE-ERROR-SORTS ...)
; compiling (DEFUN GET-MODULE-TOP-SORTS ...)
; compiling (DEFUN OPERATOR-NAME-IS-AMBIGUOUS ...)
; compiling (DEFUN FILTER-OPS-WITH-TYPE ...)
; compiling (DEFUN MATCH-OP-SYMBOL ...)
; compiling (DEFUN FIND-OPERATORS-IN-MODULE ...)
; compiling (DEFUN FIND-OPERATORS-IN-MODULE-NO-NUMBER ...)
; compiling (DEFUN FIND-OPERATOR ...)
; compiling (DEFUN IMPLODE-OP-REF ...)
; compiling (DEFUN FIND-QUAL-OPERATOR-IN ...)
; compiling (DEFUN FIND-ALL-QUAL-OPERATORS-IN ...)
; compiling (DEFUN FIND-OPERATORS-NUM-ARGS ...)
; compiling (DEFUN FIND-METHOD-IN ...)
; compiling (DEFUN FIND-BUILTIN-METHOD-IN ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN FIND-BUILTIN-METHOD-IN
;     (CHAOS::SUBSORTS SORT)
; --> LET IF CHAOS::ERR-SORT-LOWERS SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF THE 
; ==>
;   SORT
; 
; note: deleting unreachable code

;     (FUNCALL (CAR CHAOS::SORT-INFO) CHAOS::OPNM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CAR CHAOS::SORT-INFO))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CAR CHAOS::SI) CHAOS::OPNM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CAR CHAOS::SI))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN FIND-METHOD-NAMED-IN ...)
; compiling (DEFUN FIND-ALL-METHODS-NAMED-IN ...)
; compiling (DEFUN FIND-ALL-METHODS-NAMED-IN-SORT ...)
; compiling (DEFUN FIND-ERROR-METHOD-IN ...)
; compiling (DEFUN FIND-SORT-CONSTRUCTORS-IN ...)
; compiling (DEFUN FIND-VARIABLE-IN ...)
; compiling (DEFUN GET-MODULE-IMPORTED-PARAMETERS ...)
; compiling (DEFUN GET-MODULE-IMPORTED-PARAMETERS* ...)
; compiling (DEFUN GET-MODULE-PARAMETERS ...)
; compiling (DEFUN FIND-PARAMETERIZED-SUBMODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN FIND-PARAMETERIZED-SUBMODULE
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (EQUAL CHAOS::NAME (CHAOS::PARAMETER-ARG-NAME CHAOS::X)))
;      CHAOS::PARAMS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN GET-MODULE-NTH-ARG-NAME ...)
; compiling (DEFUN NTH-SUB ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN NTH-SUB
;     (RASSOC (CAR CHAOS::I) CHAOS::PARAMS)
; ==>
;   (SB-KERNEL:%RASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFVAR *APPLY-IGNORE-MODULES* ...)
; compiling (DEFUN MODULE-OWN-AXIOMS ...)
; compiling (DEFUN MODULE-OWN-AXIOMS-ORDERED ...)
; compiling (DEFVAR *GET-AXIOMS-SEEN-MOD* ...)
; compiling (DEFUN MODULE-IMPORTED-AXIOMS ...)
; compiling (DEFUN MODULE-IMPORTED-AXIOMS* ...)
; compiling (DEFUN GET-MODULE-AXIOMS ...)
; compiling (DEFUN CANONICALIZE-OBJECT-NAME ...)
; compiling (DEFUN SYMBOL-TABLE-ADD ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/find.lisp
; in: DEFUN SYMBOL-TABLE-ADD
;     (PUSHNEW CHAOS::OBJ (CHAOS::STABLE-UNKNOWNS CHAOS::TBL))
; --> LET* ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (AND (NOT MODULE) (NOT SORT*) (NOT OPERATOR)
;                                (NOT AXIOM)), not a (OR FIXNUM SINGLE-FLOAT
;                                                        (NOT NUMBER)).

; compiling (DEFUN SYMBOL-TABLE-GET ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/find-tmp86F1A8FB.fasl
; compilation finished in 0:00:00.611
; compiling file "/<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PRINT-SORT-AST ...)
; compiling (DEFUN PRINT-SORT-REF ...)
; compiling (DEFUN PRINT-SORT-DECL ...)
; compiling (DEFUN PRINT-SUBSORT-DECL ...)
; compiling (DEFUN PRINT-BSORT-DECL ...)
; compiling (DEFUN PRINT-PSORT-DECL ...)
; compiling (DEFUN PRINT-OPREF ...)
; compiling (DEFUN PRINT-OPREF-SIMPLE ...)
; compiling (DEFUN PRINT-OP-DECL-AST ...)
; compiling (DEFUN PRINT-OPATTRS-AST ...)
; compiling (DEFUN PRINT-VAR-DECL ...)
; compiling (DEFUN PRINT-PVAR-DECL ...)
; compiling (DEFUN PRINT-LET-DECL ...)
; compiling (DEFUN PRINT-MACRO-DECL ...)
; compiling (DEFUN PRINT-AXIOM-DECL-FORM ...)
; compiling (DEFUN PRINT-IMPORT-DECL ...)
; compiling (DEFUN GET-MODULE-PRINT-NAME ...)
; compiling (DEFUN PRINT-MOD-NAME-INTERNAL ...)
; compiling (DEFUN PRINT-MOD-NAME ...)
; compiling (DEFUN MAKE-MODULE-PRINT-NAME ...)
; compiling (DEFUN PRINT-SIMPLE-MOD-NAME ...)
; compiling (DEFUN PRINT-MOD-NAME2 ...)
; compiling (DEFUN PRINT-MOD-NAME-INTERNAL2 ...)
; compiling (DEFUN MAKE-MODULE-PRINT-NAME2 ...)
; compiling (DEFUN GET-PARAMETER-THEORY ...)
; compiling (DEFUN PRINT-PARAMETER-THEORY-NAME ...)
; compiling (DEFUN PRINT-MODEXP-SIMPLE ...)
; compiling (DECLAIM (INLINE GET-CONTEXT-NAME))
; compiling (DEFUN GET-CONTEXT-NAME ...)
; compiling (DEFUN GET-CONTEXT-NAME-EXTENDED ...)
; compiling (DEFUN PRINT-MODEXP ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp
; in: DEFUN PRINT-MODEXP
;     (FUNCALL CHAOS::PRINTER CHAOS::ME STREAM CHAOS::SIMPLE CHAOS::NO-PARAM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

;     (FUNCALL CHAOS::PRINTER CHAOS::ME STREAM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

; compiling (DEFUN PRINT-PLUS-MODEXP ...)
; compiling (DEFUN PRINT-RENAME-MODEXP ...)
; compiling (DEFUN PRINT-INSTANTIATION-MODEXP ...)
; compiling (DEFUN PRINT-REN-SORT ...)
; compiling (DEFUN PRINT-REN-OP ...)
; compiling (DEFUN PRINT-REN-PARAM ...)
; compiling (DEFUN PRINT-VARS-AST ...)
; compiling (DEFUN PRINT-RENAME-MAP ...)
; compiling (DEFUN PR-INT-RENAME ...)
; compiling (DEFUN PR-INT-PLUS ...)
; compiling (DEFUN PR-INT-INSTANTIATION ...)
; compiling (DEFUN PRINT-VIEW-INTERNAL ...)
; compiling (DEFUN PRINT-VIEW ...)
; compiling (DEFUN PRINT-VIEW-IN-CAFEOBJ-MODE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp
; in: DEFUN PRINT-VIEW-IN-CAFEOBJ-MODE
;     (FUNCALL CHAOS::PRINTER CHAOS::VW STREAM CHAOS::SIMPLE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

; compiling (DEFUN PRINT-VIEW-IN-CHAOS-MODE ...)
; compiling (DEFUN PRINT-VIEW-STRUCT-MAPS ...)
; compiling (DEFUN PRINT-ABS-VIEW-MAPPING ...)
; compiling (DEFUN PRINT-VIEW-MODEXP ...)
; compiling (DEFUN PRINT-VIEW-MODEXP-ABBREV ...)
; compiling (DEFUN PRINT-VIEW-MAPPING ...)
; compiling (DEFUN PRINT-OPERATOR-INTERNAL ...)
; compiling (DEFUN PRINT-OP-NAME ...)
; compiling (DEFUN PRINT-SORT-INTERNAL ...)
; compiling (DEFUN PRINT-BSORT-INTERNAL ...)
; compiling (DEFUN PRINT-AND-SORT-INTERNAL ...)
; compiling (DEFUN PRINT-OR-SORT-INTERNAL ...)
; compiling (DEFUN PRINT-ERR-SORT-INTERNAL ...)
; compiling (DEFUN PRINT-MODULE-INTERNAL ...)
; compiling (DEFUN PRINT-AXIOM-INTERNAL ...)
; compiling (DEFUN PRINT-RULE-INTERNAL ...)
; compiling (DEFUN PRINT-METHOD-INTERNAL ...)
; compiling (DEFUN PRINT-MODMORPH ...)
; compiling (DEFUN PRINT-SORT-NAME ...)
; compiling (DEFUN SORT-PRINT-NAME ...)
; compiling (DEFUN PRINT-SORT-LIST ...)
; compiling (DEFUN PRINT-SORT-NAME2 ...)
; compiling (DEFUN PRINT-QUAL-SORT-NAME ...)
; compiling (DEFUN PRINT-QUAL-OP-NAME ...)
; compiling (DEFUN PRINT-CHECK-BU ...)
; compiling (DEFUN PRINT-CHECK-BU-METH ...)
; compiling (DEFUN PRINT-METHOD-BRIEF ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp
; in: DEFUN PRINT-METHOD-BRIEF
;     (CHAOS::METHOD-IS-PREDICATE CHAOS::METH)
; --> BLOCK AND IF IF IF NOT IF MEMBER 
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN OPERATOR-DECL-FORM-STRING ...)
; compiling (DEFUN PRINT-OP-BRIEF ...)
; compiling (DEFUN PRINT-OP-METH ...)
; compiling (DEFUN PRINT-OP-METH2 ...)
; compiling (DEFUN PRINT-TERM-HEAD ...)
; compiling (DEFUN PRINT-METHOD ...)
; compiling (DEFUN METHOD-PRINT-STRING ...)
; compiling (DEFUN PRINT-BI-CONSTANT-METHOD ...)
; compiling (DEFUN BI-METHOD-PRINT-STRING ...)
; compiling (DEFUN PRINT-OP-ATTRS ...)
; compiling (DEFUN PRINT-METHOD-ATTRS ...)
; compiling (DEFUN PRINT-ID-CONDITION ...)
; compiling (DEFUN PRINT-ID-COND ...)
; compiling (DEFUN PRINT-ID-COND-LIST ...)
; compiling (DEFUN PRINT-RULE-LABELS ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp
; in: DEFUN PRINT-RULE-LABELS
;     (MAPCAR #'STRING LABELS)
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK LET TAGBODY TAGBODY SB-KERNEL:%RPLACD 
; --> SETQ THE CONS FUNCALL SB-C::%FUNCALL 
; ==>
;   (STRING (CAR #:G1))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-AXIOM-BRIEF ...)
; compiling (DEFUN PRINT-RULE-ID-INF ...)
; compiling (DEFUN PRINT-RULE ...)
; file: /<<PKGBUILDDIR>>/chaos/primitives/print-object.lisp
; in: DEFUN PRINT-RULE
;     (LENGTH CHAOS::EXTS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFUN PRINT-AXIOM ...)
; compiling (DEFUN PRINT-RULES-DETAIL ...)
; compiling (DEFUN AXIOM-DECLARATION-STRING ...)
; compiling (DEFUN PRINT-MAPPING ...)
; compiling (DEFUN PRINT-RULE-RING ...)
; compiling (DEFUN PRINT-SUBSTITUTION ...)
; compiling (DEFUN SHOW-PARSE-DICT ...)
; compiling (DEFUN PRINT-MODULE-PARSE-DICTIONARY ...)
; compiling (DEFUN PP-SORT-ORDER ...)
; compiling (DEFUN PP-SORT-ORDER-RAW ...)
; compiling (DEFUN PRINT-INSTANCE-DB ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/primitives/print-object-tmpH7D4HL98.fasl
; compilation finished in 0:00:00.649
; compiling file "/<<PKGBUILDDIR>>/chaos/term-parser/parse-macro.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *DEBUG-MACRO* ...)
; compiling (DECLAIM (SPECIAL *DEBUG-MACRO-NEST*))
; compiling (DEFVAR *DEBUG-MARCO-NEST* ...)
; compiling (DEFUN ADD-MACRO-TO-MODULE ...)
; compiling (DEFUN SETUP-MACRO-RULE ...)
; compiling (DEFUN ADD-MACRO-TO-METHOD ...)
; compiling (DEFUN ADJOIN-MACRO ...)
; compiling (DEFUN MACRO-IS-SIMILAR? ...)
; compiling (DEFUN EXPAND-MACRO ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-macro.lisp
; in: DEFUN EXPAND-MACRO
;     (1+ CHAOS::*DEBUG-MARCO-NEST*)
; ==>
;   (+ CHAOS::*DEBUG-MARCO-NEST* 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (1+ CHAOS::*DEBUG-MARCO-NEST*)
; ==>
;   (+ CHAOS::*DEBUG-MARCO-NEST* 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/term-parser/parse-macro-tmpCDM7YXYI.fasl
; compilation finished in 0:00:00.113
; compiling file "/<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN DICTIONARY-ADD-INFO-ON-TOKEN ...)
; compiling (DEFUN DICTIONARY-ADD-BUILTIN-SORT ...)
; compiling (DEFUN DICTIONARY-DELETE-INFO-ON-TOKEN ...)
; compiling (DECLAIM (INLINE DICTIONARY-GET-TOKEN-INFO))
; compiling (DEFUN DICTIONARY-GET-TOKEN-INFO ...)
; compiling (DECLAIM (INLINE DICTIONARY-REPLACE-TOKEN-INFO))
; compiling (DEFUN DICTIONARY-REPLACE-TOKEN-INFO ...)
; compiling (DEFUN DICTIONARY-DELETE-TOKEN-INFO ...)
; compiling (DEFUN DICTIONARY-ADD-TOKEN-INFO ...)
; compiling (DEFUN INFO-FOR-SPECIAL-BUILTINS ...)
; compiling (DEFUN VARIABLE-COPY-MODIFYING ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN VARIABLE-COPY-MODIFYING
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN SIMPLE-COPY-TERM-SHARING-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN SIMPLE-COPY-TERM-SHARING-VARIABLES
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (ASSOC (CHAOS::VARIABLE-NAME CHAOS::TERM) CHAOS::*PARSE-VARIABLES* :TEST
;            #'EQL)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN GET-QUALIFIED-OP-PATTERN ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN GET-QUALIFIED-OP-PATTERN
;     (POSITION #\_ CHAOS::EXPR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                                SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                                (VECTOR NIL) BASE-STRING), not a (OR CONS NULL
;                                                                     VECTOR).

;     (SUBSEQ CHAOS::EXPR 0 CHAOS::POS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL) BASE-STRING), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL) BASE-STRING), not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL)
;                               BASE-STRING), not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (SUBSEQ CHAOS::EXPR (1+ CHAOS::POS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL) BASE-STRING), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL) BASE-STRING), not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE (VECTOR CHARACTER)
;                               (VECTOR NIL)
;                               BASE-STRING), not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN PARSER-IS-MORE-GENERAL-ONE ...)
; compiling (DEFUN GET-INFO-ON-TOKEN ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN GET-INFO-ON-TOKEN
;     (FUNCALL CHAOS::TOKEN-PRED CHAOS::TOKEN)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::TOKEN-PRED)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TOKEN-PRED is not known to be a function

; compiling (DEFUN DICTIONARY-DELETE-VARS ...)
; compiling (DEFUN DICTIONARY-MAKE-BUILTIN-CONSTANT ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN DICTIONARY-MAKE-BUILTIN-CONSTANT
;     (FUNCALL (CHAOS::BSORT-TERM-CREATOR CHAOS::BSORT) CHAOS::TOKEN)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::BSORT-TERM-CREATOR CHAOS::BSORT))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN OBJECT-SYNTACTIC-TYPE ...)
; compiling (DEFUN OPERATOR-PARSE-CATEGORY ...)
; compiling (DEFUN PARSE-TERM ...)
; compiling (DEFUN PARSER-CONTINUING ...)
; compiling (DEFUN PARSER-CONTINUE-CHECK ...)
; compiling (DEFUN PARSER-CONTINUE ...)
; compiling (DEFUN PARSER-CONTINUE-FOR-OPERATORS ...)
; compiling (DEFUN PARSER-CONTINUE-FOR-OPERATOR ...)
; compiling (DEFUN PARSER-FINISH-TERM-FOR-OPERATOR ...)
; compiling (DEFUN PARSER-GET-TERM ...)
; compiling (DEFUN PARSER-GET-REST-OF-PARENTHESIZED-EXPR ...)
; compiling (DEFUN PARSER-SCAN-QUALIFICATION ...)
; compiling (DEFUN PARSER-SCAN-PARENTHESIZED-UNIT ...)
; compiling (DEFUN GET-TERM-FOR-REGULAR-TOKEN ...)
; compiling (DEFUN GET-TERM-FOR-OP-VAR ...)
; compiling (DEFUN GET-TERM-FROM-ANTEFIX-OPERATOR ...)
; compiling (DEFUN GET-TERM-FROM-AST-OPERATOR ...)
; compiling (DEFUN CHOOSE-OPERATORS-FROM-TOKEN ...)
; compiling (DEFUN PARSER-CHOOSING-OPERATORS ...)
; compiling (DEFUN CHOOSE-OPERATORS ...)
; compiling (DEFUN CHOOSE-JUXTAPOSITION-OPERATORS ...)
; compiling (DEFUN CHOOSE-LATEFIX-OPERATORS ...)
; compiling (DEFUN PARSER-CHECK-OPERATOR ...)
; compiling (DEFUN PARSER-COLLECT-ARGUMENTS ...)
; compiling (DEFUN PARSER-COLLECT-ONE-ARGUMENT ...)
; compiling (DEFUN PARSER-SCAN-TOKEN ...)
; compiling (DEFUN PARSER-IN-SAME-CONNECTED-COMPONENT ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-engine.lisp
; in: DEFUN PARSER-IN-SAME-CONNECTED-COMPONENT
;     (CHAOS::IS-IN-SAME-CONNECTED-COMPONENT CHAOS::SORT1 CHAOS::SORT2
;                                            CHAOS::SORT-ORDER)
; --> BLOCK OR LET IF IF AND IF OR LET IF IF IF CHAOS::SORT= EQ IF EQ 
; --> CHAOS::THE-ERR-SORT 
; ==>
;   CHAOS::SORT-ORDER
; 
; note: deleting unreachable code

; compiling (DEFUN PARSER-MAKE-TERMS ...)
; compiling (DEFUN TEST-SORT-MEMB-PREDICATE ...)
; compiling (DEFUN PRINT-TERLETOX ...)
; compiling (DEFUN PRINT-TERLETOX-LIST ...)
; compiling (DEFVAR *RC-DEBUG* ...)
; compiling (DEFUN PARSER-MAKE-APPLFORM ...)
; compiling (DEFUN ARE-ARGUMENTSORTS-CORRECT ...)
; compiling (DEFUN ARITY-CONTAINS-UNIVERSAL-SORT ...)
; compiling (DEFUN CHECK-UNIVERSALLY-DEFINED-BUILTINS ...)
; compiling (DEFUN ARE-WELL-DEFINED-TERMS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/term-parser/parse-engine-tmpLM57P5P.fasl
; compilation finished in 0:00:00.733
; compiling file "/<<PKGBUILDDIR>>/chaos/term-parser/parse-top.lisp" (written 10 DEC 2019 02:30:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN SIMPLE-PARSE-FROM-STRING ...)
; compiling (DEFUN SIMPLE-PARSE-FROM-STRING* ...)
; compiling (DEFVAR *PARSE-RAW-PARSE* ...)
; compiling (DEFVAR .SAVED-AMBIGUOUS. ...)
; compiling (DEFUN SIMPLE-PARSE ...)
; compiling (DEFUN SELECT-PARSE ...)
; compiling (DEFUN PRE-CHOOSE-FINAL-SUB ...)
; compiling (DEFUN PRE-CHOOSE-FINAL ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-top.lisp
; in: DEFUN PRE-CHOOSE-FINAL
;     (ASSOC CHAOS::*ID-MODULE* (CHAOS::MODULE-ALL-SUBMODULES CHAOS::MODULE))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN CHOOSE-MOST-APROPREATE-TERM ...)
; compiling (DEFUN PARSER-DIAGNOSE ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-top.lisp
; in: DEFUN PARSER-DIAGNOSE
;     (LENGTH (CDR CHAOS::E))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (+ CHAOS::LENP CHAOS::I)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN SIMPLE-PARSE-GROUND ...)
; compiling (DEFUN PARSE-CONVERT ...)
; compiling (DEFUN PARSE-SHOW-DIFF ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-top.lisp
; in: DEFUN PARSE-SHOW-DIFF
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (1+ CHAOS::NUM)
; ==>
;   (+ CHAOS::NUM 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN PARSER-COMPLETE-PARSES ...)
; compiling (DEFUN PARSER-PARSES ...)
; compiling (DEFUN PARSER-FIND-PARSE ...)
; compiling (DEFUN PARSER-FIND-PARSE-STRICT ...)
; compiling (DEFUN PARSER-FIND-PARSE-STRICT-SORTS ...)
; compiling (DEFUN PARSER-FIND-RULE-PAIR ...)
; compiling (DEFUN PARSE-QUIET-PARSE ...)
; compiling (DEFUN TOKEN-SEQ-TO-STR ...)
; compiling (DEFUN UPDATE-PARSE-INFORMATION ...)
; file: /<<PKGBUILDDIR>>/chaos/term-parser/parse-top.lisp
; in: DEFUN UPDATE-PARSE-INFORMATION
;     (STRING (CAR CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN COMPRESS-OVERLOADED-METHODS ...)
; compiling (DEFUN METHOD-COMPRESS-OVERLOADED-SET ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/term-parser/parse-top-tmpZE69DN33.fasl
; compilation finished in 0:00:00.438
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-utils.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO WITH-MATCH-DEBUG ...)
; compiling (DECLAIM (INLINE POSSIBLY-MACHES-NONVAR))
; compiling (DEFUN POSSIBLY-MATCHES-NONVAR ...)
; compiling (DEFUN POSSIBLY-MATCHES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-utils-tmpG8099TO3.fasl
; compilation finished in 0:00:00.361
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-system.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MAKE-EQUATION ...)
; compiling (DEFMACRO EQUATION-T1 ...)
; compiling (DEFMACRO EQUATION-T2 ...)
; compiling (DECLAIM (SPECIAL *DO-UNIFY*))
; compiling (DEFVAR *DO-UNIFY* ...)
; compiling (DECLAIM (SPECIAL *ONE-WAY-MATCH*))
; compiling (DEFVAR *ONE-WAY-MATCH* ...)
; compiling (DECLAIM (SPECIAL *DO-EMPTY-MATCH*))
; compiling (DEFVAR *DO-EMPTY-MATCH* ...)
; compiling (DECLAIM (INLINE !MATCH-DECOMPOSE))
; compiling (DEFUN !MATCH-DECOMPOSE ...)
; compiling (DEFUN !MATCH-DECOMPOSE-ON-DEMAND ...)
; compiling (DEFUN OCCURS-IN ...)
; compiling (DECLAIM (INLINE METHOD-THEORY-INFO-FOR-MATCHING!))
; compiling (DEFUN METHOD-THEORY-INFO-FOR-MATCHING! ...)
; compiling (DEFUN !MATCH-DECOMPOSE-UNIFY ...)
; compiling (DEFUN !MATCH-DECOMPOSE-MATCH ...)
; compiling (DEFUN MATCH-DECOMPOSE-EQUATION ...)
; compiling (DEFUN NORMAL-FORM-SUB ...)
; compiling (DECLAIM (INLINE APPY-SUBST))
; compiling (DEFUN APPLY-SUBST ...)
; compiling (DEFTYPE MSYSTEM ...)
; compiling (DEFMACRO CREATE-M-SYSTEM ...)
; compiling (DEFUN PRINT-M-SYSTEM ...)
; compiling (DEFMACRO NEW-M-SYSTEM ...)
; compiling (DEFMACRO ADD-M-SYSTEM ...)
; compiling (DEFMACRO M-SYSTEM-IS-EMPTY? ...)
; compiling (DEFMACRO M-SYSTEM-TO-LIST ...)
; compiling (DEFMACRO SIZE-OF-M-SYSTEM ...)
; compiling (DEFUN ADD-EQUATION-TO-M-SYSTEM ...)
; compiling (DECLAIM (INLINE MAKE-M-SYSTEM))
; compiling (DEFUN MAKE-M-SYSTEM ...)
; compiling (DECLAIM (INLINE M-SYSTEM-EXTRACT-ONE-SYSTEM))
; compiling (DEFUN M-SYSTEM-EXTRACT-ONE-SYSTEM ...)
; compiling (DEFMACRO CREATE-ENVIRONMENT ...)
; compiling (DEFMACRO NEW-ENVIRONMENT ...)
; compiling (DEFMACRO ENVIRONMENT-TO-LIST ...)
; compiling (DEFUN ADD-EQUATION-TO-ENVIRONMENT ...)
; compiling (DEFMACRO ENVIRONMENT-COPY1 ...)
; compiling (DEFMACRO ENVIRONMENT-TO-SUBSTITUTION ...)
; compiling (DEFMACRO ENVIRONMENT-IMAGE ...)
; compiling (DEFUN MATCH-INSERT-IF-COHERENT-WITH ...)
; compiling (DEFSTRUCT (MATCH-SYSTEM #) ...)
; compiling (DECLAIM (INLINE CREATE-MATCH-SYSTEM))
; compiling (DEFMACRO MATCH-SYSTEM-SYS ...)
; compiling (DEFMACRO MATCH-SYSTEM-ENV ...)
; compiling (DEFMACRO MATCH-SYSTEM-TO-SUBSTITUTION ...)
; compiling (DEFUN PRINT-MATCH-SYSTEM ...)
; compiling (DEFUN PRINT-MATCH-SYSTEM-SYS ...)
; compiling (DEFUN PRINT-MATCH-SYSTEM-ENV ...)
; compiling (DEFUN PRINT-MATCH-EQUATIONS ...)
; compiling (DEFUN PRINT-MATCH-EQUATION ...)
; compiling (DECLAIM (INLINE NEW-MATCH-SYSTEM))
; compiling (DEFUN NEW-MATCH-SYSTEM ...)
; compiling (DEFMACRO MATCH-SYSTEM-TO-M-SYSTEM ...)
; compiling (DEFUN MATCH-SYSTEM-E-EQUAL ...)
; compiling (DEFUN MATCH-ADD-M-SYSTEM ...)
; compiling (DEFUN MATCH-DECOMPOSE&MERGE ...)
; compiling (DEFUN MATCH-SYSTEM-EXTRACT-ONE ...)
; compiling (DEFUN MATCH-SYSTEM-MODIF-M-SYS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-system-tmpTASQCYAW.fasl
; compilation finished in 0:00:01.238
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-state.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTYPE GLOBAL-STATE ...)
; compiling (DEFMACRO NEW-GLOBAL-STATE ...)
; compiling (DEFMACRO GLOBAL-STATE-IS-EMPTY? ...)
; compiling (DEFMACRO GLOBAL-STATE-IS-NOT-EMPTY ...)
; compiling (DEFMACRO GLOBAL-STATE-POP ...)
; compiling (DEFMACRO GLOBAL-STATE-TOP ...)
; compiling (DEFMACRO GLOBAL-STATE-PUSH ...)
; compiling (DEFUN PRINT-GLOBAL-STATE ...)
; compiling (DEFMACRO THEORY-STATE-MATCH-INITIALIZE ...)
; compiling (DEFMACRO THEORY-STATE-MATCH-NEXT-STATE ...)
; compiling (DEFSTRUCT (MATCH-STATE #) ...)
; compiling (DEFUN PRINT-MATCH-STATE ...)
; compiling (DEFMACRO MATCH-STATE-CREATE ...)
; compiling (DEFMACRO MATCH-EMPTY-STATE-FLAG ...)
; compiling (DEFMACRO MATCH-EMPTY-STATE-SYS ...)
; compiling (DEFMACRO CREATE-MATCH-EMPTY-STATE ...)
; compiling (DEFVAR .MATCH-EMPTY-STATE. ...)
; compiling (SETQ .MATCH-EMPTY-STATE. ...)
; compiling (DEFUN THE-MATCH-EMPTY-STATE ...)
; compiling (DEFUN NEXT-MATCH-STATE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-state.lisp
; in: DEFUN NEXT-MATCH-STATE
;     (CHAOS::THEORY-STATE-MATCH-INITIALIZE CHAOS::THEORY-INFO CHAOS::SYS-TO-SOLVE
;                                           (CHAOS::MATCH-SYSTEM-ENV
;                                            CHAOS::NEW-M-SYS))
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-INIT-FUN CHAOS::THEORY-INFO))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CHAOS::THEORY-STATE-MATCH-NEXT-STATE CHAOS::THEORY-INFO
;                                           CHAOS::TH-MATCH-STATE)
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-NEXT-FUN CHAOS::THEORY-INFO))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-state-tmp35U57IV6.fasl
; compilation finished in 0:00:00.068
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-e.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MATCH-EMPTY-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-EMPTY-NEXT-STATE ...)
; compiling (DEFUN MATCH-EMPTY-EQUAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-e-tmpTZOONXRW.fasl
; compilation finished in 0:00:00.027
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-idem.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN IDEM-MATCH ...)
; compiling (DEFUN IDEM-EXT-MATCH ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-idem-tmpWN0UKDSV.fasl
; compilation finished in 0:00:00.018
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-z.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (MATCH-Z-STATE #) ...)
; compiling (DEFUN MATCH-Z-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-Z-NEXT-STATE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-z.lisp
; in: DEFUN MATCH-Z-NEXT-STATE
;     (TRUNCATE CHAOS::Q 5)
; 
; note: unable to
;   convert integer division to multiplication
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (UNSIGNED-BYTE 64).

; compiling (DEFUN MATCH-Z-EQUAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-z-tmpBF3HHBTQ.fasl
; compilation finished in 0:00:00.078
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-a.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTYPE MATCH-A-STATE ...)
; compiling (DEFMACRO MAKE-MATCH-A-STATE ...)
; compiling (DEFMACRO MATCH-A-STATE-SIZE ...)
; compiling (DEFMACRO MATCH-A-STATE-METHOD ...)
; compiling (DEFMACRO MATCH-A-STATE-SYS ...)
; compiling (DEFMACRO MATCH-A-STATE-NO-MORE ...)
; compiling (DEFTYPE MATCH-EQUATION-COMP ...)
; compiling (DEFMACRO MAKE-MATCH-EQUATION-COMP ...)
; compiling (DEFMACRO MATCH-EQUATION-COMP-SZ-LEFT ...)
; compiling (DEFMACRO MATCH-EQUATION-COMP-LEFT ...)
; compiling (DEFMACRO MATCH-EQUATION-COMP-RIGHT ...)
; compiling (DEFMACRO MATCH-EQUATION-COMP-COMP ...)
; compiling (DECLAIM (INLINE MATCH-A-RESET-COMP))
; compiling (DEFUN MATCH-A-RESET-COMP ...)
; compiling (DECLAIM (INLINE MATCH-A-RESET-MATCH-EQUATION-COMP))
; compiling (DEFUN MATCH-A-RESET-MATCH-EQUATION-COMP ...)
; compiling (DEFUN PRINT-EQUATION-COMP ...)
; compiling (DECLAIM (INLINE MATCH-A-TRY-INCREASE-LEXICO))
; compiling (DEFUN MATCH-A-TRY-INCREASE-LEXICO ...)
; compiling (DECLAIM (INLINE MATCH-ASSOCIATIVE-SIMPLIFY))
; compiling (DEFUN MATCH-ASSOCIATIVE-SIMPLIFY ...)
; compiling (DECLAIM (INLINE MATCH-ASSOCIATIVITY-SET-EQ-STATE))
; compiling (DEFUN MATCH-ASSOCIATIVITY-SET-EQ-STATE ...)
; compiling (DECLAIM (INLINE MATCH-A-MAKE-TERM))
; compiling (DEFUN MATCH-A-MAKE-TERM ...)
; compiling (DECLAIM (INLINE MATCH-A-EXTRACT-IN-FROM-TO))
; compiling (DEFUN MATCH-A-EXTRACT-IN-FROM-TO ...)
; compiling (DECLAIM (INLINE INCREMENT-THE-MATCH-A-STATE))
; compiling (DEFUN INCREMENT-THE-MATCH-A-STATE ...)
; compiling (DEFUN MATCH-A-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-A-NEXT-STATE ...)
; compiling (DEFUN MATCH-A-EQUAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-a-tmpGYUNPZCY.fasl
; compilation finished in 0:00:00.267
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-c.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (MATCH-C-STATE #) ...)
; compiling (DEFUN MATCH-C-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-C-NEXT-STATE ...)
; compiling (DEFUN MATCH-C-EQUAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-c-tmpD68Q8WCA.fasl
; compilation finished in 0:00:00.037
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-az.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (MATCH-AZ-STATE #) ...)
; compiling (DECLAIM (INLINE MATCH-ASSOCIATIVE-ID-SIMPLIFY))
; compiling (DEFUN MATCH-ASSOCIATIVE-ID-SIMPLIFY ...)
; compiling (DECLAIM (INLINE MATCH-ASSOCIATIVITY-ID-SET-EQ-STATE))
; compiling (DEFUN MATCH-ASSOCIATIVITY-ID-SET-EQ-STATE ...)
; compiling (DECLAIM (INLINE MATCH-AZ-MAKE-TERM))
; compiling (DEFUN MATCH-AZ-MAKE-TERM ...)
; compiling (DECLAIM (INLINE MATCH-AZ-TRY-INCREASE-LEXICO))
; compiling (DEFUN MATCH-AZ-TRY-INCREASE-LEXICO ...)
; compiling (DECLAIM (INLINE MATCH-AZ-RESET-COMP))
; compiling (DEFUN MATCH-AZ-RESET-COMP ...)
; compiling (DECLAIM (INLINE MATCH-AZ-RESET-EQUATION-COMP))
; compiling (DEFUN MATCH-AZ-RESET-EQUATION-COMP ...)
; compiling (DECLAIM (INLINE INCREMENT-THE-MATCH-AZ-STATE))
; compiling (DEFUN INCREMENT-THE-MATCH-AZ-STATE ...)
; compiling (DEFUN MATCH-AZ-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-AZ-NEXT-STATE ...)
; compiling (DEFUN MATCH-AZ-NEXT-STATE-AUX ...)
; compiling (DEFUN MATCH-AZ-EQUAL ...)
; compiling (DEFUN MATCH-AZ-STATE-UNPARSE ...)
; compiling (DEFUN MATCH-EQUATION-COMP-UNPARSE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-az-tmp7MK9KM9C.fasl
; compilation finished in 0:00:00.215
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-cz.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (MATCH-CZ-STATE #) ...)
; compiling (DEFUN MATCH-CZ-STATE-INITIALIZE ...)
; compiling (DEFUN MATCH-CZ-NEXT-STATE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-cz.lisp
; in: DEFUN MATCH-CZ-NEXT-STATE
;     (TRUNCATE CHAOS::Q 6)
; 
; note: unable to
;   convert integer division to multiplication
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (UNSIGNED-BYTE 64).

; compiling (DEFUN MATCH-CZ-EQUAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-cz-tmpJJ71X849.fasl
; compilation finished in 0:00:00.068
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-ac.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MAKE-AC-STATE ...)
; compiling (DEFMACRO AC-STATE-OPERATORS ...)
; compiling (DEFMACRO AC-STATE-LHS-F ...)
; compiling (DEFMACRO AC-STATE-LHS-V ...)
; compiling (DEFMACRO AC-STATE-RHS-C ...)
; compiling (DEFMACRO AC-STATE-RHS-F ...)
; compiling (DEFMACRO AC-STATE-LHS-F-R ...)
; compiling (DEFMACRO AC-STATE-LHS-V-R ...)
; compiling (DEFMACRO AC-STATE-RHS-C-R ...)
; compiling (DEFMACRO AC-STATE-RHS-F-R ...)
; compiling (DEFMACRO AC-STATE-LHS-MASK ...)
; compiling (DEFMACRO AC-STATE-LHS-F-MASK ...)
; compiling (DEFMACRO AC-STATE-LHS-R-MASK ...)
; compiling (DEFMACRO AC-STATE-RHS-C-SOL ...)
; compiling (DEFMACRO AC-STATE-RHS-C-MAX ...)
; compiling (DEFMACRO AC-STATE-RHS-F-SOL ...)
; compiling (DEFMACRO AC-STATE-RHS-F-MAX ...)
; compiling (DEFMACRO AC-STATE-RHS-FULL-BITS ...)
; compiling (DEFMACRO AC-STATE-RHS-C-COMPAT ...)
; compiling (DEFMACRO AC-STATE-RHS-F-COMPAT ...)
; compiling (DEFMACRO AC-STATE-LHS-C-COUNT ...)
; compiling (DEFMACRO AC-STATE-LHS-F-COUNT ...)
; compiling (DEFMACRO AC-STATE-LHS-V-COUNT ...)
; compiling (DEFMACRO AC-STATE-RHS-C-COUNT ...)
; compiling (DEFMACRO AC-STATE-RHS-F-COUNT ...)
; compiling (DEFMACRO AC-STATE-NO-MORE ...)
; compiling (DEFMACRO AC-STATE-AC-STATE-P ...)
; compiling (DECLAIM (INLINE AC-STATE-P))
; compiling (DEFUN AC-STATE-P ...)
; compiling (DEFVAR *HALF* ...)
; compiling (DEFMACRO AC-ROTATE-LEFT ...)
; compiling (DEFMACRO AC-NOTE-REPEATS ...)
; compiling (DECLAIM (INLINE DELETE-ONE-TERM))
; compiling (DEFUN DELETE-ONE-TERM ...)
; compiling (DECLAIM (INLINE TEST_SAME_TERM_LIST))
; compiling (DEFUN TEST_SAME_TERM_LIST ...)
; compiling (DECLAIM (INLINE LIST2MULTI-SET-LIST-DIRECT))
; compiling (DEFUN LIST2MULTI-SET-LIST-DIRECT ...)
; compiling (DEFVAR L2MSLA1 ...)
; compiling (DEFVAR L2MSLV1 ...)
; compiling (DEFVAR L2MSLA2 ...)
; compiling (DEFVAR L2MSLV2 ...)
; compiling (DEFUN LIST2MULTI-SET-LIST ...)
; compiling (DECLAIM (INLINE AC-LIST2MULTI-SET))
; compiling (DEFUN AC-LIST2MULTI-SET ...)
; compiling (DECLAIM (INLINE MATCH-AC-MS-EQUAL))
; compiling (DEFUN MATCH-AC-MS-EQUAL ...)
; compiling (DEFVAR *AC-FAILURE-EQ* ...)
; compiling (DEFUN AC-SOLUTION-FROM-STATE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-ac.lisp
; in: DEFUN AC-SOLUTION-FROM-STATE
;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-C-SOL CHAOS::J) CHAOS::TERM-CODE)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-C-SOL CHAOS::J) CHAOS::TERM-CODE)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-F-SOL CHAOS::J) CHAOS::TERM-CODE)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-F-SOL CHAOS::J) CHAOS::TERM-CODE)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-C-SOL CHAOS::J) CHAOS::TERM-CODE)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-C-SOL CHAOS::J) CHAOS::TERM-CODE)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-F-SOL CHAOS::J) CHAOS::TERM-CODE)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-F-SOL CHAOS::J) CHAOS::TERM-CODE)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DEFUN AC-NEXT-STATE-SUB ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-ac.lisp
; in: DEFUN AC-NEXT-STATE-SUB
;     (CHAOS::AC-ROTATE-LEFT CHAOS::RHS-C-SOL CHAOS::M)
; --> SETF SB-KERNEL:%SVSET LET TRULY-THE SB-KERNEL:DATA-VECTOR-SET 
; --> SB-KERNEL:DATA-VECTOR-SET-WITH-OFFSET THE 
; ==>
;   (* 2 (SVREF CHAOS::RHS-C-SOL CHAOS::M))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-C-SOL CHAOS::M)
;                      (SVREF CHAOS::RHS-C-COMPAT CHAOS::M))
; ==>
;   (LOGAND (SVREF CHAOS::RHS-C-SOL CHAOS::M)
;           (SVREF CHAOS::RHS-C-COMPAT CHAOS::M))
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-C-SOL CHAOS::M) CHAOS::LHS-R-MASK)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-C-SOL CHAOS::M) CHAOS::LHS-R-MASK)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-OR CHAOS::TEMP (SVREF CHAOS::RHS-C-SOL CHAOS::S))
; ==>
;   (LOGIOR CHAOS::TEMP (SVREF CHAOS::RHS-C-SOL CHAOS::S))
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a INTEGER, not a FIXNUM.
;       unable to do inline (unsigned-byte 64) arithmetic (cost 3) because:
;       The first argument is a FIXNUM, not a (UNSIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DECLAIM (INLINE MATCH-AC-EQUAL))
; compiling (DEFUN MATCH-AC-EQUAL ...)
; compiling (DEFUN MATCH-AC-STATE-INITIALIZE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-ac.lisp
; in: DEFUN MATCH-AC-STATE-INITIALIZE
;     (CHAOS::AC-NOTE-REPEATS CHAOS::RHS-F-MS CHAOS::RHS-F-R CHAOS::R-M
;                             CHAOS::R-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::R-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::AC-NOTE-REPEATS CHAOS::RHS-C-MS CHAOS::RHS-C-R CHAOS::R-M
;                             CHAOS::R-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::R-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::AC-NOTE-REPEATS CHAOS::LHS-V-MS CHAOS::LHS-V-R CHAOS::L-M
;                             CHAOS::L-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::L-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::AC-NOTE-REPEATS CHAOS::LHS-F-MS CHAOS::LHS-F-R CHAOS::L-M
;                             CHAOS::L-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::L-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::EXPT2 (1- CHAOS::LHS-V-COUNT))
; --> EXPT 
; ==>
;   (ASH 1 SB-C::POWER)
; 
; note: forced to do full call
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (CHAOS::EXPT2 (+ -1 CHAOS::LHS-V-COUNT CHAOS::LHS-F-COUNT))
; --> EXPT 
; ==>
;   (ASH 1 SB-C::POWER)
; 
; note: forced to do full call
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (CHAOS::MAKE-OR CHAOS::TEMP (SVREF CHAOS::RHS-C-SOL CHAOS::S))
; ==>
;   (LOGIOR CHAOS::TEMP (SVREF CHAOS::RHS-C-SOL CHAOS::S))
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a INTEGER, not a FIXNUM.
;       unable to do inline (unsigned-byte 64) arithmetic (cost 3) because:
;       The first argument is a FIXNUM, not a (UNSIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DEFUN MATCH-AC-NEXT-STATE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-ac.lisp
; in: DEFUN MATCH-AC-NEXT-STATE
;     (CHAOS::AC-ROTATE-LEFT CHAOS::RHS-F-SOL CHAOS::N)
; --> SETF SB-KERNEL:%SVSET LET TRULY-THE SB-KERNEL:DATA-VECTOR-SET 
; --> SB-KERNEL:DATA-VECTOR-SET-WITH-OFFSET THE 
; ==>
;   (* 2 (SVREF CHAOS::RHS-F-SOL CHAOS::N))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-F-SOL CHAOS::N)
;                      (SVREF CHAOS::RHS-F-COMPAT CHAOS::N))
; ==>
;   (LOGAND (SVREF CHAOS::RHS-F-SOL CHAOS::N)
;           (SVREF CHAOS::RHS-F-COMPAT CHAOS::N))
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-AND (SVREF CHAOS::RHS-F-SOL CHAOS::N) CHAOS::LHS-R-MASK)
; ==>
;   (LOGAND (SVREF CHAOS::RHS-F-SOL CHAOS::N) CHAOS::LHS-R-MASK)
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 3) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

;     (CHAOS::MAKE-OR CHAOS::TEMP (SVREF CHAOS::RHS-F-SOL CHAOS::S))
; ==>
;   (LOGIOR CHAOS::TEMP (SVREF CHAOS::RHS-F-SOL CHAOS::S))
; 
; note: forced to do full call
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a INTEGER, not a FIXNUM.
;       unable to do inline (unsigned-byte 64) arithmetic (cost 3) because:
;       The first argument is a FIXNUM, not a (UNSIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DEFUN AC-UNPARSE-AC-STATE ...)
; compiling (DEFUN AC-ARGS-NSS ...)
; compiling (SETF (GET # ...) ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-ac-tmp1VUK6SR2.fasl
; compilation finished in 0:00:00.598
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match-acz.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *USE-ONE-VAR-OPT* ...)
; compiling (DEFMACRO MAKE-MATCH-ACZ-STATE ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-METHODS ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-F ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-V ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-F-R ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-V-R ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C-R ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F-R ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-MASK ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-F-MASK ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-R-MASK ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C-SOL ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C-MAX ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F-SOL ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F-MAX ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-FULL-BITS ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C-COMPAT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F-COMPAT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-C-COUNT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-F-COUNT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-LHS-V-COUNT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-C-COUNT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-RHS-F-COUNT ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-NO-MORE ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-ACZ-STATE-P ...)
; compiling (DEFMACRO MATCH-ACZ-STATE-ZERO-MATCHES ...)
; compiling (DEFSTRUCT TRIVIAL-MATCH-ACZ-STATE ...)
; compiling (DECLAIM (INLINE MATCH-ACZ-STATE-P))
; compiling (DEFUN MATCH-ACZ-STATE-P ...)
; compiling (DEFMACRO MATCH-ACZ-ROTATE-LEFT ...)
; compiling (DEFMACRO MATCH-ACZ-NOTE-REPEATS ...)
; compiling (DEFMACRO MATCH-ACZ-EQ-MEMBER ...)
; compiling (DEFMACRO ALLOCATE-ACZ-STATE ...)
; compiling (DEFUN MATCH-ACZ-LIST2MULTI-SET ...)
; compiling (DECLAIM (INLINE MATCH-ACZ-MS-EQUAL))
; compiling (DEFUN MATCH-ACZ-MS-EQUAL ...)
; compiling (DECLAIM (INLINE MATCH-ACZ-EQUAL))
; compiling (DEFUN MATCH-ACZ-EQUAL ...)
; compiling (DEFUN MATCH-ACZ-MAKE-TERM ...)
; compiling (DEFVAR *ACZ-FAILURE-PAT* ...)
; compiling (DEFUN MATCH-ACZ-SOLUTION-FROM-STATE ...)
; compiling (DEFUN MATCH-ACZ-STATE-INITIALIZE ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-acz.lisp
; in: DEFUN MATCH-ACZ-STATE-INITIALIZE
;     (CHAOS::MATCH-ACZ-NOTE-REPEATS CHAOS::RHS-F-MS CHAOS::RHS-F-R CHAOS::R-M
;                                    CHAOS::R-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::R-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::MATCH-ACZ-NOTE-REPEATS CHAOS::RHS-C-MS CHAOS::RHS-C-R CHAOS::R-M
;                                    CHAOS::R-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::R-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::MATCH-ACZ-NOTE-REPEATS CHAOS::LHS-V-MS CHAOS::LHS-V-R CHAOS::L-V-M
;                                    CHAOS::L-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::L-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::MATCH-ACZ-NOTE-REPEATS CHAOS::LHS-F-MS CHAOS::LHS-F-R CHAOS::L-F-M
;                                    CHAOS::L-GCD)
; --> LET* DOLIST BLOCK LET TAGBODY UNLESS IF PROGN LET TAGBODY LET SETQ THE 
; ==>
;   (GCD CHAOS::L-GCD CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                             (INTEGER 1 4611686018427387903)).
;   The second argument is a FIXNUM, not a (OR (INTEGER -4611686018427387904 -1)
;                                              (INTEGER 1 4611686018427387903)).

;     (CHAOS::EXPT2
;      (+ (THE FIXNUM CHAOS::LHS-V-COUNT) (THE FIXNUM CHAOS::LHS-F-COUNT)))
; --> EXPT 
; ==>
;   (ASH 1 SB-C::POWER)
; 
; note: forced to do full call
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (-
;      (CHAOS::EXPT2
;       (+ (THE FIXNUM CHAOS::LHS-V-COUNT) (THE FIXNUM CHAOS::LHS-F-COUNT)))
;      2)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 2), not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 2), not a FIXNUM.
;       etc.

; compiling (DEFUN MATCH-ACZ-NEXT-STATE-SUB ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-acz.lisp
; in: DEFUN MATCH-ACZ-NEXT-STATE-SUB
;     (CHAOS::MATCH-ACZ-ROTATE-LEFT CHAOS::RHS-C-SOL CHAOS::M)
; --> SETF SB-KERNEL:%SVSET LET TRULY-THE SB-KERNEL:DATA-VECTOR-SET 
; --> SB-KERNEL:DATA-VECTOR-SET-WITH-OFFSET THE 
; ==>
;   (* 2 (SVREF CHAOS::RHS-C-SOL CHAOS::M))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN MATCH-ACZ-NEXT-STATE ...)
; compiling (DEFUN MATCH-ACZ-NEXT-STATE-AUX ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match-acz.lisp
; in: DEFUN MATCH-ACZ-NEXT-STATE-AUX
;     (CHAOS::MATCH-ACZ-ROTATE-LEFT CHAOS::RHS-F-SOL CHAOS::N)
; --> SETF SB-KERNEL:%SVSET LET TRULY-THE SB-KERNEL:DATA-VECTOR-SET 
; --> SB-KERNEL:DATA-VECTOR-SET-WITH-OFFSET THE 
; ==>
;   (* 2 (SVREF CHAOS::RHS-F-SOL CHAOS::N))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (* 2 (SVREF CHAOS::RHS-F-SOL CHAOS::N))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   convert x*2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.
; 
; note: unable to
;   associate */(* /) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (CHAOS::MATCH-ACZ-ROTATE-LEFT CHAOS::RHS-F-SOL CHAOS::N)
; --> SETF SB-KERNEL:%SVSET LET TRULY-THE SB-KERNEL:DATA-VECTOR-SET 
; --> SB-KERNEL:DATA-VECTOR-SET-WITH-OFFSET THE 
; ==>
;   (* 2 (SVREF CHAOS::RHS-F-SOL CHAOS::N))
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (* 2 (SVREF CHAOS::RHS-F-SOL CHAOS::N))
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       etc.

; compiling (DEFUN MATCH-ACZ-UNPARSE-MATCH-ACZ-STATE ...)
; compiling (DEFUN MATCH-ACZ-TRIVIAL-UNPARSE ...)
; compiling (DEFUN MATCH-ACZ-ARGS-NSS ...)
; compiling (SETF (GET # ...) ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-acz-tmpR2FIHSUG.fasl
; compilation finished in 0:00:00.881
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN FIRST-MATCH ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match.lisp
; in: DEFUN FIRST-MATCH
;     (CHAOS::THEORY-STATE-MATCH-INITIALIZE CHAOS::THEORY-INFO CHAOS::SYS
;                                           (CHAOS::MATCH-SYSTEM-ENV CHAOS::M-SYS))
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-INIT-FUN CHAOS::THEORY-INFO))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN NEXT-MATCH ...)
; compiling (DEFUN EMPTY-MATCH ...)
; compiling (DEFUN MATCHES? ...)
; compiling (DEFUN FIRST-MATCH-WITH-THEORY ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match.lisp
; in: DEFUN FIRST-MATCH-WITH-THEORY
;     (CHAOS::THEORY-STATE-MATCH-INITIALIZE CHAOS::THEORY-INFO CHAOS::SYS
;                                           (CHAOS::MATCH-SYSTEM-ENV CHAOS::M-SYS))
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-INIT-FUN CHAOS::THEORY-INFO))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match-tmp8PYELRKX.fasl
; compilation finished in 0:00:00.059
; compiling file "/<<PKGBUILDDIR>>/chaos/e-match/match2.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN SIMPLE-MATCH-E-OK? ...)
; compiling (DEFUN IS-EMPTY-THEORY-TERM? ...)
; compiling (DEFUN IS-LINEAR-GENERAL-PATTERN? ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match2.lisp
; in: DEFUN IS-LINEAR-GENERAL-PATTERN?
;     (MEMBER ELT (CDR CHAOS::LST))
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DECLAIM (SPECIAL .EMPTY-DIRECT-SUBST.))
; compiling (DEFVAR .EMPTY-DIRECT-SUBST. ...)
; compiling (DEFUN SIMP-MATCH* ...)
; compiling (DEFUN SIMP-MATCH-E ...)
; compiling (DEFUN IS-SIMPLE-AC-MATCH-OK? ...)
; file: /<<PKGBUILDDIR>>/chaos/e-match/match2.lisp
; in: DEFUN IS-SIMPLE-AC-MATCH-OK?
;     (LENGTH CHAOS::INDEP-VARS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFVAR *MATCH-DEP-VAR*)
; compiling (DEFUN DEP-MATCH ...)
; compiling (DEFUN MATCH-DEP-WITH-THEORY ...)
; compiling (DEFUN MATCH-IS-IDEM-OK? ...)
; compiling (DEFUN MATCH-IS-IDEM-OK2? ...)
; compiling (DEFUN MATCH-IS-IDEM-EXT-OK? ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/e-match/match2-tmpEHTOKYT0.fasl
; compilation finished in 0:00:00.352
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/sort.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MAKE-SORT-ID ...)
; compiling (DEFUN ADD-SORT-TO-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN ADD-SORT-TO-MODULE
;     (CHAOS::MARK-NEED-PARSING-PREPARATION MOD)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DEFINE-SORT ...)
; compiling (DEFUN DEFINE-BUILTIN-SORT ...)
; compiling (DEFUN ADD-BUILTIN-SORT ...)
; compiling (DEFUN DEFINE-AND-SORT ...)
; compiling (DEFUN DEFINE-OR-SORT ...)
; compiling (DEFUN DEFINE-ERR-SORT ...)
; compiling (DEFUN %COPY-SORT ...)
; compiling (DEFUN GLB-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN GLB-SORT
;     (LENGTH CHAOS::MEET)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN GATHER-AND-COMPONENTS ...)
; compiling (DEFUN CANONICALIZE-AND-COMPONENTS ...)
; compiling (DEFUN GLB-SORT-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN GLB-SORT-NAME
;     (STRING CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING CHAOS::Y)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (SORT
;      (MAPCAN
;       #'(LAMBDA (CHAOS::S)
;           (IF (CHAOS::AND-SORT-P CHAOS::S)
;               (MAPCAR #'# #)
;               (LIST #)))
;       CHAOS::SORTS)
;      #'(LAMBDA (CHAOS::X CHAOS::Y)
;          (STRING< (THE SIMPLE-STRING (STRING CHAOS::X))
;                   (THE SIMPLE-STRING (STRING CHAOS::Y)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (MAPCAR #'STRING (DELETE-DUPLICATES CHAOS::COMPO-NAMES :TEST #'EQ))
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK LET TAGBODY TAGBODY SB-KERNEL:%RPLACD 
; --> SETQ THE CONS FUNCALL SB-C::%FUNCALL 
; ==>
;   (STRING (CAR #:G1))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN MAKE-GLB-SORT ...)
; compiling (DEFUN JOIN-OF-SORTS ...)
; compiling (DEFMACRO LUB-SORT-NAME ...)
; compiling (DEFUN LUB-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN LUB-SORT
;     (LENGTH CHAOS::JOIN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN MAKE-LUB-SORT ...)
; compiling (DEFMACRO MAKE-ERR-SORT-NAME ...)
; compiling (DEFUN GENERATE-ERR-SORTS ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN GENERATE-ERR-SORTS
;     (CHAOS::MAKE-ERR-SORT-NAME CHAOS::SAME-COMPO)
; --> INTERN FORMAT SORT FUNCTION STRING< 
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SIMPLE-STRING.
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a SIMPLE-STRING.

; compiling (DEFUN DECLARE-SORT-IN-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN DECLARE-SORT-IN-MODULE
;     (CHAOS::SET-NEEDS-PARSE CHAOS::MODULE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN RECREATE-SORT ...)
; compiling (DEFUN RECREATE-SORTS ...)
; compiling (DEFUN !RECREATE-SORT ...)
; compiling (DEFUN !RECREATE-SORTS ...)
; compiling (DEFUN DECLARE-SUBSORT-IN-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/sort.lisp
; in: DEFUN DECLARE-SUBSORT-IN-MODULE
;     (CHAOS::SET-NEEDS-PARSE MOD)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN ADJOIN-SORT-RELATION ...)
; compiling (DEFUN DECLARE-SUBSORT-RELATION ...)
; compiling (DEFUN CONSTRUCT-SORT-RELATIONS ...)
; compiling (DEFUN UPDATE-SORT-ORDER ...)
; compiling (DEFUN FIND-COMPATIBLE-ERR-SORT ...)
; compiling (DEFUN METHOD->SORT-NAME ...)
; compiling (DEFUN GET-SORT-ID-VALUE ...)
; compiling (DEFUN GATHER-SORTS-WITH-ID ...)
; compiling (DECLAIM (SPECIAL .TEST-TERM-SORT-MEMBERSHIP-IN-PROGRESS.))
; compiling (DEFVAR .TEST-TERM-SORT-MEMBERSHIP-IN-PROGRESS. ...)
; compiling (DEFUN TEST-TERM-SORT-MEMBERSHIP ...)
; compiling (DEFUN SORT-IS-PARAMETERIZED ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/sort-tmpS6U1VHI9.fasl
; compilation finished in 0:00:00.413
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/operator.lisp" (written 04 MAR 2019 07:13:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN ON-DEBUG-OPERATOR ...)
; compiling (DEFUN OFF-DEBUG-OPERATOR ...)
; compiling (DECLAIM (INLINE STRATEGY-IS-LI?))
; compiling (DEFUN STRATEGY-IS-LI? ...)
; compiling (DEFUN DECLARE-OPERATOR-STRATEGY ...)
; compiling (DEFUN COMPLETE-STRATEGY ...)
; compiling (DEFVAR .THEORY-CODE-TABLE.)
; compiling (SETF .THEORY-CODE-TABLE. ...)
; compiling (DEFUN DECLARE-OPERATOR-THEORY ...)
; compiling (DEFUN COMPUTE-THEORY-FROM-ATTR-DECL ...)
; compiling (DEFUN DECLARE-OPERATOR-ASSOCIATIVITY ...)
; compiling (DEFUN DECLARE-OPERATOR-PRECEDENCE ...)
; compiling (DEFUN COMPUTE-MEMO ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/operator.lisp
; in: DEFUN COMPUTE-MEMO
;     (FIND-IF
;      #'(LAMBDA (CHAOS::I) (UNLESS (ATOM CHAOS::I) (EQUAL "memo" (CAR CHAOS::I))))
;      CHAOS::ATTR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN COMPUTE-METHOD-THEORY-FROM-ATTR-DECL ...)
; compiling (DEFUN DECLARE-METHOD-THEORY ...)
; compiling (DEFUN ADD-AND-MERGE-METHOD-THEORY ...)
; compiling (DEFUN SET-METHOD-THEORY ...)
; compiling (DEFUN CHECK-METHOD-THEORY-CONSISTENCY ...)
; compiling (DEFUN MERGE-OPERATOR-THEORY-IN ...)
; compiling (DEFUN DECLARE-METHOD-STRATEGY ...)
; compiling (DEFUN DECLARE-METHOD-ASSOCIATIVITY ...)
; compiling (DEFUN DECLARE-METHOD-PRECEDENCE ...)
; compiling (DEFUN DECLARE-METHOD-MEMO-ATTR ...)
; compiling (DEFUN DECLARE-METHOD-META-DEMOD-ATTR ...)
; compiling (DEFUN DECLARE-METHOD-CONSTR ...)
; compiling (DEFUN DECLARE-METHOD-COHERENT ...)
; compiling (DEFUN DECLARE-OPERATOR-IN-MODULE ...)
; compiling (DEFUN MAKE-OPERATOR-IN-MODULE ...)
; compiling (DEFUN CHECK-OVERLOADING-WITH-BUILTIN ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/operator.lisp
; in: DEFUN CHECK-OVERLOADING-WITH-BUILTIN
;     (FUNCALL CHAOS::TOKEN-PRED CHAOS::OPSTR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::TOKEN-PRED)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TOKEN-PRED is not known to be a function

; compiling (DEFUN ADD-OPERATOR-DECLARATION-TO-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/operator.lisp
; in: DEFUN ADD-OPERATOR-DECLARATION-TO-MODULE
;     (CHAOS::MARK-NEED-PARSING-PREPARATION MOD)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFMACRO FIND-OPERATOR-OR-WARN ...)
; compiling (DEFUN DECLARE-OPERATOR-STRATEGY-IN-MODULE ...)
; compiling (DEFUN DECLARE-OPERATOR-PRECEDENCE-IN-MODULE ...)
; compiling (DEFUN DECLARE-OPERATOR-ASSOCIATIVITY-IN-MODULE ...)
; compiling (DEFUN MAKE-METHOD-TABLE ...)
; compiling (DEFUN MAKE-METHOD-TABLE-INTERNAL ...)
; compiling (DEFMACRO FIND-OPERATOR-METHOD ...)
; compiling (DEFUN FIND-METHOD-IN-TABLE ...)
; compiling (DEFUN ADD-OPERATOR-DECLARATION-TO-TABLE ...)
; compiling (DEFUN ADD-METHOD-TO-TABLE ...)
; compiling (DEFUN ADD-METHOD-TO-TABLE-FAST ...)
; compiling (DEFUN ADD-METHOD-TO-TABLE-VERY-FAST ...)
; compiling (DEFUN RECREATE-METHOD ...)
; compiling (DEFUN METHOD< ...)
; compiling (DEFUN DELETE-ERROR-OPERATORS-IN ...)
; compiling (DEFUN MAKE-OPERATOR-CLUSTERS-IN ...)
; compiling (DEFUN METHOD-SELECT-MOST-GENERAL-VERSION-OF ...)
; compiling (DEFUN METHOD-MOST-GENERAL-NO-ERROR ...)
; compiling (DEFUN GET-NEW-ERROR-SORT-NAME-IN ...)
; compiling (DEFUN SETUP-USER-DEFINED-ERROR-OPERATORS-IN ...)
; compiling (DEFUN SETUP-ERROR-OPERATORS-IN ...)
; compiling (DEFUN SETUP-ERROR-OPERATOR ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/operator.lisp
; in: DEFUN SETUP-ERROR-OPERATOR
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (AND (EQUAL CHAOS::METHOD-NAME (CHAOS::METHOD-NAME CHAOS::X))
;               (CHAOS::SORT-LIST= CHAOS::ARITY (CHAOS::METHOD-ARITY CHAOS::X))
;               (CHAOS::SORT= CHAOS::ERR-COARITY
;                             (CHAOS::METHOD-COARITY CHAOS::X))))
;      CHAOS::PRE-ERRS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN MAKE-SEM-RELATION-OP ...)
; compiling (DEFUN MAKE-IF-THEN-ELSE-OP ...)
; compiling (DEFUN SETUP-IF-THEN-ELSE-IN ...)
; compiling (DEFUN SETUP-SEM-RELATIONS-IN ...)
; compiling (DEFPARAMETER MEMB-PREDICATE-NAME-TEMPLATE ...)
; compiling (DEFPARAMETER MEMB-PREDICATE-DECL-TEMPLATE ...)
; compiling (DEFUN MAKE-SORT-MEMB-DECL-FORM ...)
; compiling (DEFUN DECLARE-SORT-MEMB-PREDICATES ...)
; compiling (DEFUN DECLARE-SORT-ID-CONSTANTS ...)
; compiling (DEFUN SETUP-OPERATORS-IN ...)
; compiling (DEFUN SET-OPERATOR-SYNTACTIC-PROPERTIES ...)
; compiling (DEFUN MAKE-STANDARD-TOKEN-SEQ ...)
; compiling (DEFUN COMPUTE-METHOD-SYNTACTIC-PROPERTIES ...)
; compiling (DEFUN COMPUTE-ERROR-METHOD-SYNTACTIC-PROPERTIES ...)
; compiling (DEFUN COMPUTE-ERROR-METHOD-FORM ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/operator.lisp
; in: DEFUN COMPUTE-ERROR-METHOD-FORM
;     (INCF CHAOS::ARG-NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::ARG-NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN COMPUTE-GATHERING ...)
; compiling (DEFUN CHECK-POLIMORPHIC-OVERLOADING-IN ...)
; compiling (DEFUN METHODS-STRICTLY-OVERLOADING ...)
; compiling (DEFUN THE-DEFAULT-STRATEGY ...)
; compiling (DEFUN COMPLETE-METHOD-STRATEGY ...)
; compiling (DEFUN COMPUTE-REW-STRATEGY ...)
; compiling (DEFUN FIX-STRATEGY-AND-RULES ...)
; compiling (DEFUN PROPAGATE-ATTRIBUTES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/operator-tmpVTFK6ZJW.fasl
; compilation finished in 0:00:00.669
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/variable.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-VAR-NAME-OVERLOADING-WITH-BUILTIN ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/variable.lisp
; in: DEFUN CHECK-VAR-NAME-OVERLOADING-WITH-BUILTIN
;     (FUNCALL CHAOS::TOKEN-PRED CHAOS::VAR-NAME)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::TOKEN-PRED)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   TOKEN-PRED is not known to be a function

; compiling (DEFUN DECLARE-VARIABLE-IN-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/variable.lisp
; in: DEFUN DECLARE-VARIABLE-IN-MODULE
;     (CHAR CHAOS::VAR-NAME 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (ASSOC CHAOS::VAR-NAME (CHAOS::MODULE-VARIABLES MOD))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING CHAOS::VAR-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN DECLARE-PCONST-IN-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/variable.lisp
; in: DEFUN DECLARE-PCONST-IN-MODULE
;     (ASSOC CHAOS::VAR-NAME (CHAOS::MODULE-VARIABLES MOD))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING CHAOS::VAR-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN DECLARE-ERROR-VARIABLES-IN ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/variable-tmp75WVSJEW.fasl
; compilation finished in 0:00:00.096
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/match-method.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MATCH-NEXT-FAIL ...)
; compiling (DEFVAR *MATCH-EMPTY-METHOD* ...)
; compiling (DEFVAR *MATCH-IDEM-METHOD* ...)
; compiling (DEFVAR *MATCH-IDEM-EXT-METHOD* ...)
; compiling (DEFVAR *MATCH-DEP-METHOD* ...)
; compiling (DEFVAR *MATCH-ID-A-METHOD* ...)
; compiling (DEFVAR *MATCH-ID-AC-METHOD* ...)
; compiling (DEFVAR *MATCH-ID-A-DEP-METHOD* ...)
; compiling (DEFVAR *MATCH-ID-AC-DEP-METHOD* ...)
; compiling (DEFVAR *MATCH-ID-GEN-METHOD* ...)
; compiling (DEFVAR *MATCH-DEFAULT-METHOD* ...)
; compiling (DEFUN CHOOSE-MATCH-METHOD ...)
; compiling (DEFUN ID-A-MATCH ...)
; compiling (DEFUN ID-AC-MATCH ...)
; compiling (DEFUN ID-A-DEP-MATCH ...)
; compiling (DEFUN ID-AC-DEP-MATCH ...)
; compiling (DEFUN ID-GEN-MATCH ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/match-method-tmpBU5UM3S4.fasl
; compilation finished in 0:00:00.028
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/axiom.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-RULE ...)
; compiling (DEFUN MAKE-SIMPLE-AXIOM ...)
; compiling (DEFUN MAKE-FUN ...)
; compiling (DEFUN MAKE-FUN* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR XSIM-COUNTER ...)
; compiling (DEFUN CONVERT-LISP-FORM-TERM ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/axiom.lisp
; in: DEFUN CONVERT-LISP-FORM-TERM
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::V))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN CONVERT-CHAOS-EXPR ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/axiom.lisp
; in: DEFUN CONVERT-CHAOS-EXPR
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::V))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN INVOKE-GENERAL-LISP-FUN ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/axiom.lisp
; in: DEFUN INVOKE-GENERAL-LISP-FUN
;     (APPLY CHAOS::FUN CHAOS::BINDINGS)
; --> MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::FUN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   FUN is not known to be a function

; compiling (DEFUN IS-METALEVEL-SPECIAL-SORT ...)
; compiling (DEFUN INVOKE-SIMPLE-LISP-FUN ...)
; compiling (DEFUN EVAL-CHAOS-EXPR ...)
; compiling (DEFPARAMETER NON-EXEC-LABELS ...)
; compiling (DEFUN MAKE-EXT-RULE-LABEL ...)
; compiling (DEFUN COMPUTE-A-EXTENSIONS ...)
; compiling (DEFUN COMPUTE-AC-EXTENSION ...)
; compiling (DEFUN GIVE-AC-EXTENSION ...)
; compiling (DEFUN GIVE-A-EXTENSIONS ...)
; compiling (DEFUN COMPUTE-RULE-METHOD ...)
; compiling (DEFVAR COPY-CONDITIONS ...)
; compiling (DEFUN RULE-COPY ...)
; compiling (DEFUN TERM-COPY-ID-COND ...)
; compiling (DEFUN TERM-IS-CONGRUENT-2? ...)
; compiling (DEFUN RULE-IS-SIMILAR? ...)
; compiling (DEFUN RULE-MEMBER ...)
; compiling (DEFPARAMETER .EXT-RULE-KINDS. ...)
; compiling (DEFUN ADJOIN-RULE ...)
; compiling (DEFUN RULE-OCCURS ...)
; compiling (DEFUN RULE-RING-MEMBER ...)
; compiling (DEFUN RULE-RING-ADJOIN-RULE ...)
; compiling (DEFUN ADD-AXIOM-TO-MODULE ...)
; compiling (DEFUN ADJOIN-AXIOM-TO-MODULE ...)
; compiling (DEFUN ADD-RULE-TO-MODULE ...)
; compiling (DEFUN ADD-RULE-TO-METHOD ...)
; compiling (DEFUN RULE-SUBSUMES ...)
; compiling (DEFUN RULE-STRICTLY-SUBSUMES ...)
; compiling (DEFUN GET-RULE-NUMBERED ...)
; compiling (DEFUN GET-ALL-RULES-LABELLED ...)
; compiling (DEFUN GET-RULE-LABELLED ...)
; compiling (DEFUN MAKE-RULE-REVERSE ...)
; compiling (DEFUN MAKE-RULE-INSTANCE ...)
; compiling (DEFUN COMPUTE-ACTION-RULE ...)
; compiling (DEFVAR *OPTIMIZE-ERROR-OPERATORS* ...)
; compiling (DEFUN AXIOM-CONTAINS-ERROR-METHOD ...)
; compiling (DEFUN WARN-AXIOM-IF-CONTAINS-ERROR-OP ...)
; compiling (DEFUN CHECK-AXIOM-ERROR-METHOD ...)
; compiling (DEFUN RECREATE-ERROR-AXIOM ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/axiom-tmpOBHVA3CD.fasl
; compilation finished in 0:00:00.467
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/gen-rule.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN GENERATE-REWRITE-RULES ...)
; compiling (DEFUN VARIABLE-OCCURS-IN ...)
; compiling (DEFPARAMETER BAD-RULE-TYPES ...)
; compiling (DEFUN AXIOM-IS-NON-EXEC? ...)
; compiling (DEFUN CONDITION-HAS-MATCH-CONDITION ...)
; compiling (DEFUN AXIOM-IS-NOT-FOR-REWRITING ...)
; compiling (DEFUN CHECK-AXIOM-VALIDITY ...)
; compiling (DEFUN GEN-RULE-INTERNAL ...)
; compiling (DEFUN GATHER-SUBMODULE-RULES ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/gen-rule.lisp
; in: DEFUN GATHER-SUBMODULE-RULES
;     (CHAOS::MODULE-IS-READY-FOR-REWRITING (CAR CHAOS::SUBMODULE))
; --> >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN GET-DIS-SUBMODULE-AXIOMS ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/gen-rule.lisp
; in: DEFUN GET-DIS-SUBMODULE-AXIOMS
;     (CHAOS::MODULE-IS-READY-FOR-REWRITING (CAR CHAOS::SUBMODULE))
; --> >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFVAR *IGNORE-PROTECTED-MODULES* ...)
; compiling (DEFUN SPECIALIZE-RULE ...)
; compiling (DEFUN SPECIALIZE-FOR-METHODS ...)
; compiling (DEFUN ADD-ASSOCIATIVE-EXTENSIONS ...)
; compiling (DEFUN RULE-CHECK-DOWN ...)
; compiling (DEFUN SORT-IS-GENERAL ...)
; compiling (DEFUN COMPUTE-VAR-INFO ...)
; compiling (DEFUN NORMALIZE-RULES-IN ...)
; compiling (DEFUN CREATE-RULE-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/gen-rule.lisp
; in: DEFUN CREATE-RULE-NAME
;     (INCF (CHAOS::MODULE-CONTEXT-$$RULE-COUNTER (CHAOS::MODULE-CONTEXT MOD)))
; --> LET* 
; ==>
;   (+ 1 (SB-KERNEL:%INSTANCE-REF (THE CHAOS::MODULE-DYN-CONTEXT #:OBJ) 9))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN ADD-OPERATOR-THEORY-AXIOMS ...)
; compiling (DEFUN ADD-IDENTITY-COMPLETIONS ...)
; compiling (DEFUN ADD-IDENTITY-COMPLETIONS-INTERNAL ...)
; compiling (DEFUN TEST-BAD-AXIOM ...)
; compiling (DEFUN RULE-INF-MEMBER ...)
; compiling (DEFUN RULE-INF-SUBST-MEMBER ...)
; compiling (DEFUN TERM-OCCURS-AS-SUBTERM ...)
; compiling (DEFUN COMPUTE-VAR-FOR-IDENTITY-COMPLETIONS ...)
; compiling (DEFUN SELECT-VAR-FOR-IDENTITY-COMPLETIONS ...)
; compiling (DEFUN SELECT-VAR-FOR-IDENTITY-COMPLETIONS-ALT2 ...)
; compiling (DEFUN SELECT-VAR-FOR-IDENTITY-COMPLETIONS-ALT ...)
; compiling (DEFUN OCCURS-VAR-VAL ...)
; compiling (DEFUN INSERT-VAL ...)
; compiling (DEFUN RULE-MAKE-OR-LIST ...)
; compiling (DEFUN RULE-MAKE-AND-LIST ...)
; compiling (DEFUN RULE-MAKE-EQEQEQ ...)
; compiling (DEFUN RULE-MAKE-OR-COND ...)
; compiling (DEFUN RULE-MAKE-AND-COND ...)
; compiling (DEFVAR *ENABLE-ID-CONDITION* ...)
; compiling (DEFUN MAKE-ID-CONDITION ...)
; compiling (DEFUN MAKE-IMPROVED-ID-COND ...)
; compiling (DEFUN IMPROVE-ID-CND ...)
; compiling (DEFUN COMPUTE-ATOMIC ...)
; compiling (DEFUN CANONICALIZE-ATOMIC ...)
; compiling (DEFUN COMPUTE-ATOMIC-FREQ ...)
; compiling (DEFUN MEMBER-ATOMIC ...)
; compiling (DEFUN REMOVE-ATOMIC ...)
; compiling (DEFUN ASSOC-ATOMIC ...)
; compiling (DEFUN SAME-ATOMIC ...)
; compiling (DEFUN ELIM-SUPERSETS ...)
; compiling (DEFUN MAKE-ID-CONDITION-DIRECT ...)
; compiling (DEFUN NORMALIZE-FOR-IDENTITY-TOTAL ...)
; compiling (DEFUN TERM-SIMPLIFY ...)
; compiling (DEFUN NORMALIZE-FOR-IDENTITY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/gen-rule-tmpJ6ELVFLF.fasl
; compilation finished in 0:00:00.545
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/rwl.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-CONGRUENCE-AXIOM ...)
; compiling (DEFUN MAKE-TRANS-RELATIONS ...)
; compiling (DEFUN ADD-RWL-AXIOMS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/rwl-tmpULDB0RG.fasl
; compilation finished in 0:00:00.082
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/beh.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (BEH-STUFF #) ...)
; compiling (DEFUN PRINT-BEH-STUFF ...)
; compiling (DEFUN CONSTRUCT-BEH-STUFF ...)
; compiling (DEFUN ADD-BEH-EQUIVALENCE ...)
; compiling (DEFUN MAKE-BEH-PROOF-MOD-NAME ...)
; compiling (DEFMACRO DONT-BELIEVE-=*=-PROOF ...)
; compiling (DEFUN TRY-BEH-PROOF-IN ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/beh.lisp
; in: DEFUN TRY-BEH-PROOF-IN
;     (CHAOS::SET-NEEDS-RULE CHAOS::PROOF-MOD)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-RULE CHAOS::MODULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-RULE CHAOS::PROOF-MOD)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (CHAOS::SET-NEEDS-RULE CHAOS::MODULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN BEH-REWRITE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/beh-tmpUTZ0UUTE.fasl
; compilation finished in 0:00:00.273
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/module.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CREATE-MODULE ...)
; compiling (DEFUN !CREATE-MODULE ...)
; compiling (DEFUN MODULE-ALL-METHODS ...)
; compiling (DEFUN SIGNATURE-METHODS ...)
; compiling (DEFUN COMPUTE-PROTECTED-MODULES ...)
; compiling (DEFUN DO-COMPUTE-PROTECTED-MODULES ...)
; compiling (DEFUN RECONSTRUCT-MODULE-IF-NEED ...)
; compiling (DEFUN RECONSTRUCT-MODULE ...)
; compiling (DEFVAR *PREPARE-FOR-PARSE-HOOK* ...)
; compiling (DEFUN MODULE-INDIRECT-SUBMODULES ...)
; compiling (DEFUN PREPARE-FOR-PARSING ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/module.lisp
; in: DEFUN PREPARE-FOR-PARSING
;     (FUNCALL CHAOS::HOOK-FUN CHAOS::MODULE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::HOOK-FUN)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (ASSOC CHAOS::SUB CHAOS::ALS)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (CHAOS::MARK-MODULE-READY-FOR-PARSING CHAOS::MODULE)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 4.611686018427388d18)
;                               (SINGLE-FLOAT * 4.611686e18)
;                               (RATIONAL * 4611686018427387903)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::NEED-PARSING-PREPARATION CHAOS::MODULE)
; --> < IF 
; ==>
;   (< (CHAOS::MODULE-STATUS CHAOS::MODULE) CHAOS::MODULE-READY-PARSING)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

;     (CHAOS::MARK-MODULE-READY-FOR-PARSING CHAOS::MODULE)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFVAR *DO-=*=-PROOF* ...)
; compiling (DEFUN COMPILE-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/module.lisp
; in: DEFUN COMPILE-MODULE
;     (CHAOS::NEED-REWRITING-PREPARATION CHAOS::MODULE)
; --> < IF 
; ==>
;   (< (CHAOS::MODULE-STATUS CHAOS::MODULE) CHAOS::MODULE-READY-REWRITING)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN !SETUP-REDUCTION ...)
; compiling (DEFUN FINAL-SETUP ...)
; compiling (DEFUN COMPILE-MODULE-INTERNAL ...)
; compiling (DEFUN DO-DELAYED-DECLARATIONS ...)
; compiling (DEFUN CHECK-BEHAVIOURAL-RULES ...)
; compiling (DEFUN MODULE-ERROR-CHECK ...)
; compiling (DEFUN CHECK-SUBMODULES ...)
; compiling (DEFUN ADD-PARAMETER-THEOREM ...)
; compiling (DEFUN MODEXP-IS-SUBMODULE-OF ...)
; compiling (DEFUN PROPAGATE-MODULE-CHANGE ...)
; compiling (DEFUN DELETE-PARAMETERS ...)
; compiling (DEFUN PROPAGATE-VIEW-CHANGE ...)
; compiling (DEFUN CLEAN-UP-SUB-OBJECTS ...)
; compiling (DEFUN DELETE-MODULE ...)
; compiling (DEFUN DELETE-VIEW ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/module-tmpOOSRA8PZ.fasl
; compilation finished in 0:00:00.223
; compiling file "/<<PKGBUILDDIR>>/chaos/construct/trs.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN TRS-GET-MOD-OR-ERROR ...)
; compiling (DEFUN GET-MODULE-TRS-OR-ERROR ...)
; compiling (DEFUN GET-MODULE-TRS ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN GET-MODULE-TRS
;     (CHAOS::NEED-REWRITING-PREPARATION CHAOS::MODULE)
; ==>
;   (< (CHAOS::MODULE-STATUS CHAOS::MODULE) CHAOS::MODULE-READY-REWRITING)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN CHAOS->TRS ...)
; compiling (DEFUN PRINT-CHAOS-TRS ...)
; compiling (DEFUN MAKE-TRS-PRINT-FORM ...)
; compiling (DEFUN STRING-REPLACE-SPACE-WITH ...)
; compiling (DEFUN TRS-PROPER-SORT-P ...)
; compiling (DEFUN TRS-PROPER-SORT-P* ...)
; compiling (DEFVAR _TRS_MOD_NAME_HASH_ ...)
; compiling (DEFUN CLEAR-TRS-MOD-NAME-HASH ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR _TRS_MODULE_NAMES_ ...)
; compiling (DEFUN MAKE-TRS-MODULE-NAME-INTERNAL ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN MAKE-TRS-MODULE-NAME-INTERNAL
;     (INCF CHAOS::_TRS_MODULE_NAMES_)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::_TRS_MODULE_NAMES_)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN MAKE-TRS-MODULE-NAME ...)
; compiling (DEFUN MAKE-TRS-SORT-NAME ...)
; compiling (DEFUN MAKE-SORT-NAME-MAP ...)
; compiling (DEFUN MAP-CHAOS-SORT-TO-TRS ...)
; compiling (DEFUN MAP-CHAOS-SORT-TO-TRS-OR-PANIC ...)
; compiling (DEFUN MAP-TRS-SORT-TO-CHAOS ...)
; compiling (DEFUN MAKE-TRS-SORT-GRAPH ...)
; compiling (DEFPARAMETER TRS-OPERATOR-SPECIAL-TOKEN-MAP ...)
; compiling (DEFVAR *TRS-OPNAME-HASH* ...)
; compiling (DEFUN CLEAR-TRS-OPNAME-HASH ...)
; compiling (DEFUN CLEAR-TRS-DB ...)
; compiling (DEFUN TRS-PROPER-METHOD-P ...)
; compiling (DEFVAR *TRS-MODIFY-OPERATOR-NAME* ...)
; compiling (DEFUN TRS-CHECK-IF-BUILTIN-OP-FAMILY ...)
; compiling (DEFUN TRS-GET-REAL-METHOD-IF-DUMMY ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN TRS-GET-REAL-METHOD-IF-DUMMY
;     (RASSOC CHAOS::METHOD (CHAOS::TRS$DUMMY-METHODS CHAOS::TRS))
; ==>
;   (SB-KERNEL:%RASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN MAKE-TRS-OP-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN MAKE-TRS-OP-NAME
;     (STRING
;      (OR (CDR (CHAOS::ASSQ CHAOS::ERR-SORT CHAOS::SORT-NAME-MAP))
;          (CHAOS::SORT-ID CHAOS::ERR-SORT)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               CHARACTER SYMBOL), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               CHARACTER SYMBOL), not a STRING.

;     (LENGTH CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (CHAR CHAOS::NAME CHAOS::POS)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFUN MAKE-TRS-OP-INFO ...)
; compiling (DEFUN MAKE-TRS-OP-MAPS ...)
; compiling (DEFUN MAKE-TRS-METHOD-ATTR ...)
; compiling (DEFUN FIX-TRS-IDS ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN FIX-TRS-IDS
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X) (AND (CONSP CHAOS::X) (OR (EQ # :ID) (EQ # :IDR))))
;      CHAOS::INFO)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN MAP-CHAOS-OP-TO-TRS ...)
; compiling (DEFUN MAP-CHAOS-OP-TO-TRS-INFO ...)
; compiling (DEFUN TRS-REV-OP-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN TRS-REV-OP-NAME
;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN FIND-TRS-DUMMY-METHOD ...)
; compiling (DEFUN MAKE-TRS-DUMMY-METHOD ...)
; compiling (DEFUN MAKE-TRS-BUILTIN-BIN-OP-INFO ...)
; compiling (DEFUN MAKE-TRS-IF-THEN-ELSE-INFO ...)
; compiling (DEFUN MAKE-TRS-IF-THEN-ELSE-AXIOMS ...)
; compiling (DEFUN GET-TRS-TOP-SORTS ...)
; compiling (DEFUN GET-TRS-ERROR-SORTS ...)
; compiling (DEFUN MAKE-TRS-BIOPINFOS ...)
; compiling (DEFUN MAKE-TRS-BUILTIN-OP-MAPS ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN MAKE-TRS-BUILTIN-OP-MAPS
;     (DOLIST (SORT CHAOS::TOP-SORTS)
;       (UNLESS (CHAOS::SORT-IS-HIDDEN SORT)
;         (PUSH
;          (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE*
;           (LIST SORT SORT) CHAOS::*BOOL-SORT*)
;          CHAOS::REL-INFOS)
;         (PUSH
;          (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE2*
;           (LIST SORT CHAOS::*RWL-NAT-STAR-SORT* SORT) CHAOS::*BOOL-SORT*)
;          CHAOS::REL-INFOS)))
; --> BLOCK LET 
; ==>
;   CHAOS::TOP-SORTS
; 
; note: deleting unreachable code

;     (CHAOS::SORT-IS-HIDDEN SORT)
; --> CHAOS::SORT-HIDDEN SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF THE 
; ==>
;   SORT
; 
; note: deleting unreachable code

;     (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE*
;      (LIST SORT SORT) CHAOS::*BOOL-SORT*)
; ==>
;   CHAOS::TRS
; 
; note: deleting unreachable code

;     (PUSH
;      (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE*
;       (LIST SORT SORT) CHAOS::*BOOL-SORT*)
;      CHAOS::REL-INFOS)
; --> LET* SETQ THE CONS 
; ==>
;   CHAOS::REL-INFOS
; 
; note: deleting unreachable code

;     (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE2*
;      (LIST SORT CHAOS::*RWL-NAT-STAR-SORT* SORT) CHAOS::*BOOL-SORT*)
; ==>
;   CHAOS::TRS
; 
; note: deleting unreachable code

;     (PUSH
;      (CHAOS::MAKE-TRS-BUILTIN-BIN-OP-INFO CHAOS::TRS CHAOS::*RWL-PREDICATE2*
;       (LIST SORT CHAOS::*RWL-NAT-STAR-SORT* SORT) CHAOS::*BOOL-SORT*)
;      CHAOS::REL-INFOS)
; --> LET* SETQ THE CONS 
; ==>
;   CHAOS::REL-INFOS
; 
; note: deleting unreachable code

; compiling (DEFMACRO TRS-TERM-TYPE ...)
; compiling (DEFMACRO TRS-TERM-HEAD ...)
; compiling (DEFMACRO TRS-TERM-BUILTIN-VALUE ...)
; compiling (DEFMACRO TRS-TERM-SORT ...)
; compiling (DEFMACRO TRS-TERM-SUBTERMS ...)
; compiling (DEFUN TRS$MAKE-TERM-FORM ...)
; compiling (DEFUN TRS-SET-IF-THEN-SORT ...)
; compiling (DEFUN TRS-GET-IF-THEN-SORT ...)
; compiling (DEFUN TRS$MAKE-TERM-FORM* ...)
; compiling (DEFUN TRS-TERM-VARIABLES ...)
; compiling (DEFUN TRS-RE-MAKE-TERM-FORM ...)
; compiling (DEFUN RE-PRINT-TRS-TERM ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN RE-PRINT-TRS-TERM
;     (STRING (CHAOS::TRS-TERM-HEAD CHAOS::TRS-TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (<= CHAOS::PREC (CHAOS::GET-METHOD-PRECEDENCE CHAOS::HD))
; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN TRS$GET-AXIOMS ...)
; compiling (DEFUN GET-TRS-AXIOM ...)
; file: /<<PKGBUILDDIR>>/chaos/construct/trs.lisp
; in: DEFUN GET-TRS-AXIOM
;     (STRING (CAR CHAOS::LABEL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFMACRO TRS-AXIOM-TYPE ...)
; compiling (DEFMACRO TRS-AXIOM-LABEL ...)
; compiling (DEFMACRO TRS-AXIOM-LHS ...)
; compiling (DEFMACRO TRS-AXIOM-RHS ...)
; compiling (DEFMACRO TRS-AXIOM-CONDITION ...)
; compiling (DEFUN TRS-AXIOM-IS-BUILT-IN ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/construct/trs-tmpDMIL0RVK.fasl
; compilation finished in 0:00:00.884
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/mutils.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-PSUEDO-VARS ...)
; compiling (DEFUN MAKE-PSUEDO-VARS-FROM-SORTS ...)
; compiling (DEFUN APPROPRIATE-METHOD ...)
; compiling (DEFUN MODEXP-EVAL-PRINCIPAL-OP ...)
; compiling (DEFUN MODMORPH-CHECK-RANK ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/mutils-tmp8MR9IMIO.fasl
; compilation finished in 0:00:00.025
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN APPLY-MODMORPH ...)
; compiling (DEFUN APPLY-MODMORPH* ...)
; compiling (DECLAIM (SPECIAL *MODMORPH-LOCAL-VARS*))
; compiling (DEFVAR *MODMORPH-LOCAL-VARS* ...)
; compiling (DEFUN APPLY-MODMORPH-MAP-TO-OP-DECL ...)
; compiling (DEFUN APPLY-MODMORPH-INTERNAL ...)
; compiling (DEFUN MODMORPH-PREPARE-FOR-PARSING ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MODMORPH-PREPARE-FOR-PARSING
;     (CHAOS::MARK-MODULE-READY-FOR-PARSING MOD)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 4.611686018427388d18)
;                               (SINGLE-FLOAT * 4.611686e18)
;                               (RATIONAL * 4611686018427387903)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MAX LET LET IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN FIX-OPERATOR-MAPPING ...)
; compiling (DEFUN MODMORPH-FIND-MAPPED-SORTS ...)
; compiling (DEFUN MODMORPH-COPY-METHOD-ATTRIBUTES ...)
; compiling (DEFUN MODMORPH-FIND-USER-DEFINED-ERROR-METHOD ...)
; compiling (DEFUN MODMORPH-FIND-PROPER-ERROR-METHOD ...)
; compiling (DEFUN MODMORPH-FIND-ERROR-METHOD ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MODMORPH-FIND-ERROR-METHOD
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (AND (CHAOS::METHOD-P (CAR CHAOS::X))
;               (EQUAL (CHAOS::METHOD-SYMBOL #) CHAOS::NAME)
;               (= (THE FIXNUM #) CHAOS::ALEN)))
;      CHAOS::OPMAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN REPLACE-ERROR-METHOD ...)
; compiling (DEFUN MODMORPH-MODULE-IS-MAPPED ...)
; compiling (DEFUN MODMORPH-SUBMODULE-IS-MAPPED ...)
; compiling (DEFUN MODMORPH-IMPORT-SUBMODULES ...)
; compiling (DEFUN MODMORPH-IMPORT-SUBMODULE ...)
; compiling (DEFUN MODMORPH-MAP-SUBMODULE ...)
; compiling (DEFVAR *MODMORPH-EXPANDED* ...)
; compiling (DEFUN MODMORPH-CONSTRUCT-NAME ...)
; compiling (DEFUN MODMORPH-RECONSTRUCT-NAME ...)
; compiling (DEFUN TARGET-OF-VIEW-ARG ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *X-ANON-VIEW-NAME* ...)
; compiling (DEFUN MAKE-ANON-VIEW-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MAKE-ANON-VIEW-NAME
;     (INCF CHAOS::*X-ANON-VIEW-NAME*)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::*X-ANON-VIEW-NAME*)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN MODMORPH-RECONSTRUCT-VIEW-ARG ...)
; compiling (DEFUN MODMORPH-RECONSTRUCT-VIEW-SORT-MAPPING ...)
; compiling (DEFUN MODMORPH-RECONSTRUCT-VIEW-OP-MAPPING ...)
; compiling (DEFUN APPLY-OP-MAPPING-2 ...)
; compiling (DEFUN MODMORPH-APPLY-OP-MAP-2 ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MODMORPH-APPLY-OP-MAP-2
;     (ASSOC (CHAOS::TERM-HEAD CHAOS::TERM) CHAOS::OP_MAP)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (ASSOC CHAOS::OM (CHAOS::MODMORPH-MODULE MAP))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN MODMORPH-COMPUTE-SUBMODULE-MAPPINGS ...)
; compiling (DEFUN MODMORPH-RECREATE-SORT ...)
; compiling (DEFUN MODMORPH-RECREATE-SORT-RELATIONS ...)
; compiling (DEFUN MODMORPH-MERGE-SORT-RELATIONS ...)
; compiling (DEFUN MODMORPH-SORT-IMAGE-CREATE ...)
; compiling (DEFUN MODMORPH-SORTS-IMAGE-CREATE ...)
; compiling (DEFUN MODMORPH-SORT-IMAGE ...)
; compiling (DEFUN MODMORPH-SORTS-IMAGE ...)
; compiling (DEFUN MODMORPH-RECREATE-METHOD ...)
; compiling (DEFUN MODMORPH-RECREATE-METHOD-AUX-1 ...)
; compiling (DEFUN MODMORPH-RECREATE-METHOD-AUX-2 ...)
; compiling (DEFUN MODMORPH-UPDATE-THEORY ...)
; compiling (DEFUN MODMORPH-RECREATE-TERM ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MODMORPH-RECREATE-TERM
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (AND (EQUAL CHAOS::VAR-NAME (CHAOS::VARIABLE-NAME CHAOS::X))
;               (CHAOS::SORT= CHAOS::IMG-SORT (CHAOS::VARIABLE-SORT CHAOS::X))))
;      CHAOS::*MODMORPH-LOCAL-VARS*)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (ASSOC CHAOS::HEAD CHAOS::OPMAP)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (ASSOC (CHAOS::METHOD-MODULE CHAOS::HEAD) CHAOS::MODMAP)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN MODMORPH-RECREATE-AXIOM ...)
; compiling (DEFUN MODMORPH-MERGE ...)
; compiling (DEFUN MODMORPH-MERGE-ASSOC ...)
; compiling (DEFUN MODMORPH-OP-MAP-IS-IDENT ...)
; compiling (DEFUN MODMORPH-MERGE-OP-ASSOC ...)
; compiling (DEFUN MODMORPH-SAME-OP-IMAGE ...)
; compiling (DEFUN MODMORPH-FIND-SORT-IN ...)
; compiling (DEFUN MODMORPH-FIND-OPERATOR-NAMED-IN ...)
; compiling (DEFUN APPLY-OP-MAPPING ...)
; compiling (DEFUN APPLY-OP-MAP ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN APPLY-OP-MAP
;     (ASSOC (CHAOS::TERM-HEAD CHAOS::TERM) CHAOS::OP-MAP)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFVAR .MAPPING-DEBUG. ...)
; compiling (DEFUN MAPPING-IMAGE ...)
; compiling (DEFUN MAPPING-IMAGE-2 ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/modmorph.lisp
; in: DEFUN MAPPING-IMAGE-2
;     (ASSOC CHAOS::OM (CHAOS::MODMORPH-MODULE MAP))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN VIEW-GET-IMAGE-OF-AXIOMS ...)
; compiling (DEFUN MODMORPH-GET-IMAGE-OF-AXIOMS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/modmorph-tmpJQDKAVAY.fasl
; compilation finished in 0:00:01.153
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN COMPOSE-RENAMES ...)
; compiling (DEFUN RMAP-SORT-MATCH ...)
; compiling (DEFUN IMAGE-RENAME-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN IMAGE-RENAME-SORT
;     (FIND-IF
;      #'(LAMBDA (CHAOS::Y) (CHAOS::RMAP-SORT-MATCH CHAOS::X (CAR CHAOS::Y)))
;      CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN IMAGE-RENAME-OP ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN IMAGE-RENAME-OP
;     (FIND-IF #'(LAMBDA (CHAOS::Y) (EQUAL CHAOS::X (CAR CHAOS::Y))) CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN IMAGE-RENAME-PARAM ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN IMAGE-RENAME-PARAM
;     (FIND-IF #'(LAMBDA (CHAOS::Y) (EQUAL CHAOS::X (CAR CHAOS::Y))) CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN INVERSE-IMAGE-RENAME-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN INVERSE-IMAGE-RENAME-SORT
;     (FIND-IF
;      #'(LAMBDA (CHAOS::Y) (CHAOS::RMAP-SORT-MATCH CHAOS::X (CAR CHAOS::Y)))
;      CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN *IMAGE-RENAME-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN *IMAGE-RENAME-SORT
;     (FIND-IF #'(LAMBDA (CHAOS::Y) (CHAOS::SORT= CHAOS::X (CAR CHAOS::Y))) MAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN *IMAGE-RENAME-SORTS ...)
; compiling (DEFUN *IMAGE-RENAME-METHOD ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN *IMAGE-RENAME-METHOD
;     (FIND-IF #'(LAMBDA (CHAOS::Y) (EQ CHAOS::X (CAR CHAOS::Y))) MAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN REDUCE-RENAME ...)
; compiling (DEFUN IS-RENAME-INJECTIVE ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mrmap.lisp
; in: DEFUN IS-RENAME-INJECTIVE
;     (FIND-IF
;      #'(LAMBDA (CHAOS::Y)
;          (AND (NOT (EQ CHAOS::X CHAOS::Y)) (EQUAL (CAR CHAOS::X) (CAR CHAOS::Y))
;               (NOT (EQUAL # #))))
;      CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (FIND-IF
;      #'(LAMBDA (CHAOS::Y)
;          (AND (NOT (EQ CHAOS::X CHAOS::Y)) (NOT (EQUAL # #))
;               (EQUAL (CADR CHAOS::X) (CADR CHAOS::Y))))
;      CHAOS::REN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN RENAME-SORT ...)
; compiling (DEFUN RENAME-SORTS ...)
; compiling (DEFUN RENAME-RECORD ...)
; compiling (DEFUN RENAME-OP ...)
; compiling (DEFUN TRANSFER-METHOD ...)
; compiling (DEFUN TRANSFER-METHOD-AXIOMS ...)
; compiling (DEFUN REDUCE-RENAME-DUMMY ...)
; compiling (DEFUN FIX-SORT-RENAMING ...)
; compiling (DEFUN FIX-METHOD-RENAMING ...)
; compiling (DEFUN RENAME-RECREATE-THEORY ...)
; compiling (DEFUN FIND-SOME-METHOD-IN ...)
; compiling (DEFUN RECREATE-RENAMED-SORT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/mrmap-tmp3I8CEEQY.fasl
; compilation finished in 0:00:00.219
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/meval.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN EVAL-MODEXP-TOP ...)
; compiling (DECLAIM (SPECIAL *ON-AUTOLOAD*))
; compiling (DEFVAR *ON-AUTOLOAD* ...)
; compiling (DEFUN EVAL-MODEXP+ ...)
; compiling (DEFUN EVAL-MODEXP ...)
; compiling (DEFUN EVAL-MODEXP* ...)
; compiling (DECLAIM (SPECIAL *COPY-VARIABLES*))
; compiling (DEFVAR *COPY-VARIABLES* ...)
; compiling (DEFUN CREATE-RENAMED-MODULE ...)
; compiling (DEFUN CREATE-RENAMED-MODULE-2 ...)
; compiling (DEFUN CREATE-PLUS ...)
; compiling (DEFUN CREATE-INSTANTIATION ...)
; compiling (DEFUN EVAL-VIEW-ARG ...)
; compiling (DEFUN FIND-RENAMING-SORT-IN ...)
; compiling (DEFUN CREATE-RENAME ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/meval-tmpA3RHFLWZ.fasl
; compilation finished in 0:00:00.147
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/view.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *MODEXP-ABSTRACT-MODULE*))
; compiling (DEFVAR *MODEXP-ABSTRACT-MODULE* ...)
; compiling (DEFUN VIEWS-TO-MODMORPH ...)
; compiling (DEFUN VIEW->MODMORPH ...)
; compiling (DEFUN CONVERT-VIEW-TO-MODMORPH ...)
; compiling (DEFUN MAKE-REAL-VIEW ...)
; compiling (DEFUN VIEW-MAP-IMAGE-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN VIEW-MAP-IMAGE-SORT
;     (FIND-IF #'(LAMBDA (CHAOS::V) (CHAOS::SORT= CHAOS::X (CAR CHAOS::V)))
;              CHAOS::SORT-MAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN VIEW-MAP-IMAGE-SORTS ...)
; compiling (DEFUN COMPLETE-VIEW ...)
; compiling (DEFUN PRINCIPAL-SORT ...)
; compiling (DEFUN CREATE-VIEW ...)
; compiling (DEFUN *FIND-SORT-IN-MAP ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN *FIND-SORT-IN-MAP
;     (FIND-IF #'(LAMBDA (CHAOS::Y) (CHAOS::SORT= CHAOS::X (CAR CHAOS::Y))) MAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN *FIND-METHOD-IN-MAP ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN *FIND-METHOD-IN-MAP
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (IF (CHAOS::OPERATOR-METHOD-P (CAR CHAOS::X))
;              (EQ CHAOS::METHOD (CAR CHAOS::X))
;              (EQ CHAOS::METHOD (CHAOS::TERM-HEAD #))))
;      CHAOS::OP-MAPPING)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN COMPUTE-SORT-MAPPINGS ...)
; compiling (DEFUN COMPUTE-SORT-MAPPING ...)
; compiling (DEFUN COMPUTE-OP-MAPPINGS ...)
; compiling (DEFUN RESOLVE-OP-PATTERN-AS-TERM ...)
; compiling (DEFUN SPLIT-STR ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN SPLIT-STR
;     (LENGTH CHAOS::STR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ CHAOS::STR CHAOS::INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (CHAR CHAOS::STR CHAOS::I)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFUN DELIMIT-OP-PAT ...)
; compiling (DEFUN RESOLVE-OP-PATTERN-AS-REFERENCE ...)
; compiling (DEFUN COMPUTE-OP-MAPPING ...)
; compiling (DEFVAR *VIEW-MAP-OPERATOR-STRICTLY* ...)
; compiling (DEFUN FIND-METHOD-MAPPED ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN FIND-METHOD-MAPPED
;     (LENGTH CHAOS::ARITY)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN FIND-SORTS-IMAGE* ...)
; compiling (DEFUN FIND-SORT-IMAGE* ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/view.lisp
; in: DEFUN FIND-SORT-IMAGE*
;     (FIND-IF #'(LAMBDA (CHAOS::X) (CHAOS::SORT= SORT (CAR CHAOS::X)))
;              CHAOS::SORT-MAP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/view-tmpYZIB7VXO.fasl
; compilation finished in 0:00:00.406
; compiling file "/<<PKGBUILDDIR>>/chaos/decafe/mimport.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *IMPORT-SORT-MAP* ...)
; compiling (DEFUN IMPORT-MODULE ...)
; compiling (DEFUN IMPORT-MODULE-INTERNAL ...)
; compiling (DECLAIM (SPECIAL *IMPORT-LOCAL-VARS*))
; compiling (DEFVAR *IMPORT-LOCAL-VARS* ...)
; compiling (DECLAIM (SPECIAL *IMPORT-USE-DECL-FORM*))
; compiling (DEFVAR *IMPORT-USE-DECL-FORM* ...)
; compiling (DEFUN INCORPORATE-MODULE ...)
; compiling (DEFUN INCORPORATE-MODULE-SHARING ...)
; compiling (DEFUN INCORPORATE-MODULE-COPYING ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mimport.lisp
; in: DEFUN INCORPORATE-MODULE-COPYING
;     (CHAOS::USING-RECREATE-TERM (CHAOS::TERM)
;      (COND
;       ((CHAOS::TERM-IS-BUILTIN-CONSTANT? CHAOS::TERM)
;        (CHAOS::MAKE-BCONST-TERM (CHAOS::USING-FIND-SORT-ERR #)
;                                 (CHAOS::TERM-BUILTIN-VALUE CHAOS::TERM)))
;       ((CHAOS::TERM-IS-VARIABLE? CHAOS::TERM)
;        (LET (# #)
;          (LET #
;            #)))
;       ((CHAOS::TERM-IS-LISP-FORM? CHAOS::TERM) CHAOS::TERM)
;       (T
;        (LET (#)
;          (LET #
;            #
;            #)))))
; 
; note: Return type not fixed values, so can't use known return convention:
;   *

;     (CHAOS::USING-IMPORT-SUBS (CHAOS::SMOD)
;      (DOLIST (CHAOS::S (REVERSE (CHAOS::MODULE-DIRECT-SUBMODULES CHAOS::SMOD)))
;        (CHAOS::USING-IMPORT-SUB (CAR CHAOS::S) (CDR CHAOS::S))))
; 
; note: Return value count mismatch prevents known return from these functions:
;   USING-IMPORT-SUBS

;     (CHAOS::USING-FIND-SORT-ERR (CHAOS::S)
;      (LET ((SORT (CDR #)))
;        (COND (SORT SORT)
;              ((CHAOS::ERR-SORT-P CHAOS::S) (SETQ #)
;               (IF SORT
;                   #
;                   #))
;              (T CHAOS::S))))
; 
; note: Return type not fixed values, so can't use known return convention:
;   *

; compiling (DEFUN TRANSFER-OPERATOR ...)
; compiling (DEFUN IMPORT-OPERATOR-AXIOMS ...)
; compiling (DEFUN DELAY-AXIOM-IMPORTATION ...)
; compiling (DEFUN IMPORT-AN-AXIOM ...)
; compiling (DEFUN MODEXP-ADD-METHOD-TO-TABLE ...)
; file: /<<PKGBUILDDIR>>/chaos/decafe/mimport.lisp
; in: DEFUN MODEXP-ADD-METHOD-TO-TABLE
;     (PUSHNEW CHAOS::METHOD (CHAOS::OPINFO-METHODS CHAOS::OPINFO))
; --> LET* ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN TRANSFER-OPERATOR-ATTRIBUTES ...)
; compiling (DEFUN TRANSFER-OPERATOR-THEORY ...)
; compiling (DEFUN MODEXP-MERGE-OPERATOR-THEORY ...)
; compiling (DEFUN TRANSFER-OPERATOR-ATTRS ...)
; compiling (DEFPARAMETER *IMPORT-BOOL-AST* ...)
; compiling (DEFPARAMETER *IMPORT-HARD-WIRED-AST* ...)
; compiling (DEFUN INCLUDE-CHAOS-MODULE ...)
; compiling (DEFUN INCLUDE-BOOL ...)
; compiling (DEFPARAMETER *IMPORT-OBJECT-AST* ...)
; compiling (DEFUN INCLUDE-OBJECT ...)
; compiling (DEFPARAMETER *IMPORT-RECORD-AST* ...)
; compiling (DEFUN INCLUDE-RECORD ...)
; compiling (DEFPARAMETER *IMPORT-RWL-AST* ...)
; compiling (DEFUN INCLUDE-RWL ...)
; compiling (DEFUN IMPORT-VARIABLES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/decafe/mimport-tmpR8PK79V8.fasl
; compilation finished in 0:00:00.659
; compiling file "/<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL .TRACE-OR-STEP.) ...)
; compiling (DEFVAR .TRACE-OR-STEP. ...)
; compiling (DEFVAR *MEMO-DEBUG* ...)
; compiling (DEFVAR *TERM-MEMO-TABLE* ...)
; compiling (DEFVAR *MEMOIZED-MODULE* ...)
; compiling (DEFUN CREATE-TERM-MEMO-TABLE ...)
; compiling (DEFUN CLEAR-TERM-MEMO-TABLE ...)
; compiling (DEFUN DUMP-TERM-HASH ...)
; compiling (DEFVAR *TERM-ID-DEBUG* ...)
; compiling (DEFVAR .ID-CONF. ...)
; compiling (DEFUN LONGEST-TERM-ID ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp
; in: DEFUN LONGEST-TERM-ID
;     (LENGTH CHAOS::KEY)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (> CHAOS::KEYLEN CHAOS::MAXLEN)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DECLAIM (INLINE TERM-ID))
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *TERM-ID-LIMIT* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *HASH-COUNT-LIMIT* ...)
; compiling (DECLAIM (SPECIAL .IGNORE-TERM-ID-LIMIT.))
; compiling (DEFVAR .IGNORE-TERM-ID-LIMIT. ...)
; compiling (DEFVAR .TERM-ID-PARANOIA. ...)
; compiling (DEFUN TERM-ID ...)
; compiling (DECLAIM (INLINE GET-HASHED-TERM))
; compiling (DEFUN GET-HASHED-TERM ...)
; compiling (DECLAIM (INLINE SET-HASHED-TERM))
; compiling (DEFUN SET-HASHED-TERM ...)
; compiling (DEFVAR *CAFEIN-CURRENT-RULE* ...)
; compiling (DEFVAR *CAFEIN-CURRENT-SUBST* ...)
; compiling (DEFVAR *MATCHED-TO-STOP-PATTERN* ...)
; compiling (DECLAIM (INLINE SET-TERM-COLOR))
; compiling (DEFUN SET-TERM-COLOR ...)
; compiling (DEFUN SET-TERM-COLOR-TOP ...)
; compiling (DEFMACRO BEH-CONTEXT-OK? ...)
; compiling (DECLAIM (INLINE APPLY-RULES-WITH-SAME-TOP ...))
; compiling (DECLAIM (INLINE PRINT-TRACE-IN))
; compiling (DEFUN PRINT-TRACE-IN ...)
; compiling (DECLAIM (INLINE PRINT-TRACE-OUT))
; compiling (DEFUN PRINT-TRACE-OUT ...)
; compiling (DECLAIM (INLINE TERM-REPLACE-DD-SIMPLE))
; compiling (DEFUN TERM-REPLACE-DD-SIMPLE ...)
; compiling (DECLAIM (INLINE TERM-REPLACE-DD-DBG))
; compiling (DEFUN TERM-REPLACE-DD-DBG ...)
; compiling (DECLAIM (SPECIAL *M-PATTERN-SUBST* ...))
; compiling (DEFVAR *M-PAT-DEBUG* ...)
; compiling (DEFUN !APPLY-ONE-RULE ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp
; in: DEFUN !APPLY-ONE-RULE
;     (FUNCALL CHAOS::NEXT-MATCH-METHOD CHAOS::GLOBAL-STATE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::NEXT-MATCH-METHOD)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-MATCH-METHOD is not known to be a function

;     (FUNCALL
;      (OR (THE SYMBOL (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::RULE))
;          (PROGN
;           (WHEN CHAOS::*CHAOS-VERBOSE*
;             (CHAOS::WITH-OUTPUT-CHAOS-WARNING NIL # # #))
;           (CHAOS::COMPUTE-RULE-METHOD CHAOS::RULE)
;           (SYMBOL-FUNCTION (THE SYMBOL #))))
;      (CHAOS::RULE-LHS CHAOS::RULE) CHAOS::TERM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (OR (THE SYMBOL (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::RULE))
;        (PROGN
;         (WHEN CHAOS::*CHAOS-VERBOSE*
;           (CHAOS::WITH-OUTPUT-CHAOS-WARNING NIL # # #))
;         (CHAOS::COMPUTE-RULE-METHOD CHAOS::RULE)
;         (SYMBOL-FUNCTION (THE SYMBOL #)))))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DECLAIM (INLINE APPLY-RULES-WITH-SAME-TOP))
; compiling (DEFUN APPLY-RULES-WITH-SAME-TOP ...)
; compiling (DECLAIM (INLINE APPLY-RULES-WITH-DIFFERENT-TOP))
; compiling (DEFUN APPLY-RULES-WITH-DIFFERENT-TOP ...)
; compiling (DEFUN APPLY-RULES ...)
; compiling (DEFUN APPLY-A-EXTENSIONS ...)
; compiling (DEFUN APPLY-AC-EXTENSION ...)
; compiling (DEFUN RULE-EVAL-TERM ...)
; compiling (DEFUN RULE-EVAL-ID-CONDITION ...)
; compiling (DEFUN APPLY-RULE ...)
; compiling (DEFUN REDUCE-TERM ...)
; compiling (DEFUN REWRITE ...)
; compiling (DEFUN REWRITE* ...)
; compiling (DEFUN REWRITE-EXEC ...)
; compiling (DECLAIM (INLINE TERM-MEMO-GET-NORMAL-FORM))
; compiling (DEFUN TERM-MEMO-GET-NORMAL-FORM ...)
; compiling (DEFUN NORMALIZE-TERM ...)
; compiling (DEFUN !NORMALIZE-TERM ...)
; compiling (DEFUN CAFEIN-PATTERN-MATCH ...)
; compiling (DEFUN CHECK-STOP-PATTERN ...)
; compiling (DEFPARAMETER CAFEIN-STEPPER-PROCS ...)
; compiling (DEFUN CAFEIN-STEPPER ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp
; in: DEFUN CAFEIN-STEPPER
;     (FIND-IF #'(LAMBDA (ELT) (MEMBER CHAOS::KEY (CAR ELT) :TEST #'EQUAL))
;              CHAOS::CAFEIN-STEPPER-PROCS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (FUNCALL (CDR CHAOS::PROC) CHAOS::INP)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CDR CHAOS::PROC))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (LET ((CHAOS::INP (CHAOS::GET-STEP-COMMAND)))
;                                (UNLESS (LISTP CHAOS::INP)
;                                  (RETURN-FROM CHAOS::NEXT-LOOP))
;                                (WHEN
;                                    (MEMBER (CAR CHAOS::INP)
;                                            '("eof" "q" ":q" "quit" ":quit"
;                                              CHAOS::EOF)
;                                            :TEST #'EQUAL)
;                                  (CHAOS::STEP-OFF)
;                                  (RETURN-FROM CHAOS::CAFEIN-STEPPER NIL))
;                                (LET* ((CHAOS::KEY #) (CHAOS::PROC #))
;                                  (IF CHAOS::PROC
;                                      (FUNCALL # CHAOS::INP)
;                                      (PROGN #)))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (LET ((CHAOS::INP #))
;                                                             (UNLESS
;                                                                 (LISTP
;                                                                  CHAOS::INP)
;                                                               (RETURN-FROM
;                                                                   CHAOS::NEXT-LOOP))
;                                                             (WHEN
;                                                                 (MEMBER # '#
;                                                                         :TEST
;                                                                         #'EQUAL)
;                                                               (CHAOS::STEP-OFF)
;                                                               (RETURN-FROM
;                                                                   CHAOS::CAFEIN-STEPPER
;                                                                 NIL))
;                                                             (LET* (# #)
;                                                               (IF CHAOS::PROC
;                                                                   #
;                                                                   #)))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFVAR *STEP-COMMANDS* ...)
; compiling (DEFUN GET-STEP-COMMAND ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp
; in: DEFUN GET-STEP-COMMAND
;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (WHEN CHAOS::TOP-LEVEL?
;                                                             (FORMAT T
;                                                                     "~%STEP[~D]? "
;                                                                     CHAOS::*RULE-COUNT*)
;                                                             (FORCE-OUTPUT))
;                                                           (CHAOS::READER
;                                                            'CHAOS::STEP-COMMANDS
;                                                            CHAOS::*STEP-COMMANDS*)))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (WHEN CHAOS::TOP-LEVEL?
;                                (FORMAT T "~%STEP[~D]? " CHAOS::*RULE-COUNT*)
;                                (FORCE-OUTPUT))
;                              (CHAOS::READER 'CHAOS::STEP-COMMANDS
;                                             CHAOS::*STEP-COMMANDS*))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (SETQ *STEP-COMMANDS* ...)
; compiling (DEFUN CAFEIN-REWRITE-COUNT-LIMIT-PROC ...)
; compiling (DEFUN PARSE-STOP-AT ...)
; compiling (DEFUN CAFEIN-STOP-AT-PROC ...)
; compiling (DEFUN CAFEIN-GO-STEP-PROC ...)
; compiling (DEFUN CAFEIN-NEXT-STEP-PROC ...)
; compiling (DEFUN CAFEIN-CONTINUE-STEP-PROC ...)
; compiling (DEFUN CAFEIN-ABORT-STEP-PROC ...)
; compiling (DEFUN CAFEIN-STEP-SHOW-RULE-PROC ...)
; compiling (DEFUN CAFEIN-STEP-SHOW-SUBST-PROC ...)
; compiling (DEFUN CAFEIN-STEPPER-HELP-PROC ...)
; compiling (DEFUN CAFEIN-SHOW-REWRITE-LIMIT ...)
; compiling (DEFUN CAFEIN-SHOW-STOP-PATTERN ...)
; compiling (DEFUN CAFEIN-SHOW-CONTEXT-TERM ...)
; compiling (DEFUN REW-MATCHER ...)
; compiling (DECLAIM (INLINE UNDER-DEBUG-REWRITE))
; compiling (DEFUN UNDER-DEBUG-REWRITE ...)
; compiling (DEFUN APPLY-ONE-RULE ...)
; compiling (DEFVAR .MEMB-TERM-HASH. ...)
; compiling (DEFVAR .MEMB-LAST-MODULE. ...)
; compiling (DEFUN CLEAR-MEMB-HASH ...)
; compiling (DEFUN GET-MEMB-HASH ...)
; compiling (DEFUN SET-MEMB-HASH ...)
; compiling (DEFUN APPLY-SORT-MEMB ...)
; compiling (DEFUN SORT-TO-SORT-ID-TERM ...)
; compiling (DECLAIM (SPECIAL .SORT-MEMB-NESTING.))
; compiling (DEFVAR .SORT-MEMB-NESTING. ...)
; compiling (DEFPARAMETER .SORT-MEMB-NESTING-LIMIT. ...)
; compiling (DEFUN APPLY-SORT-MEMB-INTERNAL ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/rengine.lisp
; in: DEFUN APPLY-SORT-MEMB-INTERNAL
;     (CHAOS::SUB-OR-EQUAL-SORTS SORT CHAOS::*CURRENT-SORT-ORDER*)
; --> LET IF CONS CHAOS::ERR-SORT-LOWERS SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF 
; --> THE 
; ==>
;   SORT
; 
; note: deleting unreachable code

; --> LET IF CONS 
; ==>
;   SORT
; 
; note: deleting unreachable code

;     (1+ CHAOS::.SORT-MEMB-NESTING.)
; ==>
;   (+ CHAOS::.SORT-MEMB-NESTING. 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (> CHAOS::.SORT-MEMB-NESTING. CHAOS::.SORT-MEMB-NESTING-LIMIT.)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (1+ CHAOS::.SORT-MEMB-NESTING.)
; ==>
;   (+ CHAOS::.SORT-MEMB-NESTING. 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a T, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a T, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (> CHAOS::.SORT-MEMB-NESTING. CHAOS::.SORT-MEMB-NESTING-LIMIT.)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a T, not a SINGLE-FLOAT.
;       The second argument is a T, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a T, not a DOUBLE-FLOAT.
;       The second argument is a T, not a DOUBLE-FLOAT.
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/cafein/rengine-tmpN1ZVB1HZ.fasl
; compilation finished in 0:00:00.910
; compiling file "/<<PKGBUILDDIR>>/chaos/cafein/cbred.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL *CBRED-TRACE-FLAG*))
; compiling (DEFVAR *CBRED-TRACE-FLAG* ...)
; compiling (DECLAIM (SPECIAL *COBASIS* ...))
; compiling (DEFVAR *COBASIS* ...)
; compiling (DEFVAR *COBASIS-OPS* ...)
; compiling (DEFVAR *CO-RULES* ...)
; compiling (DEFUN MAKE-COBASIS-PATTERN ...)
; compiling (DEFVAR .CBRED-NEW-VARIABLE-NAME. ...)
; compiling (LET (#) ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/cbred.lisp
; in: DEFUN CBRED-MAKE-NEW-VARIABLE
;     (INCF CHAOS::VARNUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::VARNUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN EXPAND-GOAL-BY-COB ...)
; compiling (DEFUN APPLY-CO-RULES ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/cbred.lisp
; in: DEFUN APPLY-CO-RULES
;     (PUSHNEW (CAR (CHAOS::RULE-LABELS CHAOS::RULE)) CHAOS::APPLIED)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN CBRED-PRINT-TERM-PAIR ...)
; compiling (LET (#) ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/cbred.lisp
; in: DEFUN NEXT-CRULE-LABEL
;     (INCF CHAOS::.CRULE-LABEL-NUM.)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::.CRULE-LABEL-NUM.)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN CBRED-GOAL ...)
; compiling (DEFUN FIND-OCC ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/cbred.lisp
; in: DEFUN FIND-OCC
;     (FUNCALL CHAOS::PREDICATE CHAOS::TERM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PREDICATE)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PREDICATE is not known to be a function

;     (1+ CHAOS::NUM-IF)
; ==>
;   (+ CHAOS::NUM-IF 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a T, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a T, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN CBRED-ORIENT-RULE ...)
; compiling (DEFUN ADD-NEW-CRULE ...)
; compiling (DEFUN TERM-CONTAINS-BEH-CONTEXT ...)
; compiling (DEFUN CBRED-DEDUCE ...)
; compiling (DEFUN DO-CBRED ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/cafein/cbred-tmpZGRRPISB.fasl
; compilation finished in 0:00:00.323
; compiling file "/<<PKGBUILDDIR>>/chaos/cafein/reducer.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (LET (# # ...) ...)
; file: /<<PKGBUILDDIR>>/chaos/cafein/reducer.lisp
; in: DEFUN GENERATE-STATISTICS-FORM-REWRITING-ONLY
;     (ZEROP (CHAOS::NUMBER-MEMO-HITS))
; ==>
;   (= (CHAOS::NUMBER-MEMO-HITS) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; in: DEFUN GENERATE-STATISTICS-FORM
;     (ZEROP (CHAOS::NUMBER-MEMO-HITS))
; ==>
;   (= (CHAOS::NUMBER-MEMO-HITS) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/cafein/reducer-tmpFNKDE5XP.fasl
; compilation finished in 0:00:00.167
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/regcheck.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (SOP # ...) ...)
; compiling (DEFUN PRINT-SOP ...)
; compiling (DEFUN IS-SORT-MARKED? ...)
; compiling (DEFUN MARK-SORT ...)
; compiling (DEFUN UNMARK-SORTS ...)
; compiling (DEFMACRO GET-UNMARKED-SORTS ...)
; compiling (DEFUN CHECK-SIGNATURE-EMPTIES ...)
; compiling (DEFVAR *REGULARIZE-GLB-SORTS-SO-FAR* ...)
; compiling (DEFVAR *REGULARIZE-SORTS-TO-BE-ADDED* ...)
; compiling (DEFVAR *REGULARIZE-METHODS-SO-FAR* ...)
; compiling (DEFVAR *REGULARIZE-METHODS-TO-BE-ADDED* ...)
; compiling (DEFVAR *REGULARIZE-OPTIMIZE* ...)
; compiling (DEFUN REGULARIZE-MAKE-GLB ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/regcheck.lisp
; in: DEFUN REGULARIZE-MAKE-GLB
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (WHEN CHAOS::*REGULARIZE-OPTIMIZE*
;            (CHAOS::REG-SORT-INCLUDED CHAOS::X CHAOS::GLB CHAOS::SO)
;            (EQUAL (CHAOS::SORT-ID CHAOS::GLB) (CHAOS::SORT-ID CHAOS::X))))
;      CHAOS::*REGULARIZE-GLB-SORTS-SO-FAR*)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN REG-DIRECT-SUBSORTS ...)
; compiling (DEFUN REG-SUB-OR-EQUAL-SORTS ...)
; compiling (DEFUN REG-DIRECT-SUB-OR-EQUAL-SORTS ...)
; compiling (DEFUN REG-SORT<= ...)
; compiling (DEFUN REG-SORT-INCLUDED ...)
; compiling (DEFUN REG-SORT-LIST<= ...)
; compiling (DEFUN REG-SORT< ...)
; compiling (DEFUN REG-SORT-LIST= ...)
; compiling (DEFUN EXAMINE-REGULARITY ...)
; compiling (DEFUN REG-REPORT-METHOD ...)
; compiling (DEFUN REG-METHOD-ARITY ...)
; compiling (DEFUN REG-METHOD-COARITY ...)
; compiling (DEFUN CHECK-METHOD-REDUNDANCY ...)
; compiling (DEFUN CHECK-REGULARITY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/regcheck-tmpRJTU435C.fasl
; compilation finished in 0:00:00.276
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/regularize.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN REGULARIZE-SIGNATURE-INTERNAL ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/regularize.lisp
; in: DEFUN REGULARIZE-SIGNATURE-INTERNAL
;     (PUSHNEW CHAOS::METH (CHAOS::MODULE-METHODS-FOR-REGULARITY CHAOS::MODULE))
; --> LET* ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN REGULARIZE-SIGNATURE ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/regularize.lisp
; in: DEFUN REGULARIZE-SIGNATURE
;     (CHAOS::MARK-NEED-PARSING-PREPARATION CHAOS::MODULE)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/regularize-tmpI9WG87JK.fasl
; compilation finished in 0:00:00.032
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/describe.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN FILTER-HARD-SORTS ...)
; compiling (DEFUN FILTER-HARD-OPINFOS ...)
; compiling (DEFPARAMETER .SEPARATOR-BOLD. ...)
; compiling (DEFPARAMETER .SEPARATOR-THIN. ...)
; compiling (DEFPARAMETER .UNDER-LINE. ...)
; compiling (DEFUN DESCRIBE-MODULE ...)
; compiling (DEFUN DESCRIBE-OPERATOR-BRIEF ...)
; compiling (DEFUN DESCRIBE-SORT ...)
; compiling (DEFUN DESCRIBE-OPERATOR ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN DESCRIBE-OPERATOR
;     (STRING (CDR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-MERGED ...)
; compiling (DEFUN SHOW-MODULE ...)
; compiling (DEFUN IGNORE-FROM-IMPORT-LIST ...)
; compiling (DEFUN SHOW-MODULE-IN-CAFEOBJ-SYNTAX ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN SHOW-MODULE-IN-CAFEOBJ-SYNTAX
;     (STRING (CHAOS::PARAMETER-IMPORTED-MODE CHAOS::SB))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (DELETE-IF
;      #'(LAMBDA (CHAOS::X) (CHAOS::IGNORE-FROM-IMPORT-LIST (CAR CHAOS::X)))
;      CHAOS::SUBS)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

;     (STRING (CDR CHAOS::SB))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (ASSOC (CAR CHAOS::SB) (CHAOS::MODULE-ALIAS MOD))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING (CDR CHAOS::SB))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME (CDR CHAOS::V)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (CHAOS::MODULE-IS-READY-FOR-REWRITING MOD)
; --> >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN SHOW-MODULE-IN-CHAOS-SYNTAX ...)
; compiling (DEFUN SORTS-TO-BE-SHOWN ...)
; compiling (DEFUN PRINT-MODULE-SORTS ...)
; compiling (DEFUN PRINT-OUT-SORTS ...)
; compiling (DEFUN PRINT-OUT-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN PRINT-OUT-SORT
;     (FUNCALL CHAOS::PRINTER CHAOS::S MOD)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

;     (FUNCALL CHAOS::PRINTER CHAOS::SUPER MOD)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

;     (FUNCALL CHAOS::PRINTER CHAOS::SUB MOD)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRINTER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRINTER is not known to be a function

; compiling (DEFUN MODULE-OWN-OP-METHODS ...)
; compiling (DEFUN OPS-TO-BE-SHOWN ...)
; compiling (DEFUN PRINT-MODULE-OPS ...)
; compiling (DEFUN PRINT-MODULE-EQS ...)
; compiling (DEFUN PRINT-MODULE-RLS ...)
; compiling (DEFUN PRINT-MODULE-AXS ...)
; compiling (DEFUN PRINT-MODULE-RULES ...)
; compiling (DEFUN GET-NON-PARAMETER-SUBMODULES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN GET-NON-PARAMETER-SUBMODULES
;     (MEMBER (CAR CHAOS::SB) CHAOS::SKIP)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN PRINT-SUBMODULE-LIST ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN PRINT-SUBMODULE-LIST
;     (STRING (CDR CHAOS::SB))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-MODULE-SUBMODULES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN PRINT-MODULE-SUBMODULES
;     (STRING (CDR CHAOS::SB))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-MODULE-PARAMETERS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN PRINT-MODULE-PARAMETERS
;     (STRING (CHAOS::PARAMETER-IMPORTED-MODE CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-MODULE-SORT ...)
; compiling (DEFUN PRINT-MODULE-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/describe.lisp
; in: DEFUN PRINT-MODULE-VARIABLES
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::V))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/describe-tmpYDE6I9E6.fasl
; compilation finished in 0:00:00.342
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/sort-tree.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-MODULE-SORT-TREE ...)
; compiling (DEFUN MAKE-SORT-TREE ...)
; compiling (DEFUN PRINT-SORT-TREE ...)
; compiling (DEFUN PRINT-SORT-GRAPH ...)
; compiling (DEFUN !PRINT-SORT-TREE ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/sort-tree.lisp
; in: DEFUN !PRINT-SORT-TREE
;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN PRINT-MODULE-SORT-TREE ...)
; compiling (DEFUN PRINT-MODULE-SORT-GRAPH ...)
; compiling (DEFUN !PRINT-MODULE-SORT-TREE ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/sort-tree.lisp
; in: DEFUN !PRINT-MODULE-SORT-TREE
;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/sort-tree-tmp319UV2V8.fasl
; compilation finished in 0:00:00.040
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/module-tree.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-SUBMODULE-TREE ...)
; compiling (DEFUN MAKE-MODULE-TREE ...)
; compiling (DEFUN PRINT-MODULE-TREE ...)
; compiling (DEFUN PRINT-MODULE-GRAPH ...)
; compiling (DEFUN !PRINT-MODULE-TREE ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/module-tree.lisp
; in: DEFUN !PRINT-MODULE-TREE
;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN GET-MODEXP-CHILDREN ...)
; compiling (DEFUN PRINT-MODEXP-TREE ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/module-tree.lisp
; in: DEFUN PRINT-MODEXP-TREE
;     (FUNCALL CHAOS::LEAF-NAME CHAOS::TREE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN PRINT-SUBS-LIST ...)
; compiling (DEFUN PRINT-MOD-NAME-X ...)
; compiling (DEFUN PRINT-MOD-NAME-INTERNAL-X ...)
; compiling (DEFVAR .MOD-DUP-HASH. ...)
; compiling (DEFUN DESCRIBE-MODULE-TREE ...)
; compiling (DEFUN DESCRIBE-MODULE-GRAPH ...)
; compiling (DEFUN PR-IMP-MODE ...)
; compiling (DEFUN MOD-NAME-IS-PARAMETER ...)
; compiling (DEFUN D-MODULE-TREE* ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/module-tree.lisp
; in: DEFUN D-MODULE-TREE*
;     (FORMAT STREAM "~a: " CHAOS::NUM)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~a: "
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING ": " STREAM))
;             NIL)
;           #:G33)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (INCF CHAOS::Y-NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::Y-NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/module-tree-tmpLYQINFYS.fasl
; compilation finished in 0:00:00.128
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/show.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN SHOW-CONTEXT ...)
; compiling (DEFUN SHOW-BINDINGS ...)
; compiling (DEFUN SHOW-STOP-PATTERN ...)
; compiling (DEFUN SHOW-APPLY-SELECTION ...)
; compiling (DEFUN SHOW-SELECTION-STACK ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/show.lisp
; in: DEFUN SHOW-SELECTION-STACK
;     (1- CHAOS::DEPTH)
; ==>
;   (- CHAOS::DEPTH 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (DOTIMES (CHAOS::I (1- CHAOS::DEPTH)) (PRINC "    "))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a UNSIGNED-BYTE, not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PROGN SETQ THE 1+ 
; ==>
;   (+ CHAOS::I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (INCF CHAOS::DEPTH)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::DEPTH)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN PRINT-PENDING ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/show.lisp
; in: DEFUN PRINT-PENDING
;     (- CHAOS::DEPTH 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (DOTIMES (CHAOS::I (- CHAOS::DEPTH 1)) (PRINC "   "))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a UNSIGNED-BYTE, not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PROGN SETQ THE 1+ 
; ==>
;   (+ CHAOS::I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (DOTIMES (CHAOS::I CHAOS::DEPTH) (PRINC "   "))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a (INTEGER 1), not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PROGN SETQ THE 1+ 
; ==>
;   (+ CHAOS::I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a (INTEGER 1), not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PROGN SETQ THE 1+ 
; ==>
;   (+ CHAOS::I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (INCF CHAOS::DEPTH)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::DEPTH)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN SHOW-TERM ...)
; compiling (DEFUN PRINT-MOD ...)
; compiling (DEFUN SHOW-VIEW ...)
; compiling (DEFUN SHOW-SORTS ...)
; compiling (DEFUN SHOW-OPS ...)
; compiling (DEFUN SHOW-SIGN ...)
; compiling (DEFUN PRINT-VARS ...)
; compiling (DEFUN PRINT-EQS ...)
; compiling (DEFUN PRINT-AXS ...)
; compiling (DEFUN PRINT-RLS ...)
; compiling (DEFUN PRINT-RULES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/show.lisp
; in: DEFUN PRINT-RULES
;     (INCF CHAOS::I)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::I)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN PRINT-SUBS ...)
; compiling (DEFUN PRINT-PARAMS ...)
; compiling (DEFUN TOP-PRINT-NAME ...)
; compiling (DEFUN PRINT-PRINCIPAL-SORT ...)
; compiling (DEFUN SHOW-SORT ...)
; compiling (DEFUN PARSE-OP-NAME ...)
; compiling (DEFUN GET-MODULE-FROM-OPREF ...)
; compiling (DEFUN RESOLVE-OPERATOR-REFERENCE ...)
; compiling (DEFUN SHOW-OP ...)
; compiling (DEFUN SHOW-SUB ...)
; compiling (DEFUN SHOW-PARAM ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/show.lisp
; in: DEFUN SHOW-PARAM
;     (1+ CHAOS::NO)
; ==>
;   (+ CHAOS::NO 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN PRINT-MODULES ...)
; compiling (DEFUN PRINT-VIEWS ...)
; compiling (DEFUN SHOW-TERM-MEMO-TABLE ...)
; compiling (DEFUN PRINT-TERM-HORIZONTAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/show-tmpGA31XWNO.fasl
; compilation finished in 0:00:00.234
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/set.lisp" (written 18 OCT 2019 12:45:43 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO CHAOS-SWITCH-KEY ...)
; compiling (DEFMACRO CHAOS-SWITCH-SUBKEY ...)
; compiling (DEFMACRO CHAOS-SWITCH-TYPE ...)
; compiling (DEFMACRO CHAOS-SWITCH-VAR ...)
; compiling (DEFMACRO CHAOS-SWITCH-DOC ...)
; compiling (DEFMACRO CHAOS-SWITCH-ON-PROC ...)
; compiling (DEFMACRO CHAOS-SWITCH-OFF-PROC ...)
; compiling (DEFMACRO CHAOS-SWITCH-SET-PROC ...)
; compiling (DEFMACRO CHAOS-SWITCH-HIDDEN ...)
; compiling (DEFPARAMETER *CHAOS-SWITCHES* ...)
; compiling (DEFUN SET-CHAOS-SWITCH ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/set.lisp
; in: DEFUN SET-CHAOS-SWITCH
;     (LENGTH CHAOS::OPT)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (FUNCALL CHAOS::ON-PROC)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::ON-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   ON-PROC is not known to be a function

;     (FUNCALL CHAOS::OFF-PROC)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::OFF-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   OFF-PROC is not known to be a function

;     (FUNCALL (CHAOS::CHAOS-SWITCH-SET-PROC CHAOS::SW) CHAOS::DAT)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CHAOS-SWITCH-SET-PROC CHAOS::SW))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN CHECK-PARITY ...)
; compiling (DEFUN SHOW-MODES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/set.lisp
; in: DEFUN SHOW-MODES
;     (LENGTH CHAOS::OPT)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN SHOW-MODE ...)
; compiling (DEFUN PRINT-SET-HELP ...)
; compiling (DEFUN SAVE-SWITCHES ...)
; compiling (DEFUN RESTORE-SWITCHES ...)
; compiling (DEFUN SAVE-SWITCH ...)
; compiling (DEFUN RESTORE-SWITCH ...)
; compiling (DEFUN CHAOS-SET-SEARCH-PATH ...)
; compiling (DEFUN CHAOS-SET-TRAM-PATH ...)
; compiling (DEFUN CHAOS-SET-TRAM-OPTIONS ...)
; compiling (DEFUN CHAOS-SET-SHOW-MODE ...)
; compiling (DEFUN CHAOS-SET-CEXEC-LIMIT ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/set.lisp
; in: DEFUN CHAOS-SET-CEXEC-LIMIT
;     (LENGTH (CAR CHAOS::VALUE))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN CHAOS-SET-PRINT-DEPTH ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/set.lisp
; in: DEFUN CHAOS-SET-PRINT-DEPTH
;     (LENGTH (CAR CHAOS::VALUE))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN CHAOS-SET-PRINT-MODE ...)
; compiling (DEFUN CHAOS-OBSOLETE-PRINT-FANCY ...)
; compiling (DEFUN CHAOS-OBSOLETE-PRINT-TREE ...)
; compiling (DEFUN CHAOS-SET-BOOL-PATH ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/set-tmp5HT23M6C.fasl
; compilation finished in 0:00:00.144
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/op-check.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-METHOD-STRICTNESS ...)
; compiling (DEFUN CHECK-OPERATOR-STRICTNESS ...)
; compiling (DEFUN CHECK-OPERATOR-STRICTNESS-WHOLE ...)
; compiling (DEFUN SHOW-METHOD-STRICTNESS-REPORT ...)
; compiling (DEFUN METHOD-CONTAINED-IN ...)
; compiling (DEFUN CHECK-METHOD-COHERENCY ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/op-check.lisp
; in: DEFUN CHECK-METHOD-COHERENCY
;     (INCF CHAOS::CON-COUNT)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::CON-COUNT)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN PERFORM-CONTEXT-MATCH ...)
; compiling (DEFVAR .OP-FOUND. ...)
; compiling (DEFUN CHECK-DEF-RHS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/op-check.lisp
; in: DEFUN CHECK-DEF-RHS
;     (< 1 CHAOS::.OP-FOUND.)
; --> > IF 
; ==>
;   (> SB-C::Y SB-C::X)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFUN CHECK-DEF-RHS* ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/op-check.lisp
; in: DEFUN CHECK-DEF-RHS*
;     (INCF CHAOS::.OP-FOUND.)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::.OP-FOUND.)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (LENGTH CHAOS::OCCURRENCE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (1+ CHAOS::X)
; ==>
;   (+ CHAOS::X 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (>= CHAOS::CONTEXT-DEPTH (LENGTH CHAOS::OCCURRENCE))
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 4.611686018427388d18)
;                               (SINGLE-FLOAT * 4.611686e18)
;                               (RATIONAL * 4611686018427387900)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (INCF CHAOS::.OP-FOUND.)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::.OP-FOUND.)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (>= CHAOS::CONTEXT-DEPTH (LENGTH CHAOS::OCCURRENCE))
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (1+ CHAOS::X)
; ==>
;   (+ CHAOS::X 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN CHECK-OPERATOR-COHERENCY ...)
; compiling (DEFUN CHECK-OPERATOR-COHERENCY-WHOLE ...)
; compiling (DEFUN CHECK-OPERATOR-CONGRUENCY ...)
; compiling (DEFUN CHECK-METHOD-CONGRUENCY ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/op-check.lisp
; in: DEFUN CHECK-METHOD-CONGRUENCY
;     (<= (- (LENGTH CHAOS::OCC-R) CHAOS::NUM-IF-R) (LENGTH CHAOS::OCC-L))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 0.0d0) (SINGLE-FLOAT 0.0)
;                               (RATIONAL 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (- (LENGTH CHAOS::OCC-R) CHAOS::NUM-IF-R)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The second argument is a NUMBER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 64)
;                                                                &REST T).
;       etc.

;     (<= (- (LENGTH CHAOS::OCC-R) CHAOS::NUM-IF-R) (LENGTH CHAOS::OCC-L))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN SUBSTITUTION-IMAGE2 ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/op-check.lisp
; in: DEFUN SUBSTITUTION-IMAGE2
;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM) CHAOS::SIGMA)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::LISP-FORM-FUNCTION CHAOS::TERM))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/op-check-tmpA60KLDKY.fasl
; compilation finished in 0:00:00.326
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/compat.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-COMPATIBILITY ...)
; compiling (DEFUN FIND-COMPAT-METHOD ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/compat.lisp
; in: DEFUN FIND-COMPAT-METHOD
;     (LENGTH CHAOS::ARITY)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (EVERY #'(LAMBDA (CHAOS::X CHAOS::Y) (CHAOS::SORT<= CHAOS::X CHAOS::Y))
;            CHAOS::ARITY (CHAOS::METHOD-ARITY CHAOS::METH))
; --> LET BLOCK SB-INT:DX-FLET FLET 
; ==>
;   (SB-KERNEL:%MAP NIL #'#:WRAPPER8 CHAOS::ARITY
;                   (CHAOS::METHOD-ARITY CHAOS::METH))
; 
; note: unable to open code because: can't determine sequence argument type


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/compat-tmpD801X3GJ.fasl
; compilation finished in 0:00:00.099
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/help.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *HELP-DB* ...)
; compiling (DEFUN GET-DESCRIPTION ...)
; compiling (DEFUN READ-HELP-DB ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/help-tmpGOW1GC70.fasl
; compilation finished in 0:00:00.149
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/inspect.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN SHOW-MODULE-SYMBOL-TABLE ...)
; compiling (DEFVAR .CURRENT-CHAR-INDEX. ...)
; compiling (DEFUN DESCRIBE-NAME ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN DESCRIBE-NAME
;     (CHAR CHAOS::PRINT-NAME 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (FORMAT STREAM "~%** [~a] -----------------------------------------"
;             (STRING-UPCASE CHAOS::.CURRENT-CHAR-INDEX.))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%** [~a] -----------------------------------------"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; ** ["
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING "] -----------------------------------------"
;                             STREAM))
;             NIL)
;           #:G6)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%~A~10T"
;             (IF (SYMBOLP CHAOS::NAME)
;                 (STRING CHAOS::NAME)
;                 CHAOS::NAME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%~A~10T"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\Newline STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (LET (# #)
;                 (SB-FORMAT::FORMAT-ABSOLUTE-TAB STREAM #:FVAR9 #:FVAR10)))
;             NIL)
;           #:G16)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%No object with name ~A found." CHAOS::NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%No object with name ~A found."
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; No object with name "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING " found." STREAM))
;             NIL)
;           #:G26)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-PARAMETERS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-PARAMETERS
;     (FORMAT STREAM "- parameter theory ~A(type ~S)" CHAOS::NAME
;             (TYPE-OF CHAOS::NAME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- parameter theory ~A(type ~S)"
;               (STREAM SB-FORMAT::FORMAT-ARG1 SB-FORMAT::FORMAT-ARG2 &REST
;                SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- parameter theory " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING "(type " STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG2 STREAM)
;               (WRITE-CHAR #\) STREAM))
;             NIL)
;           #:G7 #:G8)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM ", declared in ~A" CHAOS::CONTEXT-NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$, declared in ~A"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING ", declared in " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G19)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-SUBMODULES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-SUBMODULES
;     (ASSOC CHAOS::OBJ (CHAOS::MODULE-SUBMODULES MOD))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (FORMAT STREAM "- direct sub-module")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- direct sub-module"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING "- direct sub-module" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM ", alias of module ")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$, alias of module "
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING ", alias of module " STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "- parameter theory")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- parameter theory"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING "- parameter theory" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "- indirect sub-module")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- indirect sub-module"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING "- indirect sub-module" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM ", alias of module ")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$, alias of module "
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING ", alias of module " STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM ", declared in ~A" CHAOS::CONTEXT-NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$, declared in ~A"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING ", declared in " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G90)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (ASSOC CHAOS::NAME (CHAOS::MODULE-ALIAS MOD))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (FORMAT STREAM ", renamed (original name = ~a)."
;             (WITH-OUTPUT-TO-STRING (CHAOS::STR)
;               (CHAOS::PRINT-MOD-NAME CHAOS::OBJ CHAOS::STR T)))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$, renamed (original name = ~a)."
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING ", renamed (original name = " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING ")." STREAM))
;             NIL)
;           #:G128)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN GET-CONTEXT-NAME-FOR-QUALIFY ...)
; compiling (DEFUN INSPECT-SHOW-SORTS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-SORTS
;     (FORMAT STREAM "- hidden sort declared in ~a" CHAOS::CONTEXT-NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- hidden sort declared in ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- hidden sort declared in " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G7)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "- sort declared in ~a" CHAOS::CONTEXT-NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- sort declared in ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- sort declared in " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G17)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (FORMAT STREAM "  the name must be qualified for disambiguation: ~A.~A"
;             (STRING CHAOS::NAME) CHAOS::QNAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$  the name must be qualified for disambiguation: ~A.~A"
;               (STREAM SB-FORMAT::FORMAT-ARG1 SB-FORMAT::FORMAT-ARG2 &REST
;                SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "  the name must be qualified for disambiguation: "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\. STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG2 STREAM))
;             NIL)
;           #:G27 #:G28)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (RASSOC (CHAOS::OBJECT-CONTEXT-MOD CHAOS::OBJ) (CHAOS::MODULE-ALIAS MOD))
; ==>
;   (SB-KERNEL:%RASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING CHAOS::NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (FORMAT STREAM "  the name must be qualified for disambiguation: ~A.~A"
;             (STRING CHAOS::NAME) (CAR CHAOS::A-NAME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$  the name must be qualified for disambiguation: ~A.~A"
;               (STREAM SB-FORMAT::FORMAT-ARG1 SB-FORMAT::FORMAT-ARG2 &REST
;                SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "  the name must be qualified for disambiguation: "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\. STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG2 STREAM))
;             NIL)
;           #:G54 #:G55)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "  the name must be qualified for disambiguation,")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$  the name must be qualified for disambiguation,"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "  the name must be qualified for disambiguation,"
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "  but the module name is not simple one:")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$  but the module name is not simple one:"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "  but the module name is not simple one:" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-OPERATORS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-OPERATORS
;     (FORMAT STREAM "- operator:")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- operator:"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING "- operator:" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-AXIOMS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-AXIOMS
;     (FORMAT STREAM "- axiom declared in ~a" CHAOS::CONTEXT-NAME)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- axiom declared in ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- axiom declared in " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G7)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-VARIABLES
;     (FORMAT STREAM "- variable of sort ~a"
;             (WITH-OUTPUT-TO-STRING (CHAOS::STR)
;               (CHAOS::PRINT-SORT-NAME (CHAOS::VARIABLE-SORT CHAOS::OBJ) MOD
;                                       CHAOS::STR)))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- variable of sort ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- variable of sort " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G29)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-SHOW-UNKNOWNS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/inspect.lisp
; in: DEFUN INSPECT-SHOW-UNKNOWNS
;     (FORMAT STREAM "- unknown object ~s" CHAOS::OBJ)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$- unknown object ~s"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "- unknown object " STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G7)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN INSPECT-INTERNAL-ERROR ...)
; compiling (DEFUN !INSPECT-MODULE ...)
; compiling (DEFUN INSPECT-CANON-NAME ...)
; compiling (DEFUN !LOOK-UP ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/inspect-tmpPQ1X28TL.fasl
; compilation finished in 0:00:00.123
; compiling file "/<<PKGBUILDDIR>>/chaos/tools/sensible.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-SENSIBLE ...)
; compiling (DEFUN CHECK-OP-SENSIBLENESS ...)
; file: /<<PKGBUILDDIR>>/chaos/tools/sensible.lisp
; in: DEFUN CHECK-OP-SENSIBLENESS
;     (PUSHNEW CHAOS::METHOD CHAOS::VIO-PAIR)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (PUSHNEW CHAOS::M2 CHAOS::VIO-PAIR)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN IS-SENSIBLE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tools/sensible-tmpE92ECU7O.fasl
; compilation finished in 0:00:00.090
; compiling file "/<<PKGBUILDDIR>>/chaos/eval/eval-mod.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MODEXP-TOP-LEVEL-EVAL ...)
; compiling (DEFUN EVAL-MOD ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-mod.lisp
; in: DEFUN EVAL-MOD
;     (LENGTH (CAR CHAOS::TOKS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ (CAR CHAOS::TOKS) 0 3)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (SUBSEQ (CAR CHAOS::TOKS) 3)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN PRINT-NTH-MOD ...)
; compiling (DEFUN EVAL-MOD-EXT ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-mod.lisp
; in: DEFUN EVAL-MOD-EXT
;     (1- CHAOS::NO)
; ==>
;   (- CHAOS::NO 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/eval/eval-mod-tmp8S0II570.fasl
; compilation finished in 0:00:00.025
; compiling file "/<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN RESOLVE-SORT-REF ...)
; compiling (DEFUN RESOLVE-OR-DEFINE-SORT ...)
; compiling (DEFUN DECLARE-SORT ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-SORT
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-PSORT ...)
; compiling (DEFUN EVAL-PSORT-DECLARATION ...)
; compiling (DEFUN DECLARE-BSORT ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-BSORT
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-SUBSORT ...)
; compiling (DEFUN FIND-QUAL-OPERATORS ...)
; compiling (DEFUN DECLARE-OPERATOR ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-OPERATOR
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::MARK-NEED-PARSING-PREPARATION CHAOS::*CURRENT-MODULE*)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = 
; --> IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (CHAOS::MARK-NEED-PARSING-PREPARATION CHAOS::*CURRENT-MODULE*)
; --> SETF SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-OPERATOR-ATTRIBUTES ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-OPERATOR-ATTRIBUTES
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-VARIABLE ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-VARIABLE
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-PCONST ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-PCONST
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN IS-LISP-FORM-TOKEN-SEQUENCE ...)
; compiling (DEFUN IS-CHAOS-VALUE-TOKEN-SEQUENCE ...)
; compiling (DEFVAR .SPECIAL-META-RULE-LABELS. ...)
; compiling (DEFUN PARSE-AXIOM-DECLARATION ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN PARSE-AXIOM-DECLARATION
;     (MEMBER CHAOS::ML LABELS)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN DECLARE-AXIOM-NOW ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-AXIOM-NOW
;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-AXIOM ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN DECLARE-AXIOM
;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN EVAL-LET ...)
; compiling (DEFUN EVAL-MACRO ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN EVAL-MACRO
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DECLARE-MODULE ...)
; compiling (DEFUN DECLARE-VIEW ...)
; compiling (DEFUN EVAL-IMPORT-MODEXP ...)
; compiling (DEFUN PROCESS-LABELS ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast.lisp
; in: DEFUN PROCESS-LABELS
;     (DELETE "," CHAOS::X :TEST #'EQUAL)
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

;     (FIND #\. CHAOS::L)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (CHAR CHAOS::L 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/eval/eval-ast-tmpJE88A12F.fasl
; compilation finished in 0:00:00.448
; compiling file "/<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp" (written 24 OCT 2019 08:53:43 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFPARAMETER *CHAOS-VERSION* ...)
; compiling (DECLAIM (SPECIAL *INTERACTIVE*))
; compiling (DEFUN TOP-NOSHOW ...)
; compiling (DEFUN EVAL-FORM ...)
; compiling (DEFUN EVAL-$$TERM ...)
; compiling (DEFUN EVAL-LISP-FORM ...)
; compiling (DEFUN PRINT-DYNA-COMMENT ...)
; compiling (DEFUN PERFORM-REDUCTION ...)
; compiling (DEFUN PERFORM-REDUCTION* ...)
; compiling (DEFUN PERFORM-META-REDUCTION ...)
; compiling (DEFUN PERFORM-TEST-REDUCTION ...)
; compiling (DEFUN DO-PARSE-TERM ...)
; compiling (DEFUN DO-PARSE-TERM* ...)
; compiling (DEFUN RED-LOOP ...)
; compiling (DEFUN CHECK-BAD-RULES ...)
; compiling (DEFUN EVAL-TRACE ...)
; compiling (DEFUN EVAL-TRACE-WHOLE ...)
; compiling (DEFUN REWRITE-DEBUG-ON ...)
; compiling (DEFUN REWRITE-DEBUG-OFF ...)
; compiling (DEFUN TRACE-ON ...)
; compiling (DEFUN TRACE-OFF ...)
; compiling (DEFUN TRACE-WHOLE-ON ...)
; compiling (DEFUN TRACE-WHOLE-OFF ...)
; compiling (DEFUN EVAL-REWRITE-COUNT-LIMIT ...)
; compiling (DEFUN SET-REWRITE-COUNT-LIMIT ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN SET-REWRITE-COUNT-LIMIT
;     (> CHAOS::NUM 0)
; 
; note: forced to do FAST-IF->-ZERO (cost 8)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.

; compiling (DEFUN GET-INT-OR-NULL ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN GET-INT-OR-NULL
;     (LENGTH (CAR CHAOS::VALUE))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN SET-REWRITE-COUNT-LIMIT2 ...)
; compiling (DEFUN SET-COND-TRIAL-LIMIT ...)
; compiling (DEFUN SET-TERM-ID-SIZE-LIMIT ...)
; compiling (DEFUN EVAL-STOP-AT ...)
; compiling (DEFUN SET-REWRITE-STOP-PATTERN ...)
; compiling (DEFUN SET-REWRITE-STOP-PATTERN2 ...)
; compiling (DEFUN EVAL-STEP ...)
; compiling (DEFUN STEP-ON ...)
; compiling (DEFUN STEP-OFF ...)
; compiling (DEFUN EVAL-INPUT-FILE ...)
; compiling (DEFUN EVAL-DESCRIBE-MODULE ...)
; compiling (DEFUN EVAL-OPEN-MODULE ...)
; compiling (DEFPARAMETER *MODULE-OPEN-FORM* ...)
; compiling (DEFUN !OPEN-MODULE ...)
; compiling (DEFUN EVAL-CLOSE-MODULE ...)
; compiling (DEFUN EVAL-SAVE ...)
; compiling (DEFVAR *SEEN-SAVED* ...)
; compiling (DEFPARAMETER .FILL-SPACE. ...)
; compiling (DEFUN SAVE-SYSTEM ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN SAVE-SYSTEM
;     (FORMAT STREAM "~&(in-package \"CHAOS\")")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(in-package \"CHAOS\")"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(in-package \"CHAOS\")" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&(eval-when (:execute :load-toplevel)")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(eval-when (:execute :load-toplevel)"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(eval-when (:execute :load-toplevel)" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&;;; system standard prelude.")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&;;; system standard prelude."
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING ";;; system standard prelude." STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&;;; user defined modules.")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&;;; user defined modules."
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING ";;; user defined modules." STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&;;; views.")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&;;; views."
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (FRESH-LINE STREAM) (WRITE-STRING ";;; views." STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~%)")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%)"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; )"
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&(eval-ast-if-need-no-error '~s)"
;             (CHAOS::%VIEW-DECL* (CHAOS::VIEW-NAME CHAOS::V)
;                                 (CHAOS::VIEW-DECL-FORM CHAOS::V)))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(eval-ast-if-need-no-error '~s)"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(eval-ast-if-need-no-error '" STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\) STREAM))
;             NIL)
;           #:G143)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

;     (FORMAT STREAM "~&(eval-ast-if-need-no-error '~s)" ELT)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(eval-ast-if-need-no-error '~s)"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(eval-ast-if-need-no-error '" STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\) STREAM))
;             NIL)
;           #:G153)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

; compiling (DEFUN DUMP-USER-MODULE ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN DUMP-USER-MODULE
;     (FORMAT STREAM "~&(eval-ast-if-need-no-error '~s)" CHAOS::DECL)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(eval-ast-if-need-no-error '~s)"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(eval-ast-if-need-no-error '" STREAM)
;               (PRIN1 SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\) STREAM))
;             NIL)
;           #:G29)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN EVAL-AST-IF-NEED ...)
; compiling (DEFUN EVAL-AST-IF-NEED-NO-ERROR ...)
; compiling (DEFUN EVAL-RESTORE ...)
; compiling (DEFUN RESTORE-SYSTEM ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN RESTORE-SYSTEM
;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (LET ((CHAOS::*CHAOS-QUIET*
;                                     (NOT CHAOS::*CHAOS-VERBOSE*)))
;                                (IF (PROBE-FILE CHAOS::FILE)
;                                    (PROGN
;                                     (LOAD CHAOS::FILE)
;                                     (FORMAT T "~%done restoring."))
;                                    (CHAOS::WITH-OUTPUT-CHAOS-ERROR
;                                     ('CHAOS::NO-FILE)
;                                     (FORMAT T "No such file ~a" CHAOS::FILE)))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (LET ((CHAOS::*CHAOS-QUIET*
;                                                                  #))
;                                                             (IF (PROBE-FILE
;                                                                  CHAOS::FILE)
;                                                                 (PROGN # #)
;                                                                 (CHAOS::WITH-OUTPUT-CHAOS-ERROR
;                                                                  # #)))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN EVAL-RESET-SYSTEM ...)
; compiling (DEFUN EVAL-FULL-RESET ...)
; compiling (DEFUN EVAL-LOAD-PRELUDE ...)
; compiling (DEFUN LOAD-PRELUDE ...)
; compiling (DEFUN LOAD-PRELUDE+ ...)
; compiling (DEFUN LOAD-PRELUDE* ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN LOAD-PRELUDE*
;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (LET ((CHAOS::*DRIBBLE-AST* T)
;                                    (CHAOS::*AST-LOG* NIL)
;                                    (CHAOS::F NIL))
;                                (SETQ CHAOS::F
;                                        (CHAOS::CHAOS-INPUT-FILE :FILE CHAOS::FILE
;                                                                 :PROC
;                                                                 CHAOS::PROCESSOR
;                                                                 :LOAD-PATH #
;                                                                 :ERRORP
;                                                                 CHAOS::ERRORP))
;                                (IF (AND CHAOS::*SYSTEM-STANDARD-PRELUDE*
;                                         (NOT CHAOS::OVERRIDE))
;                                    (SETQ CHAOS::*SYSTEM-STANDARD-PRELUDE* #)
;                                    (SETQ CHAOS::*SYSTEM-STANDARD-PRELUDE* #))
;                                CHAOS::F))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (LET ((CHAOS::*DRIBBLE-AST*
;                                                                  T)
;                                                                 (CHAOS::*AST-LOG*
;                                                                  NIL)
;                                                                 (CHAOS::F NIL))
;                                                             (SETQ CHAOS::F #)
;                                                             (IF (AND
;                                                                  CHAOS::*SYSTEM-STANDARD-PRELUDE*
;                                                                  #)
;                                                                 (SETQ #)
;                                                                 (SETQ #))
;                                                             CHAOS::F)))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN EVAL-PROVIDE-COMMAND ...)
; compiling (DEFUN EVAL-REQUIRE-COMMAND ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN EVAL-REQUIRE-COMMAND
;     (FUNCALL CHAOS::PROC CHAOS::FILE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PROC is not known to be a function

;     (FUNCALL CHAOS::PROC
;              (FORMAT NIL "~{~A~^/~}" (CL-PPCRE:SPLIT "::" CHAOS::FEATURE)))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PROC is not known to be a function

; compiling (DEFUN EVAL-PROTECT ...)
; compiling (DEFUN EVAL-DRIBBLE ...)
; compiling (DEFUN EVAL-SAVE-CHAOS ...)
; compiling (DEFUN EVAL-LS ...)
; compiling (DEFUN EVAL-PWD ...)
; compiling (DEFUN EVAL-SHELL ...)
; compiling (DEFUN RUN-SHELL ...)
; compiling (DEFUN EVAL-CD ...)
; compiling (DEFUN EVAL-PUSHD ...)
; compiling (DEFUN EVAL-POPD ...)
; compiling (DEFUN EVAL-DIRS ...)
; compiling (DEFUN SHOW-DESCRIBE ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN SHOW-DESCRIBE
;     (LENGTH (CADR CHAOS::DAT))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (1- CHAOS::NO)
; ==>
;   (- CHAOS::NO 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN EVAL-SHOW ...)
; compiling (DEFUN EVAL-DESCRIBE ...)
; compiling (DEFUN EVAL-SELECT ...)
; compiling (DEFUN EVAL-SET ...)
; compiling (DEFUN EVAL-REGULARIZE ...)
; compiling (DEFUN EVAL-CHECK ...)
; compiling (DEFUN EVAL-TRAM ...)
; compiling (DEFUN EVAL-AUTOLOAD ...)
; compiling (DEFUN EVAL-NO-AUTOLOAD ...)
; compiling (DEFVAR *REAL-TIME* ...)
; compiling (DEFVAR *RUN-TIME* ...)
; compiling (DEFUN TIMER ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN TIMER
;     (/ (- CHAOS::*RUN-TIME* CHAOS::SYS) INTERNAL-TIME-UNITS-PER-SECOND)
; 
; note: unable to
;   convert x/2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.

;     (/ (- CHAOS::*REAL-TIME* REAL) INTERNAL-TIME-UNITS-PER-SECOND)
; 
; note: unable to
;   convert x/2^k to shift
; due to type uncertainty:
;   The first argument is a NUMBER, not a INTEGER.

;     (- CHAOS::*RUN-TIME* CHAOS::SYS)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (FLOAT (/ (- CHAOS::*RUN-TIME* CHAOS::SYS) INTERNAL-TIME-UNITS-PER-SECOND))
; --> IF 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::N)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 64).

;     (- CHAOS::*REAL-TIME* REAL)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (FLOAT (/ (- CHAOS::*REAL-TIME* REAL) INTERNAL-TIME-UNITS-PER-SECOND))
; --> IF 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::N)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 64).

; compiling (DEFUN EVAL-CBRED ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN EVAL-CBRED
;     (ZEROP CHAOS::*TERM-MEMO-HASH-HIT*)
; ==>
;   (= CHAOS::*TERM-MEMO-HASH-HIT* 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN EVAL-INSPECT ...)
; compiling (DEFUN EVAL-WHAT-IS ...)
; compiling (DEFUN EVAL-LOOK-UP ...)
; compiling (DEFUN EVAL-DELIMITER ...)
; compiling (DEFUN EVAL-CHAOS-TOP ...)
; compiling (DEFMACRO WITH-NO-CHAOS-COUNTER-PARTS ...)
; compiling (DEFUN CAFEOBJ-EVAL-CONTROL-D ...)
; compiling (DEFUN CAFEOBJ-EVAL-LISP-PROC ...)
; compiling (DEFUN CAFEOBJ-EVAL-LISP-Q-PROC ...)
; compiling (DEFVAR .IN-IN. ...)
; compiling (DECLAIM (SPECIAL .IN-IN.))
; compiling (DEFUN CAFEOBJ-EVAL-INPUT-PROC ...)
; compiling (DEFUN !INPUT-FILE ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN !INPUT-FILE
;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (CHAOS::EVAL-AST
;                                                            (CHAOS::%INPUT*
;                                                             CHAOS::FILE
;                                                             CHAOS::*CHAOS-LIBPATH*
;                                                             'CHAOS::PROCESS-CAFEOBJ-INPUT
;                                                             '(".bin" ".cafe"
;                                                               ".mod")
;                                                             NIL))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (CHAOS::EVAL-AST
;                               (CHAOS::%INPUT* CHAOS::FILE CHAOS::*CHAOS-LIBPATH*
;                                               'CHAOS::PROCESS-CAFEOBJ-INPUT
;                                               '(".bin" ".cafe" ".mod") NIL)))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN SAVE-CAFEOBJ ...)
; compiling (DEFUN SAVE-CAFEOBJ-NO-TOP ...)
; compiling (DEFUN CAFEOBJ-EVAL-SAVE-SYSTEM ...)
; compiling (DEFUN CAFEOBJ-EVAL-CLEAR-MEMO-PROC ...)
; compiling (DEFUN CAFEOBJ-EVAL-PRELUDE-PROC ...)
; file: /<<PKGBUILDDIR>>/chaos/eval/eval-ast2.lisp
; in: DEFUN CAFEOBJ-EVAL-PRELUDE-PROC
;     (CHAOS::WITH-CHAOS-ERROR NIL (CHAOS::EVAL-AST CHAOS::AST))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN CAFEOBJ-EVAL-PRELUDE-PROC+ ...)
; compiling (DEFUN CAFEOBJ-EVAL-COMMENT-PROC ...)
; compiling (DEFUN CAFEOBJ-EVAL-WHAT-PROC ...)
; compiling (DEFUN EVAL-DELIMITER-PROC ...)
; compiling (DEFUN EVAL-SHOW-DELIMITER ...)
; compiling (DEFUN EVAL-GENDOC ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/eval/eval-ast2-tmpA5FNLPLT.fasl
; compilation finished in 0:00:00.623
; compiling file "/<<PKGBUILDDIR>>/chaos/eval/chaos-top.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFUN DEFINE-BUILTIN-MODULE ...)
; compiling (DEFUN CLEAR-GLOBAL-DB ...)
; compiling (DEFVAR *CHAOS-NEW* ...)
; compiling (DEFUN SAVE-CHAOS ...)
; compiling (DEFUN CHAOS-PROMPT ...)
; compiling (DEFUN HANDLE-CHAOS-ERROR ...)
; compiling (DEFUN HANDLE-CHAOS-TOP-ERROR ...)
; compiling (DEFUN CHAOS-READ ...)
; compiling (DEFUN CHAOS-EVAL-READER ...)
; compiling (DEFUN PROCESS-CHAOS-INPUT ...)
; compiling (DEFUN CHAOS-TOP ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/eval/chaos-top-tmpHKCV9TP8.fasl
; compilation finished in 0:00:00.058
; compiling file "/<<PKGBUILDDIR>>/chaos/boot/preproc.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFUN TOKEN-IS-SORT-ID ...)
; compiling (DEFUN CREATE-SORT-ID ...)
; compiling (DEFUN PRINT-SORT-ID ...)
; compiling (DEFUN IS-SORT-ID ...)
; compiling (DEFUN IS-NZNAT-TOKEN ...)
; compiling (DEFUN CREATE-NZNAT ...)
; compiling (DEFUN IS-NZNAT ...)
; compiling (DEFUN IS-ZERO-TOKEN ...)
; compiling (DEFUN CREATE-ZERO ...)
; compiling (DEFUN IS-ZERO ...)
; compiling (DEFUN IS-NAT-TOKEN ...)
; compiling (DEFUN CREATE-NAT ...)
; compiling (DEFUN IS-NAT ...)
; compiling (DEFUN IS-NZINT-TOKEN ...)
; compiling (DEFUN CREATE-NZINT ...)
; compiling (DEFUN IS-NZINT ...)
; compiling (DEFUN CREATE-INT ...)
; compiling (DEFUN IS-INT-TOKEN ...)
; compiling (DEFUN PRINT-INT ...)
; compiling (DEFUN IS-INT ...)
; compiling (DEFUN IS-NZRAT-TOKEN ...)
; compiling (DEFUN CREATE-NZRAT ...)
; compiling (DEFUN IS-NZRAT ...)
; compiling (DEFUN IS-RAT-TOKEN ...)
; compiling (DEFUN CREATE-RAT ...)
; compiling (DEFUN RAT-PRINT ...)
; compiling (DEFUN IS-ID-TOKEN ...)
; compiling (DEFUN CREATE-ID ...)
; compiling (DEFUN PRINT-ID ...)
; compiling (DEFUN IS-ID ...)
; compiling (DEFUN IS-QID-TOKEN ...)
; compiling (DEFUN CREATE-QID ...)
; compiling (DEFUN PRINT-QID ...)
; compiling (DEFUN IS-QID ...)
; compiling (DEFUN QID->STRING ...)
; compiling (DEFUN STRING->QID ...)
; compiling (DEFUN IS-SORT-TOKEN ...)
; compiling (DEFUN CREATE-SORT-OBJECT ...)
; compiling (DEFUN PRINT-META-SORT-OBJECT ...)
; compiling (DEFUN IS-SORT-OBJECT ...)
; compiling (DEFUN IS-CONSTANT-TOKEN ...)
; compiling (DEFUN CREATE-CONSTANT-OBJECT ...)
; compiling (DEFUN PRINT-CONSTANT-OBJECT ...)
; compiling (DEFUN IS-CONSTANT-OBJECT ...)
; compiling (DEFUN IS-VARIABLE-TOKEN ...)
; compiling (DEFUN CREATE-VARIABLE-OBJECT ...)
; compiling (DEFUN PRINT-VARIABLE-OBJECT ...)
; compiling (DEFUN IS-VARIABLE-OBJECT ...)
; compiling (DEFUN IS-FLOAT-TOKEN ...)
; compiling (DEFUN CREATE-FLOAT ...)
; compiling (DEFUN PRINT-FLOAT ...)
; compiling (DEFUN IS-FLOAT ...)
; compiling (DEFMACRO IS-COMPILED-CHAOS-VALUE ...)
; compiling (DEFUN PRINT-CHAOS-VALUE ...)
; compiling (DEFUN IS-VARIABLE? ...)
; compiling (DEFUN IS-APPLFORM? ...)
; compiling (DEFUN IS-PVARIABLE? ...)
; compiling (DEFUN IS-LISP-FORM? ...)
; compiling (DEFUN IS-SLISP-FORM? ...)
; compiling (DEFUN IS-GLISP-FORM? ...)
; compiling (DEFUN IS-BCONST-TERM? ...)
; compiling (DEFUN SETUP-TRUTH-VALUE ...)
; compiling (DEFUN BOOL-MAKE-CONJUNCTION ...)
; compiling (DEFUN COERCE-TO-BOOL ...)
; compiling (DEFUN SETUP-ID ...)
; compiling (DEFUN INSTALL-CHARACTER ...)
; compiling (DEFUN IS-CHARACTER-TOKEN ...)
; compiling (DEFUN CREATE-CHARACTER ...)
; compiling (DEFUN IS-CHARACTER ...)
; compiling (DEFUN PRINT-CHARACTER ...)
; compiling (DEFUN INSTALL-STRING ...)
; compiling (DEFUN S-FIND ...)
; compiling (DEFUN S-RFIND ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/boot/preproc-tmpZ18MA7XE.fasl
; compilation finished in 0:00:00.217
; compiling file "/<<PKGBUILDDIR>>/chaos/boot/prelude.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFVAR *LAST-TERM-OP-TERM* ...)
; compiling (DEFVAR *LAST-TERM-EQN-RHS* ...)
; compiling (DEFUN INSTALL-LAST-TERM ...)
; compiling (DEFUN SET-LAST-TERM ...)
; compiling (DEFUN IS_ERR_TOKEN ...)
; compiling (DEFUN CREATE_ERR ...)
; compiling (DEFUN PRINT_ERR ...)
; compiling (DEFUN IS_ERR ...)
; compiling (DEFUN INSTALL-ERR ...)
; compiling (DEFVAR OBJ-BUILTIN-KEYWORD ...)
; compiling (DEFSTRUCT (BI-TERM #) ...)
; compiling (DEFUN PRINT$BUILTIN ...)
; compiling (DEFUN IS_BUILTIN_TOKEN ...)
; compiling (DEFUN CREATE_BUILTIN ...)
; compiling (DEFUN PRINT_BUILTIN ...)
; compiling (DEFUN IS_BUILTIN ...)
; compiling (DEFUN INSTALL_BUILTIN ...)
; compiling (DEFVAR OBJ-LISP-KEYWORD ...)
; compiling (DEFSTRUCT (LISP #) ...)
; compiling (DEFUN PRINT$LISP ...)
; compiling (DEFVAR *OBJ-LISP-EVAL-INPUT* ...)
; compiling (DEFUN IS_LISP_TOKEN ...)
; compiling (DEFUN CREATE_LISP ...)
; compiling (DEFUN USE ...)
; compiling (DEFUN PRINT_LISP ...)
; compiling (DEFUN IS_LISP ...)
; compiling (DEFVAR .RE-INSTALL-PROC. ...)
; compiling (DEFUN RE-INSTALL-CAFEOBJ-PRELUDE ...)
; compiling (DEFUN INSTALL-PRELUDE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/boot/prelude-tmp6LQJ9T0C.fasl
; compilation finished in 0:00:00.120
; compiling file "/<<PKGBUILDDIR>>/chaos/boot/builtins.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (CLEAR-GLOBAL-DB)
; compiling (CLEAR-TRS-DB)
; compiling (UNLESS *TERM-MEMO-TABLE* ...)
; compiling (DEFPARAMETER COSMOS-SORT-REF ...)
; compiling (DEFPARAMETER UNIVERSAL-SORT-REF ...)
; compiling (DEFPARAMETER HUNIVERSAL-SORT-REF ...)
; compiling (DEFUN BOOT-UNIVERSAL-MODULE ...)
; compiling (DEFUN BOOT-PARSER-MODULE ...)
; compiling (DEFUN BOOT-CHAOS ...)
; compiling (DEFUN BOOT-META-MODULE ...)
; compiling (DEFUN PRINT-AST-DICT ...)
; compiling (DEFUN INSTALL-CHAOS-HARD-WIRED-MODULES ...)
; compiling (DEFUN INSTALL-CHAOS-SOFT-WIRED-MODULES ...)
; compiling (DEFUN CHAOS-MISC-INIT ...)
; compiling (DEFUN INIT-BUILTIN-UNIVERSAL ...)
; compiling (DEFVAR *Z-NZNAT-VALUE* ...)
; compiling (DEFVAR *Z-NAT-VALUE* ...)
; compiling (DEFVAR *Z-INT-VALUE* ...)
; compiling (DEFVAR *Z-RAT-VALUE* ...)
; compiling (DEFVAR *Z-NZNAT* ...)
; compiling (DEFVAR *Z-NAT* ...)
; compiling (DEFVAR *Z-INT* ...)
; compiling (DEFVAR *Z-RAT* ...)
; compiling (DEFVAR *Z-FLOAT-VALUE* ...)
; compiling (DEFVAR *Z-FLOAT* ...)
; compiling (DEFVAR *Z-QID* ...)
; compiling (DEFVAR *Z-CHAR-VALUE* ...)
; compiling (DEFVAR *Z-CHAR* ...)
; compiling (DEFVAR *Z-STRING-VALUE* ...)
; compiling (DEFVAR *Z-STRING* ...)
; compiling (DEFUN GET-Z-MODULE-OR-PANIC ...)
; compiling (DEFUN SETUP-TRAM-BOOL-MODULES ...)
; compiling (DEFUN INIT-TRAM-BI-MODULES ...)
; compiling (INSTALL-CHAOS-HARD-WIRED-MODULES)
; compiling (INSTALL-CHAOS-SOFT-WIRED-MODULES)
; compiling (INIT-TRAM-BI-MODULES)
; compiling (INIT-BUILTIN-UNIVERSAL)
; compiling (CHAOS-MISC-INIT)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/boot/builtins-tmpTX7OA81T.fasl
; compilation finished in 0:00:00.110

-- defining module* TRIV done.
-- defining module! TRUTH-VALUE done.
-- defining module! NZNAT-VALUE done.
-- defining module! NAT-VALUE done.
-- defining module! INT-VALUE done.
-- defining module! RAT-VALUE done.
-- defining module! FLOAT-VALUE done.
-- defining module! ID done.
-- defining module! CHAR-VALUE done.
-- defining module! STRING-VALUE done.
; compiling file "/<<PKGBUILDDIR>>/chaos/tram/tram.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *TRAM-LAST-MODULE* ...)
; compiling (DECLAIM (SPECIAL *TRAM-PROCESS*))
; compiling (DEFVAR *TRAM-PROCESS* ...)
; compiling (DEFUN ON-TRAM-DEBUG ...)
; compiling (DEFUN OFF-TRAM-DEBUG ...)
; compiling (DEFVAR *TRAM_IN_FILE* ...)
; compiling (DEFVAR *TRAM_OUT_FILE* ...)
; compiling (DEFUN RUN-TRAM-PROCESS-IF-NEED ...)
; compiling (DEFUN GET-PROCESS-ID ...)
; compiling (DEFUN TRAM-GET-ID ...)
; file: /<<PKGBUILDDIR>>/chaos/tram/tram.lisp
; in: DEFUN TRAM-GET-ID
;     (STRING CHAOS::PREFIX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN RUN-TRAM-PROCESS ...)
; compiling (DEFUN KILL-TRAM-PROCESS ...)
; compiling (DEFMACRO WITH-OUTPUT-TO-TRAM ...)
; compiling (DEFPARAMETER TRAM-EOF-VALUE ...)
; compiling (DEFMACRO TRAM-SEND-AND-WAIT ...)
; compiling (DEFUN WAIT-TRAM-ANSWER ...)
; compiling (DEFUN TRS-TERM-TO-TRAM-TERM ...)
; compiling (DEFUN TRAM-TERM-TO-CHAOS ...)
; compiling (DEFUN TRAM-MAKE-TERM-TOK-SEQ ...)
; compiling (DEFUN RE-MAKE-TRAM-TOK-SEQ ...)
; file: /<<PKGBUILDDIR>>/chaos/tram/tram.lisp
; in: DEFUN RE-MAKE-TRAM-TOK-SEQ
;     (STRING CHAOS::SYM)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN TRAM-RE-MAKE-TERM-FORM ...)
; compiling (DEFUN RE-PRINT-TRAM-TERM ...)
; compiling (DEFUN MAKE-TRAM-RULES ...)
; compiling (DEFVAR *TRAM-INHIBIT-RWL-PREDICATES* ...)
; compiling (DEFUN MAKE-TRAM-RULE ...)
; compiling (DEFUN TRS-RULE-TO-TRAM-RULE ...)
; compiling (DEFUN TRAM-MAKE-SEM-AXIOMS ...)
; compiling (DEFUN MAKE-TRAM-TERM ...)
; compiling (DEFPARAMETER TRAM-BOOL-SORT-NAME ...)
; compiling (DEFUN TRAM-?BOOL-SORT-NAME ...)
; compiling (DEFPARAMETER TRAM-SORT-ID-SORT-NAME ...)
; compiling (DEFUN TRAM-?SORT-ID-SORT-NAME ...)
; compiling (DEFPARAMETER TRAM-IF-THEN-ELSE-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-SORT-MEMB-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-EQUAL-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-NEQUAL-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-BEQUAL-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-RWL-TRANS-OP-TEMPLATE ...)
; compiling (DEFPARAMETER TRAM-RWL-AUX-TRANS-OP-TEMPLATE ...)
; compiling (DEFPARAMETER XIF-OP-TEMPLATE ...)
; compiling (DEFPARAMETER EQ-OP-TEMPLATE ...)
; compiling (DEFPARAMETER NEQ-OP-TEMPLATE ...)
; compiling (DEFUN TRAM-MAKE-BUILT-IN-OPERATORS ...)
; compiling (DEFUN TRAM-MAKE-BUILT-IN-AXIOMS ...)
; compiling (DEFUN MAKE-SORT-ID-TERM ...)
; compiling (DEFUN TRAM-COMPILE-CHAOS-MODULE ...)
; compiling (DEFVAR *TRAM-RAW-RES* ...)
; compiling (DEFUN TRAM-REDUCE ...)
; compiling (DEFPARAMETER _TRAM_INIT_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_USE_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_SORT_DECL_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_SORT_ORDER_DECL_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_OP_DECL_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_RULE_DECL_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_COMPILE_COMMAND_ ...)
; compiling (DEFPARAMETER _TRAM_REDUCE_COMMAND_ ...)
; compiling (DEFUN TRAM-SEND-INITIALIZE ...)
; compiling (DEFUN TRAM-SEND-USE ...)
; compiling (DEFUN TRAM-SEND-SORT-DECLS ...)
; compiling (DEFUN TRAM-SEND-SORT-RELATIONS ...)
; compiling (DEFUN TRAM-SEND-OP-DECLS ...)
; compiling (DEFUN TRAM-SEND-RULE-DECLS ...)
; compiling (DEFUN TRAM-SEND-BUILT-IN-OPS ...)
; compiling (DEFUN TRAM-SEND-BUILT-IN-AXIOMS ...)
; compiling (DEFUN TRAM-SEND-SEM-AXIOMS ...)
; compiling (DEFUN TRAM-SEND-STAT-SWITCH ...)
; compiling (DEFUN CHECK-TRAM-ERROR ...)
; compiling (DEFUN TRAM-SEND-COMPILE ...)
; compiling (DEFUN TRAM-SEND-REDUCE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/tram/tram-tmpWOTC3PB7.fasl
; compilation finished in 0:00:00.678
; compiling file "/<<PKGBUILDDIR>>/chaos/psup/psup.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO WITH-LOGGING-ERROR ...)
; compiling (DEFUN PSUP-GET-IMPORT-GRAPH ...)
; compiling (DEFUN PSUP-GET-IMPORT-GRAPH* ...)
; compiling (DEFUN PSUP-GET-SORT-GRAPH ...)
; compiling (DEFUN PSUP-MAKE-SORT-INFO ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-MAKE-SORT-INFO
;     (STRING (CDR (CHAOS::ASSQ SORT (CHAOS::TRS$SORT-NAME-MAP CHAOS::TRS))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-GET-MODULE-SORTS ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-GET-MODULE-SORTS
;     (STRING (CDR CHAOS::S))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-GET-SORT-GRAPH* ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-GET-SORT-GRAPH*
;     (STRING (CAR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CADR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CAR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CADR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-GET-OPERATORS ...)
; compiling (DEFUN PSUP-GET-OPERATORS* ...)
; compiling (DEFUN PSUP-MAKE-METHOD-INFO ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-MAKE-METHOD-INFO
;     (STRING (CAR CHAOS::MINFO))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CADDR CHAOS::MINFO))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (MAPCAR #'STRING (CADR CHAOS::MINFO))
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK LET TAGBODY TAGBODY SB-KERNEL:%RPLACD 
; --> SETQ THE CONS FUNCALL SB-C::%FUNCALL 
; ==>
;   (STRING (CAR #:G1))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-MAP-CHAOS-OP-TO-TRS ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-MAP-CHAOS-OP-TO-TRS
;     (STRING (CHAOS::MAP-CHAOS-OP-TO-TRS CHAOS::METHOD CHAOS::TRS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN TRS-TERM-TO-PSUP-TERM ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN TRS-TERM-TO-PSUP-TERM
;     (STRING SORT)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-PARSE-EXPRESSION ...)
; compiling (DEFUN PSUP-PARSE-EXPRESSION* ...)
; compiling (DEFUN PSUP-PARSE-VARS ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-PARSE-VARS
;     (LENGTH CHAOS::DECL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN PSUP-PARSE-AXIOM ...)
; compiling (DEFUN PSUP-PARSE-AXIOM* ...)
; compiling (DEFUN PSUP-UNPARSE-EXPRESSION ...)
; compiling (DEFUN PSUP-UNPARSE-EXPRESSION* ...)
; compiling (DEFUN PSUP-RE-MAKE-VARIABLE-FORM ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-RE-MAKE-VARIABLE-FORM
;     (STRING (CHAOS::TRS-TERM-HEAD CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::TRS-TERM-SORT CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-MAKE-TERM-FORM ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-MAKE-TERM-FORM
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN TRS-TERM-TO-PSUP ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN TRS-TERM-TO-PSUP
;     (STRING (CHAOS::TRS-TERM-HEAD CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::TRS-TERM-SORT CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::TRS-TERM-HEAD CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::TRS-TERM-SORT CHAOS::TERM))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-GET-AXIOMS ...)
; compiling (DEFUN PSUP-GET-AXIOMS* ...)
; compiling (DEFUN PSUP-MAKE-AXIOM-INFO ...)
; file: /<<PKGBUILDDIR>>/chaos/psup/psup.lisp
; in: DEFUN PSUP-MAKE-AXIOM-INFO
;     (STRING (CHAOS::TRS-AXIOM-LABEL CHAOS::AX))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PSUP-MAKE-AXIOM-INFO2 ...)
; compiling (DEFUN PSUP-IMAGE-OF-AXIOMS ...)
; compiling (DEFUN PSUP-IMAGE-OF-AXIOMS* ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/chaos/psup/psup-tmpHQE95SAC.fasl
; compilation finished in 0:00:00.403
; compiling file "/<<PKGBUILDDIR>>/thstuff/parse-apply.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTERM START ...)
; compiling (DEFUN PARSE-START-COMMAND ...)
; compiling (DEFTERM CHOOSE ...)
; compiling (DEFTERM INSPECT-TERM ...)
; compiling (DEFUN GET-SELECTORS ...)
; compiling (DEFUN PARSE-CHOOSE-COMMAND ...)
; compiling (DEFTERM MATCH ...)
; compiling (DEFUN PARSE-MATCH-COMMAND ...)
; compiling (DEFUN PARSE-FIND-COMMAND ...)
; compiling (DEFTERM APPLY ...)
; compiling (DEFUN GET-APPLY-ACTION ...)
; compiling (DEFUN PARSE-RULE-SPEC ...)
; file: /<<PKGBUILDDIR>>/thstuff/parse-apply.lisp
; in: DEFUN PARSE-RULE-SPEC
;     (CHAR CHAOS::TOK 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

;     (POSITION-IF #'(LAMBDA (CHAOS::X) (CHAR= #\. CHAOS::X)) CHAOS::TOK)
; --> NTH-VALUE MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%FIND-POSITION-IF
;    (SB-KERNEL:%COERCE-CALLABLE-TO-FUN SB-C::PREDICATE) SEQUENCE SB-C::FROM-END
;    SB-C::START SB-C::END (SB-KERNEL:EFFECTIVE-FIND-POSITION-KEY SB-C::KEY))
; 
; note: unable to
;   expand inline
; because:
;   upgraded array element type not known at compile time

; compiling (DEFUN GET-APPLY-WHERE ...)
; compiling (DEFUN PARSE-APPLY-COMMAND ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/parse-apply-tmpO87FP9NR.fasl
; compilation finished in 0:00:00.884
; compiling file "/<<PKGBUILDDIR>>/thstuff/basics.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-APPLY-CONTEXT ...)
; compiling (DEFUN COMMAND-DISPLAY ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMMAND-DISPLAY
;     (LENGTH CHAOS::$$ACTION-STACK)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN COMMAND-FINAL ...)
; compiling (DEFUN DISP-TERM ...)
; compiling (DEFUN DISP-TERM* ...)
; compiling (DEFUN APPLY-HELP ...)
; compiling (DEFUN STR-TO-INT ...)
; compiling (DEFUN !MAKE-RIGHT-ASSOCIATIVE ...)
; compiling (DEFUN COMPUTE-OCCUR-SELECTION ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMPUTE-OCCUR-SELECTION
;     (ZEROP CHAOS::I)
; ==>
;   (= CHAOS::I 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (<= 0 CHAOS::I)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> >= IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 0.0d0) (SINGLE-FLOAT * 0.0)
;                               (RATIONAL * 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (<= CHAOS::I (LENGTH (CHAOS::TERM-SUBTERMS CHAOS::CUR)))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 0.0d0) (SINGLE-FLOAT 0.0)
;                               (RATIONAL 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (<= 0 CHAOS::I)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (<= CHAOS::I (LENGTH (CHAOS::TERM-SUBTERMS CHAOS::CUR)))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (1- CHAOS::I)
; ==>
;   (- CHAOS::I 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN COMPUTE-SUBSEQ-SELECTION ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMPUTE-SUBSEQ-SELECTION
;     (LENGTH CHAOS::LST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (< 1 CHAOS::M1)
; --> > IF 
; ==>
;   (> SB-C::Y SB-C::X)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (LENGTH CHAOS::LST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (< CHAOS::N1 (LENGTH CHAOS::LST))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (1+ CHAOS::N)
; ==>
;   (+ CHAOS::N 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a REAL, not a RATIONAL.

;     (SUBSEQ CHAOS::LST CHAOS::M (1+ CHAOS::N))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (SUBSEQ CHAOS::LST 0 CHAOS::M)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (1+ CHAOS::N)
; ==>
;   (+ CHAOS::N 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a REAL, not a RATIONAL.

;     (SUBSEQ CHAOS::LST (1+ CHAOS::N))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (<= CHAOS::M CHAOS::N)
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

;     (<= 1 CHAOS::M1)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> >= IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 1.0d0) (SINGLE-FLOAT * 1.0)
;                               (RATIONAL * 1)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (<= CHAOS::N1 (LENGTH CHAOS::LST))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT 0.0d0) (SINGLE-FLOAT 0.0)
;                               (RATIONAL 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (1- CHAOS::M1)
; ==>
;   (- CHAOS::M1 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (1- CHAOS::N1)
; ==>
;   (- CHAOS::N1 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (<= CHAOS::M CHAOS::N)
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

;     (<= 1 CHAOS::M1)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (<= CHAOS::N1 (LENGTH CHAOS::LST))
; --> OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (< 1 CHAOS::M1)
; --> > IF 
; ==>
;   (> SB-C::Y SB-C::X)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (< CHAOS::N1 (LENGTH CHAOS::LST))
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (1+ CHAOS::N)
; ==>
;   (+ CHAOS::N 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a REAL, not a FIXNUM.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFUN COMPUTE-SUBSET-SELECTION ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMPUTE-SUBSET-SELECTION
;     (LENGTH CHAOS::LST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (< CHAOS::N CHAOS::LEN)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (<= 0 CHAOS::N)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> >= IF >= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 0.0d0) (SINGLE-FLOAT * 0.0)
;                               (RATIONAL * 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (1- CHAOS::I)
; ==>
;   (- CHAOS::I 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (<= 0 CHAOS::N)
; --> >= IF >= OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

;     (< CHAOS::N CHAOS::LEN)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN COMPUTE-SET-OCS ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMPUTE-SET-OCS
;     (PUSHNEW CHAOS::VAL CHAOS::RES)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFVAR *SELECTION-TARGET* ...)
; compiling (DECLAIM (SPECIAL *SELECTION-TARGET*))
; compiling (DEFUN COMPUTE-SELECTION ...)
; compiling (DEFUN !COMPUTE-SELECTION ...)
; compiling (DEFUN !COMPUTE-SELECTION-AUX ...)
; compiling (DEFUN @COPY-LIST-TERM-USING-LIST-VAR ...)
; compiling (DEFUN @COPY-TERM-USING-VARIABLE ...)
; compiling (DEFUN @COPY-TERM ...)
; compiling (DEFUN @MATCHER ...)
; compiling (DEFUN @TEST-RULE-DIRECT ...)
; compiling (DEFVAR *-INSIDE-APPLY-WITH-EXTENSIONS-* ...)
; compiling (DEFUN @TEST-RULE ...)
; compiling (DEFUN @MAKE-AC-PATTERN ...)
; compiling (DEFUN @MAKE-A-PATTERNS ...)
; compiling (DEFUN @PAT-MATCH ...)
; compiling (DECLAIM (SPECIAL *M-PATTERN-SUBST*))
; compiling (DEFUN MATCH-M-PATTERN ...)
; compiling (DEFUN @TEST-RULE-EXTENSIONS ...)
; compiling (DEFUN COMPUTE-VARIABLE-SUBSTITUTION ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN COMPUTE-VARIABLE-SUBSTITUTION
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::AVAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFSTRUCT FOUND-PATTERN ...)
; compiling (DEFUN GET-SUBTERM-POS ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN GET-SUBTERM-POS
;     (>= CHAOS::RP 0)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT * 0.0d0) (SINGLE-FLOAT * 0.0)
;                               (RATIONAL * 0)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (1- CHAOS::P)
; ==>
;   (- CHAOS::P 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (>= CHAOS::RP 0)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFUN FIND-MATCHING-RULES-ALL ...)
; compiling (DEFUN FIND-MATCHING-RULES-ALL* ...)
; compiling (DEFUN FIND-MATCHING-RULES ...)
; file: /<<PKGBUILDDIR>>/thstuff/basics.lisp
; in: DEFUN FIND-MATCHING-RULES
;     (1+ CHAOS::NUM)
; ==>
;   (+ CHAOS::NUM 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN COMPUTE-EXTRA-VARIABLES ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/basics-tmpP6A3E92I.fasl
; compilation finished in 0:00:00.513
; compiling file "/<<PKGBUILDDIR>>/thstuff/eval-match.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN EVAL-MATCH-COMMAND ...)
; compiling (DEFUN FIND-REWRITE-RULES ...)
; compiling (DEFUN FIND-REWRITE-RULES-TOP ...)
; file: /<<PKGBUILDDIR>>/thstuff/eval-match.lisp
; in: DEFUN FIND-REWRITE-RULES-TOP
;     (STRING CHAOS::LABEL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN FIND-REWRITE-RULES-ALL ...)
; file: /<<PKGBUILDDIR>>/thstuff/eval-match.lisp
; in: DEFUN FIND-REWRITE-RULES-ALL
;     (STRING CHAOS::LABEL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PERFORM-MATCH ...)
; file: /<<PKGBUILDDIR>>/thstuff/eval-match.lisp
; in: DEFUN PERFORM-MATCH
;     (FUNCALL CHAOS::FIRST-MATCH-METH CHAOS::PATTERN CHAOS::REAL-TARGET)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::FIRST-MATCH-METH)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   FIRST-MATCH-METH is not known to be a function

;     (FUNCALL CHAOS::NEXT-MATCH-METH CHAOS::GLOBAL-STATE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::NEXT-MATCH-METH)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-MATCH-METH is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-MATCH-METH is not known to be a function


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/eval-match-tmpUSHT8RIL.fasl
; compilation finished in 0:00:00.156
; compiling file "/<<PKGBUILDDIR>>/thstuff/eval-apply.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN EVAL-START-COMMAND ...)
; compiling (DEFUN DO-EVAL-START-TH ...)
; compiling (DEFUN EVAL-CHOOSE-COMMAND ...)
; compiling (DEFUN EVAL-INSPECT-TERM-COMMAND ...)
; compiling (DEFVAR *-APPLIED-* ...)
; compiling (DEFVAR *-INSIDE-APPLY-ALL-* ...)
; compiling (DEFUN EVAL-APPLY-COMMAND ...)
; compiling (DEFVAR *COPY-CONDITIONS*)
; compiling (DECLAIM (SPECIAL *COPY-CONDITONS*))
; compiling (DEFVAR *APPLY-DEBUG* ...)
; compiling (DEFUN @APPLY-ONE-RULE ...)
; compiling (DEFUN APPLY-ONE-RULE-NO-SIMPLIFY ...)
; file: /<<PKGBUILDDIR>>/thstuff/eval-apply.lisp
; in: DEFUN APPLY-ONE-RULE-NO-SIMPLIFY
;     (FUNCALL CHAOS::NEXT-MATCH-METHOD CHAOS::GLOBAL-STATE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::NEXT-MATCH-METHOD)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-MATCH-METHOD is not known to be a function

;     (FUNCALL (CHAOS::LISP-FORM-FUNCTION (CHAOS::RULE-RHS CHAOS::RULE)) SUBST)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::LISP-FORM-FUNCTION (CHAOS::RULE-RHS CHAOS::RULE)))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::RULE)
;              (CHAOS::RULE-LHS CHAOS::RULE) CHAOS::TERM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::RULE))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN @APPLY-RULE ...)
; compiling (DEFUN @APPLY-RULE-WITH-EXTENSIONS ...)
; compiling (DEFUN @APPLY-ALL ...)
; compiling (DEFUN APPLY-PRINT-RULE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/eval-apply-tmp7YCPD44Y.fasl
; compilation finished in 0:00:00.166
; compiling file "/<<PKGBUILDDIR>>/thstuff/cexec.lisp" (written 10 DEC 2019 06:00:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (SPECIAL $$CEXEC-TERM))
; compiling (DEFSTRUCT (RULE-PAT #) ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR .RULES-SO-FAR. ...)
; compiling (DEFUN PRINT-RULE-PATTERN ...)
; compiling (DEFSTRUCT (RWL-STATE #) ...)
; compiling (DECLAIM (INLINE STATE-IS-VALID-TRANSITION))
; compiling (DEFUN STATE-IS-VALID-TRANSITION ...)
; compiling (DEFUN PR-RWL-STATE ...)
; compiling (DECLAIM (SPECIAL .RWL-SEARCH-DEPTH.) ...)
; compiling (DEFVAR .RWL-SEARCH-DEPTH. ...)
; compiling (DEFUN PRINT-RWL-STATE ...)
; compiling (DEFUN PRINT-STATE-TRANSITION ...)
; compiling (DEFSTRUCT (RWL-SCH-NODE # ...) ...)
; compiling (DEFMACRO CREATE-SCH-NODE ...)
; compiling (DEFUN PR-RWL-SCH-NODE ...)
; compiling (DEFSTRUCT (RWL-SCH-CONTEXT #) ...)
; compiling (DEFUN PRINT-SCH-CONTEXT ...)
; compiling (DEFUN SHOW-RWL-SCH-STATE ...)
; compiling (DEFUN SHOW-RWL-SCH-LABEL ...)
; compiling (DEFUN MAKE-RULE-PAT-WITH-CHECK ...)
; compiling (DEFUN RULE-PAT-EQUAL ...)
; compiling (DEFUN PARSE-DEPTH&STATE ...)
; compiling (DEFUN SHOW-RWL-SCH-GRAPH ...)
; file: /<<PKGBUILDDIR>>/thstuff/cexec.lisp
; in: DEFUN SHOW-RWL-SCH-GRAPH
;     (FORMAT T "no context module...")
; ==>
;   "no context module..."
; 
; note: deleting unreachable code

;     'CHAOS::NO-CONTEXT
; 
; note: deleting unreachable code

; compiling (DEFUN FIND-RWL-SCH-STATE ...)
; compiling (DEFUN FIND-RWL-SCH-STATE-GLOBALLY ...)
; compiling (DEFUN SHOW-RWL-SCH-PATH ...)
; compiling (DECLAIM (INLINE GET-TARGET-SUBTERM))
; compiling (DEFUN GET-TARGET-SUBTERM ...)
; compiling (DEFUN FIND-MATCHING-RULES-FOR-EXEC ...)
; compiling (DEFUN FIND-MATCHING-RULES-FOR-EXEC* ...)
; compiling (DECLAIM (INLINE IF-BINDING-SHOULD-BE-PRINTE))
; compiling (DEFUN IF-BINDING-SHOULD-BE-PRINTED ...)
; compiling (DECLAIM (INLINE PRINT-SUBST-IF-BINDING-RESULT))
; compiling (DEFUN PRINT-SUBST-IF-BINDING-RESULT ...)
; compiling (DEFUN RWL-SCH-CHECK-CONDITIONS ...)
; compiling (DEFUN PR-USED-RULE ...)
; compiling (DEFVAR .CEXEC-TERM-HASH. ...)
; compiling (DEFTYPE TERM-HASH-KEY ...)
; compiling (DEFCONSTANT TERM-HASH-MASK ...)
; compiling (DEFCONSTANT TERM-HASH-SIZE ...)
; compiling (DECLAIM (INLINE TERM-HASH-EQUAL))
; compiling (DEFUN TERM-HASH-EQUAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/cexec.lisp
; in: DEFUN TERM-HASH-EQUAL
;     (SXHASH CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a NUMBER.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a INTEGER.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a FIXNUM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SIMPLE-BIT-VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SYMBOL.

; compiling (DECLAIM (INLINE TERM-HASH-EQ))
; compiling (DEFUN TERM-HASH-EQ ...)
; compiling (DECLAIM (INLINE TERM-HASH-COMB))
; compiling (DEFUN TERM-HASH-COMB ...)
; compiling (DEFUN CEXEC-HASH-TERM ...)
; file: /<<PKGBUILDDIR>>/thstuff/cexec.lisp
; in: DEFUN CEXEC-HASH-TERM
;     (CHAOS::TERM-HASH-EQUAL (CHAOS::TERM-BUILTIN-VALUE CHAOS::TERM))
; --> BLOCK LOGAND 
; ==>
;   (SXHASH CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a NUMBER.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a INTEGER.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a FIXNUM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SIMPLE-BIT-VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a SYMBOL.

; compiling (DEFUN DUMP-CEXEC-TERM-HASH ...)
; compiling (DECLAIM (INLINE GET-SCH-HASHED-TERM))
; compiling (DEFUN GET-SCH-HASHED-TERM ...)
; compiling (DECLAIM (INLINE SET-SCH-HASHED-TERM))
; compiling (DEFUN SET-SCH-HASHED-TERM ...)
; compiling (DEFMACRO CEXEC-GET-HASHED-TERM ...)
; compiling (DEFMACRO CEXEC-SET-HASHED-TERM ...)
; compiling (DECLAIM (INLINE CEXEC-SCH-CHECK-PREDICATE))
; compiling (DEFUN CEXEC-SCH-CHECK-PREDICATE ...)
; compiling (DEFUN CEXEC-LOOP-CHECK ...)
; file: /<<PKGBUILDDIR>>/thstuff/cexec.lisp
; in: DEFUN CEXEC-LOOP-CHECK
;     (LENGTH CHAOS::ENTRY)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFUN MAKE-RWL-STATE-WITH-HASH ...)
; compiling (DEFUN RWL-STATE-SET-TRANSITION-RULES ...)
; compiling (DEFUN APPLY-RULE-CEXEC ...)
; compiling (DEFUN CEXEC-TERM-1 ...)
; file: /<<PKGBUILDDIR>>/thstuff/cexec.lisp
; in: DEFUN CEXEC-TERM-1
;     (MAPCAR #'1+ (CHAOS::RULE-PAT-POS CHAOS::RULE-PAT))
; --> LET LET SB-INT:DO-ANONYMOUS BLOCK LET TAGBODY TAGBODY SB-KERNEL:%RPLACD 
; --> SETQ THE CONS FUNCALL SB-C::%FUNCALL 1+ 
; ==>
;   (+ (CAR #:G7) 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN RWL-STEP-FORWARD-1 ...)
; compiling (DECLAIM (INLINE MAKE-ANYTHING-IS-OK-TERM))
; compiling (DEFUN MAKE-ANYTHING-IS-OK-TERM ...)
; compiling (DEFUN RWL-SEARCH* ...)
; compiling (DEFUN REPORT-RWL-RESULT ...)
; compiling (DEFUN RWL-CONTINUE ...)
; compiling (DEFUN RWL-CONTINUE+ ...)
; compiling (DEFUN RWL-CONTINUE* ...)
; compiling (DEFUN RWL-SEARCH ...)
; compiling (DEFUN RWL-CHECK-ONE-STEP-REACHABILITY ...)
; compiling (DEFUN RWL-SCH-SET-RESULT ...)
; compiling (DEFUN RWL-CONT ...)
; compiling (DEFUN NAT*-TO-MAX-OPTION ...)
; compiling (DEFUN TERM-PATTERN-INCLUDED-IN-CEXEC ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/cexec-tmpQXR7SNXD.fasl
; compilation finished in 0:00:01.491
; compiling file "/<<PKGBUILDDIR>>/thstuff/case.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFPARAMETER .CASE-MODULE-TRUE. ...)
; compiling (DEFPARAMETER .CASE-MODULE-FALSE. ...)
; compiling (DEFPARAMETER .CASE-TRUE-AXIOM. ...)
; compiling (DEFPARAMETER .CASE-FALSE-AXIOM. ...)
; compiling (DEFUN PERFORM-CASE-REDUCTION ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/case-tmp6FLI1OC3.fasl
; compilation finished in 0:00:00.031
; compiling file "/<<PKGBUILDDIR>>/thstuff/proof-struct.lisp" (written 16 DEC 2019 07:35:07 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFSTRUCT (TACTIC #) ...)
; compiling (DEFPARAMETER .TACTIC-SI. ...)
; compiling (DEFPARAMETER .TACTIC-CA. ...)
; compiling (DEFPARAMETER .TACTIC-TC. ...)
; compiling (DEFPARAMETER .TACTIC-IP. ...)
; compiling (DEFPARAMETER .TACTIC-IP+. ...)
; compiling (DEFPARAMETER .TACTIC-RD. ...)
; compiling (DEFPARAMETER .TACTIC-RD-. ...)
; compiling (DEFPARAMETER .TACTIC-NF. ...)
; compiling (DEFPARAMETER .TACTIC-CT. ...)
; compiling (DEFPARAMETER .TACTIC-NIL. ...)
; compiling (DEFPARAMETER .ALL-BUILTIN-TACTICS. ...)
; compiling (DEFPARAMETER .DEFAULT-TACTICS. ...)
; compiling (DEFPARAMETER .TACTIC-CTF. ...)
; compiling (DEFPARAMETER .TACTIC-CSP. ...)
; compiling (DEFPARAMETER .TACTIC-INIT. ...)
; compiling (DEFPARAMETER .TACTIC-IND. ...)
; compiling (DEFVAR .USER-DEFINED-TACTICS. ...)
; compiling (DEFUN CANONICALIZE-TACTIC-NAME ...)
; compiling (DEFUN PR-TACTIC ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-TACTIC
;     (FORMAT STREAM "[~a]" (CHAOS::TACTIC-NAME CHAOS::TACTIC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$[~a]"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\[ STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\] STREAM))
;             NIL)
;           #:G8)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN GET-BUILTIN-TACTIC ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN GET-BUILTIN-TACTIC
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (STRING-EQUAL CHAOS::NAME (SYMBOL-NAME (CHAOS::TACTIC-NAME CHAOS::X))))
;      CHAOS::.ALL-BUILTIN-TACTICS.)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN TACTIC-NAME-IS-BUILTIN? ...)
; compiling (DEFSTRUCT (TACTIC-SEQ # ...) ...)
; compiling (DEFUN PR-TACTIC-SEQ ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-TACTIC-SEQ
;     (FORMAT STREAM "( ~{~a~^ ~a ~} )"
;             (MAPCAR #'(LAMBDA (CHAOS::X) (CHAOS::TACTIC-NAME CHAOS::X))
;                     CHAOS::TACTICS))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$( ~{~a~^ ~a ~} )"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "( " STREAM)
;               (LET* (# #)
;                 (DECLARE #)
;                 (LOOP #
;                       #
;                       #
;                       #
;                       #
;                       #))
;               (WRITE-STRING " )" STREAM))
;             NIL)
;           #:G17)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFSTRUCT (TACTIC-CTFP-COMMON #) ...)
; compiling (DEFSTRUCT (TACTIC-CTF # ...) ...)
; compiling (DEFUN PR-TACTIC-CTF ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-TACTIC-CTF
;     (FORMAT STREAM ":ctf")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$:ctf"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING ":ctf" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFSTRUCT (TACTIC-CSP # ...) ...)
; compiling (DEFUN PR-TACTIC-CSP ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-TACTIC-CSP
;     (FORMAT STREAM ":csp")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$:csp"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING ":csp" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFSTRUCT (TACTIC-INIT # ...) ...)
; compiling (DEFUN PR-TACTIC-INIT ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-TACTIC-INIT
;     (FORMAT STREAM ":init")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$:init"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (WRITE-STRING ":init" STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "[~a]" (SECOND (CHAOS::TACTIC-INIT-KIND CHAOS::OBJ)))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$[~a]"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\[ STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-CHAR #\] STREAM))
;             NIL)
;           #:G16)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFSTRUCT (TACTIC-IND #) ...)
; compiling (DEFUN GET-DEFAULT-TACTICS ...)
; compiling (DEFUN DECLARE-TACTIC ...)
; compiling (DEFVAR *CITP-SHOW-RWL* ...)
; compiling (DECLAIM (SPECIAL *CITP-SPOILER*))
; compiling (DEFVAR *CITP-SPOILER* ...)
; compiling (DEFMACRO IF-SPOILER-ON ...)
; compiling (DEFMACRO WHEN-SPOILER-ON ...)
; compiling (DEFMACRO WITH-SPOILER-ON ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *CITP-MAX-FLAGS* ...)
; compiling (DEFSTRUCT (CITP-FLAG-STRUCT) ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *CITP-FLAGS*)
; compiling (SETQ *CITP-FLAGS* ...)
; compiling (DEFMACRO CITP-FLAG-STRUCT ...)
; compiling (DEFMACRO CITP-FLAG ...)
; compiling (DEFMACRO CITP-FLAG-NAME ...)
; compiling (DEFMACRO CITP-FLAG-HOOK ...)
; compiling (DEFCONSTANT CITP-ALL ...)
; compiling (DEFCONSTANT CITP-VERBOSE ...)
; compiling (DEFCONSTANT CITP-SHOW-RWL ...)
; compiling (DEFCONSTANT CITP-SPOILER ...)
; compiling (DEFCONSTANT CITP-PRINT-MESSAGE ...)
; compiling (DEFCONSTANT CITP-NORMALIZE-INIT ...)
; compiling (DEFCONSTANT CITP-NORMALIZE-LHS ...)
; compiling (DEFUN FIND-CITP-FLAG-INDEX ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN FIND-CITP-FLAG-INDEX
;     (CHAOS::CITP-FLAG-NAME CHAOS::X)
; --> CHAOS::CITP-FLAG-STRUCT-NAME SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF THE 
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PRINT-CITP-FLAG ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PRINT-CITP-FLAG
;     (= CHAOS::INDEX CHAOS::CITP-ALL)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN PR-CITP-FLAG-INTERNAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-CITP-FLAG-INTERNAL
;     (CHAOS::CITP-FLAG-NAME CHAOS::INDEX)
; --> CHAOS::CITP-FLAG-STRUCT-NAME SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF THE 
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::CITP-FLAG CHAOS::INDEX)
; --> CHAOS::CITP-FLAG-STRUCT-VALUE SB-KERNEL:%INSTANCE-REF THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN HELP-CITP-FLAG ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN HELP-CITP-FLAG
;     (CHAOS::CITP-FLAG-STRUCT CHAOS::INDEX)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN INITIALIZE-CITP-FLAG ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN INITIALIZE-CITP-FLAG
;     (SETF (CHAOS::CITP-FLAG-NAME CHAOS::CITP-ALL) "citp-all"
;           (CHAOS::CITP-FLAG-NAME CHAOS::CITP-VERBOSE) "citp-verbose"
;           (CHAOS::CITP-FLAG-NAME CHAOS::CITP-SHOW-RWL) "citp-show-rwl"
;           (CHAOS::CITP-FLAG-NAME CHAOS::CITP-SPOILER) "citp-spoiler"
;           (CHAOS::CITP-FLAG-NAME CHAOS::CITP-PRINT-MESSAGE) "citp-print-message"
;           (CHAOS::CITP-FLAG-NAME CHAOS::CITP-NORMALIZE-INIT)
;             "citp-normalize-init"
;           ...)
; --> PROGN SETF SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG CHAOS::CITP-PRINT-MESSAGE) T)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG CHAOS::CITP-NORMALIZE-INIT) T)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG CHAOS::CITP-NORMALIZE-LHS) T)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG-HOOK CHAOS::CITP-VERBOSE)
;             #'(LAMBDA (CHAOS::NAME CHAOS::VALUE)
;                 (DECLARE (IGNORE CHAOS::NAME))
;                 (SETF CHAOS::*CITP-VERBOSE* CHAOS::VALUE)))
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG-HOOK CHAOS::CITP-SHOW-RWL)
;             #'(LAMBDA (CHAOS::NAME CHAOS::VALUE)
;                 (DECLARE (IGNORE CHAOS::NAME))
;                 (SETF CHAOS::*CITP-SHOW-RWL* CHAOS::VALUE)))
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG-HOOK CHAOS::CITP-SPOILER)
;             #'(LAMBDA (CHAOS::NAME CHAOS::VALUE)
;                 (DECLARE (IGNORE CHAOS::NAME))
;                 (SETF CHAOS::*CITP-SPOILER* CHAOS::VALUE)))
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG-STRUCT CHAOS::IDX)
;             (CHAOS::MAKE-CITP-FLAG-STRUCT :VALUE NIL))
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (INITIALIZE-CITP-FLAG)
; compiling (DEFSTRUCT (PTREE-NODE # ...) ...)
; compiling (DEFSTRUCT (PTREE #) ...)
; compiling (DEFSTRUCT (GOAL #) ...)
; compiling (DEFUN GOAL-IS-DISCHARGED ...)
; compiling (DEFUN GET-MODULE-SIMPLE-NAME ...)
; compiling (DEFUN PR-GOAL ...)
; compiling (DEFUN PR-PTREE-NODE ...)
; compiling (DEFUN GET-DEFINED-TACTIC ...)
; compiling (DEFUN INCORPORATE-SENTENCES-INTO-MODULE ...)
; compiling (DEFUN USE-SENTENCES-IN-GOAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN USE-SENTENCES-IN-GOAL
;     (LENGTH CHAOS::NEW-AXS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN USE-THEORY-IN-GOAL ...)
; compiling (DEFUN USE-THEORY-IN-MODULE ...)
; compiling (DEFPARAMETER .CITP-EMBED-MODULE. ...)
; compiling (DEFUN MAKE-EMBED-MODULE ...)
; compiling (DEFUN EMBED-SENTENCES-IN-MODULE ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN EMBED-SENTENCES-IN-MODULE
;     (LENGTH CHAOS::NEW-AXS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN EMBED-THEORY-IN-MODULE ...)
; compiling (DEFUN THE-GOAL-NEEDS-UNDO ...)
; compiling (DEFMACRO PTREE-NODE-GOAL ...)
; compiling (DEFUN CLEAR-INDUCTION-SCHEME ...)
; compiling (DEFUN INITIALIZE-PTREE-NODE ...)
; compiling (DEFUN NODE-IS-DISCHARGED? ...)
; compiling (DEFUN MAKE-IT-UNPROVED ...)
; compiling (DEFUN MAKE-PTREE-GOAL-NAME ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN MAKE-PTREE-GOAL-NAME
;     (EQUAL CHAOS::P-NAME "root")
; --> STRING= 
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFPARAMETER .NEXT-CONTEXT-MODULE. ...)
; compiling (DEFUN MAKE-NEXT-CONTEXT-MODULE-NAME ...)
; compiling (DEFVAR .GOALS-SO-FAR. ...)
; compiling (DEFUN PREPARE-NEXT-GOAL ...)
; compiling (DEFUN GIVE-GOAL-NAME-EACH-IN-ORDER ...)
; compiling (DEFUN MAKE-PTREE-ROOT ...)
; compiling (DEFUN ADD-PTREE-CHILD ...)
; compiling (DEFUN ADD-PTREE-CHILDREN ...)
; compiling (DEFUN GET-PTREE-ROOT ...)
; compiling (DEFUN THE-NODE-NEEDS-UNDO ...)
; compiling (DEFUN PARENT-NEEDS-UNDO ...)
; compiling (DEFUN PR-PTREE ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PR-PTREE
;     (INCF CHAOS::NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN RESET-PROOF ...)
; compiling (DEFUN EXISTING-DEF-NAME? ...)
; compiling (DEFSTRUCT CITP-PROOF ...)
; compiling (DEFVAR *THE-CITP-PROOF* ...)
; compiling (DEFUN GET-DISCHARGED-SENTENCE-WITH-LABEL ...)
; compiling (DEFUN FIND-DISCHARGED-SENTENCES-WITH-LABEL ...)
; compiling (DEFMACRO WHEN-CITP-VERBOSE ...)
; compiling (DEFVAR *CITP-SILENT* ...)
; compiling (DEFMACRO WITH-CITP-ENV ...)
; compiling (DEFMACRO WITH-NEXT-CONTEXT ...)
; compiling (DEFMACRO WITH-CITP-DEBUG ...)
; compiling (DEFUN CITP-INTRO-CONST ...)
; compiling (DEFUN INTRO-CONST-RETURNS-SUBST ...)
; compiling (DEFUN MAKE-TC-CONST-NAME ...)
; compiling (DEFUN MAKE-TC-PCONST-NAME ...)
; compiling (DEFUN INTRO-FRESH-PCONSTANT ...)
; compiling (DEFUN FIND-VARIABLE-SUBST-IN ...)
; compiling (DEFUN LIST-SUBMODULES ...)
; compiling (DEFUN VARIABLE->CONSTANT ...)
; compiling (DEFUN GATHER-CONSTRUCTOR-OPS ...)
; compiling (DEFUN GET-CONSTRUCTORS-OF-SORT ...)
; compiling (DEFUN DEFAULT-CONSTRUCTOR-ORDER ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN DEFAULT-CONSTRUCTOR-ORDER
;     (SORT CHAOS::CONSTRUCTORS
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (LET ((CHAOS::AX #) (CHAOS::AY #))
;                 (IF (< CHAOS::AX CHAOS::AY)
;                     T
;                     (IF #
;                         NIL
;                         #)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (< CHAOS::AX CHAOS::AY)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (> CHAOS::AX CHAOS::AY)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (< CHAOS::AX CHAOS::AY)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

;     (> CHAOS::AX CHAOS::AY)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFUN ORDER-CONSTRUCTORS ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN ORDER-CONSTRUCTORS
;     (POSITION :* CHAOS::ORDER-SPEC)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR CONS VECTOR
;                                SB-KERNEL:EXTENDED-SEQUENCE), not a (OR CONS
;                                                                        NULL
;                                                                        VECTOR).

;     (SUBSEQ CHAOS::ORDER-SPEC 0 CHAOS::POS-STAR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a SB-KERNEL:EXTENDED-SEQUENCE.

;     (SUBSEQ CHAOS::ORDER-SPEC (1+ CHAOS::POS-STAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN SHOW-CONSTRUCTOR-ORDER ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN SHOW-CONSTRUCTOR-ORDER
;     (INCF CHAOS::NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN CITP-EVAL-ORDER ...)
; compiling (DEFUN SET-CONSTRUCTOR-ORDER ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN SET-CONSTRUCTOR-ORDER
;     (SORT CHAOS::OVERS
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (LET ((CHAOS::X-NUM #) (CHAOS::Y-NUM #))
;                 (DECLARE (TYPE FIXNUM CHAOS::X-NUM CHAOS::Y-NUM))
;                 (< CHAOS::X-NUM CHAOS::Y-NUM))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN MAKE-IND-CONST-NAME ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN MAKE-IND-CONST-NAME
;     (STRING CHAOS::NAME-PREFIX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN VARIABLE->CONSTRUCTOR ...)
; compiling (DEFUN INTRO-FRESH-CONSTANT ...)
; compiling (DEFUN SKOLEMIZE-IF-NEED ...)
; compiling (DEFUN INITIALIZE-PROOF-TREE ...)
; compiling (DEFUN CHECK-SUCCESS ...)
; compiling (DEFUN ROLL-BACK ...)
; compiling (DEFUN FIND-GOAL-NODE ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN FIND-GOAL-NODE
;     (STRING= (CHAOS::GOAL-NAME CHAOS::GOAL) CHAOS::NAME)
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN PRINT-NAMED-GOAL ...)
; compiling (DEFUN GET-UNPROVED-NODES ...)
; compiling (DEFUN GET-UNPROVED-GOALS ...)
; compiling (DEFUN PRINT-UNPROVED-GOALS ...)
; compiling (DEFUN GET-NEXT-PROOF-CONTEXT ...)
; compiling (DEFUN NEXT-PROOF-TARGET-IS-SPECIFIED? ...)
; compiling (DEFUN GET-TARGET-GOAL-NODE ...)
; compiling (DEFUN SELECT-NEXT-GOAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN SELECT-NEXT-GOAL
;     (STRING= CHAOS::GOAL-NAME ".")
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN GET-TACTIC ...)
; compiling (DEFPARAMETER .ROOT-CONTEXT-MODULE. ...)
; compiling (DEFUN RESET-PROOF-SESSION ...)
; compiling (DEFUN CITP-RESET-PROOF-IF-NEED ...)
; compiling (DEFUN SAVE-DISCHARGED-SENTENCES ...)
; compiling (DEFUN PRINT-DISCHARGED-SENTENCES ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN PRINT-DISCHARGED-SENTENCES
;     (LENGTH CHAOS::DISCHARGED)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFVAR .LS-PAT. ...)
; compiling (DEFVAR .LE-PAT. ...)
; compiling (DEFUN PREPARE-ROOT-CONTEXT ...)
; compiling (DEFUN BEGIN-PROOF ...)
; compiling (DEFVAR *SHOW-PROOF-MODE* ...)
; compiling (DEFUN PRINT-PROOF-TREE ...)
; compiling (DEFUN !PRINT-PROOF-TREE ...)
; compiling (DEFUN !PRINT-PROOF-VERTICAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN !PRINT-PROOF-VERTICAL
;     (FUNCALL CHAOS::LEAF-NAME CHAOS::NODE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::LEAF-NAME)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN !PRINT-PROOF-HORIZONTAL ...)
; compiling (DEFPARAMETER *PROOF-INDENT* ...)
; compiling (DEFUN DESCRIBE-PROOF-TREE ...)
; file: /<<PKGBUILDDIR>>/thstuff/proof-struct.lisp
; in: DEFUN DESCRIBE-PROOF-TREE
;     (+ CHAOS::*PROOF-INDENT* CHAOS::*PRINT-INDENT*)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 64).
;       etc.

; compiling (DEFUN PRINT-CURRENT-GOAL ...)
; compiling (DEFUN PRINT-DEFS ...)
; compiling (DEFMACRO WITH-IN-CONTEXT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/proof-struct-tmpWBK8JTS9.fasl
; compilation finished in 0:00:00.940
; compiling file "/<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp" (written 20 JAN 2020 01:13:27 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN DISTRIBUTE-SENTENCES ...)
; compiling (DEFUN REMOVE-NONEXEC ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN REMOVE-NONEXEC
;     (MEMBER CHAOS::LB CHAOS::NON-EXEC-LABELS)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN RULE-COPY-CANONICALIZED ...)
; compiling (DEFUN APPLY-SUBSTITUTION-TO-AXIOM ...)
; compiling (DEFUN COPY-CONSTANT-TERM ...)
; compiling (DEFUN SELECT-COMBS-AUX ...)
; compiling (DEFUN SELECT-COMBS-AUX-INDEXED ...)
; compiling (DEFUN SELECT-COMB-ELEMS ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN SELECT-COMB-ELEMS
;     (LENGTH CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN AXIOM-VARIABLES ...)
; compiling (DEFUN NORMALIZE-TERM-IN ...)
; compiling (DEFUN NORMALIZE-SENTENCE ...)
; compiling (DEFUN IS-CONTRADICTION ...)
; compiling (DEFUN SENTENCE-IS-SATISFIED ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN SENTENCE-IS-SATISFIED
;     (SETQ CHAOS::RESULT :CT)
; 
; note: deleting unreachable code
; 
; note: deleting unreachable code

; compiling (DEFUN CHECK-TRUE<=>FALSE ...)
; compiling (DEFUN CHECK-CONTRADICTORY-ASSUMPTIONS ...)
; compiling (DEFUN CHECK-CONTRADICTION ...)
; compiling (DEFUN CHECK-LE ...)
; compiling (DEFUN BOOLEAN-CONSTANT? ...)
; compiling (DEFUN IS-BUILTIN= ...)
; compiling (DEFUN SIMPLIFY-BOOLEAN-AXIOM ...)
; compiling (DEFUN MAKE-NEW-ASSUMPTION ...)
; compiling (DEFUN CONDITION->AXIOMS ...)
; compiling (DEFUN AXIOM-IS-AN-INSTANCE-OF ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN AXIOM-IS-AN-INSTANCE-OF
;     (FUNCALL CHAOS::NEXT-MATCH-METHOD CHAOS::GS)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::NEXT-MATCH-METHOD)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   NEXT-MATCH-METHOD is not known to be a function

;     (FUNCALL (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::CX)
;              (CHAOS::RULE-LHS CHAOS::CX) (CHAOS::RULE-LHS CHAOS::AX))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::RULE-FIRST-MATCH-METHOD CHAOS::CX))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN CHECK-CT-WITH-AXIOMS ...)
; compiling (DEFUN CHECK-SENTENCE&MARK-LABEL ...)
; compiling (DEFUN SET-OPERATOR-REWRITE-RULE ...)
; compiling (DEFUN ADD-ASSUMPTIONS-TO-GOAL ...)
; compiling (DEFUN CHECK-GOAL-IS-SATISFIED ...)
; compiling (DEFUN MAKE= ...)
; compiling (DEFUN DO-CHECK-SENTENCE ...)
; compiling (DEFPARAMETER .TRIAL-CONTEXT-MODULE. ...)
; compiling (DEFUN TRY-PROVE-WITH-AXIOMS ...)
; compiling (DEFUN ALREADY-PROVED? ...)
; compiling (DEFUN APPLY-NIL ...)
; compiling (DEFUN APPLY-NIL-INTERNAL ...)
; compiling (DEFUN GENERATE-IP-DERIVED-AXIOMS ...)
; compiling (DEFUN SIMPLIFY-EQ-FORM ...)
; compiling (DEFUN MAKE-IMPL-FORM+ ...)
; compiling (DEFUN APPLY-IP ...)
; compiling (DEFUN APPLY-IP+ ...)
; compiling (DEFUN MAKE-TC-VARIABLE-SUBSTITUTIONS ...)
; compiling (DEFUN APPLY-TC ...)
; compiling (DEFUN SET-INDVARS ...)
; compiling (DEFUN SET-INDUCTION-VARIABLES ...)
; compiling (DEFUN GET-INDUCTION-VARIABLE-CONSTRUCTORS ...)
; compiling (DEFUN GET-INDVAR-CONSTRUCTORS ...)
; compiling (DEFUN MAKE-INDVAR-COMB-SUBSTITUTIONS ...)
; compiling (DEFUN GET-INDUCTION-BASE-SUBSTITUTIONS ...)
; compiling (DEFUN GET-INDUCTION-STEP-SUBSTITUTIONS ...)
; compiling (DEFUN GET-REAL-TARGET-VARIABLE ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN GET-REAL-TARGET-VARIABLE
;     (FIND-IF
;      #'(LAMBDA (CHAOS::M)
;          (AND
;           (CHAOS::SORT= (CHAOS::VARIABLE-SORT CHAOS::M)
;                         (CHAOS::VARIABLE-SORT CHAOS::INDVAR))
;           (EQUAL (CHAOS::VARIABLE-NAME CHAOS::M)
;                  (CHAOS::VARIABLE-NAME CHAOS::INDVAR))))
;      CHAOS::AXIOM-VARIABLES)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN MAKE-REAL-INDUCTION-SUBST ...)
; compiling (DEFUN SET-BASE-CASES ...)
; compiling (DEFUN MAKE-STEP-CONSTRUCTOR-TERM ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN MAKE-STEP-CONSTRUCTOR-TERM
;     (ZEROP (CDR CHAOS::VAR-ASSOC))
; ==>
;   (= (CDR CHAOS::VAR-ASSOC) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (INCF (CDR CHAOS::VAR-ASSOC))
; --> LET* 
; ==>
;   (+ 1 (CDR #:VAR-ASSOC17))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (STRING (CHAOS::VARIABLE-NAME VARIABLE))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (INCF (CDR CHAOS::VAR-ASSOC))
; --> LET* 
; ==>
;   (+ 1 (CDR #:VAR-ASSOC18))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; ==>
;   (+ 1 (CDR #:VAR-ASSOC17))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (INCF CHAOS::N)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::N)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (< 1 (INCF CHAOS::N))
; --> > IF 
; ==>
;   (> SB-C::Y SB-C::X)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       etc.

; compiling (DEFUN MAKE-INDUCTION-STEP-SUBST ...)
; compiling (DEFUN MAKE-INDUCTION-STEP-SUBST-FROM-OP ...)
; compiling (DEFUN MAKE-REAL-INDUCTION-STEP-SUBST ...)
; compiling (DEFUN RESOLVE-INDUCTION-SUBST ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN RESOLVE-INDUCTION-SUBST
;     (ASSOC CHAOS::V CHAOS::RSUBSTS)
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN SUBST-IS-EQUAL ...)
; compiling (DEFUN ADD-HYPOTHESIS ...)
; compiling (DEFUN ADD-STEP-CASES ...)
; compiling (DEFUN GET-INDUCTION-CONSTRUCTORS ...)
; compiling (DEFUN INDUCTION-CASES ...)
; compiling (DEFUN APPLY-SI ...)
; compiling (DEFUN SET-INDUCTION-VARIABLES-AND-SCHEME ...)
; compiling (DEFUN SET-INDBASES ...)
; compiling (DEFUN SET-INDHYPOS ...)
; compiling (DEFUN SET-INDSTEPS ...)
; compiling (DEFUN GET-IND-SUBSTITUTIONS ...)
; compiling (DEFUN MAKE-INDUCTION-STEP-SUBST-FROM-TERM ...)
; compiling (DEFUN USER-INDUCTION-CASES ...)
; compiling (DEFUN APPLY-USER-DEFINED-INDUCTION-SCHEME ...)
; compiling (DEFUN DO-APPLY-RD ...)
; compiling (DEFUN APPLY-RD-INTERNAL ...)
; compiling (DEFUN APPLY-RD ...)
; compiling (DEFUN APPLY-RD- ...)
; compiling (DEFUN GET-GTERMS ...)
; compiling (DEFUN GET-GTERMS-FROM-AXIOM ...)
; compiling (DEFUN GSUBTERM-HAS-MATCHING-RULE ...)
; compiling (DEFUN CA-INSTANTIATE-CONDITION ...)
; compiling (DEFVAR .DUPLICATED. ...)
; compiling (DEFVAR .SUBST-SO-FAR. ...)
; compiling (DEFUN FIND-GTERM-MATCHING-CONDITIONALS ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN FIND-GTERM-MATCHING-CONDITIONALS
;     (SETF (AREF CHAOS::.DUPLICATED. CHAOS::IDX)
;             (REMOVE-DUPLICATES CHAOS::REJECTED :TEST
;                                #'CHAOS::TERM-EQUATIONAL-EQUAL))
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

; compiling (DEFVAR .NEW-AXS-SO-FAR. ...)
; compiling (DEFUN GENERATE-CASE-AXIOMS ...)
; compiling (DEFUN FIND-SUB-CASE-IN ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN FIND-SUB-CASE-IN
;     (FIND CHAOS::X CHAOS::XC :TEST #'CHAOS::TERM-EQUATIONAL-EQUAL)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (LENGTH CHAOS::XC)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN CASE-IS-VALID ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN CASE-IS-VALID
;     (AREF CHAOS::.DUPLICATED. CHAOS::IDX)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

; compiling (DEFUN REMOVE-EXCLUSIVE-CASES ...)
; compiling (DEFUN NORMALIZE-CASES ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN NORMALIZE-CASES
;     (LENGTH CHAOS::.DUPLICATED.)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (AREF CHAOS::.DUPLICATED. CHAOS::X)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

;     (DELETE CHAOS::C CHAOS::ALL-CASES :TEST #'CHAOS::TERM-EQUATIONAL-EQUAL)
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

; compiling (DEFUN GENERATE-CASES ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN GENERATE-CASES
;     (LENGTH CHAOS::RV-COMBS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFUN RULE-IS-FOR-CASE ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN RULE-IS-FOR-CASE
;     (STRING CHAOS::LB)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN GET-CA-RULES ...)
; compiling (DEFUN APPLY-CA ...)
; compiling (DEFUN RULE-IS-CASE-GENERATED ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN RULE-IS-CASE-GENERATED
;     (STRING CHAOS::LB)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PRINT-CASE-AXIOMS ...)
; compiling (DEFUN ALL-CASES ...)
; compiling (DEFUN APPLY-CS ...)
; compiling (DEFUN GET-TARGET-AXIOM ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN GET-TARGET-AXIOM
;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN RESOLVE-SUBST-FORM ...)
; compiling (DEFUN MAKE-REAL-INSTANCIATION-SUBST ...)
; compiling (DEFUN MAKE-AXIOM-INSTANCE ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN MAKE-AXIOM-INSTANCE
;     (CHAOS::MAKE-PROPER-LABEL (CHAOS::LABEL)
;      (IF (STRINGP CHAOS::LABEL)
;          (INTERN CHAOS::LABEL)
;          CHAOS::LABEL))
; 
; note: Return type not fixed values, so can't use known return convention:
;   (VALUES (AND (NOT (VECTOR CHARACTER)) (NOT (VECTOR NIL)) (NOT BASE-STRING))
;           &OPTIONAL (MEMBER :INTERNAL :EXTERNAL :INHERITED NIL))

; compiling (DEFUN INSTANCIATE-AXIOM ...)
; compiling (DEFUN APPLY-INIT-TACTIC ...)
; compiling (DEFUN REPORT-INSTANCIATED-AXIOM ...)
; compiling (DEFUN INTRODUCE-INSTANCIATED-AXIOM-TO-MODULE ...)
; compiling (DEFUN INSTANCIATE-AXIOM-IN-GOAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN INSTANCIATE-AXIOM-IN-GOAL
;     (CHAOS::CITP-FLAG CHAOS::CITP-NORMALIZE-INIT)
; --> CHAOS::CITP-FLAG-STRUCT-VALUE SB-KERNEL:%INSTANCE-REF THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::CITP-FLAG CHAOS::CITP-NORMALIZE-LHS)
; --> CHAOS::CITP-FLAG-STRUCT-VALUE SB-KERNEL:%INSTANCE-REF THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN INSTANCIATE-AXIOM-IN-MODULE ...)
; compiling (DEFUN MAKE-IMPL-ASSUMPTION ...)
; compiling (DEFUN MAKE-IMPL-FORM ...)
; compiling (DEFUN INTRODUCE-IMPLICATION-TO-GOAL ...)
; compiling (DEFUN CITP-RENAME-TERM-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN CITP-RENAME-TERM-VARIABLES
;     (MEMBER CHAOS::VAR CHAOS::DONE)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *RENAMED-VARIABLE-NUMBER* ...)
; compiling (LET (#) ...)
; compiling (DEFSTRUCT (CPP #) ...)
; compiling (DEFUN PR-CPP ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN PR-CPP
;     (FORMAT STREAM "~%Critical Pair ---------")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%Critical Pair ---------"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; Critical Pair ---------"
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN COMPUTE-OVERWRAPS ...)
; compiling (DEFUN TERM-AT-POS ...)
; compiling (DEFUN REPLACE-TERM-AT ...)
; compiling (DEFUN COMPUTE-AXIOM-OVERWRAPPS ...)
; compiling (DEFUN GENERATE-CRITICAL-PAIRS ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN GENERATE-CRITICAL-PAIRS
;     (SORT CHAOS::SUBS #'CHAOS::LRPO)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN COMPUTE-CRITICAL-PAIRS ...)
; compiling (DEFUN APPLY-CP ...)
; compiling (DEFUN ADD-CRITICAL-PAIRS ...)
; compiling (DEFUN REDUCE-IN-GOAL ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN REDUCE-IN-GOAL
;     (STRING CHAOS::MODE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN APPLY-NF ...)
; compiling (DEFUN APPLY-CT ...)
; compiling (DEFVAR .PVAR-NAMES. ...)
; compiling (DEFUN MAKE-CTF-CONSTRUCTOR-PATTERN ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN MAKE-CTF-CONSTRUCTOR-PATTERN
;     (ZEROP (CDR CHAOS::PN))
; ==>
;   (= (CDR CHAOS::PN) 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (INCF (CDR CHAOS::PN))
; --> LET* 
; ==>
;   (+ 1 (CDR #:PN2))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

; ==>
;   (+ 1 (CDR #:PN3))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

; ==>
;   (+ 1 (CDR #:PN2))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; ==>
;   (+ 1 (CDR #:PN3))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN DO-APPLY-CTF-WITH-CONSTRUCTORS ...)
; compiling (DEFUN DO-APPLY-CTF-TO-EQUATION ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN DO-APPLY-CTF-TO-EQUATION
;     (CHAOS::ADD-ASSUMPTION (CHAOS::GOAL CHAOS::LHS CHAOS::RHS)
;      (LET (CHAOS::N-AXIOM)
;        (MULTIPLE-VALUE-BIND (CHAOS::N-LHS CHAOS::N-RHS TYPE)
;            (CHAOS::SIMPLIFY-BOOLEAN-AXIOM CHAOS::LHS CHAOS::RHS)
;          (COND (CHAOS::N-LHS # # # #) (T #)))))
; 
; note: Return type not fixed values, so can't use known return convention:
;   *

; compiling (DEFUN PARSE-AXIOM-OR-TERM ...)
; compiling (DEFUN DO-APPLY-CTF ...)
; compiling (DEFUN APPLY-CTF ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN APPLY-CTF
;     (LENGTH CHAOS::NEXT-GOALS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFUN APPLY-CTF-TACTIC ...)
; compiling (DEFUN DO-APPLY-CSP ...)
; compiling (DEFUN APPLY-CSP ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN APPLY-CSP
;     (LENGTH CHAOS::NEXT-GOALS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

; compiling (DEFUN APPLY-CSP-TACTIC ...)
; compiling (DEFUN USE-DISCHARGED-GOALS ...)
; compiling (DEFUN USE-THEORY ...)
; compiling (DEFUN EMBED-DISCHARGED-GOALS ...)
; compiling (DEFUN EMBED-THEORY ...)
; compiling (DEFUN REPORT-CITP-STAT ...)
; compiling (DEFUN APPLY-TACTIC ...)
; file: /<<PKGBUILDDIR>>/thstuff/apply-tactic.lisp
; in: DEFUN APPLY-TACTIC
;     (FUNCALL (CHAOS::TACTIC-EXECUTOR CHAOS::TACTIC) CHAOS::PTREE-NODE
;              CHAOS::TACTIC)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::TACTIC-EXECUTOR CHAOS::TACTIC))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN APPLY-TACTICS-TO-NODE ...)
; compiling (DEFUN APPLY-TACTIC-SEQ ...)
; compiling (DEFUN FLATTEN-TACTIC-SEQ ...)
; compiling (DEFUN APPLY-TACTICS ...)
; compiling (DEFUN APPLY-AUTO ...)
; compiling (DEFUN APPLY-TACTICS-TO-GOAL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/apply-tactic-tmpUVEUD2ZN.fasl
; compilation finished in 0:00:01.244
; compiling file "/<<PKGBUILDDIR>>/thstuff/citp.lisp" (written 16 DEC 2019 07:35:07 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CHECK-CONTEXT-MODULE ...)
; compiling (DEFUN CHECK-PTREE ...)
; compiling (DEFUN CHECK-ON-GOING ...)
; compiling (DEFUN CHECK-CONTEXT-MODULE-AND-PTREE ...)
; compiling (DEFUN CITP-PARSE-GOAL ...)
; compiling (DEFUN CITP-PARSE-APPLY ...)
; compiling (DEFUN CITP-PARSE-SEQ-OF-TERMS ...)
; compiling (DEFUN CITP-PARSE-IND-ON ...)
; compiling (DEFUN CITP-PARSE-AUTO ...)
; compiling (DEFUN CITP-PARSE-ROLL-BACK ...)
; compiling (DEFUN MAKE-AXIOM-PATTERN ...)
; compiling (DEFUN CITP-PARSE-INIT ...)
; compiling (DEFUN CITP-PARSE-IMP ...)
; compiling (DEFUN CITP-PARSE-CRITICAL-PAIR ...)
; compiling (DEFUN CITP-PARSE-EQUATION ...)
; compiling (DEFUN CITP-PARSE-BACKWARD ...)
; compiling (DEFUN CITP-PARSE-SELECT ...)
; compiling (DEFUN CITP-PARSE-RED ...)
; compiling (DEFUN CITP-PARSE-VERBOSE ...)
; compiling (DEFUN CITP-PARSE-NORMALIZE ...)
; compiling (DEFUN CITP-PARSE-CTF ...)
; compiling (DEFUN CITP-PARSE-CSP ...)
; compiling (DEFUN CITP-PARSE-DEFINE ...)
; file: /<<PKGBUILDDIR>>/thstuff/citp.lisp
; in: DEFUN CITP-PARSE-DEFINE
;     (LENGTH CHAOS::COM-NAME)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ CHAOS::NAME 0 4)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN CITP-PARSE-SHOW ...)
; compiling (DEFUN CITP-PARSE-SPOILER ...)
; file: /<<PKGBUILDDIR>>/thstuff/citp.lisp
; in: DEFUN CITP-PARSE-SPOILER
;     (SETF (CHAOS::CITP-FLAG CHAOS::CITP-SPOILER) CHAOS::VALUE)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARSE-CITP-BINSPECT ...)
; compiling (DEFUN PARSE-TERM-IN-CONTEXT ...)
; file: /<<PKGBUILDDIR>>/thstuff/citp.lisp
; in: DEFUN PARSE-TERM-IN-CONTEXT
;     (ELT TYPE 0)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a (SIMPLE-ARRAY * (*)).

; compiling (DEFUN PARSE-CITP-BGRIND ...)
; compiling (DEFUN CITP-PARSE-BSHOW ...)
; compiling (DEFUN CITP-PARSE-SET ...)
; compiling (DEFUN CITP-PARSE-BSTART ...)
; compiling (DEFUN CITP-PARSE-BGUESS ...)
; compiling (DEFUN CITP-PARSE-USE ...)
; compiling (DEFUN CITP-PARSE-EMBED ...)
; compiling (DEFUN CITP-PARSE-RESET ...)
; compiling (DEFUN CITP-PROCESS-OPATTR-DECLARATION-FORM ...)
; compiling (DEFUN EVAL-CITP-GOAL ...)
; compiling (DEFUN EVAL-CITP-APPLY ...)
; compiling (DEFUN EVAL-CITP-IND-ON ...)
; compiling (DEFUN EVAL-CITP-ROLL-BACK ...)
; compiling (DEFUN EVAL-CITP-INIT ...)
; compiling (DEFUN EVAL-CITP-IMP ...)
; compiling (DEFUN EVAL-CITP-CRITICAL-PAIR ...)
; compiling (DEFUN EVAL-CITP-EQUATION ...)
; compiling (DEFUN EVAL-CITP-BACKWARD ...)
; compiling (DEFUN EVAL-CITP-SELECT ...)
; compiling (DEFUN EVAL-CITP-RED ...)
; compiling (DEFUN EVAL-CITP-VERBOSE ...)
; compiling (DEFUN EVAL-CITP-NORMALIZE ...)
; compiling (DEFUN EVAL-CITP-CTF ...)
; compiling (DEFUN EVAL-CITP-CSP ...)
; compiling (DEFUN EVAL-CITP-SHOW ...)
; compiling (DEFUN EVAL-CITP-BINSPECT ...)
; compiling (DEFUN EVAL-CITP-BGRIND ...)
; compiling (DEFUN EVAL-CITP-DEFINE ...)
; compiling (DEFUN CITP-EVAL-SET ...)
; file: /<<PKGBUILDDIR>>/thstuff/citp.lisp
; in: DEFUN CITP-EVAL-SET
;     (CHAOS::CITP-FLAG CHAOS::CITP-PRINT-MESSAGE)
; --> CHAOS::CITP-FLAG-STRUCT-VALUE SB-KERNEL:%INSTANCE-REF THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (= CHAOS::CITP-ALL CHAOS::INDEX)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (SETF (CHAOS::CITP-FLAG CHAOS::X) CHAOS::VALUE)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::CITP-FLAG CHAOS::INDEX) CHAOS::VALUE)
; --> SB-KERNEL:%INSTANCE-SET THE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::CITP-FLAG-HOOK CHAOS::INDEX)
; --> CHAOS::CITP-FLAG-STRUCT-HOOK SB-KERNEL:THE* SB-KERNEL:%INSTANCE-REF THE 
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (10)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (FUNCALL (CHAOS::CITP-FLAG-HOOK CHAOS::INDEX) CHAOS::NAME CHAOS::VALUE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::CITP-FLAG-HOOK CHAOS::INDEX))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN CITP-EVAL-USE ...)
; compiling (DEFUN CITP-EVAL-EMBED ...)
; compiling (DEFUN CITP-EVAL-RESET ...)
; compiling (DEFUN ADD-METHOD-THEORY ...)
; file: /<<PKGBUILDDIR>>/thstuff/citp.lisp
; in: DEFUN ADD-METHOD-THEORY
;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::SET-NEEDS-PARSE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/citp-tmpOWNJOEU.fasl
; compilation finished in 0:00:00.131
; compiling file "/<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp" (written 15 NOV 2018 12:48:56 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR .BTERM-ASSOC-TABLE. ...)
; compiling (DEFVAR .BVAR-NUM. ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFUN CLEAR-BTERM-MEMO-TABLE ...)
; compiling (DEFUN RESET-BVAR ...)
; compiling (DEFUN MAKE-BTERM-VARIABLE ...)
; compiling (DEFUN GET-BTERM-VARIABLE ...)
; compiling (DEFSTRUCT (ABST-BTERM #) ...)
; compiling (DEFSTRUCT (ABST-AND #))
; compiling (DEFUN PRINT-BTERM ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN PRINT-BTERM
;     (FORMAT STREAM "(~d) " (INCF CHAOS::NUM))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$(~d) "
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\( STREAM)
;               (LET (# #)
;                 (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;               (WRITE-STRING ") " STREAM))
;             NIL)
;           #:G11)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.

;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN ABST-BTERM-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN ABST-BTERM-VARIABLES
;     (PUSHNEW (CAR CHAOS::SUB) CHAOS::VARS)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFVAR *ABST-BTERM* ...)
; compiling (DEFVAR *ABST-BTERM-REPRESENTATION* ...)
; compiling (DEFVAR *ABST-BTERM-TARGET-VARIABLE* ...)
; compiling (DEFUN XTRACT-XOR-SUBTERMS ...)
; compiling (DEFUN XTRACT-AND-SUBTERMS ...)
; compiling (DEFUN XTRACT-TFS ...)
; compiling (DEFUN MAKE-AND-ABSTRACTION ...)
; compiling (DEFUN MAKE-TF-COMBINATION ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN MAKE-TF-COMBINATION
;     (EXPT 2 CHAOS::C)
; ==>
;   (ASH 1 SB-C::POWER)
; 
; note: forced to do full call
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN ASSIGN-TF ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN ASSIGN-TF
;     (LENGTH CHAOS::LIST-VARS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (EXPT 2 CHAOS::COLUMNS)
; ==>
;   (ASH 1 SB-C::POWER)
; 
; note: forced to do full call
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline ASH (cost 3) because:
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (DOTIMES (CHAOS::R CHAOS::ROWS)
;       (LET ((SUBST NIL))
;         (DOTIMES (CHAOS::C CHAOS::COLUMNS) (PUSH (CONS # #) SUBST))
;         (PUSH (NREVERSE SUBST) CHAOS::L-SUBST)))
; --> DO BLOCK LET TAGBODY UNLESS IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a (INTEGER 1), not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PROGN SETQ THE 1+ 
; ==>
;   (+ CHAOS::R 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (INCF CHAOS::NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN MAKE-ABST-BOOLEAN-TERM ...)
; compiling (DEFUN FIND-BVAR-SUBST ...)
; compiling (DEFUN PRINT-BTERM-SUBSTITUTION ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN PRINT-BTERM-SUBSTITUTION
;     (SORT (CHAOS::TERM-PVARIABLES CHAOS::TERM-REPRESENTATION)
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (STRING< (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
;                        (STRING (CHAOS::VARIABLE-NAME CHAOS::Y)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::Y))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING< (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
;              (STRING (CHAOS::VARIABLE-NAME CHAOS::Y)))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN PRINT-BTERM-WITH-SUBST ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN PRINT-BTERM-WITH-SUBST
;     (MEMBER CHAOS::VAR CHAOS::DONE)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN ABSTRACT-BOOLEAN-TERM ...)
; compiling (DEFUN MAKE-AND-REPRESENTATION ...)
; compiling (DEFUN MAKE-XOR-REPRESENTATION ...)
; compiling (DEFUN MAKE-BTERM-REPRESENTATION ...)
; compiling (DEFUN SIMPLE-PRINT-BTERM ...)
; compiling (DEFUN PRINT-BTERM-TREE ...)
; compiling (DEFUN PRINT-BTERM-GRINDING ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN PRINT-BTERM-GRINDING
;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::VAR))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CAR CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CAR CHAOS::Y))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING< (STRING (CAR CHAOS::X)) (STRING (CAR CHAOS::Y)))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN PRINT-ABST-BTERM ...)
; compiling (DEFMACRO PVAR-IMAGE ...)
; compiling (DEFUN SUBST-PCIMAGE-CP ...)
; compiling (DEFUN FIND-BTERM-SOLUTION-WITH-SUBST ...)
; compiling (DEFUN RESOLVE-BTERM-BY-WF ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN RESOLVE-BTERM-BY-WF
;     (LENGTH CHAOS::VARS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (SIMPLE-ARRAY * (*)) CONS NULL
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (LENGTH CHAOS::BASES)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (+ 1 CHAOS::J CHAOS::I)
; ==>
;   (+ (+ 1 CHAOS::J) CHAOS::I)
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the first result of inline (signed-byte 64) arithmetic

; compiling (DEFUN TRY-RESOLVE-BTERM ...)
; compiling (DEFVAR *BINSPECT-MOD-NAME* ...)
; compiling (DEFVAR *BINSPECT-MOD-DECL* ...)
; compiling (DEFUN GET-BINSPECT-MODULE ...)
; compiling (DEFUN BINSPECT-INTRO-PREDICATES ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN BINSPECT-INTRO-PREDICATES
;     (STRING (CHAOS::VARIABLE-PRINT-NAME CHAOS::V))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (CHAOS::SET-NEEDS-PARSE CHAOS::MODULE)
; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-NEED-PARSING-PREPARATION SETF SB-KERNEL:%INSTANCE-SET 
; --> SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN MAKE-PRED-ORDERED-PAIRS ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN MAKE-PRED-ORDERED-PAIRS
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::Y))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING< (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
;              (STRING (CHAOS::VARIABLE-NAME CHAOS::Y)))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN MAKE-PRED-COMBINATIONS ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN MAKE-PRED-COMBINATIONS
;     (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-NAME CHAOS::Y))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING< (STRING (CHAOS::VARIABLE-NAME CHAOS::X))
;              (STRING (CHAOS::VARIABLE-NAME CHAOS::Y)))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
;   The second argument is a STRING, not a SIMPLE-STRING.

; compiling (DEFUN GET-BTERM-PREDICATE-COMBINATIONS ...)
; compiling (DEFUN BGUESS-AX-FORM ...)
; compiling (DEFUN REPORT-BGUESS-RESULT ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN REPORT-BGUESS-RESULT
;     (INCF CHAOS::DEPTH)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::DEPTH)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.

;     (LENGTH CHAOS::SOLUTIONS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR CONS VECTOR
;                               SB-KERNEL:EXTENDED-SEQUENCE), not a VECTOR.

;     (INCF CHAOS::DEPTH)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::DEPTH)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (INCF CHAOS::NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN DO-BGUESS ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN DO-BGUESS
;     (STRING (CHAOS::VARIABLE-PRINT-NAME (CAR CHAOS::COMB)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (STRING (CHAOS::VARIABLE-PRINT-NAME (CDR CHAOS::COMB)))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN BINSPECT-IN-GOAL ...)
; compiling (DEFUN BINSPECT-IN-MODULE ...)
; compiling (DEFUN BINSPECT-IN ...)
; compiling (DEFUN CHECK-BTERM-CONTEXT ...)
; compiling (DEFUN BRESOLVE ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN BRESOLVE
;     (LENGTH CHAOS::RARGS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (< 0 CHAOS::LIMIT)
; --> > IF 
; ==>
;   (> SB-C::Y SB-C::X)
; 
; note: forced to do FAST-IF->-ZERO (cost 8)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.

; compiling (DEFUN BSHOW ...)
; compiling (DEFUN FIND-VARIABLE-IN-ABST-BTERM ...)
; file: /<<PKGBUILDDIR>>/thstuff/bterm-inspector.lisp
; in: DEFUN FIND-VARIABLE-IN-ABST-BTERM
;     (STRING= CHAOS::NAME (CHAOS::VARIABLE-PRINT-NAME (CAR CHAOS::SUB)))
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a SIMPLE-STRING.

; compiling (DEFUN BSTART ...)
; compiling (DEFUN BGUESS ...)
; compiling (DEFUN BGRIND-IN ...)
; compiling (DEFUN BGRIND-IN-GOAL ...)
; compiling (DEFUN BGRIND-IN-MODULE ...)
; compiling (DEFUN SHOW-GRIND ...)
; compiling (DEFUN BGRIND-BOOL-TERM ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/thstuff/bterm-inspector-tmpVT5BMTA5.fasl
; compilation finished in 0:00:00.211
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/types.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN LIST->QUEUE ...)
; compiling (DEFMACRO QUEUE-FRONT-PTR ...)
; compiling (DEFMACRO QUEUE-REAR-PTR ...)
; compiling (DEFMACRO QUEUE-SET-FRONT-PTR ...)
; compiling (DEFMACRO QUEUE-SET-REAR-PTR ...)
; compiling (DEFMACRO EMPTY-QUEUE? ...)
; compiling (DEFUN QUEUE-FRONT ...)
; compiling (DEFUN QUEUE-INSERT ...)
; compiling (DEFUN DELETE-QUEUE ...)
; compiling (DEFSTRUCT (LITERAL # ...) ...)
; compiling (DEFCONSTANT SCRATCH-BIT ...)
; compiling (DEFCONSTANT ORIENTED-EQ-BIT ...)
; compiling (DEFMACRO TEST-BIT ...)
; compiling (DEFMACRO SET-BIT ...)
; compiling (DEFMACRO CLEAR-BIT ...)
; compiling (DEFMACRO POSITIVE-LITERAL? ...)
; compiling (DEFMACRO NEGATIVE-LITERAL? ...)
; compiling (DEFMACRO ANSWER-LITERAL? ...)
; compiling (DEFMACRO POSITIVE-EQ-LITERAL? ...)
; compiling (DEFMACRO NEGATIVE-EQ-LITERAL? ...)
; compiling (DEFMACRO EQ-LITERAL? ...)
; compiling (DECLAIM (INLINE PROPOSITIONAL-LITERAL?))
; compiling (DEFUN PROPOSITIONAL-LITERAL? ...)
; compiling (DEFUN PR-LITERAL ...)
; compiling (DEFVAR *FOPL-TWO-EQUALITIES* ...)
; compiling (DEFVAR *FOPL-SENTENCE-MODULE* ...)
; compiling (DEFVAR *FOPL-CLAUSE-FORM-MODULE* ...)
; compiling (DEFVAR *FOPL-SENTENCE-SORT* ...)
; compiling (DEFVAR *VAR-DECL-LIST-SORT* ...)
; compiling (DEFVAR *FOPL-CLAUSE-SORT* ...)
; compiling (DEFVAR *FOPL-SENTENCE-SEQ-SORT* ...)
; compiling (DEFVAR *VAR-DECL-LIST* ...)
; compiling (DEFVAR *FOPL-AND* ...)
; compiling (DEFVAR *FOPL-OR* ...)
; compiling (DEFVAR *FOPL-IMPLY* ...)
; compiling (DEFVAR *FOPL-IFF* ...)
; compiling (DEFVAR *FOPL-NEG* ...)
; compiling (DEFVAR *FOPL-FORALL* ...)
; compiling (DEFVAR *FOPL-EXISTS* ...)
; compiling (DEFVAR *FOPL-EQ* ...)
; compiling (DEFVAR *FOPL-BEQ* ...)
; compiling (DEFVAR *FOPL-ANS* ...)
; compiling (DEFVAR *CLAUSE-CONSTRUCTOR* ...)
; compiling (DEFVAR *CLAUSE-CONSTRUCTOR2* ...)
; compiling (DEFVAR *FOPL-SENTENCE-SEQ* ...)
; compiling (DECLAIM (INLINE TERM-IS-ATOM?))
; compiling (DEFUN TERM-IS-ATOM? ...)
; compiling (DEFSTRUCT (CLAUSE # ...) ...)
; compiling (DEFMACRO GET-CLAUSE ...)
; compiling (DEFPARAMETER CL-PRINT-MERGINE ...)
; compiling (DEFUN PRINT-CLAUSE ...)
; compiling (DEFUN PR-CLAUSE-LIST ...)
; compiling (DEFUN PRINT-CLAUSE-ATTRIBUTES ...)
; compiling (DEFUN LITERALS-TO-TERM ...)
; compiling (DEFUN CLAUSE-TO-TERM ...)
; compiling (DEFUN COPY-LITERAL ...)
; compiling (DEFUN SHALLOW-COPY-LITERAL ...)
; compiling (DEFUN CLAUSE-VARIABLES ...)
; compiling (DECLAIM (INLINE CLAUSE-DISTINCT-VARIABLES))
; compiling (DEFUN CLAUSE-DISTINCT-VARIABLES ...)
; compiling (DECLAIM (INLINE GROUND-CLAUSE?))
; compiling (DEFUN GROUND-CLAUSE? ...)
; compiling (DECLAIM (INLINE NUM-LITERALS))
; compiling (DEFUN NUM-LITERALS ...)
; compiling (DECLAIM (INLINE NUM-ANSWERS))
; compiling (DEFUN NUM-ANSWERS ...)
; compiling (DECLAIM (INLINE NUM-LITERALS-ALL))
; compiling (DEFUN NUM-LITERALS-ALL ...)
; compiling (DECLAIM (INLINE UNIT-CLAUSE?))
; compiling (DEFUN UNIT-CLAUSE? ...)
; compiling (DECLAIM (INLINE POSITIVE-CLAUSE?))
; compiling (DEFUN POSITIVE-CLAUSE? ...)
; compiling (DECLAIM (INLINE NEGATIVE-CLAUSE?))
; compiling (DEFUN NEGATIVE-CLAUSE? ...)
; compiling (DECLAIM (INLINE PROPOSITIONAL-CLAUSE?))
; compiling (DEFUN PROPOSITIONAL-CLAUSE? ...)
; compiling (DECLAIM (INLINE HORN-CLAUSE?))
; compiling (DEFUN HORN-CLAUSE? ...)
; compiling (DECLAIM (INLINE EQUALITY-CLAUSE?))
; compiling (DEFUN EQUALITY-CLAUSE? ...)
; compiling (DEFUN SYMMETRY-CLAUSE? ...)
; compiling (DEFUN XX-RESOLVABLE ...)
; compiling (DEFSTRUCT PSYSTEM ...)
; compiling (DEFUN INITIALIZE-PSYSTEM ...)
; compiling (DEFSTRUCT (CLASH #) ...)
; compiling (DEFUN PRINT-CLASH ...)
; compiling (DEFSTRUCT (PARAMOD #) ...)
; compiling (DEFUN PR-PARAMOD ...)
; compiling (DEFSTRUCT (DEMOD # ...) ...)
; compiling (DEFMACRO DEMOD-LHS ...)
; compiling (DEFMACRO DEMOD-RHS ...)
; compiling (DEFMACRO DEMOD-CONDITION ...)
; compiling (SETF (GET # ...) ...)
; compiling (DEFUN PRINT-DEMODULATOR ...)
; compiling (DEFSTRUCT (OPTION-SET) ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/types-tmpN3CFVWZF.fasl
; compilation finished in 0:00:00.414
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/glob.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR $$RAW-CLAUSE ...)
; compiling (DEFVAR *SK-FUNCTION-NUM* ...)
; compiling (DEFVAR *CLAUSE-PRETTY-PRINT* ...)
; compiling (DECLAIM (SPECIAL *CURRENT-PROOF-SYSTEM*))
; compiling (DEFVAR *CURRENT-PROOF-SYSTEM* ...)
; compiling (DEFVAR *CURRENT-PSYS* ...)
; compiling (DEFVAR *GIVEN-CLAUSE* ...)
; compiling (DEFVAR *PN-PROOF-MODULE* ...)
; compiling (DEFVAR *PN-REFINEMENT-CHECK-MODULE* ...)
; compiling (DEFVAR *PN-NO-DB-RESET* ...)
; compiling (DEFVAR .DEBUG-PN-MEMORY. ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR .PN-CLAUSE-DELETED. ...)
; compiling (DEFVAR *CLAUSE-HASH* ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *SOS* ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *USABLE* ...)
; compiling (DEFVAR *DEMODULATORS* ...)
; compiling (DEFVAR *NEW-DEMODULATOR* ...)
; compiling (DECLAIM (TYPE LIST ...))
; compiling (DEFVAR *PASSIVE* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR *MAX-INPUT-ID* ...)
; compiling (DEFVAR *HOT* ...)
; compiling (DEFVAR *WEIGHT-PICK-GIVEN* ...)
; compiling (DEFVAR *WEIGHT-PURGE-GEN* ...)
; compiling (DEFVAR *WEIGHT-TERMS* ...)
; compiling (DEFVAR *CLASH-POS-LITERALS* ...)
; compiling (DEFVAR *CLASH-NEG-LITERALS* ...)
; compiling (DEFVAR *POS-LITERALS* ...)
; compiling (DEFVAR *NEG-LITERALS* ...)
; compiling (DEFVAR *PARAMOD-RULES* ...)
; compiling (DEFVAR *CLASH-LIT-TABLE* ...)
; compiling (DEFVAR *PARAINTO-VAR-RULES* ...)
; compiling (DEFVAR *PARAFROM-VAR-RULES* ...)
; compiling (DEFVAR *FULL-LIT-TABLE* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *PN-MAX-PARAMETERS* ...)
; compiling (DEFSTRUCT (PN-PARAM #) ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *PN-PARAMETERS* ...)
; compiling (DEFMACRO PN-PARAMETER ...)
; compiling (DEFMACRO PN-PARAMETER-NAME ...)
; compiling (DEFMACRO PN-PARAMETER-MIN ...)
; compiling (DEFMACRO PN-PARAMETER-MAX ...)
; compiling (DEFCONSTANT MAX-GEN ...)
; compiling (DEFCONSTANT MAX-KEPT ...)
; compiling (DEFCONSTANT MAX-GIVEN ...)
; compiling (DEFCONSTANT MAX-WEIGHT ...)
; compiling (DEFCONSTANT PICK-GIVEN-RATIO ...)
; compiling (DEFCONSTANT DEMOD-LIMIT ...)
; compiling (DEFCONSTANT MAX-PROOFS ...)
; compiling (DEFCONSTANT NEG-WEIGHT ...)
; compiling (DEFCONSTANT STATS-LEVEL ...)
; compiling (DEFCONSTANT CHANGE-LIMIT-AFTER ...)
; compiling (DEFCONSTANT NEW-MAX-WEIGHT ...)
; compiling (DEFCONSTANT MAX-ANSWERS ...)
; compiling (DEFCONSTANT MAX-SOS ...)
; compiling (DEFCONSTANT MAX-SECONDS ...)
; compiling (DEFCONSTANT DYNAMIC-DEMOD-DEPTH ...)
; compiling (DEFCONSTANT DYNAMIC-DEMOD-RHS ...)
; compiling (DEFCONSTANT INV-CHECK-MAX-DEPTH ...)
; compiling (DEFCONSTANT CONTROL-MEMORY-POINT ...)
; compiling (DEFCONSTANT MAX-LITERALS ...)
; compiling (DOTIMES (X *PN-MAX-PARAMETERS*) ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/glob.lisp
; in: EVAL-WHEN (:EXECUTE :LOAD-TOPLEVEL)
;     (SETF (AREF CHAOS::*PN-PARAMETERS* CHAOS::X) (CHAOS::MAKE-PN-PARAM))
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (SETF (PN-PARAMETER-NAME MAX-SECONDS) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-SECONDS) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-SECONDS) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-GEN) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-GEN) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-GEN) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-KEPT) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-KEPT) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-KEPT) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-GIVEN) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-GIVEN) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-GIVEN) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-NAME PICK-GIVEN-RATIO) ...)
; compiling (SETF (PN-PARAMETER-MIN PICK-GIVEN-RATIO) ...)
; compiling (SETF (PN-PARAMETER-MAX PICK-GIVEN-RATIO) ...)
; compiling (SETF (PN-PARAMETER-NAME DEMOD-LIMIT) ...)
; compiling (SETF (PN-PARAMETER-MIN DEMOD-LIMIT) ...)
; compiling (SETF (PN-PARAMETER-MAX DEMOD-LIMIT) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-PROOFS) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-PROOFS) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-PROOFS) ...)
; compiling (SETF (PN-PARAMETER-NAME NEG-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MIN NEG-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MAX NEG-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-NAME STATS-LEVEL) ...)
; compiling (SETF (PN-PARAMETER-MIN STATS-LEVEL) ...)
; compiling (SETF (PN-PARAMETER-MAX STATS-LEVEL) ...)
; compiling (SETF (PN-PARAMETER-NAME CHANGE-LIMIT-AFTER) ...)
; compiling (SETF (PN-PARAMETER-MIN CHANGE-LIMIT-AFTER) ...)
; compiling (SETF (PN-PARAMETER-MAX CHANGE-LIMIT-AFTER) ...)
; compiling (SETF (PN-PARAMETER-NAME NEW-MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MIN NEW-MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-MAX NEW-MAX-WEIGHT) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-ANSWERS) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-ANSWERS) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-ANSWERS) ...)
; compiling (SETF (PN-PARAMETER-NAME DYNAMIC-DEMOD-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-MIN DYNAMIC-DEMOD-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-MAX DYNAMIC-DEMOD-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-NAME DYNAMIC-DEMOD-RHS) ...)
; compiling (SETF (PN-PARAMETER-MIN DYNAMIC-DEMOD-RHS) ...)
; compiling (SETF (PN-PARAMETER-MAX DYNAMIC-DEMOD-RHS) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-SOS) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-SOS) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-SOS) ...)
; compiling (SETF (PN-PARAMETER-NAME INV-CHECK-MAX-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-MIN INV-CHECK-MAX-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-MAX INV-CHECK-MAX-DEPTH) ...)
; compiling (SETF (PN-PARAMETER-NAME CONTROL-MEMORY-POINT) ...)
; compiling (SETF (PN-PARAMETER-MIN CONTROL-MEMORY-POINT) ...)
; compiling (SETF (PN-PARAMETER-MAX CONTROL-MEMORY-POINT) ...)
; compiling (SETF (PN-PARAMETER-NAME MAX-LITERALS) ...)
; compiling (SETF (PN-PARAMETER-MIN MAX-LITERALS) ...)
; compiling (SETF (PN-PARAMETER-MAX MAX-LITERALS) ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *PN-MAX-FLAGS* ...)
; compiling (DEFSTRUCT (PIGNOSE-FLAG #) ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *PN-CONTROL-FLAGS*)
; compiling (SETQ *PN-CONTROL-FLAGS* ...)
; compiling (DEFMACRO PN-FLAG ...)
; compiling (DEFMACRO PN-FLAG-NAME ...)
; compiling (DEFMACRO PN-FLAG-HOOK ...)
; compiling (DEFCONSTANT SOS-QUEUE ...)
; compiling (DEFCONSTANT SOS-STACK ...)
; compiling (DEFCONSTANT INPUT-SOS-FIRST ...)
; compiling (DEFCONSTANT PRINT-GIVEN ...)
; compiling (DEFCONSTANT PRINT-LISTS-AT-END ...)
; compiling (DEFCONSTANT BINARY-RES ...)
; compiling (DEFCONSTANT HYPER-RES ...)
; compiling (DEFCONSTANT NEG-HYPER-RES ...)
; compiling (DEFCONSTANT PARA-INTO ...)
; compiling (DEFCONSTANT PARA-FROM ...)
; compiling (DEFCONSTANT DEMOD-INF ...)
; compiling (DEFCONSTANT PARA-FROM-LEFT ...)
; compiling (DEFCONSTANT PARA-FROM-RIGHT ...)
; compiling (DEFCONSTANT PARA-INTO-LEFT ...)
; compiling (DEFCONSTANT PARA-INTO-RIGHT ...)
; compiling (DEFCONSTANT PARA-FROM-VARS ...)
; compiling (DEFCONSTANT PARA-INTO-VARS ...)
; compiling (DEFCONSTANT PARA-FROM-UNITS-ONLY ...)
; compiling (DEFCONSTANT PARA-INTO-UNITS-ONLY ...)
; compiling (DEFCONSTANT PARA-SKIP-SKOLEM ...)
; compiling (DEFCONSTANT PARA-ONES-RULE ...)
; compiling (DEFCONSTANT PARA-ALL ...)
; compiling (DEFCONSTANT UNIT-DELETION ...)
; compiling (DEFCONSTANT DELETE-IDENTICAL-NESTED-SKOLEM ...)
; compiling (DEFCONSTANT SORT-LITERALS ...)
; compiling (DEFCONSTANT FOR-SUB ...)
; compiling (DEFCONSTANT BACK-SUB ...)
; compiling (DEFCONSTANT FACTOR ...)
; compiling (DEFCONSTANT ORDER-EQ ...)
; compiling (DEFCONSTANT EQ-UNITS-BOTH-WAYS ...)
; compiling (DEFCONSTANT DYNAMIC-DEMOD ...)
; compiling (DEFCONSTANT DYNAMIC-DEMOD-ALL ...)
; compiling (DEFCONSTANT DYNAMIC-DEMOD-LEX-DEP ...)
; compiling (DEFCONSTANT BACK-DEMOD ...)
; compiling (DEFCONSTANT KB ...)
; compiling (DEFCONSTANT LRPO ...)
; compiling (DEFCONSTANT LEX-ORDER-VARS ...)
; compiling (DEFCONSTANT SIMPLIFY-FOL ...)
; compiling (DEFCONSTANT NEW-VARIABLE-NAME ...)
; compiling (DEFCONSTANT PROCESS-INPUT ...)
; compiling (DEFCONSTANT QUIET ...)
; compiling (DEFCONSTANT VERY-VERBOSE ...)
; compiling (DEFCONSTANT PRINT-KEPT ...)
; compiling (DEFCONSTANT PRINT-PROOFS ...)
; compiling (DEFCONSTANT PRINT-NEW-DEMOD ...)
; compiling (DEFCONSTANT PRINT-BACK-DEMOD ...)
; compiling (DEFCONSTANT PRINT-BACK-SUB ...)
; compiling (DEFCONSTANT ORDER-HYPER ...)
; compiling (DEFCONSTANT PROPOSITIONAL ...)
; compiling (DEFCONSTANT AUTO ...)
; compiling (DEFCONSTANT HYPER-SYMMETRY-KLUDGE ...)
; compiling (DEFCONSTANT DISCARD-NON-ORIENTABLE-EQ ...)
; compiling (DEFCONSTANT DISCARD-XX-RESOLVABLE ...)
; compiling (DEFCONSTANT BACK-UNIT-DELETION ...)
; compiling (DEFCONSTANT AUTO2 ...)
; compiling (DEFCONSTANT AUTO1 ...)
; compiling (DEFCONSTANT AUTO3 ...)
; compiling (DEFCONSTANT DEBUG-INFER ...)
; compiling (DEFCONSTANT DEBUG-BINARY-RES ...)
; compiling (DEFCONSTANT DEBUG-HYPER-RES ...)
; compiling (DEFCONSTANT DEBUG-NEG-HYPER-RES ...)
; compiling (DEFCONSTANT DEBUG-UR-RES ...)
; compiling (DEFCONSTANT DEBUG-PARA-FROM ...)
; compiling (DEFCONSTANT DEBUG-PARA-INTO ...)
; compiling (DEFCONSTANT UNIVERSAL-SYMMETRY ...)
; compiling (DEFCONSTANT CONTROL-MEMORY ...)
; compiling (DEFCONSTANT PRINT-STATS ...)
; compiling (DEFCONSTANT PRINT-MESSAGE ...)
; compiling (DEFCONSTANT UNIFY-HEAVY ...)
; compiling (DEFCONSTANT TRACE-DEMOD ...)
; compiling (DEFCONSTANT DEBUG-REFINE ...)
; compiling (DEFCONSTANT NO-DEMOD ...)
; compiling (DEFCONSTANT NO-BACK-DEMOD ...)
; compiling (DEFCONSTANT KB2 ...)
; compiling (DEFCONSTANT NO-NEW-DEMOD ...)
; compiling (DEFCONSTANT PROP-RES ...)
; compiling (DEFCONSTANT NO-JUNK ...)
; compiling (DEFCONSTANT NO-CONFUSION ...)
; compiling (DEFCONSTANT META-PARAMOD ...)
; compiling (DEFCONSTANT DEBUG-INV-CHECK ...)
; compiling (DEFCONSTANT DIST-CONST ...)
; compiling (DEFCONSTANT DEBUG-DIST-CONST ...)
; compiling (DEFCONSTANT RANDOMIZE-SOS ...)
; compiling (DEFCONSTANT DEBUG-SOS ...)
; compiling (DEFCONSTANT PUT-GOAL-IN-SOS ...)
; compiling (DEFCONSTANT CHECK-INIT-ALWAYS ...)
; compiling (DEFCONSTANT UR-RES ...)
; compiling (DEFCONSTANT KB3 ...)
; compiling (DOTIMES (X *PN-MAX-FLAGS*) ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/glob.lisp
; in: EVAL-WHEN (:EXECUTE :LOAD-TOPLEVEL)
;     (SETF (AREF CHAOS::*PN-CONTROL-FLAGS* CHAOS::X) (CHAOS::MAKE-PIGNOSE-FLAG))
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (SETF (PN-FLAG-NAME SOS-QUEUE) ...)
; compiling (SETF (PN-FLAG-NAME SOS-STACK) ...)
; compiling (SETF (PN-FLAG-NAME INPUT-SOS-FIRST) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-GIVEN) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-LISTS-AT-END) ...)
; compiling (SETF (PN-FLAG-NAME BINARY-RES) ...)
; compiling (SETF (PN-FLAG-NAME HYPER-RES) ...)
; compiling (SETF (PN-FLAG-NAME NEG-HYPER-RES) ...)
; compiling (SETF (PN-FLAG-NAME UR-RES) ...)
; compiling (SETF (PN-FLAG-NAME PARA-INTO) ...)
; compiling (SETF (PN-FLAG-NAME PARA-FROM) ...)
; compiling (SETF (PN-FLAG-NAME DEMOD-INF) ...)
; compiling (SETF (PN-FLAG-NAME PARA-FROM-LEFT) ...)
; compiling (SETF (PN-FLAG-NAME PARA-FROM-RIGHT) ...)
; compiling (SETF (PN-FLAG-NAME PARA-INTO-LEFT) ...)
; compiling (SETF (PN-FLAG-NAME PARA-INTO-RIGHT) ...)
; compiling (SETF (PN-FLAG-NAME PARA-FROM-VARS) ...)
; compiling (SETF (PN-FLAG-NAME PARA-INTO-VARS) ...)
; compiling (SETF (PN-FLAG-NAME PARA-FROM-UNITS-ONLY) ...)
; compiling (SETF (PN-FLAG-NAME PARA-INTO-UNITS-ONLY) ...)
; compiling (SETF (PN-FLAG-NAME PARA-SKIP-SKOLEM) ...)
; compiling (SETF (PN-FLAG-NAME PARA-ONES-RULE) ...)
; compiling (SETF (PN-FLAG-NAME PARA-ALL) ...)
; compiling (SETF (PN-FLAG-NAME UNIT-DELETION) ...)
; compiling (SETF (PN-FLAG-NAME DELETE-IDENTICAL-NESTED-SKOLEM) ...)
; compiling (SETF (PN-FLAG-NAME SORT-LITERALS) ...)
; compiling (SETF (PN-FLAG-NAME FOR-SUB) ...)
; compiling (SETF (PN-FLAG-NAME BACK-SUB) ...)
; compiling (SETF (PN-FLAG-NAME FACTOR) ...)
; compiling (SETF (PN-FLAG-NAME ORDER-EQ) ...)
; compiling (SETF (PN-FLAG-NAME EQ-UNITS-BOTH-WAYS) ...)
; compiling (SETF (PN-FLAG-NAME DYNAMIC-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME DYNAMIC-DEMOD-ALL) ...)
; compiling (SETF (PN-FLAG-NAME DYNAMIC-DEMOD-LEX-DEP) ...)
; compiling (SETF (PN-FLAG-NAME BACK-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME KB) ...)
; compiling (SETF (PN-FLAG-NAME LRPO) ...)
; compiling (SETF (PN-FLAG-NAME LEX-ORDER-VARS) ...)
; compiling (SETF (PN-FLAG-NAME SIMPLIFY-FOL) ...)
; compiling (SETF (PN-FLAG-NAME NEW-VARIABLE-NAME) ...)
; compiling (SETF (PN-FLAG-NAME PROCESS-INPUT) ...)
; compiling (SETF (PN-FLAG-NAME QUIET) ...)
; compiling (SETF (PN-FLAG-NAME VERY-VERBOSE) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-KEPT) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-PROOFS) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-NEW-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-BACK-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-BACK-SUB) ...)
; compiling (SETF (PN-FLAG-NAME ORDER-HYPER) ...)
; compiling (SETF (PN-FLAG-NAME PROPOSITIONAL) ...)
; compiling (SETF (PN-FLAG-NAME AUTO) ...)
; compiling (SETF (PN-FLAG-NAME HYPER-SYMMETRY-KLUDGE) ...)
; compiling (SETF (PN-FLAG-NAME DISCARD-NON-ORIENTABLE-EQ) ...)
; compiling (SETF (PN-FLAG-NAME DISCARD-XX-RESOLVABLE) ...)
; compiling (SETF (PN-FLAG-NAME BACK-UNIT-DELETION) ...)
; compiling (SETF (PN-FLAG-NAME AUTO2) ...)
; compiling (SETF (PN-FLAG-NAME AUTO1) ...)
; compiling (SETF (PN-FLAG-NAME AUTO3) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-INFER) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-BINARY-RES) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-HYPER-RES) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-NEG-HYPER-RES) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-UR-RES) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-PARA-FROM) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-PARA-INTO) ...)
; compiling (SETF (PN-FLAG-NAME UNIVERSAL-SYMMETRY) ...)
; compiling (SETF (PN-FLAG-NAME CONTROL-MEMORY) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-STATS) ...)
; compiling (SETF (PN-FLAG-NAME PRINT-MESSAGE) ...)
; compiling (SETF (PN-FLAG-NAME UNIFY-HEAVY) ...)
; compiling (SETF (PN-FLAG-NAME TRACE-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-REFINE) ...)
; compiling (SETF (PN-FLAG-NAME NO-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME NO-BACK-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME KB2) ...)
; compiling (SETF (PN-FLAG-NAME NO-NEW-DEMOD) ...)
; compiling (SETF (PN-FLAG-NAME PROP-RES) ...)
; compiling (SETF (PN-FLAG-NAME NO-JUNK) ...)
; compiling (SETF (PN-FLAG-NAME NO-CONFUSION) ...)
; compiling (SETF (PN-FLAG-NAME META-PARAMOD) ...)
; compiling (SETF (PN-FLAG-HOOK META-PARAMOD) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-INV-CHECK) ...)
; compiling (SETF (PN-FLAG-NAME DIST-CONST) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-DIST-CONST) ...)
; compiling (SETF (PN-FLAG-NAME RANDOMIZE-SOS) ...)
; compiling (SETF (PN-FLAG-NAME DEBUG-SOS) ...)
; compiling (SETF (PN-FLAG-NAME PUT-GOAL-IN-SOS) ...)
; compiling (SETF (PN-FLAG-NAME CHECK-INIT-ALWAYS) ...)
; compiling (SETF (PN-FLAG-NAME KB3) ...)
; compiling (DEFVAR *PN-OPTION-SET* ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *PN-MAX-INTERNAL-FLAGS* ...)
; compiling (DEFCONSTANT SPECIAL-UNARY-PRESENT ...)
; compiling (DEFCONSTANT DOLLAR-PRESENT ...)
; compiling (DEFCONSTANT LEX-VALS-SET ...)
; compiling (DECLAIM (TYPE SIMPLE-ARRAY ...))
; compiling (DEFVAR *PN-INTERNAL-FLAGS* ...)
; compiling (DEFUN RESET-PN-INTERNAL-FLAGS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/glob.lisp
; in: DEFUN RESET-PN-INTERNAL-FLAGS
;     (SETF (AREF CHAOS::*PN-INTERNAL-FLAGS* CHAOS::X) NIL)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (*)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFMACRO PN-INTERNAL-FLAG ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *PN-STAT-SIZE* ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR *PN-STATS* ...)
; compiling (DEFMACRO PN-STAT ...)
; compiling (DEFMACRO PN-STATS ...)
; compiling (DEFUN RESET-INFER-STATISTICS ...)
; compiling (DEFCONSTANT CL-INPUT ...)
; compiling (DEFCONSTANT CL-GENERATED ...)
; compiling (DEFCONSTANT CL-KEPT ...)
; compiling (DEFCONSTANT CL-FOR-SUB ...)
; compiling (DEFCONSTANT CL-BACK-SUB ...)
; compiling (DEFCONSTANT CL-TAUTOLOGY ...)
; compiling (DEFCONSTANT CL-GIVEN ...)
; compiling (DEFCONSTANT CL-WT-DELETE ...)
; compiling (DEFCONSTANT REWRITES ...)
; compiling (DEFCONSTANT UNIT-DELETES ...)
; compiling (DEFCONSTANT EMPTY-CLAUSES ...)
; compiling (DEFCONSTANT FOR-SUB-SOS ...)
; compiling (DEFCONSTANT NEW-DEMODS ...)
; compiling (DEFCONSTANT CL-BACK-DEMOD ...)
; compiling (DEFCONSTANT SOS-SIZE ...)
; compiling (DEFCONSTANT CL-NOT-ANC-SUBSUMED ...)
; compiling (DEFCONSTANT USABLE-SIZE ...)
; compiling (DEFCONSTANT DEMODULATORS-SIZE ...)
; compiling (DEFCONSTANT INIT-WALL-SECONDS ...)
; compiling (DEFCONSTANT BINARY-RES-GEN ...)
; compiling (DEFCONSTANT HYPER-RES-GEN ...)
; compiling (DEFCONSTANT NEG-HYPER-RES-GEN ...)
; compiling (DEFCONSTANT UR-RES-GEN ...)
; compiling (DEFCONSTANT PARA-INTO-GEN ...)
; compiling (DEFCONSTANT PARA-FROM-GEN ...)
; compiling (DEFCONSTANT DEMOD-INF-GEN ...)
; compiling (DEFCONSTANT HOT-GENERATED ...)
; compiling (DEFCONSTANT HOT-KEPT ...)
; compiling (DEFCONSTANT FACTOR-SIMPLIFICATIONS ...)
; compiling (DEFCONSTANT HOT-SIZE ...)
; compiling (DEFCONSTANT PASSIVE-SIZE ...)
; compiling (DEFCONSTANT BACK-UNIT-DEL-GEN ...)
; compiling (DEFCONSTANT FACTOR-GEN ...)
; compiling (DEFCONSTANT DEMOD-LIMITS ...)
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFPARAMETER *PN-MAX-CLOCKS* ...)
; compiling (DECLAIM (TYPE SIMPLE-VECTOR ...))
; compiling (DEFVAR *PN-CLOCKS* ...)
; compiling (DEFSTRUCT (PN-CLOCK #) ...)
; compiling (DEFMACRO CLOCK-START ...)
; compiling (DEFMACRO CLOCK-STOP ...)
; compiling (DEFUN RESET-PN-CLOCKS ...)
; compiling (DEFMACRO PN-CLOCK-VALUE ...)
; compiling (DEFCONSTANT PN-GLOBAL-RUN-TIME ...)
; compiling (DEFCONSTANT BINARY-TIME ...)
; compiling (DEFCONSTANT HYPER-TIME ...)
; compiling (DEFCONSTANT NEG-HYPER-TIME ...)
; compiling (DEFCONSTANT UR-TIME ...)
; compiling (DEFCONSTANT PARA-INTO-TIME ...)
; compiling (DEFCONSTANT PARA-FROM-TIME ...)
; compiling (DEFCONSTANT PRE-PROC-TIME ...)
; compiling (DEFCONSTANT DEMOD-TIME ...)
; compiling (DEFCONSTANT ORDER-EQ-TIME ...)
; compiling (DEFCONSTANT UNIT-DEL-TIME ...)
; compiling (DEFCONSTANT WEIGH-CL-TIME ...)
; compiling (DEFCONSTANT SORT-LITS-TIME ...)
; compiling (DEFCONSTANT FOR-SUB-TIME ...)
; compiling (DEFCONSTANT DEL-CL-TIME ...)
; compiling (DEFCONSTANT KEEP-CL-TIME ...)
; compiling (DEFCONSTANT CONFLICT-TIME ...)
; compiling (DEFCONSTANT NEW-DEMOD-TIME ...)
; compiling (DEFCONSTANT POST-PROC-TIME ...)
; compiling (DEFCONSTANT BACK-DEMOD-TIME ...)
; compiling (DEFCONSTANT BACK-SUB-TIME ...)
; compiling (DEFCONSTANT FACTOR-TIME ...)
; compiling (DEFCONSTANT FACTOR-SIMP-TIME ...)
; compiling (DEFCONSTANT BACK-UNIT-DEL-TIME ...)
; compiling (DEFCONSTANT PRINT-CLAUSE-TIME ...)
; compiling (DOTIMES (X *PN-MAX-CLOCKS*) ...)
; compiling (DECLAIM (TYPE INTEGER ...))
; compiling (DEFVAR *PN-INTERNAL-START-TIME* ...)
; compiling (DEFUN PN-START-INTERNAL-CLOCK ...)
; compiling (DEFUN PN-INTERNAL-RUN-TIME ...)
; compiling (DEFVAR .PN-IGNORE-OPS. ...)
; compiling (DEFUN SETUP-PIGNOSE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/glob-tmpNK27C0R1.fasl
; compilation finished in 0:00:00.201
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/proof-sys.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MODULE-PROOF-SYSTEM ...)
; compiling (DEFUN CREATE-MODULE-PSYSTEM ...)
; compiling (DEFUN UPDATE-MODULE-PROOF-SYSTEM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/proof-sys.lisp
; in: DEFUN UPDATE-MODULE-PROOF-SYSTEM
;     (CHAOS::NEED-REWRITING-PREPARATION MOD)
; ==>
;   (< (CHAOS::MODULE-STATUS MOD) CHAOS::MODULE-READY-REWRITING)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The second argument is a REAL, not a FIXNUM.

; compiling (DEFUN RESET-MODULE-PROOF-SYSTEM ...)
; compiling (DEFUN PN-DB-RESET ...)
; compiling (DEFUN AUTO-DB-RESET ...)
; compiling (DEFMACRO WITH-PROOF-CONTEXT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/proof-sys-tmp3BPE71HR.fasl
; compilation finished in 0:00:00.048
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/syntax.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN INSTALL-FOPL-SENTENCE ...)
; compiling (DEFUN INSTALL-FOPL-CLAUSE ...)
; compiling (DEFUN INSTALL-FOPL-CLAUSE-FORM ...)
; compiling (DEFUN FOPL-SENTENCE-TYPE ...)
; compiling (DECLAIM (INLINE FOPL-FORALL? ...))
; compiling (DEFUN FOPL-FORALL? ...)
; compiling (DEFUN FOPL-EXISTS? ...)
; compiling (DEFUN FOPL-AND? ...)
; compiling (DEFUN FOPL-OR? ...)
; compiling (DEFUN FOPL-IMPLY? ...)
; compiling (DEFUN FOPL-IFF? ...)
; compiling (DEFUN FOPL-NOT? ...)
; compiling (DEFUN FOPL-EQ? ...)
; compiling (DEFUN FOPL-BEQ? ...)
; compiling (DEFUN IS-VALID-FORMULA? ...)
; compiling (DEFUN CHECK-FOPL-SYNTAX ...)
; compiling (DEFUN CHECK-FOPL-SYNTAX-AUX ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/syntax.lisp
; in: DEFUN CHECK-FOPL-SYNTAX-AUX
;     (CHAOS::CHECK-VAR-DECL (CHAOS::VAR-DECL)
;      (COND ((CHAOS::TERM-IS-VARIABLE? CHAOS::VAR-DECL) T)
;            ((AND (CHAOS::TERM-IS-APPLICATION-FORM? CHAOS::VAR-DECL)
;                  (CHAOS::TERM-SUBTERMS CHAOS::VAR-DECL))
;             (LET (#)
;               (OR # #)))
;            (T
;             (IF CHAOS::REPORT-ERROR
;                 (CHAOS::WITH-OUTPUT-CHAOS-ERROR # # #)
;                 NIL))))
; 
; note: Return type not fixed values, so can't use known return convention:
;   *


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/syntax-tmp758YUXMV.fasl
; compilation finished in 0:00:00.079
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/index.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MAKE-INDEX-TABLE ...)
; compiling (DEFMACRO MAKE-ENTRY-IN-INDEX-TABLE ...)
; compiling (DEFMACRO INDEX-TABLE-COUNT ...)
; compiling (DEFMACRO SET-TO-INDEX-TABLE ...)
; compiling (DEFMACRO ADD-TO-INDEX-TABLE ...)
; compiling (DEFMACRO DELETE-FROM-INDEX-TABLE ...)
; compiling (DEFMACRO GET-INDEXED-DATA ...)
; compiling (DEFUN CLEAR-ALL-INDEX-TABLES ...)
; compiling (DEFUN SPECIALIZE-TERM ...)
; compiling (DEFUN GET-ALL-METHODS-OF-SORT ...)
; compiling (DEFUN SPECIALIZE-TERM-FOR-METHODS ...)
; compiling (DECLAIM (INLINE PN-CONST-PAT))
; compiling (DEFUN PN-CONST-PAT ...)
; compiling (DECLAIM (INLINE PN-CONST-POSSIBLE-PAT))
; compiling (DEFUN PN-CONST-POSSIBLE-PAT ...)
; compiling (DEFMACRO LITERAL-ENTRY-LITERAL ...)
; compiling (DEFMACRO LITERAL-ENTRY-ATOM ...)
; compiling (DECLAIM (INLINE GET-LITERAL-ENTRY-FROM-ATOM))
; compiling (DEFUN GET-LITERAL-ENTRY-FROM-ATOM ...)
; compiling (DECLAIM (INLINE ADD-LITERAL-TO-TABLE))
; compiling (DEFUN ADD-LITERAL-TO-TABLE ...)
; compiling (DECLAIM (INLINE DELETE-LITERAL-FROM-TABLE))
; compiling (DEFUN DELETE-LITERAL-FROM-TABLE ...)
; compiling (DECLAIM (INLINE DELETE-LITERAL-FROM-TABLE-SLOW))
; compiling (DEFUN DELETE-LITERAL-FROM-TABLE-SLOW ...)
; compiling (DEFUN ADD-CLAUSE-TO-TABLE ...)
; compiling (DEFUN DELETE-CLAUSE-FROM-TABLE ...)
; compiling (DEFUN PIGNOSE-INDEX-ALL ...)
; compiling (DEFMACRO MAKE-EMPTY-NLIST ...)
; compiling (DEFMACRO NLIST-N ...)
; compiling (DEFMACRO NLIST-LIST ...)
; compiling (DEFUN NLIST-PUSH ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN NLIST-PUSH
;     (INCF (CAR CHAOS::NLIST))
; --> LET* 
; ==>
;   (+ 1 (CAR #:NLIST0))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFSTRUCT (DTREE #) ...)
; compiling (DEFMACRO GET-DTREE ...)
; compiling (DEFUN IS-INSERT ...)
; compiling (DEFUN DTREE-INDEX ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DTREE-INDEX
;     (ASSOC ATOM (CHAOS::DTREE-ATOMS CHAOS::DTREE))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (AND ATOM (NOT NULL)), not a (OR FIXNUM SINGLE-FLOAT
;                                                            (NOT NUMBER)).

; compiling (DEFUN IS-FETCH ...)
; compiling (DEFMACRO FOREACH-DENTRY ...)
; compiling (DEFUN IS-FETCH-CONCAT ...)
; compiling (DEFUN DTREE-FETCH ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DTREE-FETCH
;     (>= CHAOS::VAR-N CHAOS::BEST-N)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to open code because: The operands might not be the same type.

;     (+ CHAOS::VAR-N-IN (CHAOS::NLIST-N CHAOS::VAR-NLIST))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (>= CHAOS::VAR-N CHAOS::BEST-N)
; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFUN DTREE-ATOM-FETCH ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DTREE-ATOM-FETCH
;     (ASSOC CHAOS::OP (CHAOS::DTREE-ATOMS CHAOS::DTREE))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (< (INCF CHAOS::VAR-N (CHAOS::NLIST-N CHAOS::ATOM-NLIST)) CHAOS::BEST-N)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (INCF CHAOS::VAR-N (CHAOS::NLIST-N CHAOS::ATOM-NLIST))
; --> SETQ THE 
; ==>
;   (+ (CHAOS::NLIST-N CHAOS::ATOM-NLIST) CHAOS::VAR-N)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (< (INCF CHAOS::VAR-N (CHAOS::NLIST-N CHAOS::ATOM-NLIST)) CHAOS::BEST-N)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFUN DTREE-DELETE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DTREE-DELETE
;     (DELETE CHAOS::VALUE (CDR CHAOS::NLIST) :COUNT 1 :TEST CHAOS::TEST)
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

;     (ASSOC ATOM (CHAOS::DTREE-ATOMS CHAOS::DTREE))
; ==>
;   (SB-KERNEL:%ASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a ATOM, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (DECF (CAR CHAOS::NLIST))
; --> LET* SB-IMPL::XSUBTRACT BLOCK 
; ==>
;   (- SB-IMPL::B SB-IMPL::A)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN IS-DELETE ...)
; compiling (DEFUN INDEX-ALL-LITERALS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN INDEX-ALL-LITERALS
;     (CHAOS::PN-FLAG CHAOS::BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UN-INDEX-ALL-LITERALS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN UN-INDEX-ALL-LITERALS
;     (CHAOS::PN-FLAG CHAOS::BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UN-INDEX-ALL-LITERALS-SLOW ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN UN-INDEX-ALL-LITERALS-SLOW
;     (CHAOS::PN-FLAG CHAOS::BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN INDEX-CLASH-LITERALS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN INDEX-CLASH-LITERALS
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UN-INDEX-CLASH-LITERALS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN UN-INDEX-CLASH-LITERALS
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UN-INDEX-CLASH-LITERALS-SLOW ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN UN-INDEX-CLASH-LITERALS-SLOW
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN GET-PARAMOD-ENTRY ...)
; compiling (DEFUN IS-PARAMOD-INSERT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN IS-PARAMOD-INSERT
;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN IS-PARAMOD-DELETE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN IS-PARAMOD-DELETE
;     (DELETE CHAOS::LITERAL CHAOS::ENT :TEST
;             #'(LAMBDA (CHAOS::X CHAOS::Y)
;                 (EQ CHAOS::X (CHAOS::PARAMOD-LITERAL CHAOS::Y))))
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (DELETE CHAOS::LITERAL CHAOS::ENT :TEST
;             #'(LAMBDA (CHAOS::X CHAOS::Y)
;                 (EQ CHAOS::X (CHAOS::PARAMOD-LITERAL CHAOS::Y))))
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

; compiling (DEFUN IS-PARAMOD-FETCH ...)
; compiling (DEFUN IS-PARAMOD-FETCH-CONCAT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN IS-PARAMOD-FETCH-CONCAT
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN ADD-EQ-LITERAL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN ADD-EQ-LITERAL
;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-SKIP-SKOLEM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN ADD-EQ-LITERAL-TO-TABLE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN ADD-EQ-LITERAL-TO-TABLE
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-UNITS-ONLY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN DELETE-EQ-LITERAL-FROM-TABLE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DELETE-EQ-LITERAL-FROM-TABLE
;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN DELETE-EQ-LITERAL-FROM-TABLE-SLOW ...)
; compiling (DEFUN DELETE-EQ-LITERAL-ATOM-FROM-TABLE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/index.lisp
; in: DEFUN DELETE-EQ-LITERAL-ATOM-FROM-TABLE
;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN INDEX-PARAMODULATION ...)
; compiling (DEFUN UN-INDEX-PARAMODULATION ...)
; compiling (DEFUN UN-INDEX-PARAMODULATION-SLOW ...)
; compiling (DEFUN GET-ALL-DEMODULATORS ...)
; compiling (DEFUN UN-INDEX-DEMODULATOR ...)
; compiling (DEFUN TABLE-TO-CLAUSE-LIST ...)
; compiling (DEFUN TABLE-TO-LITERAL-LIST ...)
; compiling (DEFUN GET-CLASHABLE-CLAUSES-FROM-LITERAL ...)
; compiling (DEFUN GET-CLASHABLE-CLAUSES-FROM-ATOM ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/index-tmpGMQXK1HK.fasl
; compilation finished in 0:00:00.451
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/butils.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN TERM-IS-IDENTICAL ...)
; compiling (DEFUN TERM-OCCURS-IN ...)
; compiling (DEFUN OPERATOR-OCCURS-IN ...)
; compiling (DEFUN COPY-TERM-REUSING-VARIABLES ...)
; compiling (DEFUN ALLOCATE-NEW-TERM-CELL ...)
; compiling (LET (#) ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-MAKE-NEW-VARIABLE
;     (CHAOS::PN-FLAG CHAOS::NEW-VARIABLE-NAME)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN REPLACE-TERM-VARS ...)
; compiling (DEFUN MAKE-TERM-VAR-RENAME-MAP ...)
; compiling (DEFUN TERM-UNIQUE-VARS ...)
; compiling (DEFUN IS-SKOLEM ...)
; compiling (DEFUN ID-NESTED-SKOLEMS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN ID-NESTED-SKOLEMS
;     (CHAOS::TERM-SUBTERMS CHAOS::TERM)
; --> CHAOS::APPL$SUBTERMS CHAOS::TERM-BODY CAR 
; ==>
;   CHAOS::TERM
; 
; note: deleting unreachable code

;     (CHAOS::TERM-HEAD CHAOS::TERM)
; --> CHAOS::APPL$HEAD CHAOS::TERM-BODY CAR 
; ==>
;   CHAOS::TERM
; 
; note: deleting unreachable code

;     (CHAOS::OPERATOR-OCCURS-IN (CHAOS::TERM-HEAD CHAOS::TERM) CHAOS::SUB)
; ==>
;   CHAOS::SUB
; 
; note: deleting unreachable code

;     (RETURN-FROM CHAOS::ID-NESTED-SKOLEMS T)
; 
; note: deleting unreachable code

; compiling (DEFUN IDENT-NESTED-SKOLEMS ...)
; compiling (DEFUN MAKE-VAR-MAPPING ...)
; compiling (DEFUN INIT-PN-OPTIONS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN INIT-PN-OPTIONS
;     (SETF (CHAOS::PN-FLAG CHAOS::PARA-FROM-LEFT) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PARA-FROM-RIGHT) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PARA-INTO-LEFT) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PARA-INTO-RIGHT) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::FOR-SUB) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::BACK-SUB) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-KEPT) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-STATS) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-GIVEN) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-BACK-SUB) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-NEW-DEMOD) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-BACK-DEMOD) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::BACK-UNIT-DELETION) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::SIMPLIFY-FOL) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-PROOFS) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::NEW-VARIABLE-NAME) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::ORDER-HYPER) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PUT-GOAL-IN-SOS) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::CHECK-INIT-ALWAYS) T)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::NO-JUNK) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::NO-CONFUSION) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::META-PARAMOD) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::RANDOMIZE-SOS) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::DEMOD-LIMIT) 1000)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-WEIGHT) MOST-POSITIVE-FIXNUM)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-GIVEN) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-SOS) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-SECONDS) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::NEG-WEIGHT) 0)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-KEPT) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-GEN) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-LITERALS) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS) 1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::STATS-LEVEL) 2)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::PICK-GIVEN-RATIO) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::CHANGE-LIMIT-AFTER) 0)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::NEW-MAX-WEIGHT) MOST-POSITIVE-FIXNUM)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-ANSWERS) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::DYNAMIC-DEMOD-DEPTH) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::DYNAMIC-DEMOD-RHS) 1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::INV-CHECK-MAX-DEPTH) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::CONTROL-MEMORY-POINT) 20)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::X) -1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::X) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (INIT-PN-OPTIONS)
; compiling (DEFUN FIND-PN-FLAG-INDEX ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN FIND-PN-FLAG-INDEX
;     (CHAOS::PN-FLAG-NAME CHAOS::X)
; --> CHAOS::PIGNOSE-FLAG-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN FIND-PN-PARAMETER-INDEX ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN FIND-PN-PARAMETER-INDEX
;     (CHAOS::PN-PARAMETER-NAME CHAOS::X)
; --> CHAOS::PN-PARAM-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN SAVE-PN-FLAGS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN SAVE-PN-FLAGS
;     (CHAOS::PN-FLAG CHAOS::X)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN RESTORE-PN-FLAGS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN RESTORE-PN-FLAGS
;     (SETF (CHAOS::PN-FLAG CHAOS::X) (AREF ARRAY CHAOS::X))
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN SAVE-PN-PARAMETERS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN SAVE-PN-PARAMETERS
;     (CHAOS::PN-PARAMETER CHAOS::X)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN RESTORE-PN-PARAMETERS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN RESTORE-PN-PARAMETERS
;     (SETF (CHAOS::PN-PARAMETER CHAOS::X) (AREF ARRAY CHAOS::X))
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN FIND-OPTION-SET ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN FIND-OPTION-SET
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (STRING= CHAOS::NAME (CHAOS::OPTION-SET-NAME CHAOS::X)))
;      CHAOS::*PN-OPTION-SET*)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN CREATE-OPTION-SET ...)
; compiling (DEFUN SAVE-OPTION-SET ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN SAVE-OPTION-SET
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN RESTORE-OPTION-SET ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN RESTORE-OPTION-SET
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN SHOW-OPTION-SET ...)
; compiling (DEFUN PR-LIST-OF-FLAG ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PR-LIST-OF-FLAG
;     (SORT CHAOS::FLAGS
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (DECLARE (TYPE FIXNUM CHAOS::X CHAOS::Y))
;               (STRING< (THE SIMPLE-STRING (CHAOS::PN-FLAG-NAME CHAOS::X))
;                        (THE SIMPLE-STRING (CHAOS::PN-FLAG-NAME CHAOS::Y)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (CHAOS::PN-FLAG-NAME CHAOS::FLAG)
; --> CHAOS::PIGNOSE-FLAG-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FLAG)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG-NAME CHAOS::X)
; --> CHAOS::PIGNOSE-FLAG-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG-NAME CHAOS::Y)
; --> CHAOS::PIGNOSE-FLAG-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PR-LIST-OF-PARAM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PR-LIST-OF-PARAM
;     (SORT CHAOS::PARAMS
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (DECLARE (TYPE FIXNUM CHAOS::X CHAOS::Y))
;               (STRING< (THE SIMPLE-STRING (CHAOS::PN-PARAMETER-NAME CHAOS::X))
;                        (THE SIMPLE-STRING (CHAOS::PN-PARAMETER-NAME CHAOS::Y)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (CHAOS::PN-PARAMETER-NAME CHAOS::X)
; --> CHAOS::PN-PARAM-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::X)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-MIN CHAOS::X)
; --> CHAOS::PN-PARAM-MIN AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-MAX CHAOS::X)
; --> CHAOS::PN-PARAM-MAX AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-NAME CHAOS::X)
; --> CHAOS::PN-PARAM-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-NAME CHAOS::Y)
; --> CHAOS::PN-PARAM-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PR-LIST-OF-OPTION ...)
; compiling (DEFUN AUTO-CHANGE-FLAG ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN AUTO-CHANGE-FLAG
;     (CHAOS::PN-FLAG CHAOS::INDEX)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG-NAME CHAOS::INDEX)
; --> CHAOS::PIGNOSE-FLAG-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::INDEX) CHAOS::VALUE)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN DEPENDENT-FLAGS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN DEPENDENT-FLAGS
;     (CHAOS::PN-FLAG CHAOS::INDEX)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN AUTO-CHANGE-PARAM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN AUTO-CHANGE-PARAM
;     (CHAOS::PN-PARAMETER CHAOS::INDEX)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-NAME CHAOS::INDEX)
; --> CHAOS::PN-PARAM-NAME AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::INDEX) CHAOS::VALUE)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN DEPENDENT-PARAMS ...)
; compiling (DEFUN MOVE-FROM-USABLE-TO-SOS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN MOVE-FROM-USABLE-TO-SOS
;     (FUNCALL CHAOS::PRED CHAOS::C)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PRED)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PRED is not known to be a function

; compiling (DEFUN GET-GLOBAL-LIST ...)
; compiling (DECLAIM (TYPE FIXNUM ...) ...)
; compiling (DEFVAR .NEXT-CONTROL-POINT. ...)
; compiling (DEFUN RESET-MEMORY-CONTROL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN RESET-MEMORY-CONTROL
;     (* 20 (THE FIXNUM (LENGTH CHAOS::*SOS*)))
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The result is a (VALUES (MOD 92233720368547758001) &OPTIONAL), not a (VALUES
;                                                                             FIXNUM
;                                                                             &REST
;                                                                             T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The result is a (VALUES (MOD 92233720368547758001) &OPTIONAL), not a (VALUES
;                                                                             FIXNUM
;                                                                             &REST
;                                                                             T).
;       etc.

; compiling (DEFPARAMETER .MAX-WEIGHT. ...)
; compiling (DECLAIM (TYPE # ...))
; compiling (DEFVAR .SOS-DIST. ...)
; compiling (DEFUN PN-CONTROL-MEMORY ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-CONTROL-MEMORY
;     (CHAOS::PN-PARAMETER CHAOS::MAX-SOS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (= CHAOS::.NEXT-CONTROL-POINT. (CHAOS::PN-STAT CHAOS::CL-GIVEN))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::PN-PARAMETER CHAOS::CONTROL-MEMORY-POINT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-WEIGHT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-WEIGHT) CHAOS::I)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (* CHAOS::N 20)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The result is a (VALUES
;                        (INTEGER -92233720368547758080 92233720368547758060)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The result is a (VALUES
;                        (INTEGER -92233720368547758080 92233720368547758060)
;                        &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

;     (<= (* CHAOS::N 20) CHAOS::SIZE)
; --> IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER -92233720368547758080
;                                92233720368547758060), not a FIXNUM.

;     (SETQ CHAOS::.NEXT-CONTROL-POINT.
;             (+ (CHAOS::PN-STAT CHAOS::CL-GIVEN)
;                (CHAOS::PN-PARAMETER CHAOS::CONTROL-MEMORY-POINT)))
; 
; note: doing signed word to integer coercion (cost 20), for:
;       the second argument of SET

; compiling (DEFUN PN-RUN-TIME ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-RUN-TIME
;     (CHAOS::CLOCK-STOP CHAOS::PN-GLOBAL-RUN-TIME)
; --> LET IF PROGN INCF LET* + 
; ==>
;   (- (GET-INTERNAL-REAL-TIME) (CHAOS::PN-CLOCK-CURR CHAOS::CLOCK))
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 64) &REST
;                                                          T).
;       etc.

; --> LET IF PROGN INCF LET* 
; ==>
;   (+ (- (GET-INTERNAL-REAL-TIME) (CHAOS::PN-CLOCK-CURR CHAOS::CLOCK))
;      (CHAOS::PN-CLOCK-ACCUM #:CLOCK0))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 64) arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 64).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 64) &REST
;                                                          T).
;       etc.

; compiling (DEFUN CHECK-PN-STOP ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN CHECK-PN-STOP
;     (CHAOS::PN-PARAMETER CHAOS::MAX-GIVEN)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-GEN)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-SECONDS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-KEPT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (>= CHAOS::SECONDS (FLOAT CHAOS::MAX-SECONDS?))
; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to open code because: The operands might not be the same type.

; --> OR LET > IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.

; --> OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.

; compiling (DEFUN CHECK-FOR-PROOF ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN CHECK-FOR-PROOF
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-PROOFS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-PROOFS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PRINT-PROOF ...)
; compiling (DEFUN MOVE-AXIOMS-TO-USABLE ...)
; compiling (DEFUN CLAUSE-SET-PROPERTY ...)
; compiling (DEFUN REPORT-CLAUSE-SET-PROPS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN REPORT-CLAUSE-SET-PROPS
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-AUTOMATIC-SETTINGS-1 ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-AUTOMATIC-SETTINGS-1
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (= 1 CHAOS::MAX-LITS?)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN SOS-HAS-POS-NON-GROUND ...)
; compiling (DEFUN PN-AUTOMATIC-SETTINGS-2 ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-AUTOMATIC-SETTINGS-2
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (= 1 CHAOS::MAX-LITS?)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (> CHAOS::MAX-LITS? 1)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (> CHAOS::MAX-LITS? 1)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; compiling (DEFUN PN-AUTOMATIC-SETTINGS-3 ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PN-AUTOMATIC-SETTINGS-3
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (= 1 CHAOS::MAX-LITS?)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN OUTPUT-PN-STATS ...)
; compiling (DEFUN PRINT-PN-STAT ...)
; compiling (DEFUN PRINT-PN-STAT-DETAIL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PRINT-PN-STAT-DETAIL
;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PROP-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FACTOR)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEMOD-INF)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::UR-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BACK-UNIT-DELETION)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PRINT-PN-STAT-BRIEF ...)
; compiling (DEFUN INFER-CLEAN-UP ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN INFER-CLEAN-UP
;     (CHAOS::PN-FLAG CHAOS::PRINT-LISTS-AT-END)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-STATS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::STATS-LEVEL)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PRINT-USABLE-LIST ...)
; compiling (DEFUN PRINT-SOS-LIST ...)
; compiling (DEFUN PRINT-PASSIVE-LIST ...)
; compiling (DEFUN PRINT-DEMODULATORS-LIST ...)
; compiling (DEFUN PRINT-SOS ...)
; compiling (DEFUN PRINT-USABLE ...)
; compiling (DEFUN PRINT-LITERAL-ENTRY ...)
; compiling (DEFUN SHOW-POS-LITERALS ...)
; compiling (DEFUN SHOW-NEG-LITERALS ...)
; compiling (DEFUN SHOW-CLASH-POS-LITERALS ...)
; compiling (DEFUN SHOW-CLASH-NEG-LITERALS ...)
; compiling (DEFUN SHOW-PARAMOD-RULES ...)
; compiling (DEFUN SHOW-FULL-LIT-TABLE ...)
; compiling (DEFUN SHOW-DEMODULATORS ...)
; compiling (DEFUN PRINT-PN-TIMES ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PRINT-PN-TIMES
;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BACK-UNIT-DELETION)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PRINT-PN-TIMES-BRIEF ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/butils.lisp
; in: DEFUN PRINT-PN-TIMES-BRIEF
;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN REPORT-PN-MEMORY ...)
; compiling (DEFPARAMETER *IMPORT-FOPL-AST* ...)
; compiling (DEFUN INCLUDE-FOPL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/butils-tmp49Q238TW.fasl
; compilation finished in 0:00:01.233
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/unify.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN COMPOSE-SUBST ...)
; compiling (DECLAIM (SPECIAL .DO-OCCUR-CHECK.))
; compiling (DEFVAR .DO-OCCUR-CHECK. ...)
; compiling (DEFUN PN-DECOMPOSE-TERMS-UNIFY ...)
; compiling (DEFUN PN-DECOMPOSE-TERMS-MATCH ...)
; compiling (DEFUN UNIFY ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/unify.lisp
; in: DEFUN UNIFY
;     (CHAOS::PN-FLAG CHAOS::UNIFY-HEAVY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DECLAIM (INLINE PROP-UNIFY))
; compiling (DEFUN PROP-UNIFY ...)
; compiling (DEFUN FIRST-UNIFY ...)
; compiling (DEFUN NEXT-UNIFY ...)
; compiling (DEFUN PN-MATCH ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/unify.lisp
; in: DEFUN PN-MATCH
;     (CHAOS::PN-FLAG CHAOS::UNIFY-HEAVY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/unify-tmpMXPMJ5KG.fasl
; compilation finished in 0:00:00.118
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/clause.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN IS-EQUALITY ...)
; compiling (DEFUN MARK-LITERAL ...)
; compiling (DEFUN COMPARE-LITERAL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN COMPARE-LITERAL
;     (CHAOS::PN-FLAG CHAOS::PROPOSITIONAL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN LITERAL-EQUAL ...)
; compiling (DEFUN FIND-CLAUSE ...)
; compiling (DEFUN CLEAR-CLAUSE-HASH ...)
; compiling (DEFUN DELETE-CLAUSE ...)
; compiling (DEFUN DELETE-CLAUSE! ...)
; compiling (DEFUN NEW-CLAUSE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN NEW-CLAUSE
;     (INCF (CHAOS::PSYSTEM-CLAUSE-COUNTER CHAOS::PSYS))
; --> LET* 
; ==>
;   (+ 1 (SB-KERNEL:%INSTANCE-REF (THE CHAOS::PSYSTEM #:OBJ) 9))
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN RESET-CLAUSE-DB ...)
; compiling (DEFUN COPY-CLAUSE ...)
; compiling (DEFUN MAKE-CLAUSE-SHALLOW-COPY ...)
; compiling (DEFUN MAKE-DUMMY-CLAUSE ...)
; compiling (DEFUN LITERAL-NUMBER ...)
; compiling (DEFUN ITH-LITERAL ...)
; compiling (DEFUN CL-DELETE ...)
; compiling (DEFUN SET-CLAUSE-CONTAINER ...)
; compiling (DEFUN APPEND-CLAUSE ...)
; compiling (DEFUN PREPEND-CLAUSE ...)
; compiling (DEFUN INSERT-BEFORE-CLAUSE ...)
; compiling (DEFUN INSERT-AFTER-CLAUSE ...)
; compiling (DEFUN DELETE-FROM-LIST ...)
; compiling (DEFUN CLAUSE-FULL-UN-INDEX ...)
; compiling (DEFUN CLAUSE-FULL-UN-INDEX-SLOW ...)
; compiling (DEFUN CLAUSE-ALL-PARENTS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN CLAUSE-ALL-PARENTS
;     (MEMBER CHAOS::PID CHAOS::SO-FAR)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a INTEGER, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (PUSHNEW CHAOS::PC CHAOS::PLIST)
; --> LET* SETQ THE ADJOIN 
; ==>
;   (SB-KERNEL:%ADJOIN SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (NOT NULL), not a (OR FIXNUM SINGLE-FLOAT
;                                                 (NOT NUMBER)).

; compiling (DEFUN ORDERED-SUB-CLAUSE ...)
; compiling (DEFUN CLAUSE-EQUAL ...)
; compiling (DEFUN SUB-CLAUSE ...)
; compiling (DEFUN SORT-LITERALS ...)
; compiling (DEFUN NEXT-CLAUSE-NUM ...)
; compiling (DEFMACRO SOS-LAST-CLAUSE ...)
; compiling (DEFVAR .USE-BI-AXIOM-AS-DEMOD. ...)
; compiling (DEFUN CLAUSE-IS-BUILTIN-DEMOD ...)
; compiling (DEFUN CLAUSE-AXIOM-DECLARED-AS-DEMODULATOR ...)
; compiling (DEFUN CL-UNIQUE-VARIABLES ...)
; compiling (DEFUN UNIT-DELETION ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN UNIT-DELETION
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN BACK-UNIT-DELETION ...)
; compiling (DEFUN MERGE-CLAUSE ...)
; compiling (DEFUN CL-TAUTOLOGY? ...)
; compiling (DEFUN PROOF-WEIGHT ...)
; compiling (DEFUN PROOF-LENGTH ...)
; compiling (DEFUN RENAME-CLAUSE-VARIABLES ...)
; compiling (DEFUN RENAME-VARIABLES-IN-TERM ...)
; compiling (DEFUN LIST-NAME2-LIST ...)
; compiling (DEFUN FIND-LIGHTEST-CLAUSE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN FIND-LIGHTEST-CLAUSE
;     (CHAOS::PN-FLAG CHAOS::RANDOMIZE-SOS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-SOS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN FIND-GIVEN-CLAUSE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN FIND-GIVEN-CLAUSE
;     (CHAOS::PN-FLAG CHAOS::SOS-QUEUE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SOS-STACK)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::PICK-GIVEN-RATIO)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN EXTRACT-GIVEN-CLAUSE ...)
; compiling (DEFUN WEIGHT-CLAUSE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN WEIGHT-CLAUSE
;     (CHAOS::PN-PARAMETER CHAOS::NEG-WEIGHT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFPARAMETER .MAX-LITERALS. ...)
; compiling (DEFVAR .MAP-ARRAY. ...)
; compiling (DEFUN MAP-REST ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN MAP-REST
;     (SETF (AREF CHAOS::.MAP-ARRAY. CHAOS::I) NIL)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

;     (AREF CHAOS::.MAP-ARRAY. CHAOS::I)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

;     (SETF (AREF CHAOS::.MAP-ARRAY. CHAOS::I) T)
; --> LET* FUNCALL SB-C::%FUNCALL (SETF AREF) 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-SET ARRAY SB-INT:INDEX SB-C::NEW-VALUE)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

; compiling (DEFUN SUBSUME? ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN SUBSUME?
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN FOR-SUB-PROP ...)
; compiling (DEFUN FORWARD-SUBSUME ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN FORWARD-SUBSUME
;     (CHAOS::PN-FLAG CHAOS::PROPOSITIONAL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FACTOR)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN BACK-SUBSUME ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN BACK-SUBSUME
;     (CHAOS::PN-FLAG CHAOS::FACTOR)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UNIT-CONFLICT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN UNIT-CONFLICT
;     (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-DISTINCT-CONSTANTS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/clause.lisp
; in: DEFUN PN-DISTINCT-CONSTANTS
;     (CHAOS::PN-FLAG CHAOS::DEBUG-DIST-CONST)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/clause-tmpB69313KI.fasl
; compilation finished in 0:00:00.694
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/formula.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *DEBUG-FORMULA* ...)
; compiling (DECLAIM (SPECIAL *DEBUG-FORMULA-NEST*) ...)
; compiling (DEFVAR *DEBUG-FORMULA-NEST* ...)
; compiling (DEFUN PN-TERM-EQUATIONAL-EQUAL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/formula.lisp
; in: DEFUN PN-TERM-EQUATIONAL-EQUAL
;     (CHAOS::E-EQUAL-IN-THEORY (CHAOS::METHOD-THEORY CHAOS::F1) CHAOS::T1
;                               CHAOS::T2)
; --> FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL
;    (CHAOS::THEORY-INFO-MATCH-EQUAL-FUN
;     (CHAOS::THEORY-INFO (CHAOS::METHOD-THEORY CHAOS::F1))))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DECLAIM (SPECIAL *CURRENT-FORMULA*) ...)
; compiling (DEFVAR *CURRENT-FORMULA* ...)
; compiling (DEFUN FORMULA->CLAUSE-1 ...)
; compiling (DEFUN CNF ...)
; compiling (DEFUN NNF-SKOLEMIZE ...)
; compiling (DEFUN CAFEOBJ-TERM->FORMULA ...)
; compiling (DEFUN NORMALIZE-QUANTIFIERS ...)
; compiling (DEFUN MAKE-UNIVERSAL-CLOSURE ...)
; compiling (DEFUN NEGATE-SENTENCE ...)
; compiling (DEFUN NEG-NORMAL-FORM ...)
; compiling (DEFUN MAKE-SKOLEM-FUNCTION-NAME ...)
; compiling (DEFUN SKOLEMIZE ...)
; compiling (DEFUN RENAME-FREE-FORMULA ...)
; compiling (DEFUN SUBST-FREE-FORMULA ...)
; compiling (DEFUN SUBST-FREE-TERM ...)
; compiling (DEFUN UNIQUE-ALL-VARIABLES ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/formula.lisp
; in: DEFUN UNIQUE-ALL-VARIABLES
;     (CHAOS::UNIQUE (CHAOS::F) (DECLARE (TYPE CHAOS::TERM CHAOS::F))
;      (LET ((TYPE (CHAOS::FOPL-SENTENCE-TYPE CHAOS::F)))
;        (DECLARE (TYPE SYMBOL TYPE))
;        (WHEN CHAOS::*DEBUG-FORMULA*
;          (FORMAT T "~%>[unique-all-variables]: ~a" TYPE)
;          (CHAOS::TERM-PRINT CHAOS::F))
;        (CASE TYPE
;          (:ATOM)
;          ((:NOT :AND :OR :EQ :BEQ) (DOLIST # #))
;          (OTHERWISE
;           (IF #
;               #
;               #)
;           (CHAOS::UNIQUE #)))
;        (WHEN CHAOS::*DEBUG-FORMULA*
;          (FORMAT T "~%<[unique-var..]:")
;          (CHAOS::TERM-PRINT CHAOS::F))))
; 
; note: Return type not fixed values, so can't use known return convention:
;   *

; compiling (DEFUN ZAP-QUANTIFIERS ...)
; compiling (DEFUN CONJ-NORMAL-FORM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/formula.lisp
; in: DEFUN CONJ-NORMAL-FORM
;     (CHAOS::PN-FLAG CHAOS::SIMPLIFY-FOL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN DISTRIBUTE-OR ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/formula.lisp
; in: DEFUN DISTRIBUTE-OR
;     (CHAOS::PN-FLAG CHAOS::SIMPLIFY-FOL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (FIND-IF #'(LAMBDA (CHAOS::X) (EQ :AND (CHAOS::FOPL-SENTENCE-TYPE CHAOS::X)))
;              CHAOS::ARGS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (DELETE CHAOS::AND-FORM CHAOS::ARGS)
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

;     (CHAOS::PN-FLAG CHAOS::SIMPLIFY-FOL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN GATHER-SUBTERMS-WITH-TOP ...)
; compiling (DEFUN CONFLICT-TAUTOLOGY ...)
; compiling (DEFUN SUBSUME-CONJUNCTS ...)
; compiling (DEFUN SUBSUME-DISJUNCTS ...)
; compiling (DEFVAR *DEBUG-SUBSUME-PROP* ...)
; compiling (DECLAIM (SPECIAL *DEBUG-SUBSUME-PROP-NEST*))
; compiling (DEFVAR *DEBUG-SUBSUME-PROP-NEST* ...)
; compiling (DEFUN GEN-SUBSUME-PROP ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/formula.lisp
; in: DEFUN GEN-SUBSUME-PROP
;     (1+ CHAOS::*DEBUG-SUBSUME-PROP-NEST*)
; ==>
;   (+ CHAOS::*DEBUG-SUBSUME-PROP-NEST* 1)
; 
; note: unable to
;   associate +/(+ -) of constants
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN FORMULA-IS-IDENTICAL ...)
; compiling (DEFUN TERM->CLAUSE ...)
; compiling (DEFUN CNF-TO-LIST ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/formula-tmp9ZT99EEA.fasl
; compilation finished in 0:00:00.663
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/modconv.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN MAKE-PIGNOSE-AXIOM ...)
; compiling (DECLAIM (SPECIAL *ELIM-TF-IN-AXIOMS*))
; compiling (DEFVAR *ELIM-TF-IN-AXIOMS* ...)
; compiling (DEFUN PN-SET-TF-FLAG ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/modconv.lisp
; in: DEFUN PN-SET-TF-FLAG
;     (CHAOS::PN-FLAG CHAOS::META-PARAMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-METHOD-IS-OF-SAME-OPERATOR ...)
; compiling (DEFUN AXIOM->FORMULA ...)
; compiling (DEFUN MODULE-ALL-EQUATIONS ...)
; compiling (DEFUN MODULE-INCLUDES-FORMULA ...)
; compiling (DEFUN MAKE-PN-APPL-PAT ...)
; compiling (DEFUN COVER-SET-OF-SORT ...)
; compiling (DEFUN MODULE-COVER-SETS ...)
; compiling (DEFUN GET-ALL-METHODS-OF-SORT-STRICT ...)
; compiling (DEFUN INTRO-EXISTS ...)
; compiling (DEFUN PN-NO-JUNK ...)
; compiling (DEFUN PN-NO-CONFUSION ...)
; compiling (DEFUN MODULE-AXIOMS->CLAUSE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/modconv.lisp
; in: DEFUN MODULE-AXIOMS->CLAUSE
;     (CHAOS::PN-FLAG CHAOS::NO-JUNK)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-CONFUSION)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/modconv-tmpW045U8V2.fasl
; compilation finished in 0:00:00.215
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/weight.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFMACRO MODULE-OP-LEX ...)
; compiling (DEFVAR .OP-LEX-RELATION-TABLE. ...)
; compiling (DEFVAR *DEBUG-OP-RELATION* ...)
; compiling (DEFMACRO MAKE-OP-RELATION ...)
; compiling (DEFMACRO GET-OP-RELATION ...)
; compiling (DEFMACRO OP-RELATION-OP ...)
; compiling (DEFMACRO _SUBOPS ...)
; compiling (DEFMACRO _SUPEROPS ...)
; compiling (DEFMACRO SUBOPS ...)
; compiling (DEFMACRO SUPEROPS ...)
; compiling (DECLAIM (INLINE OP-LEX<))
; compiling (DEFUN OP-LEX< ...)
; compiling (DEFUN DUMP-OP-LEX-RELATION-TABLE ...)
; compiling (DEFUN TERM-SUB-OPERATORS ...)
; compiling (DEFUN ADD-OP-TO-ORDER ...)
; compiling (DEFUN GATHER-OP-RELATIONS-FROM-ORDER ...)
; compiling (DEFUN ADD-OP-RELATION-TO-ORDER ...)
; compiling (DEFUN MAKE-OP-PREC-RELATIONS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/weight.lisp
; in: DEFUN MAKE-OP-PREC-RELATIONS
;     (DELETE CHAOS::METH1 CHAOS::RHS-METHODS)
; 
; note: unable to
;   convert to EQ test
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a LIST.

; compiling (DEFVAR .OP-LEX-PREC-TABLE. ...)
; compiling (DEFUN DUMP-OP-LEX-TABLE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/weight.lisp
; in: DEFUN DUMP-OP-LEX-TABLE
;     (< (CDR CHAOS::X) (CDR CHAOS::Y))
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.

;     (SORT CHAOS::ENTRIES
;           #'(LAMBDA (CHAOS::X CHAOS::Y) (< (CDR CHAOS::X) (CDR CHAOS::Y))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (< (CDR CHAOS::X) (CDR CHAOS::Y))
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFUN OP-LEX-COMPARE ...)
; compiling (DECLAIM (INLINE METHOD-LEX-PREC))
; compiling (DEFUN METHOD-LEX-PREC ...)
; compiling (DEFSETF METHOD-LEX-PREC ...)
; compiling (DEFUN ORDER-LEX-OP ...)
; compiling (DEFUN MAKE-LEXICAL-PREC-TABLE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/weight.lisp
; in: DEFUN MAKE-LEXICAL-PREC-TABLE
;     (SORT CHAOS::MLIST #'CHAOS::ORDER-LEX-OP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN MAKE-OP-LEX-PREC-TABLE ...)
; compiling (DEFUN OP-LEX-PRECEDENCE ...)
; compiling (DEFUN TERM-WEIGHT ...)
; compiling (DEFUN TERM-LEX-ORDER ...)
; compiling (DEFUN TERM-LEX-ORDER-VARS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/weight.lisp
; in: DEFUN TERM-LEX-ORDER-VARS
;     (< CHAOS::VN2 CHAOS::VN1)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       etc.

; compiling (DEFUN WEIGHT-LEX-ORDER ...)
; compiling (DEFUN LEX-CHECK ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/weight.lisp
; in: DEFUN LEX-CHECK
;     (CHAOS::PN-FLAG CHAOS::LEX-ORDER-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN ORDER-LITERAL ...)
; compiling (DEFUN ORDER-EQUALITIES ...)
; compiling (DEFUN SYM-ELIM ...)
; compiling (DEFUN VAR-SUBSET ...)
; compiling (DEFUN TERM-IDENT-X-VARS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/weight-tmp6XOIRI3N.fasl
; compilation finished in 0:00:00.425
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/lrpo.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN LRPO-LEX ...)
; compiling (DECLAIM (INLINE NUM-OCCURRENCES))
; compiling (DEFUN NUM-OCCURRENCES ...)
; compiling (DEFUN TERM-MULTISET-DIFF ...)
; compiling (DEFUN LRPO-MULTISET ...)
; compiling (DEFUN LRPO ...)
; compiling (DECLAIM (INLINE LRPO-GREATER))
; compiling (DEFUN LRPO-GREATER ...)
; compiling (DEFUN ORDER-EQUALITIES-LRPO ...)
; compiling (DEFUN PN-ORIENT-TERM-PAIR ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/lrpo.lisp
; in: DEFUN PN-ORIENT-TERM-PAIR
;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/lrpo-tmp9ZHTLHSG.fasl
; compilation finished in 0:00:00.060
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (INLINE COMB-CLASH-SUBST))
; compiling (DEFUN COMB-CLASH-SUBST ...)
; compiling (DEFUN BUILD-HYPER ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN BUILD-HYPER
;     (CHAOS::PN-FLAG CHAOS::DEBUG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DECLAIM (SPECIAL _CLASH_SO_FAR_) ...)
; compiling (DEFVAR _CLASH_SO_FAR_ ...)
; compiling (DECLAIM (INLINE RENAME-SUBST))
; compiling (DEFUN RENAME-SUBST ...)
; compiling (DEFUN MAXIMAL-LITERAL ...)
; compiling (DECLAIM (INLINE COMPOSE-SUBST2))
; compiling (DEFUN COMPOSE-SUBST2 ...)
; compiling (DECLAIM (INLINE CL-OCCURS-IN-CLASH))
; compiling (DEFUN CL-OCCURS-IN-CLASH ...)
; compiling (DEFUN CLASH-ONE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN CLASH-ONE
;     (FUNCALL CHAOS::CLAUSE-PRED CHAOS::CLASH-CLAUSE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::CLAUSE-PRED)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   CLAUSE-PRED is not known to be a function

;     (CHAOS::PN-FLAG CHAOS::ORDER-HYPER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN GET-NSUBST ...)
; compiling (DEFUN HYPER-CLASH! ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN HYPER-CLASH!
;     (LET ((CHAOS::CLASHES NIL)
;           (CHAOS::LIST-RESOLVENT NIL)
;           (CHAOS::BACKUP NIL)
;           (CHAOS::C-END NIL))
;       (DECLARE (TYPE (OR NULL CHAOS::CLASH) CHAOS::CLASHES)
;                (TYPE LIST CHAOS::LIST-RESOLVENT)
;                (TYPE (OR NULL CHAOS::CLASH) CHAOS::C-END))
;       (LOOP
;        (IF (NOT CHAOS::BACKUP)
;            (IF (OR # #)
;                (LET #
;                  #
;                  #
;                  #
;                  #
;                  #
;                  #
;                  #)
;                (PROGN # # #))
;            (IF (OR # #)
;                (RETURN-FROM CHAOS::HYPER-CLASH! CHAOS::LIST-RESOLVENT)
;                (PROGN # # #)))
;        (UNLESS CHAOS::BACKUP
;          (IF (CHAOS::CLASH-EVALUABLE CHAOS::CLASHES)
;              (IF #
;                  #
;                  #)
;              (UNLESS # #))))
;       CHAOS::LIST-RESOLVENT)
; ==>
;   CHAOS::LIST-RESOLVENT
; 
; note: deleting unreachable code

; compiling (DEFUN HYPER-RESOLUTION ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN HYPER-RESOLUTION
;     (CHAOS::PN-FLAG CHAOS::DEBUG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::ORDER-HYPER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN NEG-HYPER-RESOLUTION ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN NEG-HYPER-RESOLUTION
;     (CHAOS::PN-FLAG CHAOS::DEBUG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::ORDER-HYPER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN UR-RESOLUTION ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN UR-RESOLUTION
;     (INCF CHAOS::J)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::J)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES (INTEGER 2) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN BUILD-BIN-RES ...)
; compiling (DEFUN BINARY-RESOLUTION ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN BINARY-RESOLUTION
;     (CHAOS::PN-FLAG CHAOS::DEBUG-BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFSTRUCT (FACTOR) ...)
; compiling (DEFUN NEXT-FACTOR ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/resolve.lisp
; in: DEFUN NEXT-FACTOR
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN GET-FACTORS ...)
; compiling (DEFUN ALL-FACTORS ...)
; compiling (DEFUN FACTOR-SIMPLIFY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/resolve-tmpRW73Q691.fasl
; compilation finished in 0:00:00.264
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (INLINE GET-TERM-AT))
; compiling (DEFUN GET-TERM-AT ...)
; compiling (DEFUN APPLY-SUBST-2 ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN APPLY-SUBST-2
;     (INCF CHAOS::POS)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::POS)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (DEFUN BUILD-BIN-PARA ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN BUILD-BIN-PARA
;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARA-INTO-TERMS-ALPHA ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN PARA-INTO-TERMS-ALPHA
;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARA-FROM-ALPHA ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN PARA-FROM-ALPHA
;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-UNITS-ONLY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARAMODULATION-FROM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN PARAMODULATION-FROM
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-UNITS-ONLY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-VARS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARA-INTO-TERMS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN PARA-INTO-TERMS
;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PARAMODULATION-INTO ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/paramod.lisp
; in: DEFUN PARAMODULATION-INTO
;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-UNITS-ONLY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/paramod-tmp4TM0ME1F.fasl
; compilation finished in 0:00:00.264
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/demod.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL .DEMOD-TARGET-CLAUSE.) ...)
; compiling (DEFVAR .DEMOD-TARGET-CLAUSE. ...)
; compiling (DECLAIM (SPECIAL .DEMOD-USED-CLAUSES.) ...)
; compiling (DEFVAR .DEMOD-USED-CLAUSES. ...)
; compiling (DECLAIM (SPECIAL .CURRENT-DEMOD-CLAUSE.) ...)
; compiling (DEFVAR .CURRENT-DEMOD-CLAUSE. ...)
; compiling (DECLAIM (SPECIAL .DEMOD-TO-BE-USED.) ...)
; compiling (DEFVAR .DEMOD-TO-BE-USED. ...)
; compiling (DEFMACRO METHOD-DEMODULATORS ...)
; compiling (DEFUN RULE-2-DEMOD ...)
; compiling (DEFUN RULE->DEMODULATOR ...)
; compiling (DEFUN CAFEOBJ-RULES->DEMODULATORS ...)
; compiling (DEFUN DYNAMIC-DEMODULATOR ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/demod.lisp
; in: DEFUN DYNAMIC-DEMODULATOR
;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DYNAMIC-DEMOD-ALL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::DYNAMIC-DEMOD-RHS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::DYNAMIC-DEMOD-DEPTH)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DYNAMIC-DEMOD-LEX-DEP)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DYNAMIC-DEMOD-ALL)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN NEW-DEMODULATOR ...)
; compiling (DECLAIM (SPECIAL *CURRENT-CAFEOBJ-RULE*) ...)
; compiling (DEFVAR *CURRENT-CAFEOBJ-RULE* ...)
; compiling (DECLAIM (SPECIAL *DEMOD-IS-BACK-DEMOD*))
; compiling (DEFVAR *DEMOD-IS-BACK-DEMOD* ...)
; compiling (DECLAIM (INLINE DEMOD-REPLACE-TERM))
; compiling (DEFUN DEMOD-REPLACE-TERM ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/demod.lisp
; in: DEFUN DEMOD-REPLACE-TERM
;     (CHAOS::PN-PARAMETER CHAOS::DEMOD-LIMIT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::TRACE-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN APPLY-ONE-DEMODULATOR ...)
; compiling (DEFUN APPLY-ONE-DEMODULATOR* ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/demod.lisp
; in: DEFUN APPLY-ONE-DEMODULATOR*
;     (CHAOS::DEMOD-REPLACE-TERM CHAOS::TERM CHAOS::CONTR)
; --> BLOCK WHEN IF <= CHAOS::PN-PARAMETER CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; --> BLOCK WHEN IF CHAOS::PN-FLAG CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN APPLY-DEMODULATOR ...)
; compiling (DEFUN APPLY-DEMODULATORS ...)
; compiling (DEFUN DEMOD-REDUCE-TERM ...)
; compiling (DEFVAR .DEMOD-STRAT. ...)
; compiling (DEFUN DEMOD-METHOD-REWRITE-STRATEGY ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/demod.lisp
; in: DEFUN DEMOD-METHOD-REWRITE-STRATEGY
;     (AREF CHAOS::.DEMOD-STRAT. CHAOS::NUM-ARGS)
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a VECTOR, not a SIMPLE-ARRAY.

; compiling (DEFUN DEMOD-NORMALIZE-TERM ...)
; compiling (DEFUN CLEAN-REDUCED-FLAG ...)
; compiling (DEFUN DEMOD-REWRITE ...)
; compiling (DEFUN DEMODULATE-CLAUSE ...)
; compiling (DEFUN DEMOD-ATOM ...)
; compiling (DEFUN APPLY-DEMOD-TO-CLAUSE ...)
; compiling (DEFUN BACK-DEMODULATE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/demod.lisp
; in: DEFUN BACK-DEMODULATE
;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFMACRO PN-IS-TRUE? ...)
; compiling (DEFMACRO SAFE-IS-TRUE? ...)
; compiling (DEFMACRO SAFE-IS-FALSE? ...)
; compiling (DEFUN PN-IS-FALSE? ...)
; compiling (DEFUN LITERAL-TRUE-FALSE-REDUCE ...)
; compiling (DEFUN SETUP-BUILTIN-DEMODULATORS ...)
; compiling (DEFUN SETUP-DEMODULATORS ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/demod-tmpU2IL9N4.fasl
; compilation finished in 0:00:00.487
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/infer.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN INFER-MAIN ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN INFER-MAIN
;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO1)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-GIVEN)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::CHANGE-LIMIT-AFTER)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::NEW-MAX-WEIGHT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-WEIGHT) CHAOS::NEW-LIMIT)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-STATS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-INTERACT ...)
; compiling (DECLAIM (INLINE GIVEN-CLAUSE-OK))
; compiling (DEFUN GIVEN-CLAUSE-OK ...)
; compiling (DEFUN INFER ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN INFER
;     (CHAOS::PN-FLAG CHAOS::CONTROL-MEMORY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PROP-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::UR-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEMOD-INF)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN POST-PROCESS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN POST-PROCESS
;     (CHAOS::PN-FLAG CHAOS::EQ-UNITS-BOTH-WAYS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::ORDER-EQ)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-NEW-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BACK-SUB)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-BACK-SUB)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FACTOR)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BACK-UNIT-DELETION)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-BACK-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN POST-PROC-ALL ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN POST-PROC-ALL
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN HEAT-IS-ON ...)
; compiling (DEFUN END-PRE-PROCESS ...)
; compiling (DEFUN PRE-PROCESS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN PRE-PROCESS
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-KEPT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NO-NEW-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DYNAMIC-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEMOD-INF)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-NEW-DEMOD)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-STATS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN EXIT-PN-PROOF ...)
; compiling (DEFUN PROC-GEN ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN PROC-GEN
;     (CHAOS::PN-FLAG CHAOS::VERY-VERBOSE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DIST-CONST)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::ORDER-EQ)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DISCARD-NON-ORIENTABLE-EQ)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::UNIT-DELETION)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FACTOR)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-LITERALS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DISCARD-XX-RESOLVABLE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-WEIGHT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::VERY-VERBOSE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DELETE-IDENTICAL-NESTED-SKOLEM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SORT-LITERALS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::ORDER-EQ)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::FOR-SUB)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::VERY-VERBOSE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::QUIET)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEBUG-INFER)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PREPARE-INFERENCE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN PREPARE-INFERENCE
;     (CHAOS::PN-FLAG CHAOS::UNIVERSAL-SYMMETRY)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO1)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO1)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO1)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PROCESS-INPUT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-LISTS-AT-END)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-LISTS-AT-END)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-LISTS-AT-END)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::INPUT-SOS-FIRST)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (1- (CHAOS::NEXT-CLAUSE-NUM))
; ==>
;   (- (CHAOS::NEXT-CLAUSE-NUM) 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       etc.

; compiling (DEFUN CHECK-PN-OPTIONS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/infer.lisp
; in: DEFUN CHECK-PN-OPTIONS
;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::UR-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEMOD-INF)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-RIGHT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO-LEFT)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-ONES-RULE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::KB)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::KB2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::KB3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::LRPO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::DEMOD-LIMIT)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-LITERALS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER CHAOS::PICK-GIVEN-RATIO)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SOS-STACK)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SOS-QUEUE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SOS-STACK)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::SOS-QUEUE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/infer-tmpOPW41KDL.fasl
; compilation finished in 0:00:00.551
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/sigmatch.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (TYPE FIXNUM ...))
; compiling (DEFVAR .SIGMATCH-VIEW-NUM. ...)
; compiling (DEFUN MAKE-SIGMATCH-VIEW-NAME ...)
; compiling (DEFUN RESET-SIGMATCH-VIEW-NAME ...)
; compiling (DEFSTRUCT (SIGMATCH-SET) ...)
; compiling (DEFUN SIGMATCH-SET-ALL-OPS ...)
; compiling (DEFUN CREATE-SIGMATCH-SET ...)
; compiling (DEFUN SIGMATCH ...)
; compiling (DEFUN SIGMATCH-OP ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/sigmatch.lisp
; in: DEFUN SIGMATCH-OP
;     (SORT CHAOS::ARITY
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (STRING< (STRING (CHAOS::SORT-NAME CHAOS::X))
;                        (STRING (CHAOS::SORT-NAME CHAOS::Y)))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN MAKE-SIGMATCH-OP-PAT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/sigmatch.lisp
; in: DEFUN MAKE-SIGMATCH-OP-PAT
;     (FIND-IF
;      #'(LAMBDA (CHAOS::X)
;          (LET ((CHAOS::TSORT #))
;            (EQ (CHAOS::SORT-NAME CHAOS::TSORT) (CHAOS::SORT-NAME #))))
;      CHAOS::VM)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

;     (RASSOC SORT CHAOS::SAL)
; ==>
;   (SB-KERNEL:%RASSOC SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN GENERATE-SIGMATCH-VIEW ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/sigmatch-tmpIPVWLON2.fasl
; compilation finished in 0:00:00.044
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/refine.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PN-GET-IMAGE-OF-AXIOMS ...)
; compiling (DEFUN PN-AXIOM-IMAGE ...)
; compiling (DEFUN CHECK-REFINE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/refine.lisp
; in: DEFUN CHECK-REFINE
;     (CHAOS::PN-FLAG CHAOS::DEBUG-REFINE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE) NIL)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS) 1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-CHECK-REFINEMENT ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/refine-tmpO0LCOIDS.fasl
; compilation finished in 0:00:00.021
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/commands.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFTERM FAX ...)
; compiling (DEFUN PIGNOSE-PROCESS-FAX-PROC ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN PIGNOSE-PROCESS-FAX-PROC
;     (STRING (SECOND CHAOS::LHS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (CHAR (FIRST CHAOS::INPUT) 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFUN PIGNOSE-EVAL-FAX-PROC ...)
; compiling (DEFUN PIGNOSE-PROCESS-GOAL-PROC ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN PIGNOSE-PROCESS-GOAL-PROC
;     (STRING (SECOND CHAOS::LHS))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

;     (CHAR (FIRST CHAOS::INPUT) 0)
; --> AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; due to type uncertainty:
;   The first argument is a STRING, not a SIMPLE-ARRAY.

; compiling (DEFUN PIGNOSE-EVAL-GOAL-PROC ...)
; compiling (DEFTERM SOS ...)
; compiling (DEFUN PIGNOSE-PARSE-SOS ...)
; compiling (DEFTERM PNDB ...)
; compiling (DEFUN PIGNOSE-PARSE-DB ...)
; compiling (DEFTERM CLAUSE-PRINT ...)
; compiling (DEFUN PIGNOSE-PARSE-CLAUSE ...)
; compiling (DEFTERM RESOLVE ...)
; compiling (DEFUN PIGNOSE-PARSE-RESOLVE ...)
; compiling (DEFTERM DEMOD ...)
; compiling (DEFUN PIGNOSE-PARSE-DEMOD ...)
; compiling (DEFTERM SAVE-OPTION ...)
; compiling (DEFTERM PN-LIST ...)
; compiling (DEFUN PIGNOSE-PARSE-LIST-COMMAND ...)
; compiling (DEFTERM PN-OPTION ...)
; compiling (DEFUN PIGNOSE-PARSE-SAVE-OPTION ...)
; compiling (DEFUN PIGNOSE-PARSE-OPTION ...)
; compiling (DEFTERM PN-SET-FLAG ...)
; compiling (DEFUN PIGNOSE-PARSE-FLAG ...)
; compiling (DEFTERM PN-ASSIGN ...)
; compiling (DEFUN PIGNOSE-PARSE-PARAM ...)
; compiling (DEFTERM SIGMATCH ...)
; compiling (DEFUN PIGNOSE-PARSE-SIGMATCH ...)
; compiling (DEFTERM PN-LEX ...)
; compiling (DEFUN PIGNOSE-PARSE-LEX ...)
; compiling (DEFUN PARSE-FAX-DECLARATION ...)
; compiling (DEFUN EVAL-FAX ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN EVAL-FAX
;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN EVAL-PNDB ...)
; compiling (DEFUN EVAL-SOS ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN EVAL-SOS
;     (SORT (CHAOS::PSYSTEM-SOS CHAOS::PSYS)
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (< (CHAOS::CLAUSE-ID CHAOS::X) (CHAOS::CLAUSE-ID CHAOS::Y))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (SORT (CHAOS::PSYSTEM-USABLE CHAOS::PSYS)
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (< (CHAOS::CLAUSE-ID CHAOS::X) (CHAOS::CLAUSE-ID CHAOS::Y))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (SORT (CHAOS::PSYSTEM-PASSIVE CHAOS::PSYS)
;           #'(LAMBDA (CHAOS::X CHAOS::Y)
;               (< (CHAOS::CLAUSE-ID CHAOS::X) (CHAOS::CLAUSE-ID CHAOS::Y))))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN EVAL-CLAUSE-SHOW ...)
; compiling (DEFUN EVAL-PN-LIST ...)
; compiling (DEFUN EVAL-RESOLVE ...)
; compiling (DEFUN DO-RESOLVE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN DO-RESOLVE
;     (CHAOS::PN-FLAG CHAOS::PRINT-STATS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PIGNOSE-SHOW-CLAUSE ...)
; compiling (DEFUN EVAL-PN-SET-FLAG ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN EVAL-PN-SET-FLAG
;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-FLAG CHAOS::INDEX) CHAOS::VALUE)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG-HOOK CHAOS::INDEX)
; --> CHAOS::PIGNOSE-FLAG-HOOK AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (FUNCALL (CHAOS::PN-FLAG-HOOK CHAOS::INDEX) CHAOS::VALUE)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL (CHAOS::PN-FLAG-HOOK CHAOS::INDEX))
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN PIGNOSE-SHOW-OPTION ...)
; compiling (DEFUN EVAL-PN-ASSIGN ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN EVAL-PN-ASSIGN
;     (CHAOS::PN-PARAMETER-MIN CHAOS::INDEX)
; --> CHAOS::PN-PARAM-MIN AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-PARAMETER-MAX CHAOS::INDEX)
; --> CHAOS::PN-PARAM-MAX AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PRINT-MESSAGE)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::INDEX) CHAOS::VALUE)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (< CHAOS::VALUE MIN)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.

;     (> CHAOS::VALUE MAX)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.

; compiling (DEFUN EVAL-PN-OPTION ...)
; compiling (DEFUN PERFORM-DEMODULATION ...)
; compiling (DEFUN PERFORM-DEMODULATION* ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/commands.lisp
; in: DEFUN PERFORM-DEMODULATION*
;     (ZEROP CHAOS::*TERM-MEMO-HASH-HIT*)
; ==>
;   (= CHAOS::*TERM-MEMO-HASH-HIT* 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a (OR (COMPLEX SINGLE-FLOAT)
;                                             (COMPLEX DOUBLE-FLOAT)).
; 
; note: unable to open code because: The operands might not be the same type.

; compiling (DEFUN EVAL-PN-SIGMATCH ...)
; compiling (DEFUN EVAL-PN-LEX ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/commands-tmpP264WQ6O.fasl
; compilation finished in 0:00:00.476
; compiling file "/<<PKGBUILDDIR>>/BigPink/codes/inv.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DECLAIM (SPECIAL .PN-CHECK-SAFETY.))
; compiling (DEFVAR .PN-CHECK-SAFETY. ...)
; compiling (DEFSTRUCT (INV-CHECK-SYSTEM) ...)
; compiling (DEFUN PN-GET-METH-UNIQUE ...)
; compiling (DEFUN MAKE-TERM-PAT ...)
; compiling (DEFUN MAKE-INV-CHECK-CONTEXT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN MAKE-INV-CHECK-CONTEXT
;     (CHAOS::PN-FLAG CHAOS::DEBUG-INV-CHECK)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN MAKE-INV-CHECK-CONTEXTS ...)
; compiling (DEFUN PN-EXPAND-MACRO ...)
; compiling (DEFUN MAKE-PN-INV-CHECK-PAT ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN MAKE-PN-INV-CHECK-PAT
;     (FORMAT CHAOS::PRINT-MSG "~%~a: " MAKE-CONDITION)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%~a: "
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-CHAR #\Newline STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM)
;               (WRITE-STRING ": " STREAM))
;             NIL)
;           #:G214)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (MEMBER T) STREAM), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (MEMBER T) STREAM), not a (MEMBER T).

;     (FORMAT CHAOS::PRINT-MSG "~%goal: ")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%goal: "
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; goal: "
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (MEMBER T) STREAM), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (MEMBER T) STREAM), not a (MEMBER T).

; compiling (DEFUN CL-MEMBER-TEST ...)
; compiling (DEFUN SETUP-INV-CHECK-DB ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN SETUP-INV-CHECK-DB
;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO1)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PERFORM-INV-CHECK ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN PERFORM-INV-CHECK
;     (CHAOS::PN-FLAG CHAOS::AUTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO2)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::AUTO3)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::BINARY-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::NEG-HYPER-RES)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-FROM)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::PARA-INTO)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::DEMOD-INF)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (SETF (CHAOS::PN-PARAMETER CHAOS::MAX-PROOFS) 1)
; --> LET* AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::SET-NEEDS-RULE)
; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET IF = IF 
; ==>
;   (= SB-C::X SB-C::Y)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a (OR (DOUBLE-FLOAT -4.611686018427388d18)
;                               (SINGLE-FLOAT -4.611686e18)
;                               (RATIONAL -4611686018427387904)), not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> CHAOS::MARK-MODULE-NEED-REWRITING-PREPARATION SETF 
; --> SB-KERNEL:%INSTANCE-SET SB-KERNEL:THE* MIN LET LET IF <= OR LET < IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.

; compiling (DEFUN DO-INVARIANCE-CHECK ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN DO-INVARIANCE-CHECK
;     (CHAOS::PN-PARAMETER CHAOS::INV-CHECK-MAX-DEPTH)
; --> CHAOS::PN-PARAM-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (30)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (CHAOS::PN-FLAG CHAOS::CHECK-INIT-ALWAYS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

;     (INCF CHAOS::LOOPS)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::LOOPS)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER -1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER -1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (> CHAOS::LOOPS CHAOS::MAX-LOOPS)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.

;     (INCF CHAOS::NUM)
; --> SETQ THE 
; ==>
;   (+ 1 CHAOS::NUM)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (< CHAOS::LOOPS CHAOS::SKIP-L)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.

;     (< CHAOS::NUM CHAOS::SKIP-NUM)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.

; compiling (DEFUN PARSE-PN-CHECK-COMMAND ...)
; compiling (DEFUN PN-CHECK-INVARIANCE ...)
; file: /<<PKGBUILDDIR>>/BigPink/codes/inv.lisp
; in: DEFUN PN-CHECK-INVARIANCE
;     (CHAOS::PN-FLAG CHAOS::PRINT-STATS)
; --> CHAOS::PIGNOSE-FLAG-VALUE AREF 
; ==>
;   (SB-KERNEL:HAIRY-DATA-VECTOR-REF ARRAY SB-INT:INDEX)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (100)), not a SIMPLE-STRING.
; 
; note: unable to
;   avoid runtime dispatch on array element type
; because:
;   Upgraded element type of array is not known at compile time.

; compiling (DEFUN PN-CHECK-SAFETY ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/BigPink/codes/inv-tmpESC43OCR.fasl
; compilation finished in 0:00:00.379
; compiling file "/<<PKGBUILDDIR>>/cafeobj/cafeobjvar.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DEFVAR *CAFEOBJ-NO-BANNER* ...)
; compiling (DEFVAR *CAFEOBJ-VERBOSE* ...)
; compiling (DEFVAR *PROMPT* ...)
; compiling (DEFVAR *CAFEOBJ-INITIAL-LOAD-FILES* ...)
; compiling (DEFVAR *CAFEOBJ-INITIAL-PRELUDE-FILE* ...)
; compiling (DEFVAR *CAFEOBJ-SECONDARY-PRELUDE-FILE* ...)
; compiling (DEFVAR *CAFEOBJ-LOAD-INIT-FILE* ...)
; compiling (DEFVAR *CAFEOBJ-SECONDARY-PRELUDE-PATH* ...)
; compiling (DEFVAR *CAFEOBJ-INSTALL-DIR* ...)
; compiling (DEFVAR *CAFEOBJ-SCHEMAS* ...)
; compiling (DEFVAR *CAFEOBJ-PRINT-ERRORS* ...)
; compiling (DEFPARAMETER *CAFEOBJ-MOD-ELTS* ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/cafeobjvar-tmpWCAM54ZJ.fasl
; compilation finished in 0:00:00.002
; compiling file "/<<PKGBUILDDIR>>/cafeobj/creader.lisp" (written 16 DEC 2019 07:35:07 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CAFEOBJ-PARSE ...)
; compiling (DEFUN CAFEOBJ-PARSE-FROM-STRING ...)
; compiling (DEFPARAMETER SORTDECLARATION ...)
; compiling (DEFPARAMETER HSORTDECLARATION ...)
; compiling (DEFPARAMETER HRCSORTDECLARATION ...)
; compiling (DEFPARAMETER BSORTDECLARATION ...)
; compiling (DEFPARAMETER BHSORTDECLARATION ...)
; compiling (DEFPARAMETER OPERATORDECLARATION ...)
; compiling (DEFPARAMETER BOPERATORDECLARATION ...)
; compiling (DEFPARAMETER PREDICATEDECLARATION ...)
; compiling (DEFPARAMETER BPREDICATEDECLARATION ...)
; compiling (DEFPARAMETER OPERATORATTRIBUTE ...)
; compiling (DEFPARAMETER LETDECLARATION ...)
; compiling (DEFPARAMETER VARDECLARATION ...)
; compiling (DEFPARAMETER VARSDECLARATION ...)
; compiling (DEFPARAMETER PVARDECLARATION ...)
; compiling (DEFPARAMETER PVARSDECLARATION ...)
; compiling (DEFPARAMETER MACRODECLARATION ...)
; compiling (DEFPARAMETER EQDECLARATION ...)
; compiling (DEFPARAMETER BEQDECLARATION ...)
; compiling (DEFPARAMETER CEQDECLARATION ...)
; compiling (DEFPARAMETER BCEQDECLARATION ...)
; compiling (DEFPARAMETER FOPLAXDECLARATION ...)
; compiling (DEFPARAMETER FOPLGOALDECLARATION ...)
; compiling (DEFPARAMETER RLDECLARATION ...)
; compiling (DEFPARAMETER BRLDECLARATION ...)
; compiling (DEFPARAMETER CRLDECLARATION ...)
; compiling (DEFPARAMETER BCRLDECLARATION ...)
; compiling (DEFPARAMETER EXDECLARATION ...)
; compiling (DEFPARAMETER PRDECLARATION ...)
; compiling (DEFPARAMETER USDECLARATION ...)
; compiling (DEFPARAMETER INCDECLARATION ...)
; compiling (DEFPARAMETER CTF ...)
; compiling (DEFPARAMETER CSP ...)
; compiling (DEFPARAMETER INIT ...)
; compiling (DEFPARAMETER USE ...)
; compiling (DEFPARAMETER EMBED ...)
; compiling (DEFPARAMETER IND ...)
; compiling (DEFPARAMETER CITPATTR ...)
; compiling (SETQ *CAFEOBJ-SCHEMAS* ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/creader-tmpVTMW561L.fasl
; compilation finished in 0:00:00.042
; compiling file "/<<PKGBUILDDIR>>/cafeobj/oldoc.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *CAFEOBJ-DOC-DB* ...)
; compiling (DEFVAR *CAFEOBJ-ALIAS-DB* ...)
; compiling (DEFSTRUCT (OLDOC #) ...)
; compiling (DEFUN PRINT-ONLINE-DOCUMENT ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN PRINT-ONLINE-DOCUMENT
;     (FORMAT STREAM "~%*** key    : ~a" (CHAOS::OLDOC-KEY CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%*** key    : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; *** key    : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G8)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&red-title  : ~a" (CHAOS::OLDOC-RTITLE CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&red-title  : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "red-title  : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G18)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&title      : ~a" (CHAOS::OLDOC-TITLE CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&title      : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "title      : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G28)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&mdkey      : ~a" (CHAOS::OLDOC-MDKEY CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&mdkey      : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "mdkey      : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G38)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&main       : ~a" (CHAOS::OLDOC-MAIN CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&main       : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "main       : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G48)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&example    : ~a" (CHAOS::OLDOC-EXAMPLE CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&example    : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "example    : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G58)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&names      : ~a" (CHAOS::OLDOC-NAMES CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&names      : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "names      : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G68)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&related    : ~a" (CHAOS::OLDOC-RELATED CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&related    : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "related    : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G78)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&cache      : ~a" (CHAOS::OLDOC-CACHE CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&cache      : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "cache      : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G88)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~&cateogry   : ~a" (CHAOS::OLDOC-CATEGORY CHAOS::DOC))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&cateogry   : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "cateogry   : " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G98)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFUN OLDOC-MAKE-KEY ...)
; compiling (DEFUN OLDOC-QUESTION-TO-STRING ...)
; compiling (DEFUN OLDOC-FIND-DOC-ENTRY ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN OLDOC-FIND-DOC-ENTRY
;     (LENGTH CHAOS::REDSS)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (LENGTH CHAOS::N)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

;     (SUBSEQ CHAOS::N 0 CHAOS::REDSSLEN)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a SB-KERNEL:EXTENDED-SEQUENCE.

; compiling (DEFUN OLDOC-FORMAT-RELATED ...)
; compiling (DEFUN OLDOC-FORMAT-DOCUMENTATION ...)
; compiling (DEFUN OLDOC-IS-REGEX ...)
; compiling (DEFUN OLDOC-PARSE-TO-WORDS ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN OLDOC-PARSE-TO-WORDS
;     (STRING-TRIM "\"'" CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a SIMPLE-STRING.

; compiling (DEFUN OLDOC-SEARCH-ALL ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN OLDOC-SEARCH-ALL
;     (SEARCH CHAOS::X CHAOS::Y)
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
;   The second argument is a SEQUENCE, not a VECTOR.
; 
; note: unable to
;   open code
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.
;   The second argument is a SEQUENCE, not a VECTOR.

;     (APPLY CHAOS::X (LIST CHAOS::FULLSS))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::X)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   X is not known to be a function

; compiling (DEFUN REGISTER-ONLINE-HELP ...)
; compiling (DEFPARAMETER .MD-REMOVE-HASH-HASH. ...)
; compiling (DEFPARAMETER .MD-REMOVE-LINK. ...)
; compiling (DEFPARAMETER .MD-REMOVE-LINK2. ...)
; compiling (DEFPARAMETER .MD-REMOVE-CODE-SIGN. ...)
; compiling (DEFPARAMETER .MD-REPLACE-TILDE. ...)
; compiling (DEFPARAMETER .MD-REPLACE-BQ. ...)
; compiling (DEFPARAMETER .MD-REMOVE-BQ. ...)
; compiling (DEFUN FORMAT-MARKDOWN ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN FORMAT-MARKDOWN
;     (FUNCALL CHAOS::.MD-REPLACE-BQ.
;              (FUNCALL CHAOS::.MD-REPLACE-TILDE.
;                       (FUNCALL CHAOS::.MD-REMOVE-CODE-SIGN.
;                                (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;                                         (FUNCALL CHAOS::.MD-REMOVE-LINK. #)))))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REPLACE-BQ.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REPLACE-TILDE.
;              (FUNCALL CHAOS::.MD-REMOVE-CODE-SIGN.
;                       (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;                                (FUNCALL CHAOS::.MD-REMOVE-LINK.
;                                         (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH.
;                                                  CHAOS::STR)))))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REPLACE-TILDE.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-CODE-SIGN.
;              (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;                       (FUNCALL CHAOS::.MD-REMOVE-LINK.
;                                (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH.
;                                         CHAOS::STR))))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-CODE-SIGN.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;              (FUNCALL CHAOS::.MD-REMOVE-LINK.
;                       (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR)))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-LINK2.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-LINK.
;              (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-LINK.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-HASH-HASH.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN OLDOC-REDUCE-STRING ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN OLDOC-REDUCE-STRING
;     (FUNCALL CHAOS::.MD-REMOVE-BQ.
;              (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;                       (FUNCALL CHAOS::.MD-REMOVE-LINK.
;                                (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH.
;                                         CHAOS::STR))))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-BQ.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-LINK2.
;              (FUNCALL CHAOS::.MD-REMOVE-LINK.
;                       (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR)))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-LINK2.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-LINK.
;              (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR))
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-LINK.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

;     (FUNCALL CHAOS::.MD-REMOVE-HASH-HASH. CHAOS::STR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.MD-REMOVE-HASH-HASH.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFVAR .OUT-DONE. ...)
; compiling (DEFUN REFMAN-SORT ...)
; compiling (DEFUN EXPORT-REFMAN ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN EXPORT-REFMAN
;     (SORT CHAOS::DATA #'CHAOS::REFMAN-SORT :KEY #'CAR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (FORMAT CHAOS::OUT "~a" (CDR CHAOS::D))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G26)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM NULL), not a NULL.

; compiling (DEFPARAMETER .TODO. ...)
; compiling (DEFUN SHOW-UNDOCUMENTED ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN SHOW-UNDOCUMENTED
;     (SORT CHAOS::DOCS #'STRING<= :KEY #'CHAOS::OLDOC-KEY)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

;     (FUNCALL CHAOS::.TODO. CHAOS::STR)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::.TODO.)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   callable expression is not known to be a function

; compiling (DEFUN OLDOC-GET-DOCUMENTS-BY-CATEGORY ...)
; compiling (DEFUN OLDOC-GET-DOCUMENTATION ...)
; compiling (DECLAIM (SPECIAL .CATEGORY-DESCRIPTIONS. ...))
; compiling (DEFUN OLDOC-LIST-CATEGORIES ...)
; file: /<<PKGBUILDDIR>>/cafeobj/oldoc.lisp
; in: DEFUN OLDOC-LIST-CATEGORIES
;     (1+ CHAOS::N)
; ==>
;   (+ CHAOS::N 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/oldoc-tmpUNNGT9CF.fasl
; compilation finished in 0:00:00.933
; compiling file "/<<PKGBUILDDIR>>/cafeobj/define.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR *CAFEOBJ-TOP-COMMANDS* ...)
; compiling (DEFVAR *CAFEOBJ-DECLARATIONS* ...)
; compiling (DEFSTRUCT (COMDE #) ...)
; compiling (DEFPARAMETER .VALID-COMDE-TYPES. ...)
; compiling (DEFPARAMETER .VALID-DECL-CATEGORIES. ...)
; compiling (DEFPARAMETER .VALID-COM-CATEGORIES. ...)
; compiling (DEFUN PRINT-COMDE ...)
; file: /<<PKGBUILDDIR>>/cafeobj/define.lisp
; in: DEFUN PRINT-COMDE
;     (FORMAT STREAM "~%** key         : ~a" (CHAOS::COMDE-KEY CHAOS::ME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%** key         : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; ** key         : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G8)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%   type        : ~a" (CHAOS::COMDE-TYPE CHAOS::ME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%   type        : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
;    type        : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G18)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%   category    : ~a" (CHAOS::COMDE-CATEGORY CHAOS::ME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%   category    : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
;    category    : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G28)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%   parser      : ~a" (CHAOS::COMDE-PARSER CHAOS::ME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%   parser      : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
;    parser      : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G38)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

;     (FORMAT STREAM "~%   evaluator   : ~a" (CHAOS::COMDE-EVALUATOR CHAOS::ME))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%   evaluator   : ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
;    evaluator   : "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G48)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR BOOLEAN STREAM (VECTOR CHARACTER) (VECTOR NIL)
;                               BASE-STRING), not a NULL.

; compiling (DEFPARAMETER .CATEGORY-DESCRIPTIONS. ...)
; compiling (DEFUN GET-COMMAND-INFO ...)
; compiling (DEFUN SHOW-TOP-ENTRIES ...)
; file: /<<PKGBUILDDIR>>/cafeobj/define.lisp
; in: DEFUN SHOW-TOP-ENTRIES
;     (SORT CHAOS::KEYS #'STRING<=)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFUN GET-DECL-INFO ...)
; compiling (DEFUN SHOW-DECL-ENTRIES ...)
; file: /<<PKGBUILDDIR>>/cafeobj/define.lisp
; in: DEFUN SHOW-DECL-ENTRIES
;     (SORT CHAOS::KEYS #'STRING<=)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a LIST.

; compiling (DEFMACRO DEFINE ...)
; file: /<<PKGBUILDDIR>>/cafeobj/define.lisp
; in: DEFMACRO DEFINE
;     (MEMBER CHAOS::CATEGORY CHAOS::.VALID-COM-CATEGORIES.)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

;     (MEMBER CHAOS::CATEGORY CHAOS::.VALID-DECL-CATEGORIES.)
; ==>
;   (SB-KERNEL:%MEMBER SB-C::ITEM LIST)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a T, not a (OR FIXNUM SINGLE-FLOAT (NOT NUMBER)).

; compiling (DEFUN PRINT-COMDE-USAGE ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/define-tmp4L3W83SU.fasl
; compilation finished in 0:00:00.099
; compiling file "/<<PKGBUILDDIR>>/cafeobj/trans-com.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PARSE-IN-CONTEXT-MODEXP-WITH-TERM ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-com.lisp
; in: DEFUN PARSE-IN-CONTEXT-MODEXP-WITH-TERM
;     (LENGTH CHAOS::E)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFUN PARSE-REDUCE-COMMAND ...)
; compiling (DEFUN PARSE-EXEC-COMMAND ...)
; compiling (DEFUN PARSE-EXEC+-COMMAND ...)
; compiling (DEFUN PARSE-BRED-COMMAND ...)
; compiling (DEFUN PARSE-PARSE-COMMAND ...)
; compiling (DEFUN PARSE-TEST-REDUCTION ...)
; compiling (DEFUN PARSE-TRAM-COMMAND ...)
; compiling (DEFUN PARSE-AUTOLOAD-COMMAND ...)
; compiling (DEFUN PARSE-NO-AUTOLOAD-COMMAND ...)
; compiling (DEFUN PARSE-CBRED-COMMAND ...)
; compiling (DEFUN PARSE-IN-CONTEXT-MODEXP-WITH-NAME ...)
; compiling (DEFUN PARSE-LOOK-UP-COMMAND ...)
; compiling (DEFUN PARSE-CASE-COMMAND ...)
; compiling (DEFUN PARSE-EVAL-LISP ...)
; compiling (DEFUN PARSE-META-EVAL ...)
; compiling (DEFUN PARSE-MAKE-COMMAND ...)
; compiling (DEFUN PARSE-INPUT-COMMAND ...)
; compiling (DEFPARAMETER _SAVE-PAT ...)
; compiling (DEFUN PARSE-SAVE-COMMAND ...)
; compiling (DEFVAR _RESTORE-PAT ...)
; compiling (DEFUN PARSE-RESTORE-COMMAND ...)
; compiling (DEFVAR _RESET-PAT ...)
; compiling (DEFUN PARSE-RESET-COMMAND ...)
; compiling (DEFVAR _FULL-RESET-PAT ...)
; compiling (DEFUN PARSE-FULL-RESET-COMMAND ...)
; compiling (DEFUN PARSE-PRELUDE-COMMAND ...)
; compiling (DEFUN PARSE-COMMENT-COMMAND ...)
; compiling (DEFVAR _OPEN-PAT ...)
; compiling (DEFUN PARSE-OPEN-COMMAND ...)
; compiling (DEFVAR _CLOSE-PAT ...)
; compiling (DEFUN PARSE-CLOSE-COMMAND ...)
; compiling (DEFUN PARSE-INSPECT-TERM-COMMAND ...)
; compiling (DEFVAR _PWD-PAT ...)
; compiling (DEFUN PARSE-PWD-COMMAND ...)
; compiling (DEFVAR _LS-PAT ...)
; compiling (DEFUN PARSE-LS-COMMAND ...)
; compiling (DEFVAR _SHELL-PAT ...)
; compiling (DEFUN PARSE-SHELL-COMMAND ...)
; compiling (DEFVAR _CD-PAT ...)
; compiling (DEFUN PARSE-CD-COMMAND ...)
; compiling (DEFVAR _PUSHD-PAT ...)
; compiling (DEFUN PARSE-PUSHD-COMMAND ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-com.lisp
; in: DEFUN PARSE-PUSHD-COMMAND
;     (LENGTH CHAOS::INP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFVAR _POPD-PAT ...)
; compiling (DEFUN PARSE-POPD-COMMAND ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-com.lisp
; in: DEFUN PARSE-POPD-COMMAND
;     (LENGTH CHAOS::INP)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a SEQUENCE, not a VECTOR.

; compiling (DEFVAR _DIRS-PAT ...)
; compiling (DEFUN PARSE-DIRS-COMMAND ...)
; compiling (DEFVAR _PROTECT-PAT ...)
; compiling (DEFUN PARSE-PROTECT-COMMAND ...)
; compiling (DEFVAR _UNPROTECT-PAT ...)
; compiling (DEFUN PARSE-UNPROTECT-COMMAND ...)
; compiling (DEFVAR _SELECT-PAT ...)
; compiling (DEFVAR _SHOW-PAT ...)
; compiling (DEFVAR _DESC-PAT ...)
; compiling (DEFUN PARSE-SHOW-COMMAND ...)
; compiling (DEFVAR _SET-PAT ...)
; compiling (DEFUN PARSE-SET-COMMAND ...)
; compiling (DEFVAR _PROVIDE-PAT ...)
; compiling (DEFUN PARSE-PROVIDE-COMMAND ...)
; compiling (DEFVAR _REQUIRE-PAT ...)
; compiling (DEFUN PARSE-REQUIRE-COMMAND ...)
; compiling (DEFPARAMETER _REGULARIZE-PAT ...)
; compiling (DEFUN PARSE-REGULARIZE-COMMAND ...)
; compiling (DEFUN PARSE-CHECK-COMMAND ...)
; compiling (DEFUN CAFEOBJ-CHECK-HELP ...)
; compiling (DEFUN PARSE-DRIBBLE-COMMAND ...)
; compiling (DEFUN PARSE-CONTINUE-COMMAND ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-com.lisp
; in: DEFUN PARSE-CONTINUE-COMMAND
;     (> CHAOS::NUM 0)
; 
; note: forced to do FAST-IF->-ZERO (cost 8)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.

; compiling (DEFUN PARSE-NAME-COMMAND ...)
; compiling (DEFUN PARSE-VERSION-COMMAND ...)
; compiling (DEFUN CAFEOBJ-EVAL-MODULE-ELEMENT-PROC ...)
; compiling (DEFPARAMETER _GENDOC-PAT ...)
; compiling (DEFUN PARSE-GENDOC-COMMAND ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/trans-com-tmpGE7QNNEE.fasl
; compilation finished in 0:00:00.132
; compiling file "/<<PKGBUILDDIR>>/cafeobj/trans-decl.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN PARSE-INTERFACE-DECL ...)
; compiling (DEFUN PROCESS-IMPORTATION-FORM ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-decl.lisp
; in: DEFUN PROCESS-IMPORTATION-FORM
;     (FIND-IF #'(LAMBDA (CHAOS::X) (OR (EQL CHAOS::X #\.) (EQL CHAOS::X #\@)))
;              CHAOS::PARAM)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a SEQUENCE, not a (OR CONS NULL VECTOR).

; compiling (DEFUN PARSE-IMPORTS-FORM ...)
; compiling (DEFUN PROCESS-SORT-REFERENCE-FORM ...)
; compiling (DEFUN PROCESS-SORT-AND-SUBSORT-FORM ...)
; compiling (DEFUN PROCESS-HIDDEN-SORT-FORM ...)
; compiling (DEFUN PROCESS-BSORT-DECLARATION ...)
; compiling (DEFUN PROCESS-HBSORT-DECLARATION ...)
; compiling (DEFUN GATHER-SLOT-DECLS ...)
; compiling (DEFUN PROCESS-SUPER-REFS ...)
; compiling (DEFUN PROCESS-RECORD-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-CLASS-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-OPERATOR-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-PREDICATE-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-PREDICATES-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-BPREDICATES-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-OPERATORS-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-BOPERATORS-DECLARATION-FORM ...)
; compiling (DEFUN PARSE-REW-STRATEGY ...)
; compiling (DEFUN PROCESS-OPATTR-FORM ...)
; compiling (DEFUN PROCESS-OPATTR-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-SIGNATURE ...)
; compiling (DEFUN PROCESS-VARIABLE-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-PSEUD-VARIABLE-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-AXIOM-FORM ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-decl.lisp
; in: DEFUN PROCESS-AXIOM-FORM
;     (STRING CHAOS::X)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SYMBOL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.

; compiling (DEFUN PROCESS-AXIOMS-DECLARATION ...)
; compiling (DEFUN PROCESS-LET-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-MACRO-DECLARATION-FORM ...)
; compiling (DEFUN PROCESS-MODULE-DECLARATION-FORM ...)
; compiling (DEFUN PARSE-PSORT-DECL ...)
; compiling (DEFUN PARSE-MODULE-ELEMENTS ...)
; compiling (DEFUN PARSE-MODULE-ELEMENT ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-decl.lisp
; in: DEFUN PARSE-MODULE-ELEMENT
;     (FUNCALL CHAOS::PARSER CHAOS::E)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PARSER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PARSER is not known to be a function

; compiling (DEFUN PARSE-MODULE-ELEMENT-1 ...)
; compiling (DEFUN PROCESS-VIEW-DECLARATION-FORM ...)
; compiling (DEFUN PARSE-DYNAMIC-COMMENT-1 ...)
; compiling (DEFUN PARSE-DYNAMIC-COMMENT-2 ...)
; compiling (DEFUN PROCESS-EV-LISP-FORM ...)
; compiling (DEFUN PARSE-EVAL-FORM ...)
; compiling (DEFUN PARSE-DECL-DO-NOTHING ...)
; compiling (DEFUN EVAL-DECL-DO-NOTHING ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/trans-decl-tmp9B0UZGT4.fasl
; compilation finished in 0:00:00.199
; compiling file "/<<PKGBUILDDIR>>/cafeobj/trans-form.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN CAFEOBJ-2-CHAOS-PROC ...)
; compiling (DEFUN CAFEOBJ2CHAOS ...)
; compiling (DEFUN CAFEOBJ->CHAOS ...)
; file: /<<PKGBUILDDIR>>/cafeobj/trans-form.lisp
; in: DEFUN CAFEOBJ->CHAOS
;     (FORMAT CHAOS::PORT
;             "~&;;; this file is generated by CafeOBJ to Chaos converter version 1.2")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&;;; this file is generated by CafeOBJ to Chaos converter version 1.2"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING
;                ";;; this file is generated by CafeOBJ to Chaos converter version 1.2"
;                STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.

;     (FORMAT CHAOS::PORT "~&;;; creation date = ~a" (CHAOS::GET-TIME-STRING))
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&;;; creation date = ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING ";;; creation date = " STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G14)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.

;     (FORMAT CHAOS::PORT "~%;;; source file   = ~a" CHAOS::IN-FILE)
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~%;;; source file   = ~a"
;               (STREAM SB-FORMAT::FORMAT-ARG1 &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (WRITE-STRING "
; ;;; source file   = "
;                             STREAM)
;               (PRINC SB-FORMAT::FORMAT-ARG1 STREAM))
;             NIL)
;           #:G24)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.

;     (FORMAT CHAOS::PORT "~&(in-package :chaos)~%")
; ==>
;   (FORMAT SB-C::DEST
;           (SB-INT:NAMED-LAMBDA "fmt$~&(in-package :chaos)~%"
;               (STREAM &REST SB-FORMAT::ARGS)
;             (DECLARE (IGNORABLE STREAM SB-FORMAT::ARGS))
;             (BLOCK NIL
;               (FRESH-LINE STREAM)
;               (WRITE-STRING "(in-package :chaos)
; "
;                             STREAM))
;             NIL))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a STREAM.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a (MEMBER T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR STREAM BOOLEAN), not a NULL.


; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/trans-form-tmpAJ5U325P.fasl
; compilation finished in 0:00:00.017
; compiling file "/<<PKGBUILDDIR>>/cafeobj/command-top.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN GET-ARG-STRING ...)
; compiling (DEFUN CAFEOBJ-PROCESS-ARGS ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN CAFEOBJ-PROCESS-ARGS
;     (CHAOS::WITH-CHAOS-ERROR NIL (SETQ CHAOS::*CAFEOBJ-LOAD-INIT-FILE* T)
;                              (SETQ CHAOS::*CAFEOBJ-INITIAL-LOAD-FILES* NIL)
;                              (SETQ CHAOS::*CAFEOBJ-INITIAL-PRELUDE-FILE* NIL)
;                              (LET* ((CHAOS::ARGS (CHAOS::GET-ARG-STRING))
;                                     (CHAOS::ARGC (LENGTH CHAOS::ARGS)))
;                                (DECLARE (TYPE LIST CHAOS::ARGS))
;                                (WHEN (< 0 CHAOS::ARGC)
;                                  (LET (#)
;                                    (CHAOS::WHILE # #))))
;                              (LET ((CHAOS::*CHAOS-QUIET* T))
;                                (WHEN
;                                    (AND CHAOS::*CAFEOBJ-BATCH*
;                                         (NULL
;                                          CHAOS::*CAFEOBJ-INITIAL-LOAD-FILES*))
;                                  (RETURN-FROM CHAOS::CAFEOBJ-PROCESS-ARGS NIL))
;                                (IF CHAOS::*CAFEOBJ-INITIAL-PRELUDE-FILE*
;                                    (PROGN
;                                     (FORMAT T "~%-- loading prelude")
;                                     (SETQ #))
;                                    (UNLESS CHAOS::*CAFEOBJ-STANDARD-PRELUDE-PATH*
;                                      (FORMAT T "~%-- loading standard prelude")
;                                      (SETQ #)))
;                                (WHEN CHAOS::*CAFEOBJ-SECONDARY-PRELUDE-FILE*
;                                  (FORMAT T "~%-- appending prelude")
;                                  (SETQ CHAOS::*CAFEOBJ-SECONDARY-PRELUDE-PATH*
;                                          #))
;                                (CHAOS::LOAD-PRELUDE "site-init"
;                                                     'CHAOS::PROCESS-CAFEOBJ-INPUT
;                                                     T)))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (SETQ CHAOS::*CAFEOBJ-LOAD-INIT-FILE*
;                                                                   T)
;                                                           (SETQ CHAOS::*CAFEOBJ-INITIAL-LOAD-FILES*
;                                                                   NIL)
;                                                           (SETQ CHAOS::*CAFEOBJ-INITIAL-PRELUDE-FILE*
;                                                                   NIL)
;                                                           (LET* ((CHAOS::ARGS #)
;                                                                  (CHAOS::ARGC #))
;                                                             (DECLARE
;                                                              (TYPE LIST
;                                                               CHAOS::ARGS))
;                                                             (WHEN
;                                                                 (< 0 CHAOS::ARGC)
;                                                               (LET #
;                                                                 #)))
;                                                           (LET ((CHAOS::*CHAOS-QUIET*
;                                                                  T))
;                                                             (WHEN
;                                                                 (AND
;                                                                  CHAOS::*CAFEOBJ-BATCH*
;                                                                  #)
;                                                               (RETURN-FROM
;                                                                   CHAOS::CAFEOBJ-PROCESS-ARGS
;                                                                 NIL))
;                                                             (IF CHAOS::*CAFEOBJ-INITIAL-PRELUDE-FILE*
;                                                                 (PROGN # #)
;                                                                 (UNLESS
;                                                                     CHAOS::*CAFEOBJ-STANDARD-PRELUDE-PATH*
;                                                                   #
;                                                                   #))
;                                                             (WHEN
;                                                                 CHAOS::*CAFEOBJ-SECONDARY-PRELUDE-FILE*
;                                                               (FORMAT T
;                                                                       "~%-- appending prelude")
;                                                               (SETQ #))
;                                                             (CHAOS::LOAD-PRELUDE
;                                                              "site-init"
;                                                              'CHAOS::PROCESS-CAFEOBJ-INPUT
;                                                              T))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN CAFEOBJ-INTERPRETER-HELP ...)
; compiling (DEFUN PRINT-CONTEXT-INFO ...)
; compiling (DEFUN PRINT-HELP-HELP ...)
; compiling (DEFUN CAFEOBJ-TOP-LEVEL-HELP ...)
; compiling (DEFPARAMETER .CAFEOBJ-MAIN-COMMANDS. ...)
; compiling (DEFUN SHOW-CAFEOBJ-MAIN-COMMANDS ...)
; compiling (DEFPARAMETER .?-INVALID-CHARS. ...)
; compiling (DEFUN CAFEOBJ-WHAT-IS ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN CAFEOBJ-WHAT-IS
;     (FORMAT T CHAOS::DESCRIPTION)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                FUNCTION), not a SIMPLE-STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                FUNCTION), not a FUNCTION.

; compiling (DEFUN GET-COMMAND-DESCRIPTION ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN GET-COMMAND-DESCRIPTION
;     (STRING= CHAOS::LEVEL "??")
; ==>
;   (SB-KERNEL:STRING=* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a STRING.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SIMPLE-STRING.

; compiling (DEFUN CAFEOBJ-INPUT ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN CAFEOBJ-INPUT
;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (IF CHAOS::*CAFEOBJ-BATCH*
;                                                               (LET (#)
;                                                                 (CHAOS::CHAOS-INPUT-FILE
;                                                                  :FILE CHAOS::F
;                                                                  :PROC
;                                                                  CHAOS::PROC
;                                                                  :LOAD-PATH
;                                                                  CHAOS::LOAD-PATH
;                                                                  :SUFFIX '#))
;                                                               (CHAOS::CHAOS-INPUT-FILE
;                                                                :FILE CHAOS::F
;                                                                :PROC CHAOS::PROC
;                                                                :LOAD-PATH
;                                                                CHAOS::LOAD-PATH
;                                                                :SUFFIX
;                                                                '(".cafe"
;                                                                  ".mod")))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-ERROR NIL
;                              (IF CHAOS::*CAFEOBJ-BATCH*
;                                  (LET ((*PRINT-CASE* :DOWNCASE))
;                                    (CHAOS::CHAOS-INPUT-FILE :FILE CHAOS::F :PROC
;                                                             CHAOS::PROC
;                                                             :LOAD-PATH
;                                                             CHAOS::LOAD-PATH
;                                                             :SUFFIX
;                                                             '(".cafe" ".mod")))
;                                  (CHAOS::CHAOS-INPUT-FILE :FILE CHAOS::F :PROC
;                                                           CHAOS::PROC :LOAD-PATH
;                                                           CHAOS::LOAD-PATH
;                                                           :SUFFIX
;                                                           '(".cafe" ".mod"))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN CAFEOBJ-PROBE-FILE ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN CAFEOBJ-PROBE-FILE
;     (<= (FILE-WRITE-DATE CHAOS::SRC) (FILE-WRITE-DATE CHAOS::BIN))
; --> IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a UNSIGNED-BYTE, not a FIXNUM.

; compiling (DEFUN PRINT-CAFEOBJ-PROMPT ...)
; compiling (DEFUN SET-CAFEOBJ-LIBPATH ...)
; compiling (DEFUN SET-CAFEOBJ-STANDARD-LIBRARY-PATH ...)
; compiling (DEFUN BYE-BYE-BYE ...)
; compiling (DEFUN CAFEOBJ-NOP ...)
; compiling (DEFUN CAFEOBJ-EVALUATE-COMMAND ...)
; file: /<<PKGBUILDDIR>>/cafeobj/command-top.lisp
; in: DEFUN CAFEOBJ-EVALUATE-COMMAND
;     (FUNCALL CHAOS::PARSER CHAOS::INP)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::PARSER)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   PARSER is not known to be a function

;     (FUNCALL CHAOS::EVALUATOR CHAOS::PFORM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::EVALUATOR)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   EVALUATOR is not known to be a function

; compiling (DEFUN PARSE-CAFEOBJ-INPUT-FROM-STRING ...)
; compiling (DEFVAR *ON-TOP-DEBUG* ...)
; compiling (DEFUN PROCESS-CAFEOBJ-INPUT ...)
; compiling (DEFUN HANDLE-CAFEOBJ-TOP-ERROR ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/command-top-tmpAOF1CYAS.fasl
; compilation finished in 0:00:00.191
; compiling file "/<<PKGBUILDDIR>>/cafeobj/commands.lisp" (written 20 JAN 2020 04:55:35 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (CLRHASH *CAFEOBJ-TOP-COMMANDS*)
; compiling (CLRHASH *CAFEOBJ-DOC-DB*)
; compiling (DEFINE (":is") ...)
; compiling (DEFINE ("!") ...)
; compiling (DEFINE ("#define") ...)
; compiling (DEFINE ("--" "**") ...)
; compiling (DEFINE ("-->" "**>") ...)
; compiling (DEFINE ("=") ...)
; compiling (DEFINE ("==") ...)
; compiling (DEFINE ("=/=") ...)
; compiling (DEFINE ("==>") ...)
; compiling (DEFINE ("=*=") ...)
; compiling (DEFINE ("=(n)=>" "=(n,m)=>" ...) ...)
; compiling (DEFINE ("accept =*= proof switch") ...)
; compiling (DEFINE ("?" "??" ...) ...)
; compiling (DEFINE ("?apropos" "?ap") ...)
; compiling (DEFINE ("all axioms switch") ...)
; compiling (DEFINE ("always memo switch") ...)
; compiling (DEFINE ("apply") ...)
; compiling (DEFINE ("auto context switch") ...)
; compiling (DEFINE ("autoload") ...)
; compiling (DEFINE ("no-autoload") ...)
; compiling (DEFINE ("axioms" "axiom" ...) ...)
; compiling (DEFINE ("bceq" "bcq") ...)
; compiling (DEFINE ("beq") ...)
; compiling (DEFINE ("bctrans" "bctr") ...)
; compiling (DEFINE ("bop" "bops") ...)
; compiling (DEFINE ("bpred" "bpreds" ...) ...)
; compiling (DEFINE ("breduce" "bred") ...)
; compiling (DEFINE ("btrans" "btr") ...)
; compiling (DEFINE ("cbred") ...)
; compiling (DEFINE ("cd") ...)
; compiling (DEFINE ("ceq" "cq") ...)
; compiling (DEFINE ("check") ...)
; compiling (DEFINE ("check switch") ...)
; compiling (DEFINE ("choose") ...)
; compiling (DEFINE ("clean memo" "clean") ...)
; compiling (DEFINE ("clean memo switch") ...)
; compiling (DEFINE ("close") ...)
; compiling (DEFINE ("comments") ...)
; compiling (DEFINE ("cond limit switch") ...)
; compiling (DEFINE ("ctrans" "ctr") ...)
; compiling (DEFINE ("describe" "desc") ...)
; compiling (DEFINE ("eof") ...)
; compiling (DEFINE ("eq") ...)
; compiling (DEFINE ("escape") ...)
; compiling (DEFINE ("exec limit switch") ...)
; compiling (DEFINE ("exec trace switch") ...)
; compiling (DEFINE ("execute" "exec") ...)
; compiling (DEFINE ("extending" "ex") ...)
; compiling (DEFINE ("find") ...)
; compiling (DEFINE ("find all rules switch") ...)
; compiling (DEFINE ("full reset" "full-reset" ...) ...)
; compiling (DEFINE ("gendoc") ...)
; compiling (DEFINE ("imports") ...)
; compiling (DEFINE ("include BOOL switch") ...)
; compiling (DEFINE ("include RWL switch") ...)
; compiling (DEFINE ("including" "inc") ...)
; compiling (DEFINE ("input" "in") ...)
; compiling (DEFINE ("instantiation") ...)
; compiling (DEFINE ("let") ...)
; compiling (DEFINE ("libpath switch" "library path") ...)
; compiling (DEFINE ("look" "look up") ...)
; compiling (DEFINE ("ls") ...)
; compiling (DEFINE ("match" "unify") ...)
; compiling (DEFINE ("module" "mod" ...) ...)
; compiling (DEFINE ("parameterized module") ...)
; compiling (DEFINE ("memo switch") ...)
; compiling (DEFINE ("module expression") ...)
; compiling (DEFINE ("on-the-fly" "on the fly") ...)
; compiling (DEFINE ("op" "ops") ...)
; compiling (DEFINE ("open") ...)
; compiling (DEFINE ("operator attributes" "assoc" ...) ...)
; compiling (DEFINE ("operator precedence" "precedence") ...)
; compiling (DEFINE ("parse") ...)
; compiling (DEFINE ("parser normalize switch") ...)
; compiling (DEFINE ("pred" "pd" ...) ...)
; compiling (DEFINE ("print depth switch") ...)
; compiling (DEFINE ("print mode switch") ...)
; compiling (DEFINE ("print trs switch") ...)
; compiling (DEFINE ("protect") ...)
; compiling (DEFINE ("protecting" "pr") ...)
; compiling (DEFINE ("provide") ...)
; compiling (DEFINE ("pwd") ...)
; compiling (DEFINE ("qualified sort" "qualified operator" ...) ...)
; compiling (DEFINE ("qualified term") ...)
; compiling (DEFINE ("quiet switch") ...)
; compiling (DEFINE ("quit") ...)
; compiling (DEFINE ("reduce" "red") ...)
; compiling (DEFINE ("reduce conditions") ...)
; compiling (DEFINE ("regularize") ...)
; compiling (DEFINE ("regularize signature switch" "reg signature") ...)
; compiling (DEFINE ("require") ...)
; compiling (DEFINE ("reset") ...)
; compiling (DEFINE ("restore") ...)
; compiling (DEFINE ("rewrite limit switch" "rew limit") ...)
; compiling (DEFINE ("save") ...)
; compiling (DEFINE ("search predicates") ...)
; compiling (DEFINE ("select") ...)
; compiling (DEFINE ("set") ...)
; compiling (DEFINE ("show" "sh") ...)
; compiling (DEFINE ("show mode switch") ...)
; compiling (DEFINE ("signature" "sig") ...)
; compiling (DEFINE ("sort declaration") ...)
; compiling (DEFINE ("start") ...)
; compiling (DEFINE ("statistics") ...)
; compiling (DEFINE ("step switch") ...)
; compiling (DEFINE ("stop pattern switch") ...)
; compiling (DEFINE ("switches") ...)
; compiling (DEFINE ("trace whole switch") ...)
; compiling (DEFINE ("trans" "tr") ...)
; compiling (DEFINE ("unprotect") ...)
; compiling (DEFINE ("using" "us") ...)
; compiling (DEFINE ("var" "vars") ...)
; compiling (DEFINE ("verbose switch") ...)
; compiling (DEFINE ("version") ...)
; compiling (DEFINE ("view") ...)
; compiling (DEFINE ("dribble") ...)
; compiling (DEFINE ("exec!" "execute!") ...)
; compiling (DEFINE ("stop") ...)
; compiling (DEFINE ("lisp" "ev") ...)
; compiling (DEFINE ("lispq" "evq") ...)
; compiling (DEFINE ("make") ...)
; compiling (DEFINE ("prelude") ...)
; compiling (DEFINE ("[") ...)
; compiling (DEFINE ("*") ...)
; compiling (DEFINE ("bsort") ...)
; compiling (DEFINE ("ax") ...)
; compiling (DEFINE ("bax") ...)
; compiling (DEFINE ("goal") ...)
; compiling (DEFINE ("bgoal") ...)
; compiling (DEFINE ("pvar" "pvars") ...)
; compiling (DEFINE ("rule" "rl") ...)
; compiling (DEFINE ("crule" "crl") ...)
; compiling (DEFINE ("brule" "brl") ...)
; compiling (DEFINE ("bcrule" "bcrl") ...)
; compiling (DEFINE ("inspect" "inspect-term") ...)
; compiling (DEFINE ("pushd") ...)
; compiling (DEFINE ("popd") ...)
; compiling (DEFINE ("dirs") ...)
; compiling (DEFINE ("") ...)
; compiling (DEFINE ("cont" "continue") ...)
; compiling (DEFINE ("names" "name") ...)
; compiling (DEFINE ("scase") ...)
; compiling (DEFINE ("sos" "passive") ...)
; compiling (DEFINE ("db") ...)
; compiling (DEFINE ("clause") ...)
; compiling (DEFINE ("list") ...)
; compiling (DEFINE ("flag") ...)
; compiling (DEFINE ("param") ...)
; compiling (DEFINE ("option") ...)
; compiling (DEFINE ("resolve") ...)
; compiling (DEFINE ("demod") ...)
; compiling (DEFINE ("save-option") ...)
; compiling (DEFINE ("sigmatch") ...)
; compiling (DEFINE ("lex") ...)
; compiling (DEFINE (".") ...)
; compiling (DEFINE ("citp") ...)
; compiling (DEFINE (":goal") ...)
; compiling (DEFINE (":apply") ...)
; compiling (DEFINE (":ind" ":induction") ...)
; compiling (DEFINE (":auto") ...)
; compiling (DEFINE (":roll") ...)
; compiling (DEFINE (":init" ":init!") ...)
; compiling (DEFINE (":imply" ":imp") ...)
; compiling (DEFINE (":cp") ...)
; compiling (DEFINE (":equation") ...)
; compiling (DEFINE (":rule") ...)
; compiling (DEFINE (":backward") ...)
; compiling (DEFINE (":select") ...)
; compiling (DEFINE (":red" ":exec" ...) ...)
; compiling (DEFINE (":verbose") ...)
; compiling (DEFINE (":normalize") ...)
; compiling (DEFINE (":ctf") ...)
; compiling (DEFINE (":ctf-") ...)
; compiling (DEFINE (":csp") ...)
; compiling (DEFINE (":csp-") ...)
; compiling (DEFINE (":def" ":define") ...)
; compiling (DEFINE (":show" ":sh") ...)
; compiling (DEFINE (":describe" ":desc") ...)
; compiling (DEFINE (":spoiler") ...)
; compiling (DEFINE (":set") ...)
; compiling (DEFINE (":order") ...)
; compiling (DEFINE (":use") ...)
; compiling (DEFINE (":embed") ...)
; compiling (DEFINE (":theory") ...)
; compiling (DEFINE (":reset") ...)
; compiling (DEFINE (":binspect") ...)
; compiling (DEFINE (":bgrind") ...)
; compiling (DEFINE ("bgrind") ...)
; compiling (DEFINE ("binspect") ...)
; compiling (DEFINE ("bresolve" ":bresolve") ...)
; compiling (DEFINE ("bshow" ":bshow") ...)
; compiling (DEFINE ("bguess" ":bguess" ...) ...)
; compiling (DEFINE ("commands" "com") ...)
; compiling (DEFINE ("?com" "?command") ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/commands-tmpIXCQTSHA.fasl
; compilation finished in 0:00:00.278
; compiling file "/<<PKGBUILDDIR>>/cafeobj/declarations.lisp" (written 15 NOV 2018 12:48:55 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (CLRHASH *CAFEOBJ-DECLARATIONS*)
; compiling (DEFINE ("bsort") ...)
; compiling (DEFINE ("[") ...)
; compiling (DEFINE ("hidden" "*") ...)
; compiling (DEFINE ("op") ...)
; compiling (DEFINE ("ops") ...)
; compiling (DEFINE ("bop") ...)
; compiling (DEFINE ("bops") ...)
; compiling (DEFINE ("pred" "pd") ...)
; compiling (DEFINE ("preds" "pds") ...)
; compiling (DEFINE ("dpred") ...)
; compiling (DEFINE ("bpred" "bpd") ...)
; compiling (DEFINE ("bpreds" "bpds") ...)
; compiling (DEFINE ("dbpred") ...)
; compiling (DEFINE ("attr" ":attr") ...)
; compiling (DEFINE ("let") ...)
; compiling (DEFINE ("#define") ...)
; compiling (DEFINE ("eq" "cq" ...) ...)
; compiling (DEFINE ("var" "vars") ...)
; compiling (DEFINE ("pvar" "pvars") ...)
; compiling (DEFINE ("fax" "bfax" ...) ...)
; compiling (DEFINE ("goal" "bgoal") ...)
; compiling (DEFINE ("imports" "import") ...)
; compiling (DEFINE ("pr" "protecting" ...) ...)
; compiling (DEFINE ("--" "**") ...)
; compiling (DEFINE ("-->") ...)
; compiling (DEFINE ("**>") ...)
; compiling (DEFINE ("ev" "lisp" ...) ...)
; compiling (DEFINE ("eval") ...)
; compiling (DEFINE ("sig" "signature") ...)
; compiling (DEFINE ("axioms" "axiom" ...) ...)
; compiling (DEFINE (".") ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/declarations-tmp5E6VIEMS.fasl
; compilation finished in 0:00:00.047
; compiling file "/<<PKGBUILDDIR>>/cafeobj/cafeobj-top.lisp" (written 17 JAN 2019 06:56:23 AM):
; compiling (IN-PACKAGE :CHAOS)
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFVAR G_LINE_1 ...)
; compiling (SETQ -CAFEOBJ-LOAD-TIME- ...)
; compiling (DEFUN CAFEOBJ-GREETING ...)
; compiling (DEFVAR .LISP-IMPLEMENTATION. ...)
; compiling (DEFVAR .LISP-VERSION. ...)
; compiling (DEFUN SUB-MESSAGE ...)
; compiling (DEFUN CAFEOBJ ...)
; compiling (DEFPARAMETER *PLATFORM-SPECIFIC-INTERRUPT-CONDITION* ...)
; compiling (DEFMACRO WITH-HANDLING-INTERRUPT ...)
; compiling (DEFUN PROCESS-INIT-FILES-HANDLING-EXCEPTIONS ...)
; file: /<<PKGBUILDDIR>>/cafeobj/cafeobj-top.lisp
; in: DEFUN PROCESS-INIT-FILES-HANDLING-EXCEPTIONS
;     (CHAOS::WITH-CHAOS-ERROR NIL (CHAOS::CAFEOBJ-INIT-FILES)
;                              (DOLIST
;                                  (CHAOS::F
;                                   (REVERSE CHAOS::*CAFEOBJ-INITIAL-LOAD-FILES*))
;                                (CHAOS::CAFEOBJ-INPUT CHAOS::F)))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

;     (CHAOS::WITH-CHAOS-TOP-ERROR NIL
;                                  (CHAOS::WITH-CHAOS-ERROR NIL
;                                                           (CHAOS::CAFEOBJ-INIT-FILES)
;                                                           (DOLIST
;                                                               (CHAOS::F
;                                                                (REVERSE
;                                                                 CHAOS::*CAFEOBJ-INITIAL-LOAD-FILES*))
;                                                             (CHAOS::CAFEOBJ-INPUT
;                                                              CHAOS::F))))
; --> LET LET IF LET IF FUNCALL SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-FOR-CALL CHAOS::STD-PROC)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; because:
;   STD-PROC is not known to be a function

; compiling (DEFUN PROCESS-CAFEOBJ-WITH-RESTART ...)
; compiling (DEFUN CAFEOBJ-INIT ...)
; compiling (DEFUN CAFEOBJ-INIT-FILES ...)
; compiling (DEFMACRO ABORT-ON-ERROR ...)
; compiling (DEFUN RESUME-CAFEOBJ ...)
; compiling (DEFUN CAFEOBJ-TOP-LEVEL ...)

; wrote /<<PKGBUILDDIR>>/tmpcache/common-lisp/sbcl-2.0.1.debian-linux-x64/<<PKGBUILDDIR>>/cafeobj/cafeobj-top-tmpI0PODGVV.fasl
; compilation finished in 0:00:00.035
; 
; compilation unit finished
;   printed 2208 notes
[undoing binding stack and other enclosing state... done]
[performing final GC... done]
[defragmenting immobile space... (fin,inst,fdefn,code,sym)=802+961+24130+24769+27336... done]
[saving current Lisp image into ./dumps/sbcl/cafeobj.sbcl:
writing 0 bytes from the read-only space at 0x50000000
writing 384 bytes from the static space at 0x50100000
writing 35651584 bytes from the dynamic space at 0x1000000000
writing 2277376 bytes from the immobile space at 0x50300000
writing 16252928 bytes from the immobile space at 0x52100000
done]
chmod +x dumps/sbcl/cafeobj.sbcl
cat ./xbin/cafeobj.in | \
sed -e 's:@FIRSTCHOICE@:sbcl:g' \
-e 's:@LIBPATH@:lib/cafeobj-1.6:g' \
-e 's:@SHAREPATH@:share/cafeobj-1.6:g' >./xbin/cafeobj
touch build-stamp
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
touch build-arch-stamp
touch build-indep-stamp
 fakeroot debian/rules binary
mkdir -p /<<PKGBUILDDIR>>/debian/cafeobj-mode/usr/share/emacs/site-lisp
cp elisp/cafeobj-mode.el /<<PKGBUILDDIR>>/debian/cafeobj-mode/usr/share/emacs/site-lisp
touch install-indep-stamp
dh_testdir
dh_testroot
dh_installdocs README.md
dh_installchangelogs
dh_installemacsen
dh_compress -X.pdf
dh_fixperms
dh_installdeb
dh_gencontrol
dh_md5sums
dh_builddeb
dpkg-deb: building package 'cafeobj-mode' in '../cafeobj-mode_1.6.0-2_all.deb'.
dh_testdir
dh_testroot
dh_prep
DESTDIR=/<<PKGBUILDDIR>>/debian/cafeobj /usr/bin/make install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/cafeobj-1.6/lib
/usr/bin/install -c -m 0644 		\
		./lib/lib/*.cafe	\
		/<<PKGBUILDDIR>>/debian/cafeobj/usr/share/cafeobj-1.6/lib
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/cafeobj-1.6/prelude
/usr/bin/install -c -m 0644 ./lib/prelude/*.bin 	\
		/<<PKGBUILDDIR>>/debian/cafeobj/usr/share/cafeobj-1.6/prelude
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/lib/cafeobj-1.6
cp -a dumps/* /<<PKGBUILDDIR>>/debian/cafeobj/usr/lib/cafeobj-1.6
chmod 0755 /<<PKGBUILDDIR>>/debian/cafeobj/usr/lib/cafeobj-1.6/*/*
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/bin
/usr/bin/install -c -m 0755 xbin/cafeobj /<<PKGBUILDDIR>>/debian/cafeobj/usr/bin
# man page
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/man/man1
/usr/bin/install -c -m 0644 doc/etc/cafeobj.1 /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/man/man1
# doc files
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/doc//cafeobj
/usr/bin/install -c -m 0644 				\
	doc/binspect/binspect.pdf doc/citp-manual/citp.pdf doc/manual/manual.pdf doc/namespace/namespace.pdf doc/PigNose/pnguide.pdf doc/RefCard/interp.pdf doc/RefCard/syntax.pdf doc/refman/reference-manual.pdf doc/search/search-predicate.pdf				\
	doc/etc/cafe-citp.txt			\
	elisp/cafeobj-mode.el			\
	lib/icons/cafeobj-logo.png		\
	lib/icons/cafeobj-logo-small.png		\
	/<<PKGBUILDDIR>>/debian/cafeobj/usr/share/doc//cafeobj
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/doc//cafeobj/examples
/usr/bin/install -c -m 0644 doc/examples/*.mod 		\
	/<<PKGBUILDDIR>>/debian/cafeobj/usr/share/doc//cafeobj/examples
# emacs lisp file installation
/usr/bin/install -c -d /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/emacs/site-lisp
/usr/bin/install -c -m 0644 elisp/cafeobj-mode.el /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/emacs/site-lisp
# end of installation routines
touch install-stamp
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
# make install does also install the cafeobj-mode.el, remove it
rm /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/emacs/site-lisp/cafeobj-mode.el
rmdir /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/emacs/site-lisp/
rmdir /<<PKGBUILDDIR>>/debian/cafeobj/usr/share/emacs
touch install-arch-stamp
dh_testdir
dh_testroot
dh_installdocs README.md
dh_installchangelogs
# do NOT strip otherwise the sbcl dump file is broken!
#dh_strip
dh_compress -X.pdf
dh_fixperms
dh_installdeb
dh_shlibdeps
dh_gencontrol
dh_md5sums
dh_builddeb
dpkg-deb: building package 'cafeobj' in '../cafeobj_1.6.0-2_amd64.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../cafeobj_1.6.0-2_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T03:47:12Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


cafeobj_1.6.0-2_amd64.changes:
------------------------------

Format: 1.8
Date: Wed, 19 Feb 2020 05:27:40 +0900
Source: cafeobj
Binary: cafeobj cafeobj-mode
Architecture: all amd64
Version: 1.6.0-2
Distribution: unstable
Urgency: medium
Maintainer: Norbert Preining <norbert@preining.info>
Changed-By: Norbert Preining <norbert@preining.info>
Description:
 cafeobj    - new generation algebraic specification and programming language
 cafeobj-mode - Emacs major mode for editing CafeOBJ source code
Changes:
 cafeobj (1.6.0-2) unstable; urgency=medium
 .
   * add watch file
Checksums-Sha1:
 f151b9121205715d4563fae30ef1a901595e0b5c 25892 cafeobj-mode_1.6.0-2_all.deb
 290d8ff18cdcf9d876894702907eb882f2b805bb 5174 cafeobj_1.6.0-2_amd64.buildinfo
 b9c2cfc39aea9876753aad986030928d7beb2782 12666244 cafeobj_1.6.0-2_amd64.deb
Checksums-Sha256:
 b90e5a6211af1e8542b8ffddfbca2a6f326678765c422f376b7e665204b77af6 25892 cafeobj-mode_1.6.0-2_all.deb
 eddd7f943fbbbbfe72de1f442ab847d189b6fc2059ee9ba478cb7e06947fd7b7 5174 cafeobj_1.6.0-2_amd64.buildinfo
 783334c0e0b6627ae4a1626a95fd45e94cab941b1d350b5f608701d4d73d66cd 12666244 cafeobj_1.6.0-2_amd64.deb
Files:
 50888283e93c765af584bc6b50ddc221 25892 science optional cafeobj-mode_1.6.0-2_all.deb
 9ce84a128d9f89a7f8f1efd7a47f59f6 5174 science optional cafeobj_1.6.0-2_amd64.buildinfo
 3c1eba88387bf32fbfdb5caf65db4612 12666244 science optional cafeobj_1.6.0-2_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: cafeobj
Binary: cafeobj cafeobj-mode
Architecture: all amd64
Version: 1.6.0-2
Checksums-Md5:
 50888283e93c765af584bc6b50ddc221 25892 cafeobj-mode_1.6.0-2_all.deb
 3c1eba88387bf32fbfdb5caf65db4612 12666244 cafeobj_1.6.0-2_amd64.deb
Checksums-Sha1:
 f151b9121205715d4563fae30ef1a901595e0b5c 25892 cafeobj-mode_1.6.0-2_all.deb
 b9c2cfc39aea9876753aad986030928d7beb2782 12666244 cafeobj_1.6.0-2_amd64.deb
Checksums-Sha256:
 b90e5a6211af1e8542b8ffddfbca2a6f326678765c422f376b7e665204b77af6 25892 cafeobj-mode_1.6.0-2_all.deb
 783334c0e0b6627ae4a1626a95fd45e94cab941b1d350b5f608701d4d73d66cd 12666244 cafeobj_1.6.0-2_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 03:47:11 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-9 (= 1:9.0.1-8),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-9-dev (= 1:9.0.1-8),
 libclang-cpp9 (= 1:9.0.1-8),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm9 (= 1:9.0.1-8),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libquadmath0 (= 10-20200222-1),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 sbcl (= 2:2.0.1-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1582057660"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


cafeobj-mode_1.6.0-2_all.deb
----------------------------

 new Debian package, version 2.0.
 size 25892 bytes: control archive=832 bytes.
      42 bytes,     1 lines      conffiles            
     584 bytes,    16 lines      control              
     385 bytes,     5 lines      md5sums              
 Package: cafeobj-mode
 Source: cafeobj
 Version: 1.6.0-2
 Architecture: all
 Maintainer: Norbert Preining <norbert@preining.info>
 Installed-Size: 122
 Depends: emacsen-common (>= 2.0.8)
 Recommends: cafeobj
 Section: science
 Priority: optional
 Homepage: http://cafeobj.org/
 Description: Emacs major mode for editing CafeOBJ source code
  cafeobj-mode provides syntax highlighting and indentation for CafeOBJ
  source code inside emacs.  Included is the ability to interact with a
  CafeOBJ interpreter inside emacs and to send expressions from CafeOBJ
  source files to the running interpreter.

drwxr-xr-x root/root         0 2020-02-18 20:27 ./
drwxr-xr-x root/root         0 2020-02-18 20:27 ./etc/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./etc/emacs/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./etc/emacs/site-start.d/
-rw-r--r-- root/root       527 2020-02-18 20:27 ./etc/emacs/site-start.d/50cafeobj-mode.el
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/emacsen-common/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/emacsen-common/packages/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/emacsen-common/packages/compat/
-rw-r--r-- root/root         2 2020-02-18 20:27 ./usr/lib/emacsen-common/packages/compat/cafeobj-mode
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/doc/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/doc/cafeobj-mode/
-rw-r--r-- root/root      2919 2020-01-20 04:57 ./usr/share/doc/cafeobj-mode/README.md
-rw-r--r-- root/root      1251 2020-02-18 20:27 ./usr/share/doc/cafeobj-mode/changelog.Debian.gz
-rw-r--r-- root/root      4858 2020-02-18 20:27 ./usr/share/doc/cafeobj-mode/copyright
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/emacs/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/emacs/site-lisp/
-rw-r--r-- root/root     96113 2020-02-18 20:27 ./usr/share/emacs/site-lisp/cafeobj-mode.el


cafeobj_1.6.0-2_amd64.deb
-------------------------

 new Debian package, version 2.0.
 size 12666244 bytes: control archive=2752 bytes.
    1413 bytes,    30 lines      control              
    4739 bytes,    65 lines      md5sums              
 Package: cafeobj
 Version: 1.6.0-2
 Architecture: amd64
 Maintainer: Norbert Preining <norbert@preining.info>
 Installed-Size: 56177
 Depends: libc6 (>= 2.29), zlib1g (>= 1:1.1.4)
 Section: science
 Priority: optional
 Homepage: http://cafeobj.org/
 Description: new generation algebraic specification and programming language
  CafeOBJ is a most advanced formal specification language which
  inherits many advanced features (e.g. flexible mix-fix syntax,
  powerful and clear typing system with ordered sorts, parameteric
  modules and views for instantiating the parameters, and module
  expressions, etc.) from OBJ (or more exactly OBJ3) algebraic
  specification language.
  .
  CafeOBJ is a language for writing formal (i.e. mathematical)
  specifications of models for wide varieties of software and systems,
  and verifying properties of them. CafeOBJ implements equational logic
  by rewriting and can be used as a powerful interactive theorem proving
  system. Specifiers can write proof scores also in CafeOBJ and doing
  proofs by executing the proof scores.
  .
  CafeOBJ has state-of-art rigorous logical semantics based on
  institutions. The CafeOBJ cube shows the structure of the various
  logics underlying the combination of the various paradigms implemented
  by the language. Proof scores in CafeOBJ are also based on institution
  based rigorous semantics, and can be constructed using a complete set
  of proof rules.

drwxr-xr-x root/root         0 2020-02-18 20:27 ./
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/bin/
-rwxr-xr-x root/root      5442 2020-02-18 20:27 ./usr/bin/cafeobj
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/cafeobj-1.6/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/lib/cafeobj-1.6/sbcl/
-rwxr-xr-x root/root  54602384 2020-02-18 20:27 ./usr/lib/cafeobj-1.6/sbcl/cafeobj.sbcl
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/cafeobj-1.6/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/
-rw-r--r-- root/root      1785 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/2tuple.cafe
-rw-r--r-- root/root      1939 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/3tuple.cafe
-rw-r--r-- root/root      2103 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/4tuple.cafe
-rw-r--r-- root/root      2211 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/base_bool.cafe
-rw-r--r-- root/root       446 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/bool+.cafe
-rw-r--r-- root/root      3993 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/bool.cafe
-rw-r--r-- root/root      3705 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/character.cafe
-rw-r--r-- root/root      2622 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/eql.cafe
-rw-r--r-- root/root      3600 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/float.cafe
-rw-r--r-- root/root     14031 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/fopl.cafe
-rw-r--r-- root/root      3077 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/identical.cafe
-rw-r--r-- root/root      3073 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/int.cafe
-rw-r--r-- root/root     15900 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/metalevel.cafe
-rw-r--r-- root/root      3131 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/nat.cafe
-rw-r--r-- root/root      4823 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/ntruth.cafe
-rw-r--r-- root/root      2863 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/nznat.cafe
-rw-r--r-- root/root      1635 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/qid.cafe
-rw-r--r-- root/root      2933 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/rat.cafe
-rw-r--r-- root/root     15409 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/rwl.cafe
-rw-r--r-- root/root      3593 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/string.cafe
-rw-r--r-- root/root      2407 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/sys_bool.cafe
-rw-r--r-- root/root      5351 2020-02-18 20:27 ./usr/share/cafeobj-1.6/lib/truth.cafe
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/cafeobj-1.6/prelude/
-rw-r--r-- root/root      2343 2020-02-18 20:27 ./usr/share/cafeobj-1.6/prelude/std.bin
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/doc/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/doc/cafeobj/
-rw-r--r-- root/root      2919 2020-01-20 04:57 ./usr/share/doc/cafeobj/README.md
-rw-r--r-- root/root     82094 2020-02-18 20:27 ./usr/share/doc/cafeobj/binspect.pdf
-rw-r--r-- root/root      1591 2020-02-18 20:27 ./usr/share/doc/cafeobj/cafe-citp.txt.gz
-rw-r--r-- root/root     18258 2020-02-18 20:27 ./usr/share/doc/cafeobj/cafeobj-logo-small.png
-rw-r--r-- root/root    200119 2020-02-18 20:27 ./usr/share/doc/cafeobj/cafeobj-logo.png
-rw-r--r-- root/root     22665 2020-02-18 20:27 ./usr/share/doc/cafeobj/cafeobj-mode.el.gz
-rw-r--r-- root/root      1251 2020-02-18 20:27 ./usr/share/doc/cafeobj/changelog.Debian.gz
-rw-r--r-- root/root    213061 2020-02-18 20:27 ./usr/share/doc/cafeobj/citp.pdf
-rw-r--r-- root/root      4858 2020-02-18 20:27 ./usr/share/doc/cafeobj/copyright
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/
-rw-r--r-- root/root      4634 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/atm.mod.gz
-rw-r--r-- root/root      3001 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/bag.mod
-rw-r--r-- root/root      1677 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/bank-account.mod.gz
-rw-r--r-- root/root      1628 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/blist.mod
-rw-r--r-- root/root      1476 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/bset.mod.gz
-rw-r--r-- root/root      2492 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/counter.mod
-rw-r--r-- root/root      1466 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/cws.mod.gz
-rw-r--r-- root/root      1529 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/debt-red.mod.gz
-rw-r--r-- root/root      1189 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/flag.mod
-rw-r--r-- root/root      3510 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/hss.mod
-rw-r--r-- root/root      1583 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/integer.mod
-rw-r--r-- root/root       958 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/list.mod
-rw-r--r-- root/root      1597 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/monoid.mod.gz
-rw-r--r-- root/root      1145 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/nat-omega.mod
-rw-r--r-- root/root      2407 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/nnat-hsa.mod
-rw-r--r-- root/root       569 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/nnat-rwl.mod
-rw-r--r-- root/root      1468 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/path.mod
-rw-r--r-- root/root      1578 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/sieve.mod
-rw-r--r-- root/root       738 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/simple-nat.mod
-rw-r--r-- root/root      1749 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/sorting.mod.gz
-rw-r--r-- root/root      3786 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/tel.mod
-rw-r--r-- root/root      1682 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/ubuffer.mod.gz
-rw-r--r-- root/root      1560 2020-02-18 20:27 ./usr/share/doc/cafeobj/examples/watch.mod.gz
-rw-r--r-- root/root    120999 2020-02-18 20:27 ./usr/share/doc/cafeobj/interp.pdf
-rw-r--r-- root/root   1029319 2020-02-18 20:27 ./usr/share/doc/cafeobj/manual.pdf
-rw-r--r-- root/root    146514 2020-02-18 20:27 ./usr/share/doc/cafeobj/namespace.pdf
-rw-r--r-- root/root    440944 2020-02-18 20:27 ./usr/share/doc/cafeobj/pnguide.pdf
-rw-r--r-- root/root    180781 2020-02-18 20:27 ./usr/share/doc/cafeobj/reference-manual.pdf
-rw-r--r-- root/root    130631 2020-02-18 20:27 ./usr/share/doc/cafeobj/search-predicate.pdf
-rw-r--r-- root/root    122162 2020-02-18 20:27 ./usr/share/doc/cafeobj/syntax.pdf
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/man/
drwxr-xr-x root/root         0 2020-02-18 20:27 ./usr/share/man/man1/
-rw-r--r-- root/root      1420 2020-02-18 20:27 ./usr/share/man/man1/cafeobj.1.gz


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 150268
Build-Time: 173
Distribution: unstable
Host Architecture: amd64
Install-Time: 26
Job: cafeobj_1.6.0-2
Machine Architecture: amd64
Package: cafeobj
Package-Time: 266
Source-Version: 1.6.0-2
Space: 150268
Status: successful
Version: 1.6.0-2
--------------------------------------------------------------------------------
Finished at 2020-02-25T03:47:12Z
Build needed 00:04:26, 150268k disk space
DC-Status: OK 277.170163407s
DC-Time-Estimation: 277.170163407 versus expected 89 (r/m: 2.1142714989550564 ; m: 89.0)
