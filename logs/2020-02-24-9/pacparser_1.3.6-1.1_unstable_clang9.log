DC-Build-Header: pacparser 1.3.6-1.1 / 2020-02-25 04:45:40 +0000
DC-Task: type:rebuild-binarch-only source:pacparser version:1.3.6-1.1 chroot:unstable esttime:77 logfile:/tmp/pacparser_1.3.6-1.1_unstable_clang9.log modes:clang9:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang9 pacparser_1.3.6-1.1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-9-232.eu-central-1.compute.internal

+==============================================================================+
| pacparser 1.3.6-1.1 (amd64)                  Tue, 25 Feb 2020 04:45:40 +0000 |
+==============================================================================+

Package: pacparser
Version: 1.3.6-1.1
Source Version: 1.3.6-1.1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-9d6b3ed7-16f4-4872-ba01-6d45bd854fea' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang9
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=9
+ echo 'Install of clang-9'
Install of clang-9
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6572 kB in 3s (1908 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-9 libomp-9-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc4 libomp5-9 libstdc++-8-dev libz3-4
Suggested packages:
  clang-9-doc libomp-9-doc libstdc++-8-doc
Recommended packages:
  llvm-9-dev python3
The following NEW packages will be installed:
  clang-9 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-9-dev libomp5-9
  libstdc++-8-dev libz3-4
0 upgraded, 21 newly installed, 0 to remove and 2 not upgraded.
Need to get 43.9 MB of archives.
After this operation, 237 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm9 amd64 1:9.0.1-8 [15.0 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp9 amd64 1:9.0.1-8 [8429 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-9-dev amd64 1:9.0.1-8 [3727 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-9 amd64 1:9.0.1-8 [1156 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp5-9 amd64 1:9.0.1-8 [333 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp-9-dev amd64 1:9.0.1-8 [66.2 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 43.9 MB in 2s (20.1 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm9:amd64.
Preparing to unpack .../03-libllvm9_1%3a9.0.1-8_amd64.deb ...
Unpacking libllvm9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libclang-cpp9.
Preparing to unpack .../04-libclang-cpp9_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-cpp9 (1:9.0.1-8) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../05-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../06-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../07-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../08-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../09-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../10-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../11-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../12-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../13-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../14-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../15-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-9-dev.
Preparing to unpack .../16-libclang-common-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-common-9-dev (1:9.0.1-8) ...
Selecting previously unselected package clang-9.
Preparing to unpack .../17-clang-9_1%3a9.0.1-8_amd64.deb ...
Unpacking clang-9 (1:9.0.1-8) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../18-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-9:amd64.
Preparing to unpack .../19-libomp5-9_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp5-9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libomp-9-dev.
Preparing to unpack .../20-libomp-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp-9-dev (1:9.0.1-8) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-9:amd64 (1:9.0.1-8) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libomp-9-dev (1:9.0.1-8) ...
Setting up libllvm9:amd64 (1:9.0.1-8) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libclang-cpp9 (1:9.0.1-8) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-9-dev (1:9.0.1-8) ...
Setting up clang-9 (1:9.0.1-8) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-9 g++-4.6
+ ln -s clang-9 gcc-4.6
+ ln -s clang-9 cpp-4.6
+ ln -s clang-9 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-9 g++-4.7
+ ln -s clang-9 gcc-4.7
+ ln -s clang-9 cpp-4.7
+ ln -s clang-9 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-9 g++-4.8
+ ln -s clang-9 gcc-4.8
+ ln -s clang-9 cpp-4.8
+ ln -s clang-9 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-9 g++-4.9
+ ln -s clang-9 gcc-4.9
+ ln -s clang-9 cpp-4.9
+ ln -s clang-9 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-9 g++-5
+ ln -s clang-9 gcc-5
+ ln -s clang-9 cpp-5
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-5 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-9 g++-6
+ ln -s clang-9 gcc-6
+ ln -s clang-9 cpp-6
+ ln -s clang-9 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-9 g++-7
+ ln -s clang-9 gcc-7
+ ln -s clang-9 cpp-7
+ ln -s clang-9 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-7 hold'
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-9 g++-8
+ ln -s clang-9 gcc-8
+ ln -s clang-9 cpp-8
+ ln -s clang-9 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-8 hold'
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-9 g++-9
+ ln -s clang-9 gcc-9
+ ln -s clang-9 cpp-9
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-9 g++-10
+ ln -s clang-9 gcc-10
+ ln -s clang-9 cpp-10
+ ln -s clang-9 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/pacparser-KrvcnZ
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang9'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/pacparser-KrvcnZ/resolver-VgRwMl' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (5393 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
Need to get 911 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main pacparser 1.3.6-1.1 (dsc) [1944 B]
Get:2 http://127.0.0.1:12990/debian sid/main pacparser 1.3.6-1.1 (tar) [905 kB]
Get:3 http://127.0.0.1:12990/debian sid/main pacparser 1.3.6-1.1 (diff) [3944 B]
Fetched 911 kB in 0s (7193 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/pacparser-KrvcnZ/pacparser-1.3.6' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/pacparser-KrvcnZ' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 5), python-dev, python3-all-dev, dh-python, build-essential, fakeroot
Filtered Build-Depends: debhelper (>= 5), python-dev, python3-all-dev, dh-python, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [384 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [466 B]
Fetched 1807 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism dwz file gettext
  gettext-base groff-base intltool-debian libarchive-zip-perl libcroco3
  libdebhelper-perl libelf1 libexpat1 libexpat1-dev
  libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libmpdec2 libpipeline1 libpython-dev libpython-stdlib
  libpython2-dev libpython2-stdlib libpython2.7 libpython2.7-dev
  libpython2.7-minimal libpython2.7-stdlib libpython3-all-dev libpython3-dev
  libpython3-stdlib libpython3.7 libpython3.7-dev libpython3.7-minimal
  libpython3.7-stdlib libpython3.8 libpython3.8-dev libpython3.8-minimal
  libpython3.8-stdlib libreadline8 libsigsegv2 libsqlite3-0 libssl1.1
  libsub-override-perl libtool libuchardet0 libxml2 m4 man-db mime-support
  po-debconf python python-dev python-minimal python2 python2-dev
  python2-minimal python2.7 python2.7-dev python2.7-minimal python3
  python3-all python3-all-dev python3-dev python3-distutils python3-lib2to3
  python3-minimal python3.7 python3.7-dev python3.7-minimal python3.8
  python3.8-dev python3.8-minimal readline-common sensible-utils zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff
  libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc apparmor less
  www-browser libmail-box-perl python-doc python-tk python2-doc python2.7-doc
  binfmt-support python3-doc python3-tk python3-venv python3.7-venv
  python3.7-doc python3.8-venv python3.8-doc readline-doc
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism dwz file gettext
  gettext-base groff-base intltool-debian libarchive-zip-perl libcroco3
  libdebhelper-perl libelf1 libexpat1 libexpat1-dev
  libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libmpdec2 libpipeline1 libpython-dev libpython-stdlib
  libpython2-dev libpython2-stdlib libpython2.7 libpython2.7-dev
  libpython2.7-minimal libpython2.7-stdlib libpython3-all-dev libpython3-dev
  libpython3-stdlib libpython3.7 libpython3.7-dev libpython3.7-minimal
  libpython3.7-stdlib libpython3.8 libpython3.8-dev libpython3.8-minimal
  libpython3.8-stdlib libreadline8 libsigsegv2 libsqlite3-0 libssl1.1
  libsub-override-perl libtool libuchardet0 libxml2 m4 man-db mime-support
  po-debconf python python-dev python-minimal python2 python2-dev
  python2-minimal python2.7 python2.7-dev python2.7-minimal python3
  python3-all python3-all-dev python3-dev python3-distutils python3-lib2to3
  python3-minimal python3.7 python3.7-dev python3.7-minimal python3.8
  python3.8-dev python3.8-minimal readline-common
  sbuild-build-depends-main-dummy sensible-utils zlib1g-dev
0 upgraded, 85 newly installed, 0 to remove and 0 not upgraded.
Need to get 157 MB of archives.
After this operation, 367 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [892 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libpython2.7-minimal amd64 2.7.17-1+b1 [395 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 python2.7-minimal amd64 2.7.17-1+b1 [1342 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 python2-minimal amd64 2.7.17-2 [41.4 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 python-minimal amd64 2.7.17-2 [21.1 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libssl1.1 amd64 1.1.1d-2 [1540 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 mime-support all 3.64 [37.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.2.9-1 [94.3 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.0-3 [72.5 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.0-3 [160 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.31.1-3 [661 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libpython2.7-stdlib amd64 2.7.17-1+b1 [1886 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 python2.7 amd64 2.7.17-1+b1 [309 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libpython2-stdlib amd64 2.7.17-2 [20.9 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libpython-stdlib amd64 2.7.17-2 [20.9 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 python2 amd64 2.7.17-2 [41.7 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 python amd64 2.7.17-2 [22.9 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-minimal amd64 3.7.6-1+b1 [591 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 python3.7-minimal amd64 3.7.6-1+b1 [1813 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.7.5-3 [36.8 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 libmpdec2 amd64 2.4.2-2 [87.2 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-stdlib amd64 3.7.6-1+b1 [1735 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 python3.7 amd64 3.7.6-1+b1 [351 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.7.5-3 [20.2 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.7.5-3 [62.1 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-minimal amd64 3.8.2~rc2-2 [750 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 python3.8-minimal amd64 3.8.2~rc2-2 [1939 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.8.0-1 [78.3 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.8.0-1 [145 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 4.20191017 [94.4 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.2.9-1 [136 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libpython2.7 amd64 2.7.17-1+b1 [1035 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libpython2.7-dev amd64 2.7.17-1+b1 [27.1 MB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 libpython2-dev amd64 2.7.17-2 [21.0 kB]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 libpython-dev amd64 2.7.17-2 [21.0 kB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7 amd64 3.7.6-1+b1 [1484 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-dev amd64 3.7.6-1+b1 [41.4 MB]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dev amd64 3.7.5-3 [20.3 kB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-stdlib amd64 3.8.2~rc2-2 [1665 kB]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8 amd64 3.8.2~rc2-2 [1619 kB]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-dev amd64 3.8.2~rc2-2 [47.3 MB]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dev amd64 3.7.5-3 [1072 B]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 python2.7-dev amd64 2.7.17-1+b1 [292 kB]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 python2-dev amd64 2.7.17-2 [1220 B]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 python-dev amd64 2.7.17-2 [1196 B]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 python3.8 amd64 3.8.2~rc2-2 [409 kB]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 python3-all amd64 3.7.5-3 [1060 B]
Get:81 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2 [190 kB]
Get:82 http://127.0.0.1:12990/debian sid/main amd64 python3.7-dev amd64 3.7.6-1+b1 [518 kB]
Get:83 http://127.0.0.1:12990/debian sid/main amd64 python3-dev amd64 3.7.5-3 [1260 B]
Get:84 http://127.0.0.1:12990/debian sid/main amd64 python3.8-dev amd64 3.8.2~rc2-2 [515 kB]
Get:85 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dev amd64 3.7.5-3 [1076 B]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 157 MB in 7s (23.0 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package libpython2.7-minimal:amd64.
Preparing to unpack .../05-libpython2.7-minimal_2.7.17-1+b1_amd64.deb ...
Unpacking libpython2.7-minimal:amd64 (2.7.17-1+b1) ...
Selecting previously unselected package python2.7-minimal.
Preparing to unpack .../06-python2.7-minimal_2.7.17-1+b1_amd64.deb ...
Unpacking python2.7-minimal (2.7.17-1+b1) ...
Selecting previously unselected package python2-minimal.
Preparing to unpack .../07-python2-minimal_2.7.17-2_amd64.deb ...
Unpacking python2-minimal (2.7.17-2) ...
Selecting previously unselected package python-minimal.
Preparing to unpack .../08-python-minimal_2.7.17-2_amd64.deb ...
Unpacking python-minimal (2.7.17-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../09-libssl1.1_1.1.1d-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.1d-2) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../10-mime-support_3.64_all.deb ...
Unpacking mime-support (3.64) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../11-libexpat1_2.2.9-1_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.9-1) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../12-readline-common_8.0-3_all.deb ...
Unpacking readline-common (8.0-3) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../13-libreadline8_8.0-3_amd64.deb ...
Unpacking libreadline8:amd64 (8.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../14-libsqlite3-0_3.31.1-3_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.31.1-3) ...
Selecting previously unselected package libpython2.7-stdlib:amd64.
Preparing to unpack .../15-libpython2.7-stdlib_2.7.17-1+b1_amd64.deb ...
Unpacking libpython2.7-stdlib:amd64 (2.7.17-1+b1) ...
Selecting previously unselected package python2.7.
Preparing to unpack .../16-python2.7_2.7.17-1+b1_amd64.deb ...
Unpacking python2.7 (2.7.17-1+b1) ...
Selecting previously unselected package libpython2-stdlib:amd64.
Preparing to unpack .../17-libpython2-stdlib_2.7.17-2_amd64.deb ...
Unpacking libpython2-stdlib:amd64 (2.7.17-2) ...
Selecting previously unselected package libpython-stdlib:amd64.
Preparing to unpack .../18-libpython-stdlib_2.7.17-2_amd64.deb ...
Unpacking libpython-stdlib:amd64 (2.7.17-2) ...
Setting up libpython2.7-minimal:amd64 (2.7.17-1+b1) ...
Setting up python2.7-minimal (2.7.17-1+b1) ...
Setting up python2-minimal (2.7.17-2) ...
Selecting previously unselected package python2.
(Reading database ... 15407 files and directories currently installed.)
Preparing to unpack .../python2_2.7.17-2_amd64.deb ...
Unpacking python2 (2.7.17-2) ...
Setting up python-minimal (2.7.17-2) ...
Selecting previously unselected package python.
(Reading database ... 15440 files and directories currently installed.)
Preparing to unpack .../python_2.7.17-2_amd64.deb ...
Unpacking python (2.7.17-2) ...
Selecting previously unselected package libpython3.7-minimal:amd64.
Preparing to unpack .../libpython3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package python3.7-minimal.
Preparing to unpack .../python3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-minimal (3.7.6-1+b1) ...
Setting up libssl1.1:amd64 (1.1.1d-2) ...
Setting up libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Setting up libexpat1:amd64 (2.2.9-1) ...
Setting up python3.7-minimal (3.7.6-1+b1) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 15696 files and directories currently installed.)
Preparing to unpack .../python3-minimal_3.7.5-3_amd64.deb ...
Unpacking python3-minimal (3.7.5-3) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../libmpdec2_2.4.2-2_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-2) ...
Selecting previously unselected package libpython3.7-stdlib:amd64.
Preparing to unpack .../libpython3.7-stdlib_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package python3.7.
Preparing to unpack .../python3.7_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../libpython3-stdlib_3.7.5-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3-minimal (3.7.5-3) ...
Selecting previously unselected package python3.
(Reading database ... 16110 files and directories currently installed.)
Preparing to unpack .../00-python3_3.7.5-3_amd64.deb ...
Unpacking python3 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-minimal:amd64.
Preparing to unpack .../01-libpython3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package python3.8-minimal.
Preparing to unpack .../02-python3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-minimal (3.8.2~rc2-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../03-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../04-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../05-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../06-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../07-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../08-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../09-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../10-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../11-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../12-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../13-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../14-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../15-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../17-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../18-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../19-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../20-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../21-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../22-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../23-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../24-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../25-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../26-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../27-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../28-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../29-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../30-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../31-python3-lib2to3_3.8.0-1_all.deb ...
Unpacking python3-lib2to3 (3.8.0-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../32-python3-distutils_3.8.0-1_all.deb ...
Unpacking python3-distutils (3.8.0-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../33-dh-python_4.20191017_all.deb ...
Unpacking dh-python (4.20191017) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../34-libexpat1-dev_2.2.9-1_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.2.9-1) ...
Selecting previously unselected package libpython2.7:amd64.
Preparing to unpack .../35-libpython2.7_2.7.17-1+b1_amd64.deb ...
Unpacking libpython2.7:amd64 (2.7.17-1+b1) ...
Selecting previously unselected package libpython2.7-dev:amd64.
Preparing to unpack .../36-libpython2.7-dev_2.7.17-1+b1_amd64.deb ...
Unpacking libpython2.7-dev:amd64 (2.7.17-1+b1) ...
Selecting previously unselected package libpython2-dev:amd64.
Preparing to unpack .../37-libpython2-dev_2.7.17-2_amd64.deb ...
Unpacking libpython2-dev:amd64 (2.7.17-2) ...
Selecting previously unselected package libpython-dev:amd64.
Preparing to unpack .../38-libpython-dev_2.7.17-2_amd64.deb ...
Unpacking libpython-dev:amd64 (2.7.17-2) ...
Selecting previously unselected package libpython3.7:amd64.
Preparing to unpack .../39-libpython3.7_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3.7-dev:amd64.
Preparing to unpack .../40-libpython3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../41-libpython3-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-stdlib:amd64.
Preparing to unpack .../42-libpython3.8-stdlib_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8:amd64.
Preparing to unpack .../43-libpython3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8-dev:amd64.
Preparing to unpack .../44-libpython3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../45-libpython3-all-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package python2.7-dev.
Preparing to unpack .../46-python2.7-dev_2.7.17-1+b1_amd64.deb ...
Unpacking python2.7-dev (2.7.17-1+b1) ...
Selecting previously unselected package python2-dev.
Preparing to unpack .../47-python2-dev_2.7.17-2_amd64.deb ...
Unpacking python2-dev (2.7.17-2) ...
Selecting previously unselected package python-dev.
Preparing to unpack .../48-python-dev_2.7.17-2_amd64.deb ...
Unpacking python-dev (2.7.17-2) ...
Selecting previously unselected package python3.8.
Preparing to unpack .../49-python3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8 (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../50-python3-all_3.7.5-3_amd64.deb ...
Unpacking python3-all (3.7.5-3) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../51-zlib1g-dev_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Selecting previously unselected package python3.7-dev.
Preparing to unpack .../52-python3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-dev (3.7.6-1+b1) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../53-python3-dev_3.7.5-3_amd64.deb ...
Unpacking python3-dev (3.7.5-3) ...
Selecting previously unselected package python3.8-dev.
Preparing to unpack .../54-python3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-dev (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../55-python3-all-dev_3.7.5-3_amd64.deb ...
Unpacking python3-all-dev (3.7.5-3) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../56-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Setting up mime-support (3.64) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libsqlite3-0:amd64 (3.31.1-3) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libexpat1-dev:amd64 (2.2.9-1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Setting up python3.8-minimal (3.8.2~rc2-2) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libmpdec2:amd64 (2.4.2-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up readline-common (8.0-3) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up libreadline8:amd64 (8.0-3) ...
Setting up m4 (1.4.18-4) ...
Setting up libpython2.7-stdlib:amd64 (2.7.17-1+b1) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Setting up python3.8 (3.8.2~rc2-2) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Setting up libpython2.7:amd64 (2.7.17-1+b1) ...
Setting up libpython2.7-dev:amd64 (2.7.17-1+b1) ...
Setting up gettext (0.19.8.1-10) ...
Setting up python2.7 (2.7.17-1+b1) ...
Setting up libpython3.7:amd64 (3.7.6-1+b1) ...
Setting up libpython2-stdlib:amd64 (2.7.17-2) ...
Setting up libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up python2 (2.7.17-2) ...
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libpython-stdlib:amd64 (2.7.17-2) ...
Setting up libpython3.8:amd64 (3.8.2~rc2-2) ...
Setting up libpython2-dev:amd64 (2.7.17-2) ...
Setting up python (2.7.17-2) ...
Setting up libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python2.7-dev (2.7.17-1+b1) ...
Setting up python3.7 (3.7.6-1+b1) ...
Setting up libpython3-dev:amd64 (3.7.5-3) ...
Setting up python2-dev (2.7.17-2) ...
Setting up po-debconf (1.0.21) ...
Setting up python3 (3.7.5-3) ...
Setting up python3.7-dev (3.7.6-1+b1) ...
Setting up libpython-dev:amd64 (2.7.17-2) ...
Setting up libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Setting up libpython3-all-dev:amd64 (3.7.5-3) ...
Setting up python3.8-dev (3.8.2~rc2-2) ...
Setting up python3-lib2to3 (3.8.0-1) ...
Setting up python-dev (2.7.17-2) ...
Setting up python3-distutils (3.8.0-1) ...
Setting up dh-python (4.20191017) ...
Setting up python3-all (3.7.5-3) ...
Setting up python3-dev (3.7.5-3) ...
Setting up python3-all-dev (3.7.5-3) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-9_1:9.0.1-8 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-python_4.20191017 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-9-dev_1:9.0.1-8 libclang-cpp9_1:9.0.1-8 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libexpat1_2.2.9-1 libexpat1-dev_2.2.9-1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm9_1:9.0.1-8 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpdec2_2.4.2-2 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-9-dev_1:9.0.1-8 libomp5-9_1:9.0.1-8 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libpython-dev_2.7.17-2 libpython-stdlib_2.7.17-2 libpython2-dev_2.7.17-2 libpython2-stdlib_2.7.17-2 libpython2.7_2.7.17-1+b1 libpython2.7-dev_2.7.17-1+b1 libpython2.7-minimal_2.7.17-1+b1 libpython2.7-stdlib_2.7.17-1+b1 libpython3-all-dev_3.7.5-3 libpython3-dev_3.7.5-3 libpython3-stdlib_3.7.5-3 libpython3.7_3.7.6-1+b1 libpython3.7-dev_3.7.6-1+b1 libpython3.7-minimal_3.7.6-1+b1 libpython3.7-stdlib_3.7.6-1+b1 libpython3.8_3.8.2~rc2-2 libpython3.8-dev_3.8.2~rc2-2 libpython3.8-minimal_3.8.2~rc2-2 libpython3.8-stdlib_3.8.2~rc2-2 libquadmath0_10-20200222-1 libreadline8_8.0-3 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libsqlite3-0_3.31.1-3 libss2_1.45.5-2 libssl1.1_1.1.1d-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mime-support_3.64 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 python_2.7.17-2 python-dev_2.7.17-2 python-minimal_2.7.17-2 python2_2.7.17-2 python2-dev_2.7.17-2 python2-minimal_2.7.17-2 python2.7_2.7.17-1+b1 python2.7-dev_2.7.17-1+b1 python2.7-minimal_2.7.17-1+b1 python3_3.7.5-3 python3-all_3.7.5-3 python3-all-dev_3.7.5-3 python3-dev_3.7.5-3 python3-distutils_3.8.0-1 python3-lib2to3_3.8.0-1 python3-minimal_3.7.5-3 python3.7_3.7.6-1+b1 python3.7-dev_3.7.6-1+b1 python3.7-minimal_3.7.6-1+b1 python3.8_3.8.2~rc2-2 python3.8-dev_3.8.2~rc2-2 python3.8-minimal_3.8.2~rc2-2 readline-common_8.0-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2 zlib1g-dev_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: pacparser
Binary: libpacparser1, libpacparser-dev, python-pacparser, python3-pacparser
Architecture: any
Version: 1.3.6-1.1
Maintainer: Manu Garg <manugarg@gmail.com>
Uploaders: Andrew Pollock <apollock@debian.org>
Standards-Version: 3.9.6
Build-Depends: debhelper (>= 5), python-dev, python3-all-dev, dh-python
Package-List:
 libpacparser-dev deb libdevel extra arch=any
 libpacparser1 deb libs extra arch=any
 python-pacparser deb python extra arch=any
 python3-pacparser deb python extra arch=any
Checksums-Sha1:
 b9e795b670414241ce4d24afe5eba394c563739b 904638 pacparser_1.3.6.orig.tar.gz
 3e8eeb436cd6499000eaaedf887a6e5cbabe46ab 3944 pacparser_1.3.6-1.1.debian.tar.xz
Checksums-Sha256:
 503b0c47c713433008352b498118e2c01e98250a9d7cdf4a009662420be0636d 904638 pacparser_1.3.6.orig.tar.gz
 3c6f82fe5d03e9395d6e935474800196a541eb5510e96929617971a8f4824ac2 3944 pacparser_1.3.6-1.1.debian.tar.xz
Files:
 e188e18f415aa9fc2035006119ad74b2 904638 pacparser_1.3.6.orig.tar.gz
 6b1b4eea2db9da3300d50daa78e677f8 3944 pacparser_1.3.6-1.1.debian.tar.xz

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBCAAGBQJWk/9GAAoJEHjX3vua1Zrxr3gP/3HyPWNp50LHo+lMZfJiNsgm
isuso2cpJQGC4ruatHx2g53NWj7qiz2yfICpH4ICNoXHroY8c6C0reBP2Zhuqx6o
S9u724546cgWsbyBaxuy5kRA6ReH1v1XmNf1QoS1lRNugbUsWewi8foHHt6fXIs/
DT3cMI56lGfPT0+PItG2jAsY1KXzy5yvW0usgef0TwOTPi2mUYYarv8kAAi9CUpx
yeEAQ/RpO8N+0+311g2gH3vf45945mJbdZM0aBwVp5GaqMYQ84wa3aJ2yR12Iash
OxeQk99HHUxnSp6D1Nc6jBZWzZleUfALvh/A1Eb84oFGavs2rIVCa8JZ9l89kCL+
70u+duGM/JRSMSoJkHDwZ9QJ5JY9TB21ABUq4nkQx+t1SsLQA3a3pgFQZvY9y2ho
NAyDKfIFIby+nIVHwQYO+JPkmMX34ZIbOMqxaH+caiBnWTmxaHotykyIYsS04hLf
YDxRrZi/ZFLOkaxtFMrttNQP/h/WFFj2fsCse37r2PpGRJr2YOIkkj5p0/JG/emM
BB89pJe6HJftJINY25KwGbrPZW9BJel+9B3vs7IaWrP1hXYCPJknVYzZwiRpni+V
mUnctdKWhOo1TUulgHeJ+1Jlrua0wxBMH44vVvEf5jDfytlkCzXdZgOywVl8erGY
NE+VVW122+WiyfJ4D183
=D4Ai
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Mon Jan 11 19:15:18 2016 UTC
gpgv:                using RSA key 78D7DEFB9AD59AF1
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./pacparser_1.3.6-1.1.dsc
dpkg-source: info: extracting pacparser in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking pacparser_1.3.6.orig.tar.gz
dpkg-source: info: unpacking pacparser_1.3.6-1.1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-9d6b3ed7-16f4-4872-ba01-6d45bd854fea
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package pacparser
dpkg-buildpackage: info: source version 1.3.6-1.1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Scott Kitterman <scott@kitterman.com>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh_testdir
dh_testroot
rm -f build-stamp
rm -rf src/pymod/build/
/usr/bin/make -C src clean
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
rm -f libpacparser.so libpacparser.so.1 libjs.a pacparser.o pactester pymod/pacparser_o_buildstamp jsapi_buildstamp
make[1]: git: Command not found
cd pymod && python setup.py clean --all
running clean
'build/lib.linux-x86_64-2.7' does not exist -- can't clean it
'build/bdist.linux-x86_64' does not exist -- can't clean it
'build/scripts-2.7' does not exist -- can't clean it
cd spidermonkey && /usr/bin/make clean
make[2]: Entering directory '/<<PKGBUILDDIR>>/src/spidermonkey'
rm -rf js-buildstamp
rm -rf js
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src/spidermonkey'
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
dh_clean 
dh_clean: warning: Compatibility levels before 9 are deprecated (level 5 in use)
 debian/rules build
NO_INTERNET=yes /usr/bin/make -C src
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
tar xzvf spidermonkey/js-?.?.?.tar.gz -C spidermonkey
make[1]: git: Command not found
js/
js/README
js/src/
js/src/.cvsignore
js/src/config/
js/src/config.mk
js/src/js.c
js/src/js.mak
js/src/js.mdp
js/src/js.msg
js/src/js.pkg
js/src/js3240.rc
js/src/jsapi.c
js/src/jsapi.h
js/src/jsarena.c
js/src/jsarena.h
js/src/jsarray.c
js/src/jsarray.h
js/src/jsatom.c
js/src/jsatom.h
js/src/jsbit.h
js/src/jsbool.c
js/src/jsbool.h
js/src/jsclist.h
js/src/jscntxt.c
js/src/jscntxt.h
js/src/jscompat.h
js/src/jsconfig.h
js/src/jsconfig.mk
js/src/jscpucfg.c
js/src/jscpucfg.h
js/src/jsdate.c
js/src/jsdate.h
js/src/jsdbgapi.c
js/src/jsdbgapi.h
js/src/jsdhash.c
js/src/jsdhash.h
js/src/jsdtoa.c
js/src/jsdtoa.h
js/src/jsemit.c
js/src/jsemit.h
js/src/jsexn.c
js/src/jsexn.h
js/src/jsfile.c
js/src/jsfile.h
js/src/jsfile.msg
js/src/jsfun.c
js/src/jsfun.h
js/src/jsgc.c
js/src/jsgc.h
js/src/jshash.c
js/src/jshash.h
js/src/jsify.pl
js/src/jsinterp.c
js/src/jsinterp.h
js/src/jsiter.c
js/src/jsiter.h
js/src/jskeyword.tbl
js/src/jskwgen.c
js/src/jslibmath.h
js/src/jslock.c
js/src/jslock.h
js/src/jslocko.asm
js/src/jslog2.c
js/src/jslong.c
js/src/jslong.h
js/src/jsmath.c
js/src/jsmath.h
js/src/jsnum.c
js/src/jsnum.h
js/src/jsobj.c
js/src/jsobj.h
js/src/jsopcode.c
js/src/jsopcode.h
js/src/jsopcode.tbl
js/src/jsOS240.def
js/src/jsosdep.h
js/src/jsotypes.h
js/src/jsparse.c
js/src/jsparse.h
js/src/jsprf.c
js/src/jsprf.h
js/src/jsproto.tbl
js/src/jsprvtd.h
js/src/jspubtd.h
js/src/jsregexp.c
js/src/jsregexp.h
js/src/jsscan.c
js/src/jsscan.h
js/src/jsscope.c
js/src/jsscope.h
js/src/jsscript.c
js/src/jsscript.h
js/src/jsshell.msg
js/src/jsstddef.h
js/src/jsstr.c
js/src/jsstr.h
js/src/jstypes.h
js/src/jsutil.c
js/src/jsutil.h
js/src/jsxdrapi.c
js/src/jsxdrapi.h
js/src/jsxml.c
js/src/jsxml.h
js/src/lock_SunOS.s
js/src/Makefile.in
js/src/Makefile.ref
js/src/perfect.js
js/src/plify_jsdhash.sed
js/src/prmjtime.c
js/src/prmjtime.h
js/src/README.html
js/src/resource.h
js/src/rules.mk
js/src/SpiderMonkey.rsp
js/src/win32.order
js/src/Y.js
js/src/config/AIX4.1.mk
js/src/config/AIX4.2.mk
js/src/config/AIX4.3.mk
js/src/config/CVS/
js/src/config/Darwin.mk
js/src/config/Darwin1.3.mk
js/src/config/Darwin1.4.mk
js/src/config/Darwin5.2.mk
js/src/config/Darwin5.3.mk
js/src/config/dgux.mk
js/src/config/HP-UXB.10.10.mk
js/src/config/HP-UXB.10.20.mk
js/src/config/HP-UXB.11.00.mk
js/src/config/IRIX.mk
js/src/config/IRIX5.3.mk
js/src/config/IRIX6.1.mk
js/src/config/IRIX6.2.mk
js/src/config/IRIX6.3.mk
js/src/config/IRIX6.5.mk
js/src/config/Linux_All.mk
js/src/config/Mac_OS10.0.mk
js/src/config/OSF1V4.0.mk
js/src/config/OSF1V5.0.mk
js/src/config/SunOS4.1.4.mk
js/src/config/SunOS5.3.mk
js/src/config/SunOS5.4.mk
js/src/config/SunOS5.5.1.mk
js/src/config/SunOS5.5.mk
js/src/config/SunOS5.6.mk
js/src/config/SunOS5.7.mk
js/src/config/SunOS5.8.mk
js/src/config/SunOS5.9.mk
js/src/config/WINNT4.0.mk
js/src/config/WINNT5.0.mk
js/src/config/WINNT5.1.mk
js/src/config/WINNT5.2.mk
js/src/config/CVS/Entries
js/src/config/CVS/Repository
js/src/config/CVS/Root
js/src/config/CVS/Tag
sed -i -e 's:\(shell uname -s | sed /\\ /s//_/\):\1 | sed s,GNU.*,Linux,:g' spidermonkey/js/src/config.mk
cd spidermonkey && SMCFLAGS="-fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy" /usr/bin/make jsapi
make[1]: git: Command not found
make[2]: Entering directory '/<<PKGBUILDDIR>>/src/spidermonkey'
mkdir -p js/src/Linux_All_DBG.OBJ
CFLAGS="-fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy" /usr/bin/make -C js/src -f Makefile.ref libjs.a
make[3]: Entering directory '/<<PKGBUILDDIR>>/src/spidermonkey/js/src'
cat: ../../dist/Linux_All_DBG.OBJ/nspr/Version: No such file or directory
make[3]: Circular jscpucfg.h <- Linux_All_DBG.OBJ/jsautocfg.h dependency dropped.
gcc -o Linux_All_DBG.OBJ/jscpucfg.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jscpucfg.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jscpucfg.c:44:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jscpucfg Linux_All_DBG.OBJ/jscpucfg.o
make[3]: Circular Linux_All_DBG.OBJ/jsautocfg.h <- Linux_All_DBG.OBJ/jsautocfg.h dependency dropped.
rm -f Linux_All_DBG.OBJ/jsautocfg.h
Linux_All_DBG.OBJ/jscpucfg > Linux_All_DBG.OBJ/jsautocfg.h
gcc -o Linux_All_DBG.OBJ/jsapi.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsapi.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsapi.c:45:
In file included from /usr/include/ctype.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsapi.c:267:39: warning: incompatible pointer types passing 'struct __va_list_tag **' to parameter of type 'va_list *' (aka '__builtin_va_list *') [-Wincompatible-pointer-types]
                                      JS_ADDRESSOF_VA_LIST(ap))) {
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
jsapi.c:96:34: note: expanded from macro 'JS_ADDRESSOF_VA_LIST'
#define JS_ADDRESSOF_VA_LIST(ap) (&(ap))
                                 ^~~~~~~
jsapi.c:137:44: note: passing argument to parameter 'app' here
                     jsval **vpp, va_list *app)
                                           ^
jsapi.c:370:39: warning: incompatible pointer types passing 'struct __va_list_tag **' to parameter of type 'va_list *' (aka '__builtin_va_list *') [-Wincompatible-pointer-types]
                                      JS_ADDRESSOF_VA_LIST(ap))) {
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
jsapi.c:96:34: note: expanded from macro 'JS_ADDRESSOF_VA_LIST'
#define JS_ADDRESSOF_VA_LIST(ap) (&(ap))
                                 ^~~~~~~
jsapi.c:137:44: note: passing argument to parameter 'app' here
                     jsval **vpp, va_list *app)
                                           ^
jsapi.c:465:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:627:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (JSVAL_IS_NUMBER(v)) {
               ^~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:1220:59: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!OBJ_DEFINE_PROPERTY(cx, obj, ATOM_TO_JSID(atom), JSVAL_VOID,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsapi.c:1427:65: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        return OBJ_DEFINE_PROPERTY(cx, obj, ATOM_TO_JSID(atom), JSVAL_VOID,
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsapi.c:1521:59: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        !OBJ_DEFINE_PROPERTY(cx, obj, ATOM_TO_JSID(atom), JSVAL_VOID,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsapi.c:2055:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(v)) {
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:2295:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(v))
         ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:2575:48: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        ok = DefineProperty(cx, obj, ps->name, JSVAL_VOID,
                                               ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:2674:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        return JSVAL_VOID;
               ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3210:46: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            JS_SetReservedSlot(cx, obj, key, JSVAL_VOID);
                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3231:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(num_properties)) {
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3295:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(v))
        ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3317:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(!JSVAL_IS_VOID(v));
    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsapi.c:3427:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *idp = JSVAL_VOID;
                   ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3438:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *idp = JSVAL_VOID;
                   ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:3492:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    *vp = OBJ_GET_REQUIRED_SLOT(cx, obj, slot);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsobj.h:98:8: note: expanded from macro 'OBJ_GET_REQUIRED_SLOT'
     : JSVAL_VOID)
       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsapi.c:4861:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    cx->exception = JSVAL_VOID;
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
21 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsarena.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsarena.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsarena.c:46:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsarray.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsarray.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsarray.c:45:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsarray.c:89:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(id)) {
        ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:135:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(v)) {
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:180:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_INT(tvr.u.value)) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:231:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *idp = JSVAL_VOID;
                   ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:263:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (id == JSVAL_VOID) {
                  ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:265:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *vp = JSVAL_VOID;
                  ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:274:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:297:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(id != JSVAL_VOID);
        ~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsarray.c:313:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (id == JSVAL_VOID)
                  ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:328:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(v == JSVAL_VOID);
        ~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsarray.c:432:28: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (id2 == JSVAL_VOID)
                           ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:598:34: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            (op != TO_SOURCE && (JSVAL_IS_VOID(v) || JSVAL_IS_NULL(v)))) {
                                 ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:767:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(argv[0])) {
        ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:951:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(av != JSVAL_VOID);
    ~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsarray.c:952:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(bv != JSVAL_VOID);
    ~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsarray.c:1054:13: warning: result of comparison of constant 2305843009213693951 with expression of type 'jsuint' (aka 'unsigned int') is always false [-Wtautological-constant-out-of-range-compare]
    if (len > ((size_t) -1) / sizeof(jsval)) {
        ~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsarray.c:1097:28: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (vec[newlen] == JSVAL_VOID) {
                           ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:1132:49: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (!SetArrayElement(cx, obj, newlen++, JSVAL_VOID))
                                                ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:1194:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *rval = JSVAL_VOID;
                ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:1554:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    *rval = INT_TO_JSVAL(-1);
            ^~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:1821:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (!JSVAL_IS_NUMBER(argv[0])) {
                ^~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsarray.c:208:5: warning: unused typedef 'js_static_assert_line_208' [-Wunused-local-typedef]
    JS_STATIC_ASSERT((jsuint)-1 == 4294967295U);
    ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:162:1: note: expanded from here
js_static_assert_line_208
^
24 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsatom.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsatom.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsatom.c:44:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsatom.c:173:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(v))
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsatom.c:782:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(value))
        ^~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
4 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsbool.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsbool.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsbool.c:44:
In file included from ./jstypes.h:416:
In file included from ./jsotypes.h:71:
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsbool.c:201:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v)) {
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsbool.c:215:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (JSVAL_IS_INT(v)) {
               ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
4 warnings generated.
gcc -o Linux_All_DBG.OBJ/jscntxt.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jscntxt.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jscntxt.c:46:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsdate.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsdate.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsdate.c:54:
In file included from /usr/include/ctype.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsdbgapi.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsdbgapi.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsdbgapi.c:45:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsdbgapi.c:397:32: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                             : JSVAL_VOID,
                               ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsdbgapi.c:540:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(id)) {
        ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsdbgapi.c:559:53: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!js_DefineProperty(cx, obj, propid, JSVAL_VOID,
                                                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsdbgapi.c:576:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    : JSVAL_VOID;
                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsdbgapi.c:1107:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            pd->value = JSVAL_VOID;
                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsdbgapi.c:1150:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    pd->alias = JSVAL_VOID;
                ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
8 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsdhash.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsdhash.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsdhash.c:43:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsdhash.c:237:5: warning: unused typedef 'js_static_assert_line_237' [-Wunused-local-typedef]
    JS_CEILING_LOG2(log2, capacity);
    ^
./jsbit.h:91:9: note: expanded from macro 'JS_CEILING_LOG2'
        JS_STATIC_ASSERT(sizeof(unsigned int) == sizeof(JSUint32));           \
        ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:59:1: note: expanded from here
js_static_assert_line_237
^
jsdhash.c:705:9: warning: unused typedef 'js_static_assert_line_705' [-Wunused-local-typedef]
        JS_CEILING_LOG2(ceiling, capacity);
        ^
./jsbit.h:91:9: note: expanded from macro 'JS_CEILING_LOG2'
        JS_STATIC_ASSERT(sizeof(unsigned int) == sizeof(JSUint32));           \
        ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:91:1: note: expanded from here
js_static_assert_line_705
^
4 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsdtoa.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsdtoa.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsdtoa.c:44:
In file included from ./jslibmath.h:49:
In file included from /usr/include/math.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsdtoa.c:608:13: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
        if (!x & 1)
            ^  ~
jsdtoa.c:608:13: note: add parentheses after the '!' to evaluate the bitwise operator first
        if (!x & 1)
            ^
             (    )
jsdtoa.c:608:13: note: add parentheses around left hand side expression to silence this warning
        if (!x & 1)
            ^
            ( )
3 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsemit.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsemit.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsemit.c:48:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsemit.c:1548:27: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                JS_ASSERT(JSVAL_IS_INT(v) && JSVAL_TO_INT(v) >= 0);
                ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsemit.c:1580:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    *vp = JSVAL_VOID;
          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsemit.c:2715:26: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    if (!JSVAL_IS_VOID(v)) {
                         ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsemit.c:2737:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            JS_ASSERT(JSVAL_IS_NUMBER(pn3->pn_val) ||
            ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsemit.c:2743:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_INT(pn3->pn_val)) {
                 ^~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
7 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsexn.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsexn.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsexn.c:46:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsexn.c:371:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(privateValue))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsexn.c:767:47: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        OBJ_SET_SLOT(cx, obj, JSSLOT_PRIVATE, JSVAL_VOID);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:209:70: note: expanded from macro 'OBJ_SET_SLOT'
#define OBJ_SET_SLOT(cx,obj,slot,value) LOCKED_OBJ_SET_SLOT(obj,slot,value)
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
./jsobj.h:161:55: note: expanded from macro 'LOCKED_OBJ_SET_SLOT'
    (OBJ_CHECK_SLOT(obj, slot), (obj)->slots[slot] = (value))
                                                      ^~~~~
jsexn.c:1051:53: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        OBJ_SET_SLOT(cx, protos[i], JSSLOT_PRIVATE, JSVAL_VOID);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:209:70: note: expanded from macro 'OBJ_SET_SLOT'
#define OBJ_SET_SLOT(cx,obj,slot,value) LOCKED_OBJ_SET_SLOT(obj,slot,value)
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
./jsobj.h:161:55: note: expanded from macro 'LOCKED_OBJ_SET_SLOT'
    (OBJ_CHECK_SLOT(obj, slot), (obj)->slots[slot] = (value))
                                                      ^~~~~
jsexn.c:130:5: warning: unused typedef 'js_static_assert_line_130' [-Wunused-local-typedef]
    JS_STATIC_ASSERT(sizeof(const char *) % sizeof(jschar) == 0);
    ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:143:1: note: expanded from here
js_static_assert_line_130
^
jsexn.c:129:5: warning: unused typedef 'js_static_assert_line_129' [-Wunused-local-typedef]
    JS_STATIC_ASSERT(sizeof(JSErrorReport) % sizeof(const char *) == 0);
    ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:141:1: note: expanded from here
js_static_assert_line_129
^
jsexn.c:240:5: warning: unused typedef 'js_static_assert_line_240' [-Wunused-local-typedef]
    JS_STATIC_ASSERT(sizeof(JSStackTraceElem) % sizeof(jsval) == 0);
    ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:154:1: note: expanded from here
js_static_assert_line_240
^
jsexn.c:430:5: warning: unused typedef 'js_static_assert_line_430' [-Wunused-local-typedef]
    JS_STATIC_ASSERT(sizeof(JSAtomState) <= (size_t)(uint16)-1);
    ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:183:1: note: expanded from here
js_static_assert_line_430
^
9 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsfun.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsfun.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsfun.c:45:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsfun.c:125:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(bmapval)) {
        ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:164:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(bmapval))
        ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:203:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    *vp = JSVAL_VOID;
          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:306:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_VOID(bmapval)) {
         ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:307:44: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_SetReservedSlot(cx, argsobj, 0, JSVAL_VOID);
                                           ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:342:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:371:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:405:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:449:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(id)) {
        ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:675:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:712:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:739:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(JSVAL_IS_INT(id));
    ~~~~~~~~~~^~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsfun.c:754:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(JSVAL_IS_INT(id));
    ~~~~~~~~~~^~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsfun.c:908:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                value = JSVAL_VOID;
                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:982:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsfun.c:1654:39: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_NULL(argv[1]) || JSVAL_IS_VOID(argv[1])) {
                                      ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
18 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsgc.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsgc.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsgc.c:52:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsgc.c:317:13: warning: unused typedef 'js_static_assert_line_317' [-Wunused-local-typedef]
            JS_STATIC_ASSERT(2 <= sizeof table->array[0]);
            ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:177:1: note: expanded from here
js_static_assert_line_317
^
3 warnings generated.
gcc -o Linux_All_DBG.OBJ/jshash.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jshash.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jshash.c:44:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsinterp.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsinterp.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsinterp.c:45:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsinterp.c:397:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                *vp = JSVAL_VOID;
                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:611:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (JSVAL_IS_VOID(v))
                    ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:656:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        PRIMITIVE_TO_OBJECT(cx, vp[1], thisp);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:289:20: note: expanded from macro 'PRIMITIVE_TO_OBJECT'
        } else if (JSVAL_IS_INT(v)) {                                         \
                   ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1109:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    frame.rval = JSVAL_VOID;
                 ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1178:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            PRIMITIVE_TO_OBJECT(cx, thisv, thisp);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:289:20: note: expanded from macro 'PRIMITIVE_TO_OBJECT'
        } else if (JSVAL_IS_INT(v)) {                                         \
                   ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1214:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            } else if (JSVAL_IS_INT(thisv)) {
                       ^~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1326:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            PUSH(JSVAL_VOID);
            ~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:1349:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            PUSH(JSVAL_VOID);
            ~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:1594:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    frame.rval = JSVAL_VOID;
                 ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1670:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(id)) {
        ^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1879:33: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (ltag == JSVAL_DOUBLE && JSVAL_IS_INT(rval)) {
                                ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1884:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(lval) && rtag == JSVAL_DOUBLE) {
        ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:1984:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(!JSVAL_IS_INT(idval));
    ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsinterp.c:2123:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    *result = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2346:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            PUSH_OPND(JSVAL_VOID);
            ~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:158:55: note: expanded from macro 'PUSH_OPND'
#define PUSH_OPND(v)    (sp[-depth] = (jsval)pc, PUSH(v))
                                                 ~~~~~^~
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:2614:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_ELEMENT_ID(-2, id);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2925:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_ELEMENT_ID(-1, id);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2980:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(|);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2968:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -1, j);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2980:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(|);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2969:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -2, i);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2984:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(^);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2968:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -1, j);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2984:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(^);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2969:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -2, i);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2988:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(&);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2968:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -1, j);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:2988:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BITWISE_OP(&);
            ^~~~~~~~~~~~~
jsinterp.c:2976:33: note: expanded from macro 'BITWISE_OP'
#define BITWISE_OP(OP)          INTEGER_OP(OP, (void) 0;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2969:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -2, i);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(==, JS_FALSE);
            ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3089:40: note: expanded from macro 'EQUALITY_OP'
            if (JSVAL_IS_NULL(lval) || JSVAL_IS_VOID(lval)) {                 \
                                       ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(==, JS_FALSE);
            ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3090:48: note: expanded from macro 'EQUALITY_OP'
                cond = (JSVAL_IS_NULL(rval) || JSVAL_IS_VOID(rval)) OP 1;     \
                                               ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(==, JS_FALSE);
            ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3091:47: note: expanded from macro 'EQUALITY_OP'
            } else if (JSVAL_IS_NULL(rval) || JSVAL_IS_VOID(rval)) {          \
                                              ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(==, JS_FALSE);
            ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3108:21: note: expanded from macro 'EQUALITY_OP'
                    VALUE_TO_NUMBER(cx, lval, d);                             \
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(==, JS_FALSE);
            ^~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3109:21: note: expanded from macro 'EQUALITY_OP'
                    VALUE_TO_NUMBER(cx, rval, d2);                            \
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3123:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(!=, JS_TRUE);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3089:40: note: expanded from macro 'EQUALITY_OP'
            if (JSVAL_IS_NULL(lval) || JSVAL_IS_VOID(lval)) {                 \
                                       ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3123:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(!=, JS_TRUE);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3090:48: note: expanded from macro 'EQUALITY_OP'
                cond = (JSVAL_IS_NULL(rval) || JSVAL_IS_VOID(rval)) OP 1;     \
                                               ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3123:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(!=, JS_TRUE);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3091:47: note: expanded from macro 'EQUALITY_OP'
            } else if (JSVAL_IS_NULL(rval) || JSVAL_IS_VOID(rval)) {          \
                                              ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3123:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(!=, JS_TRUE);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3108:21: note: expanded from macro 'EQUALITY_OP'
                    VALUE_TO_NUMBER(cx, lval, d);                             \
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3123:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            EQUALITY_OP(!=, JS_TRUE);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3109:21: note: expanded from macro 'EQUALITY_OP'
                    VALUE_TO_NUMBER(cx, rval, d2);                            \
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3170:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<);
            ^~~~~~~~~~~~~~~~
jsinterp.c:2997:27: note: expanded from macro 'RELATIONAL_OP'
            ltmp = lval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3170:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<);
            ^~~~~~~~~~~~~~~~
jsinterp.c:2998:27: note: expanded from macro 'RELATIONAL_OP'
            rtmp = rval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3170:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<);
            ^~~~~~~~~~~~~~~~
jsinterp.c:3015:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, lval, d);                                 \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3170:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<);
            ^~~~~~~~~~~~~~~~
jsinterp.c:3016:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, rval, d2);                                \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3174:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:2997:27: note: expanded from macro 'RELATIONAL_OP'
            ltmp = lval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3174:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:2998:27: note: expanded from macro 'RELATIONAL_OP'
            rtmp = rval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3174:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:3015:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, lval, d);                                 \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3174:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(<=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:3016:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, rval, d2);                                \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3178:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>);
            ^~~~~~~~~~~~~~~~
jsinterp.c:2997:27: note: expanded from macro 'RELATIONAL_OP'
            ltmp = lval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3178:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>);
            ^~~~~~~~~~~~~~~~
jsinterp.c:2998:27: note: expanded from macro 'RELATIONAL_OP'
            rtmp = rval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3178:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>);
            ^~~~~~~~~~~~~~~~
jsinterp.c:3015:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, lval, d);                                 \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3178:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>);
            ^~~~~~~~~~~~~~~~
jsinterp.c:3016:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, rval, d2);                                \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3182:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:2997:27: note: expanded from macro 'RELATIONAL_OP'
            ltmp = lval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3182:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:2998:27: note: expanded from macro 'RELATIONAL_OP'
            rtmp = rval ^ JSVAL_VOID;                                         \
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3182:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:3015:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, lval, d);                                 \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3182:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            RELATIONAL_OP(>=);
            ^~~~~~~~~~~~~~~~~
jsinterp.c:3016:17: note: expanded from macro 'RELATIONAL_OP'
                VALUE_TO_NUMBER(cx, rval, d2);                                \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3189:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            SIGNED_SHIFT_OP(<<);
            ^~~~~~~~~~~~~~~~~~~
jsinterp.c:2977:33: note: expanded from macro 'SIGNED_SHIFT_OP'
#define SIGNED_SHIFT_OP(OP)     INTEGER_OP(OP, j &= 31;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2968:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -1, j);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3189:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            SIGNED_SHIFT_OP(<<);
            ^~~~~~~~~~~~~~~~~~~
jsinterp.c:2977:33: note: expanded from macro 'SIGNED_SHIFT_OP'
#define SIGNED_SHIFT_OP(OP)     INTEGER_OP(OP, j &= 31;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2969:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -2, i);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3193:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            SIGNED_SHIFT_OP(>>);
            ^~~~~~~~~~~~~~~~~~~
jsinterp.c:2977:33: note: expanded from macro 'SIGNED_SHIFT_OP'
#define SIGNED_SHIFT_OP(OP)     INTEGER_OP(OP, j &= 31;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2968:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -1, j);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3193:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            SIGNED_SHIFT_OP(>>);
            ^~~~~~~~~~~~~~~~~~~
jsinterp.c:2977:33: note: expanded from macro 'SIGNED_SHIFT_OP'
#define SIGNED_SHIFT_OP(OP)     INTEGER_OP(OP, j &= 31;)
                                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2969:9: note: expanded from macro 'INTEGER_OP'
        FETCH_INT(cx, -2, i);                                                 \
        ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3200:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_INT(cx, -1, j);
            ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3201:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_UINT(cx, -2, u);
            ^~~~~~~~~~~~~~~~~~~~~
jsinterp.c:236:13: note: expanded from macro 'FETCH_UINT'
        if (JSVAL_IS_INT(v_) && (i_ = JSVAL_TO_INT(v_)) >= 0) {               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3258:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    VALUE_TO_NUMBER(cx, lval, d);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3259:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    VALUE_TO_NUMBER(cx, rval, d2);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3277:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BINARY_OP(-);
            ^~~~~~~~~~~~
jsinterp.c:3269:9: note: expanded from macro 'BINARY_OP'
        FETCH_NUMBER(cx, -1, d2);                                             \
        ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3277:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BINARY_OP(-);
            ^~~~~~~~~~~~
jsinterp.c:3270:9: note: expanded from macro 'BINARY_OP'
        FETCH_NUMBER(cx, -2, d);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3281:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BINARY_OP(*);
            ^~~~~~~~~~~~
jsinterp.c:3269:9: note: expanded from macro 'BINARY_OP'
        FETCH_NUMBER(cx, -1, d2);                                             \
        ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3281:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            BINARY_OP(*);
            ^~~~~~~~~~~~
jsinterp.c:3270:9: note: expanded from macro 'BINARY_OP'
        FETCH_NUMBER(cx, -2, d);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3285:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_NUMBER(cx, -1, d2);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3286:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_NUMBER(cx, -2, d);
            ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3309:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_NUMBER(cx, -1, d2);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3310:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_NUMBER(cx, -2, d);
            ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:216:9: note: expanded from macro 'FETCH_NUMBER'
        VALUE_TO_NUMBER(cx, v_, d);                                           \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3330:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_INT(cx, -1, i);
            ^~~~~~~~~~~~~~~~~~~~
jsinterp.c:222:13: note: expanded from macro 'FETCH_INT'
        if (JSVAL_IS_INT(v_)) {                                               \
            ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3342:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (JSVAL_IS_INT(rval) && (i = JSVAL_TO_INT(rval)) != 0) {
                ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3374:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_NUMBER(rval)) {
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3434:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ELEMENT_OP(-1, ok = OBJ_DELETE_PROPERTY(cx, obj, id, &rval));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2810:9: note: expanded from macro 'ELEMENT_OP'
        FETCH_ELEMENT_ID(n, id);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3450:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            PUSH_OPND(JSVAL_VOID);
            ~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:158:55: note: expanded from macro 'PUSH_OPND'
#define PUSH_OPND(v)    (sp[-depth] = (jsval)pc, PUSH(v))
                                                 ~~~~~^~
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:3486:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_ELEMENT_ID(-1, id);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3501:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2868:17: note: expanded from macro 'CACHED_GET'
                NATIVE_GET(cx, obj, obj, sprop, &rval);                       \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3509:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (JSVAL_IS_INT(rval) &&
                ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3510:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                rval != INT_TO_JSVAL(JSVAL_INT_MIN) &&
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3557:26: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    PUSH(JSVAL_VOID);
                    ~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:3565:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                NONINT_INCREMENT_OP_MIDDLE();
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3530:9: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
        VALUE_TO_NUMBER(cx, rval, d);                                         \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3565:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                NONINT_INCREMENT_OP_MIDDLE();
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3533:18: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
            if (!JSVAL_IS_NUMBER(rtmp)) {                                     \
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3594:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rval, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3596:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3596:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:40: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3598:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rtmp, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3600:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3600:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_ARGNO(pc), nargs, argv, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:40: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3603:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rval, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3605:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3605:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:40: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3607:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rtmp, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3609:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:10: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3609:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_INCREMENT_OP(GET_VARNO(pc), u.i.nvars, vars, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3585:40: note: expanded from macro 'FAST_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3621:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            NONINT_INCREMENT_OP_MIDDLE();
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3530:9: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
        VALUE_TO_NUMBER(cx, rval, d);                                         \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3621:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            NONINT_INCREMENT_OP_MIDDLE();
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3533:18: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
            if (!JSVAL_IS_NUMBER(rtmp)) {                                     \
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3649:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_INCNAME, rval, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:10: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3651:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_DECNAME, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:10: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3651:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_DECNAME, rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:40: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3653:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_NAMEINC, rtmp, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:10: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3655:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_NAMEDEC, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:10: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3655:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_GLOBAL_INCREMENT_OP(JSOP_NAMEDEC, rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3640:40: note: expanded from macro 'FAST_GLOBAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3670:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            NONINT_INCREMENT_OP_MIDDLE();
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3530:9: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
        VALUE_TO_NUMBER(cx, rval, d);                                         \
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:252:13: note: expanded from macro 'VALUE_TO_NUMBER'
        if (JSVAL_IS_INT(v)) {                                                \
            ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3670:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            NONINT_INCREMENT_OP_MIDDLE();
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:3533:18: note: expanded from macro 'NONINT_INCREMENT_OP_MIDDLE'
            if (!JSVAL_IS_NUMBER(rtmp)) {                                     \
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3691:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2868:17: note: expanded from macro 'CACHED_GET'
                NATIVE_GET(cx, obj, obj, sprop, &rval);                       \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3713:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ELEMENT_OP(-1, CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2810:9: note: expanded from macro 'ELEMENT_OP'
        FETCH_ELEMENT_ID(n, id);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3713:28: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ELEMENT_OP(-1, CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval)));
            ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2868:17: note: expanded from macro 'CACHED_GET'
                NATIVE_GET(cx, obj, obj, sprop, &rval);                       \
                ^
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:2820:9: note: expanded from macro 'ELEMENT_OP'
        call;                                                                 \
        ^~~~
jsinterp.c:3720:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ELEMENT_OP(-2, CACHED_SET(OBJ_SET_PROPERTY(cx, obj, id, &rval)));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2810:9: note: expanded from macro 'ELEMENT_OP'
        FETCH_ELEMENT_ID(n, id);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3728:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_ELEMENT_ID(-1, id);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3750:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (obj == LAZY_ARGS_THISP && !(obj = js_GetArgsObject(cx, fp))) {
                       ^~~~~~~~~~~~~~~
jsinterp.c:3747:39: note: expanded from macro 'LAZY_ARGS_THISP'
#define LAZY_ARGS_THISP ((JSObject *) JSVAL_VOID)
                                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3839:30: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        PUSH(JSVAL_VOID);
                        ~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:3853:38: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                newifp->frame.rval = JSVAL_VOID;
                                     ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3870:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    PRIMITIVE_TO_OBJECT(cx, vp[1], obj2);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:289:20: note: expanded from macro 'PRIMITIVE_TO_OBJECT'
        } else if (JSVAL_IS_INT(v)) {                                         \
                   ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:3890:26: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    PUSH(JSVAL_VOID);
                    ~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:3968:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                ELEMENT_OP(-1, ok = OBJ_GET_PROPERTY(cx, obj, id, &rval));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2810:9: note: expanded from macro 'ELEMENT_OP'
        FETCH_ELEMENT_ID(n, id);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4015:35: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        PUSH_OPND(JSVAL_VOID);
                        ~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:158:55: note: expanded from macro 'PUSH_OPND'
#define PUSH_OPND(v)    (sp[-depth] = (jsval)pc, PUSH(v))
                                                 ~~~~~^~
jsinterp.c:131:35: note: expanded from macro 'PUSH'
#define PUSH(v)         (*sp++ = (v))
                                  ^
jsinterp.c:4032:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                NATIVE_GET(cx, obj, obj2, sprop, &rval);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4186:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (JSVAL_IS_VOID(rval))
                    ^~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4318:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_INT(rval))
                 ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4341:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_NUMBER(lval) &&
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4395:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_INT(rval))
                 ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4418:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_NUMBER(lval) &&
                 ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4500:55: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                ok = OBJ_DEFINE_PROPERTY(cx, obj, id, JSVAL_VOID, NULL, NULL,
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsinterp.c:4515:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            id = (jsid) JSVAL_VOID;
                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4529:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ELEMENT_OP(-1, ok = ImportProperty(cx, obj, id));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2810:9: note: expanded from macro 'ELEMENT_OP'
        FETCH_ELEMENT_ID(n, id);                                              \
        ^~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4541:27: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                JS_ASSERT(JSVAL_IS_INT(rval));
                ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsinterp.c:4583:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                obj = LAZY_ARGS_THISP;
                      ^~~~~~~~~~~~~~~
jsinterp.c:3747:39: note: expanded from macro 'LAZY_ARGS_THISP'
#define LAZY_ARGS_THISP ((JSObject *) JSVAL_VOID)
                                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4695:55: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                ok = OBJ_DEFINE_PROPERTY(cx, obj, id, JSVAL_VOID, NULL, NULL,
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsinterp.c:4800:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                rval = JSVAL_VOID;
                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:4989:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                rval = JSVAL_VOID;
                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5068:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                rval = JSVAL_VOID;
                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5118:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                FETCH_ELEMENT_ID(-2, id);
                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5135:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                FETCH_ELEMENT_ID(-2, id);
                ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5185:51: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            ok = OBJ_DEFINE_PROPERTY(cx, obj, id, JSVAL_VOID, getter, setter,
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsinterp.c:5231:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FETCH_ELEMENT_ID(-2, id);
            ^~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2590:13: note: expanded from macro 'FETCH_ELEMENT_ID'
        if (JSVAL_IS_INT(idval_)) {                                           \
            ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5285:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                rval = JSVAL_VOID;
                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5379:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            JS_ASSERT(JSVAL_IS_INT(rval));
            ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsinterp.c:5751:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval));
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2868:17: note: expanded from macro 'CACHED_GET'
                NATIVE_GET(cx, obj, obj, sprop, &rval);                       \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5756:28: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                } else if (JSVAL_IS_NUMBER(lval)) {
                           ^~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5761:54: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    JS_ASSERT(JSVAL_IS_NULL(lval) || JSVAL_IS_VOID(lval));
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsinterp.c:5777:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                CACHED_GET(OBJ_GET_PROPERTY(cx, obj, id, &rval));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2868:17: note: expanded from macro 'CACHED_GET'
                NATIVE_GET(cx, obj, obj, sprop, &rval);                       \
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:2833:21: note: expanded from macro 'NATIVE_GET'
                  : JSVAL_VOID;                                               \
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5823:31: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                STORE_OPND(0, JSVAL_VOID);
                ~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
jsinterp.c:159:62: note: expanded from macro 'STORE_OPND'
#define STORE_OPND(n,v) (sp[(n)-depth] = (jsval)pc, sp[n] = (v))
                                                             ^
jsinterp.c:5936:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rval, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:10: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5940:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:10: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5940:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rval, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:40: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5944:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rtmp, +=, MAX);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:10: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5948:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:10: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
         ^~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:5948:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            FAST_LOCAL_INCREMENT_OP(rtmp, -=, MIN);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsinterp.c:5928:40: note: expanded from macro 'FAST_LOCAL_INCREMENT_OP'
    if (!JSVAL_IS_INT(rval) || rval == INT_TO_JSVAL(JSVAL_INT_##MINMAX))      \
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsinterp.c:6157:32: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    fp->rval = JSVAL_VOID;
                               ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
146 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsiter.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsiter.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsiter.c:45:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsiter.c:404:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(*vp)) {
        ^~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsiter.c:627:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            cx->exception = JSVAL_VOID;
                            ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsiter.c:925:62: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    return SendToGenerator(cx, JSGENOP_CLOSE, gen->obj, gen, JSVAL_VOID, NULL);
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsiter.c:956:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_VOID(argv[0])) {
                 ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsiter.c:1008:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
          : JSVAL_VOID;
            ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
7 warnings generated.
gcc -o Linux_All_DBG.OBJ/jslock.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jslock.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
1 warning generated.
gcc -o Linux_All_DBG.OBJ/jslog2.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jslog2.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jslog2.c:40:
In file included from ./jsbit.h:42:
In file included from ./jstypes.h:416:
In file included from ./jsotypes.h:71:
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jslog2.c:50:5: warning: unused typedef 'js_static_assert_line_50' [-Wunused-local-typedef]
    JS_CEILING_LOG2(log2, n);
    ^
./jsbit.h:91:9: note: expanded from macro 'JS_CEILING_LOG2'
        JS_STATIC_ASSERT(sizeof(unsigned int) == sizeof(JSUint32));           \
        ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:16:1: note: expanded from here
js_static_assert_line_50
^
3 warnings generated.
gcc -o Linux_All_DBG.OBJ/jslong.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jslong.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jslong.c:40:
In file included from ./jstypes.h:416:
In file included from ./jsotypes.h:71:
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsmath.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsmath.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsmath.c:44:
In file included from ./jslibmath.h:49:
In file included from /usr/include/math.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsnum.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsnum.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsnum.c:48:
In file included from /usr/include/locale.h:25:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsnum.c:204:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NUMBER((jsval)obj)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:210:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(JSVAL_IS_NUMBER(v));
        ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsnum.c:212:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    d = JSVAL_IS_INT(v) ? (jsdouble)JSVAL_TO_INT(v) : *JSVAL_TO_DOUBLE(v);
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:263:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NUMBER((jsval)obj)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:269:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(JSVAL_IS_NUMBER(v));
        ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsnum.c:271:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    d = JSVAL_IS_INT(v) ? (jsdouble)JSVAL_TO_INT(v) : *JSVAL_TO_DOUBLE(v);
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:399:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NUMBER((jsval)obj)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:421:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NUMBER((jsval)obj)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:427:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(JSVAL_IS_NUMBER(v));
        ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsnum.c:429:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    d = JSVAL_IS_INT(v) ? (jsdouble)JSVAL_TO_INT(v) : *JSVAL_TO_DOUBLE(v);
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:431:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(argv[0])) {
        ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:738:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(v)) {
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsnum.c:836:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_INT(v)) {
        ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
15 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsobj.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsobj.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsobj.c:45:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsobj.c:247:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(num_properties)) {
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:1666:45: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    return OBJ_DEFINE_PROPERTY(cx, obj, id, JSVAL_VOID,
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsobj.c:1698:45: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    return OBJ_DEFINE_PROPERTY(cx, obj, id, JSVAL_VOID,
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:47: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                              ^~~~~
jsobj.c:1803:54: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        JS_ASSERT(!argc || JSVAL_IS_NULL(argv[0]) || JSVAL_IS_VOID(argv[0]));
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsobj.c:2028:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2048:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2184:42: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                         JSVAL_VOID, NULL, NULL,
                                         ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2335:31: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                newslots[i] = JSVAL_VOID;
                              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2480:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        newslots[i] = JSVAL_VOID;
                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2600:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *vp = JSVAL_VOID;
                  ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2627:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:2805:24: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    obj->slots[slot] = JSVAL_VOID;
                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:3453:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
          : JSVAL_VOID;
            ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:3506:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        pval = JSVAL_VOID;
               ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:3548:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:3557:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_VOID(*vp) && cx->fp && (pc = cx->fp->pc)) {
            ^~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:3766:51: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            LOCKED_OBJ_SET_SLOT(obj, sprop->slot, JSVAL_VOID);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:161:55: note: expanded from macro 'LOCKED_OBJ_SET_SLOT'
    (OBJ_CHECK_SLOT(obj, slot), (obj)->slots[slot] = (value))
                                                      ^~~~~
jsobj.c:4224:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                *vp = JSVAL_VOID;
                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4240:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                  : JSVAL_VOID;
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4573:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v)) {
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4584:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        } else if (JSVAL_IS_INT(v)) {
                   ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4649:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    fval = JSVAL_VOID;
           ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4896:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            obj->slots[i] = JSVAL_VOID;
                            ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:4908:63: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    v = (slot < (uint32) obj->slots[-1]) ? obj->slots[slot] : JSVAL_VOID;
                                                              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:5008:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (JSVAL_IS_VOID(val)) {
               ^~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsobj.c:5012:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (JSVAL_IS_INT(val)) {
               ^~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
28 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsopcode.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsopcode.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsopcode.c:49:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsopcode.c:999:27: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    key = JSVAL_VOID;
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsopcode.c:1697:29: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                            LOCAL_ASSERT(0);
                            ^~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1706:24: warning: case value not in enumerated type 'JSOp' (aka 'enum JSOp') [-Wswitch]
                  case JSOP_GETPROP2:
                       ^
jsopcode.c:840:25: note: expanded from macro 'JSOP_GETPROP2'
#define JSOP_GETPROP2   256
                        ^
jsopcode.c:1709:24: warning: case value not in enumerated type 'JSOp' (aka 'enum JSOp') [-Wswitch]
                  case JSOP_GETELEM2:
                       ^
jsopcode.c:841:25: note: expanded from macro 'JSOP_GETELEM2'
#define JSOP_GETELEM2   257
                        ^
jsopcode.c:1715:13: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
            LOCAL_ASSERT(js_CodeSpec[saveop].length == oplen);
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1731:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(op != saveop);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1744:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(op == JSOP_ADD);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1798:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(tail + GetJumpOffset(pc+tail, pc+tail) == 0);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1861:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(ATOM_IS_OBJECT(atom));
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1927:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(ss->top != 0);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1944:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc == JSOP_SETSP);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1981:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(strcmp(rval, retsub_pc_cookie) == 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:1983:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(strcmp(lval, exception_cookie) == 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2017:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(newtop <= oldtop);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2083:37: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                                    LOCAL_ASSERT(pc[len] == JSOP_LEAVEBLOCK);
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2129:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(JS_FALSE);
                ^~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2202:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(pc[len] == JSOP_LEAVEBLOCKEXPR);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2268:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(!js_GetSrcNote(jp->script, pc));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2281:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(strcmp(rval, with_cookie) == 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2306:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(sprop->shortid < argc);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2341:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc == JSOP_EXCEPTION);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2351:29: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                            LOCAL_ASSERT(js_GetSrcNoteOffset(sn, 0) != 0);
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2362:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(*pc == JSOP_POP);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2368:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(*pc == JSOP_SETLOCALPOP);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2384:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(len > 0);
                        ^~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2391:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(*pc == JSOP_IFEQ || *pc == JSOP_IFEQX);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2419:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(SN_TYPE(sn) == SRC_PCBASE);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2422:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(op == JSOP_LEAVEBLOCK);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2425:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(SN_TYPE(sn) == SRC_CATCH);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2426:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT((uintN)js_GetSrcNoteOffset(sn, 0) == ss->top);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2430:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(top >= depth);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2442:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT((uintN)i < ss->top);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2450:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc == JSOP_SETSP);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2521:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(pos != 0);
                    ^~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2529:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(ss->opcodes[pos] == JSOP_NEWINIT);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2532:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(ss->sprinter.base[start] == '[' ||
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2536:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(pos < ss->top);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2537:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(pos < ss->top);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2613:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(SN_TYPE(sn) == SRC_IF);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2626:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(!ss->inArrayInit);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2631:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(*pc == JSOP_GOTO || *pc == JSOP_GOTOX);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2687:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc == JSOP_GOTO || *pc == JSOP_GOTOX);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2752:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2757:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2785:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(*pc == JSOP_IFEQ || *pc == JSOP_IFEQX);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2825:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*xval != '\0');
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2862:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(*pc == JSOP_IFEQ || *pc == JSOP_IFEQX);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2872:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(!forelem_tail);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2887:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(!forelem_done);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2909:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(strcmp(rval, forelem_cookie) == 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2910:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(forelem_tail > pc);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2913:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(forelem_done > pc);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2936:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(SN_TYPE(sn) == SRC_DESTRUCT);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2946:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(forelem_tail > pc);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2949:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(forelem_done > pc);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2978:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:2983:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3022:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*rval != '\0');
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3051:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(ss->top >= 2);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3148:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3154:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3210:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3216:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3405:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(atom);
                ^~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3480:43: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                  default:                LOCAL_ASSERT(0);
                                          ^~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3547:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_SWITCH);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3574:33: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                                LOCAL_ASSERT(SN_TYPE(sn) == SRC_LABEL);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3608:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_SWITCH);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3625:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(SN_TYPE(sn) == SRC_LABEL);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3656:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_SWITCH);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3668:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc2 == JSOP_CASE || *pc2 == JSOP_DEFAULT ||
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3675:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_PCDELTA);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3693:21: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                    LOCAL_ASSERT(*pc2 == JSOP_CASE || *pc2 == JSOP_DEFAULT ||
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3700:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(sn && SN_TYPE(sn) == SRC_PCDELTA);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3743:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(ATOM_IS_OBJECT(atom));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3807:17: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                LOCAL_ASSERT(ss->top >= 2);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3890:25: warning: expression which evaluates to zero treated as a null pointer constant of type 'jsbytecode *' (aka 'unsigned char *') [-Wnon-literal-null-conversion]
                        LOCAL_ASSERT(rval[strlen(rval)-1] == '}');
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1556:33: note: expanded from macro 'LOCAL_ASSERT'
#define LOCAL_ASSERT(expr)      LOCAL_ASSERT_RV(expr, JS_FALSE)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsopcode.c:1095:29: note: expanded from macro 'LOCAL_ASSERT_RV'
        if (!(expr)) return (rv);                                             \
                            ^~~~
jsopcode.c:3268:20: warning: case value not in enumerated type 'JSOp' (aka 'enum JSOp') [-Wswitch]
              case JSOP_GETPROP2:
                   ^
jsopcode.c:840:25: note: expanded from macro 'JSOP_GETPROP2'
#define JSOP_GETPROP2   256
                        ^
jsopcode.c:3331:20: warning: case value not in enumerated type 'JSOp' (aka 'enum JSOp') [-Wswitch]
              case JSOP_GETELEM2:
                   ^
jsopcode.c:841:25: note: expanded from macro 'JSOP_GETELEM2'
#define JSOP_GETELEM2   257
                        ^
jsopcode.c:3487:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (JSVAL_IS_INT(val)) {
                    ^~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
82 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsparse.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsparse.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsparse.c:55:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsparse.c:1721:36: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                   JSVAL_VOID, NULL, NULL,
                                   ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
3 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsprf.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsprf.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsprf.c:46:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsregexp.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsregexp.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsregexp.c:45:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsregexp.c:3425:40: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                       JSVAL_VOID, NULL, NULL,
                                       ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3512:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3548:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3606:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3645:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3896:35: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (argc >= 2 && !JSVAL_IS_VOID(argv[1])) { /* 'flags' passed */
                                  ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:3917:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (JSVAL_IS_VOID(argv[1])) {
                ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsregexp.c:4092:26: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if ((argc < 2 || JSVAL_IS_VOID(argv[1])) &&
                         ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
10 warnings generated.
gcc -o Linux_All_DBG.OBJ/jskwgen.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jskwgen.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jskwgen.c:42:
In file included from /usr/include/assert.h:35:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jskwgen -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ   -lm Linux_All_DBG.OBJ/jskwgen.o
Linux_All_DBG.OBJ/jskwgen Linux_All_DBG.OBJ/jsautokw.h
gcc -o Linux_All_DBG.OBJ/jsscan.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsscan.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsscan.c:45:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsscope.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsscope.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsscope.c:45:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsscript.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsscript.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsscript.c:45:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsscript.c:286:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    oldscript = !JSVAL_IS_VOID(v) ? (JSScript *) JSVAL_TO_PRIVATE(v) : NULL;
                 ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
3 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsstr.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsstr.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsstr.c:52:
In file included from /usr/include/stdlib.h:25:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsstr.c:522:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsstr.c:579:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id) || (flags & JSRESOLVE_ASSIGNING))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsstr.c:1185:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    : INT_TO_JSVAL(-1);
                      ^~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsstr.c:1467:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *sp++ = JSVAL_VOID;
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsstr.c:1856:34: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        limited = (argc > 1) && !JSVAL_IS_VOID(argv[1]);
                                 ^~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsstr.c:2686:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    } else if (JSVAL_IS_INT(v)) {
               ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
8 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsutil.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsutil.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsutil.c:45:
In file included from /usr/include/stdio.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsxdrapi.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsxdrapi.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsxdrapi.c:44:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsxdrapi.c:534:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxdrapi.c:600:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        else if (JSVAL_IS_VOID(*vp))
                 ^~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
4 warnings generated.
gcc -o Linux_All_DBG.OBJ/jsxml.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  jsxml.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from jsxml.c:45:
In file included from /usr/include/math.h:27:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
jsxml.c:156:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:166:58: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = ns->prefix ? STRING_TO_JSVAL(ns->prefix) : JSVAL_VOID;
                                                         ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:362:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (!JSVAL_IS_INT(id))
         ^~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:799:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_VOID(prefixval)) {
                 ^~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:811:20: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        } else if (JSVAL_IS_VOID(prefixval) || !js_IsXMLName(cx, prefixval)) {
                   ^~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:890:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (argc == 1 || JSVAL_IS_VOID(nsval)) {
                     ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:1307:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    JS_ASSERT(JSVAL_IS_INT(id));
    ~~~~~~~~~~^~~~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsutil.h:54:7: note: expanded from macro 'JS_ASSERT'
    ((_expr)?((void)0):JS_Assert(# _expr,__FILE__,__LINE__))
      ^~~~~
jsxml.c:1874:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:2078:33: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v))
                                ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:2163:33: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v))
                                ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:2529:62: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        argv[0] = qn->prefix ? STRING_TO_JSVAL(qn->prefix) : JSVAL_VOID;
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:3032:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v)) {
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:3041:32: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_BOOLEAN(v) || JSVAL_IS_NUMBER(v))
                               ^~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:3713:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (JSVAL_IS_VOID(v) && xml->xml_kids.length == 0)
                ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4107:57: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *vp = (index == 0) ? OBJECT_TO_JSVAL(obj) : JSVAL_VOID;
                                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4119:27: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                    *vp = JSVAL_VOID;
                          ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4128:23: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                *vp = JSVAL_VOID;
                      ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4735:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        id = JSVAL_VOID;
             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4745:22: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                if (!JSVAL_IS_VOID(id)) {
                     ^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:4780:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (JSVAL_IS_VOID(id)) {
            ^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5138:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (id == JS_DEFAULT_XML_NAMESPACE_ID) {
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:1118:45: note: expanded from macro 'JS_DEFAULT_XML_NAMESPACE_ID'
#define JS_DEFAULT_XML_NAMESPACE_ID ((jsid) JSVAL_VOID)
                                            ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5139:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *vp = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5398:19: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *vp = JSVAL_VOID;
                  ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5483:46: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            } else if (JSVAL_IS_STRING(v) || JSVAL_IS_NUMBER(v)) {
                                             ^~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5492:30: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        d2 = JSVAL_IS_INT(v) ? JSVAL_TO_INT(v)
                             ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5773:21: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            *rval = JSVAL_VOID;
                    ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5777:25: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                *rval = JSVAL_VOID;
                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5815:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (JSVAL_IS_VOID(v)) {
                ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:5834:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(*rval) && !xml_list_helper(cx, xml, rval))
        ^~~~~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:6433:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *rval = JSVAL_VOID;
                ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:6623:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        *rval = JSVAL_VOID;
                ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:6882:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    id = JSVAL_VOID;
         ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:6888:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
            if (!JSVAL_IS_VOID(id) && !DeleteByIndex(cx, xml, id, &junk))
                 ^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:6894:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_VOID(id))
        ^~~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7282:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NUMBER(v) && !JS_SetProperty(cx, to, name, &v))
        ^~~~~~~~~~~~~~~~~~
./jsapi.h:70:34: note: expanded from macro 'JSVAL_IS_NUMBER'
#define JSVAL_IS_NUMBER(v)      (JSVAL_IS_INT(v) || JSVAL_IS_DOUBLE(v))
                                 ^~~~~~~~~~~~~~~
./jsapi.h:71:62: note: expanded from macro 'JSVAL_IS_INT'
#define JSVAL_IS_INT(v)         (((v) & JSVAL_INT) && (v) != JSVAL_VOID)
                                                             ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7323:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v)) {
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7367:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v))
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7401:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (JSVAL_IS_NULL(v) || JSVAL_IS_VOID(v))
                            ^~~~~~~~~~~~~~~~
./jsapi.h:76:41: note: expanded from macro 'JSVAL_IS_VOID'
#define JSVAL_IS_VOID(v)        ((v) == JSVAL_VOID)
                                        ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7708:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    argv[0] = JSVAL_VOID;
              ^~~~~~~~~~
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                  ~~~~~~~~~~ ^
jsxml.c:7830:40: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (!OBJ_GET_PROPERTY(cx, obj, JS_DEFAULT_XML_NAMESPACE_ID, &v))
             ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:1118:45: note: expanded from macro 'JS_DEFAULT_XML_NAMESPACE_ID'
#define JS_DEFAULT_XML_NAMESPACE_ID ((jsid) JSVAL_VOID)
                                            ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:70:41: note: expanded from macro 'OBJ_GET_PROPERTY'
    (obj)->map->ops->getProperty(cx,obj,id,vp)
                                        ^~
jsxml.c:7844:39: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        !OBJ_DEFINE_PROPERTY(cx, obj, JS_DEFAULT_XML_NAMESPACE_ID, v,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:1118:45: note: expanded from macro 'JS_DEFAULT_XML_NAMESPACE_ID'
#define JS_DEFAULT_XML_NAMESPACE_ID ((jsid) JSVAL_VOID)
                                            ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:44: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                           ^~
jsxml.c:7872:46: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        if (!OBJ_DEFINE_PROPERTY(cx, varobj, JS_DEFAULT_XML_NAMESPACE_ID, v,
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./jsapi.h:1118:45: note: expanded from macro 'JS_DEFAULT_XML_NAMESPACE_ID'
#define JS_DEFAULT_XML_NAMESPACE_ID ((jsid) JSVAL_VOID)
                                            ^
./jsapi.h:205:33: note: expanded from macro 'JSVAL_VOID'
#define JSVAL_VOID              INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))
                                ^
./jsapi.h:104:46: note: expanded from macro 'INT_TO_JSVAL'
#define INT_TO_JSVAL(i)         (((jsval)(i) << 1) | JSVAL_INT)
                                             ^
./jsobj.h:68:44: note: expanded from macro 'OBJ_DEFINE_PROPERTY'
    (obj)->map->ops->defineProperty(cx,obj,id,value,getter,setter,attrs,propp)
                                           ^~
jsxml.c:1153:17: warning: unused typedef 'js_static_assert_line_1153' [-Wunused-local-typedef]
                JS_CEILING_LOG2(log2, capacity);
                ^
./jsbit.h:91:9: note: expanded from macro 'JS_CEILING_LOG2'
        JS_STATIC_ASSERT(sizeof(unsigned int) == sizeof(JSUint32));           \
        ^
./jsutil.h:72:5: note: expanded from macro 'JS_STATIC_ASSERT'
    JS_STATIC_ASSERT_IMPL(condition, __LINE__)
    ^
./jsutil.h:74:5: note: expanded from macro 'JS_STATIC_ASSERT_IMPL'
    JS_STATIC_ASSERT_IMPL2(condition, line)
    ^
./jsutil.h:76:17: note: expanded from macro 'JS_STATIC_ASSERT_IMPL2'
    typedef int js_static_assert_line_##line[(condition) ? 1 : -1]
                ^
<scratch space>:206:1: note: expanded from here
js_static_assert_line_1153
^
45 warnings generated.
gcc -o Linux_All_DBG.OBJ/prmjtime.o -c -fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy -Wall -Wno-format -g -DXP_UNIX -DSVR4 -DSYSV -D_BSD_SOURCE -DPOSIX_SOURCE -DHAVE_LOCALTIME_R -DHAVE_VA_COPY -DVA_COPY=va_copy -DPIC -fPIC  -DDEBUG -DDEBUG_user42 -DEDITLINE -ILinux_All_DBG.OBJ  prmjtime.c
In file included from <built-in>:343:
<command line>:10:9: warning: 'VA_COPY' macro redefined [-Wmacro-redefined]
#define VA_COPY va_copy
        ^
<command line>:2:9: note: previous definition is here
#define VA_COPY __va_copy
        ^
In file included from prmjtime.c:47:
In file included from /usr/include/string.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:185:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
# warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
  ^
2 warnings generated.
ar rv Linux_All_DBG.OBJ/libjs.a Linux_All_DBG.OBJ/jsapi.o Linux_All_DBG.OBJ/jsarena.o Linux_All_DBG.OBJ/jsarray.o Linux_All_DBG.OBJ/jsatom.o Linux_All_DBG.OBJ/jsbool.o Linux_All_DBG.OBJ/jscntxt.o Linux_All_DBG.OBJ/jsdate.o Linux_All_DBG.OBJ/jsdbgapi.o Linux_All_DBG.OBJ/jsdhash.o Linux_All_DBG.OBJ/jsdtoa.o Linux_All_DBG.OBJ/jsemit.o Linux_All_DBG.OBJ/jsexn.o Linux_All_DBG.OBJ/jsfun.o Linux_All_DBG.OBJ/jsgc.o Linux_All_DBG.OBJ/jshash.o Linux_All_DBG.OBJ/jsinterp.o Linux_All_DBG.OBJ/jsiter.o Linux_All_DBG.OBJ/jslock.o Linux_All_DBG.OBJ/jslog2.o Linux_All_DBG.OBJ/jslong.o Linux_All_DBG.OBJ/jsmath.o Linux_All_DBG.OBJ/jsnum.o Linux_All_DBG.OBJ/jsobj.o Linux_All_DBG.OBJ/jsopcode.o Linux_All_DBG.OBJ/jsparse.o Linux_All_DBG.OBJ/jsprf.o Linux_All_DBG.OBJ/jsregexp.o Linux_All_DBG.OBJ/jsscan.o Linux_All_DBG.OBJ/jsscope.o Linux_All_DBG.OBJ/jsscript.o Linux_All_DBG.OBJ/jsstr.o Linux_All_DBG.OBJ/jsutil.o Linux_All_DBG.OBJ/jsxdrapi.o Linux_All_DBG.OBJ/jsxml.o Linux_All_DBG.OBJ/prmjtime.o
ar: creating Linux_All_DBG.OBJ/libjs.a
a - Linux_All_DBG.OBJ/jsapi.o
a - Linux_All_DBG.OBJ/jsarena.o
a - Linux_All_DBG.OBJ/jsarray.o
a - Linux_All_DBG.OBJ/jsatom.o
a - Linux_All_DBG.OBJ/jsbool.o
a - Linux_All_DBG.OBJ/jscntxt.o
a - Linux_All_DBG.OBJ/jsdate.o
a - Linux_All_DBG.OBJ/jsdbgapi.o
a - Linux_All_DBG.OBJ/jsdhash.o
a - Linux_All_DBG.OBJ/jsdtoa.o
a - Linux_All_DBG.OBJ/jsemit.o
a - Linux_All_DBG.OBJ/jsexn.o
a - Linux_All_DBG.OBJ/jsfun.o
a - Linux_All_DBG.OBJ/jsgc.o
a - Linux_All_DBG.OBJ/jshash.o
a - Linux_All_DBG.OBJ/jsinterp.o
a - Linux_All_DBG.OBJ/jsiter.o
a - Linux_All_DBG.OBJ/jslock.o
a - Linux_All_DBG.OBJ/jslog2.o
a - Linux_All_DBG.OBJ/jslong.o
a - Linux_All_DBG.OBJ/jsmath.o
a - Linux_All_DBG.OBJ/jsnum.o
a - Linux_All_DBG.OBJ/jsobj.o
a - Linux_All_DBG.OBJ/jsopcode.o
a - Linux_All_DBG.OBJ/jsparse.o
a - Linux_All_DBG.OBJ/jsprf.o
a - Linux_All_DBG.OBJ/jsregexp.o
a - Linux_All_DBG.OBJ/jsscan.o
a - Linux_All_DBG.OBJ/jsscope.o
a - Linux_All_DBG.OBJ/jsscript.o
a - Linux_All_DBG.OBJ/jsstr.o
a - Linux_All_DBG.OBJ/jsutil.o
a - Linux_All_DBG.OBJ/jsxdrapi.o
a - Linux_All_DBG.OBJ/jsxml.o
a - Linux_All_DBG.OBJ/prmjtime.o
echo Linux_All_DBG.OBJ/libjs.a
Linux_All_DBG.OBJ/libjs.a
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src/spidermonkey/js/src'
find js/src -name "jsautocfg.h" -exec cp {} js/src \;
touch js-buildstamp
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src/spidermonkey'
touch jsapi_buildstamp
make[1]: git: Command not found
cc -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -fPIC -c pacparser.c -o pacparser.o
make[1]: git: Command not found
touch pymod/pacparser_o_buildstamp
cd spidermonkey && SMCFLAGS="-fPIC -DHAVE_VA_COPY -DVA_COPY=__va_copy" /usr/bin/make jslib
make[1]: git: Command not found
make[2]: Entering directory '/<<PKGBUILDDIR>>/src/spidermonkey'
cd js/src
find . -name "libjs.a" -exec cp {} .. \;
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src/spidermonkey'
make[1]: git: Command not found
cc -shared -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wl,-z,relro -Wl,-soname=libpacparser.so.1 -Wl,-exclude-libs=libjs.a -o libpacparser.so.1 pacparser.o libjs.a -lm
make[1]: git: Command not found
ln -sf libpacparser.so.1 libpacparser.so
make[1]: git: Command not found
make[1]: git: Command not found
cc -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wl,-z,relro pactester.c -o pactester -lpacparser -L. -I.
make[1]: git: Command not found
echo "Running tests for pactester."
make[1]: git: Command not found
Running tests for pactester.
NO_INTERNET=yes ../tests/runtests.sh
All tests were successful.
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
NO_INTERNET=yes /usr/bin/make -C src pymod
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python setup.py build
make[1]: git: Command not found
running build
running build_py
creating build
creating build/lib.linux-x86_64-2.7
creating build/lib.linux-x86_64-2.7/pacparser
copying pacparser/__init__.py -> build/lib.linux-x86_64-2.7/pacparser
running build_ext
building '_pacparser' extension
creating build/temp.linux-x86_64-2.7
x86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I../spidermonkey/js/src -I.. -I/usr/include/python2.7 -c pacparser_py.c -o build/temp.linux-x86_64-2.7/pacparser_py.o
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-x6KfBw/python2.7-2.7.17=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-z,relro -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC build/temp.linux-x86_64-2.7/pacparser_py.o ../pacparser.o ../libjs.a -o build/lib.linux-x86_64-2.7/pacparser/_pacparser.so
python ../tests/runtests.py
All tests were successful.
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
set -e && for i in 3.8 3.7; do \
  NO_INTERNET=yes /usr/bin/make -C src pymod PYTHON=python$i; \
done
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python3.8 setup.py build
make[1]: git: Command not found
running build
running build_py
creating build/lib.linux-x86_64-3.8
creating build/lib.linux-x86_64-3.8/pacparser
copying pacparser/__init__.py -> build/lib.linux-x86_64-3.8/pacparser
running build_ext
building '_pacparser' extension
creating build/temp.linux-x86_64-3.8
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I../spidermonkey/js/src -I.. -I/usr/include/python3.8 -c pacparser_py.c -o build/temp.linux-x86_64-3.8/pacparser_py.o
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.8/pacparser_py.o ../pacparser.o ../libjs.a -o build/lib.linux-x86_64-3.8/pacparser/_pacparser.cpython-38-x86_64-linux-gnu.so
python3.8 ../tests/runtests.py
/<<PKGBUILDDIR>>/src/../tests/../src/pymod/build/lib.linux-x86_64-3.8/pacparser/__init__.py:82: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if len(m.groups()) is 1:
All tests were successful.
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python3.7 setup.py build
make[1]: git: Command not found
running build
running build_py
creating build/lib.linux-x86_64-3.7
creating build/lib.linux-x86_64-3.7/pacparser
copying pacparser/__init__.py -> build/lib.linux-x86_64-3.7/pacparser
running build_ext
building '_pacparser' extension
creating build/temp.linux-x86_64-3.7
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I../spidermonkey/js/src -I.. -I/usr/include/python3.7m -c pacparser_py.c -o build/temp.linux-x86_64-3.7/pacparser_py.o
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,relro -g -DXP_UNIX -Wall -DVERSION= -Ispidermonkey/js/src -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.7/pacparser_py.o ../pacparser.o ../libjs.a -o build/lib.linux-x86_64-3.7/pacparser/_pacparser.cpython-37m-x86_64-linux-gnu.so
python3.7 ../tests/runtests.py
All tests were successful.
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
touch build-stamp
 fakeroot debian/rules binary
dh_testdir
dh_testroot
dh_clean -k -s 
dh_clean: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_clean: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_clean: warning: This feature will be removed in compat 12.
dh_clean: warning: dh_clean -k is deprecated; use dh_prep instead
dh_clean: warning: This feature will be removed in compat 12.
dh_installdirs -s
dh_installdirs: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installdirs: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installdirs: warning: This feature will be removed in compat 12.
# Install to debian/tmp
NO_INTERNET=yes /usr/bin/make -C src DESTDIR=/<<PKGBUILDDIR>>/debian/tmp install
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
echo "Running tests for pactester."
make[1]: git: Command not found
Running tests for pactester.
NO_INTERNET=yes ../tests/runtests.sh
All tests were successful.
install -d /<<PKGBUILDDIR>>/debian/tmp/usr/lib /<<PKGBUILDDIR>>/debian/tmp/usr/include /<<PKGBUILDDIR>>/debian/tmp/usr/bin
make[1]: git: Command not found
install -m 644 libpacparser.so.1 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/libpacparser.so.1
ln -sf libpacparser.so.1 /<<PKGBUILDDIR>>/debian/tmp/usr/lib/libpacparser.so
install -m 755 pactester /<<PKGBUILDDIR>>/debian/tmp/usr/bin/pactester
install -m 644 pacparser.h /<<PKGBUILDDIR>>/debian/tmp/usr/include/pacparser.h
# install pactester manpages
install -d /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1/
(test -d ../docs && install -m 644 ../docs/man/man1/*.1 /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man1/) || true
# install pacparser manpages
install -d /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3/
(test -d ../docs && install -m 644 ../docs/man/man3/*.3 /<<PKGBUILDDIR>>/debian/tmp/usr/share/man/man3/) || true
# install html docs
install -d /<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/pacparser/html/
(test -d ../docs/html && install -m 644 ../docs/html/* /<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/pacparser/html/) || true
# install examples
install -d /<<PKGBUILDDIR>>/debian/tmp/usr/share/doc/pacparser/examples/
(test -d ../examples && install -m 644 ../examples/* /<<PKGBUILDDIR>>/debian/tmp/usr/share/doc//pacparser/examples/) || true
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
NO_INTERNET=yes /usr/bin/make -C src DESTDIR=/<<PKGBUILDDIR>>/debian/tmp install-pymod EXTRA_ARGS=--install-layout=deb
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python setup.py build
make[1]: git: Command not found
running build
running build_py
running build_ext
python ../tests/runtests.py
All tests were successful.
cd pymod && ARCHFLAGS="" python setup.py install --root="/<<PKGBUILDDIR>>/debian/tmp/" --install-layout=deb
make[1]: git: Command not found
running install
running build
running build_py
running build_ext
running install_lib
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages/pacparser
copying build/lib.linux-x86_64-2.7/pacparser/__init__.py -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages/pacparser
copying build/lib.linux-x86_64-2.7/pacparser/_pacparser.so -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages/pacparser
copying build/lib.linux-x86_64-2.7/pacparser/__init__.pyc -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages/pacparser
running install_egg_info
Writing /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python2.7/dist-packages/pacparser-1.egg-info
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
set -e && for i in 3.8 3.7; do \
  NO_INTERNET=yes /usr/bin/make -C src DESTDIR=/<<PKGBUILDDIR>>/debian/tmp install-pymod EXTRA_ARGS=--install-layout=deb PYTHON=python$i; \
done
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python3.8 setup.py build
make[1]: git: Command not found
running build
running build_py
running build_ext
python3.8 ../tests/runtests.py
All tests were successful.
cd pymod && ARCHFLAGS="" python3.8 setup.py install --root="/<<PKGBUILDDIR>>/debian/tmp/" --install-layout=deb
make[1]: git: Command not found
running install
running build
running build_py
running build_ext
running install_lib
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser
copying build/lib.linux-x86_64-3.8/pacparser/__init__.py -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser
copying build/lib.linux-x86_64-3.8/pacparser/_pacparser.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser
creating /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser/__pycache__
copying build/lib.linux-x86_64-3.8/pacparser/__pycache__/__init__.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser/__pycache__
running install_egg_info
Writing /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser-1.egg-info
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[1]: Entering directory '/<<PKGBUILDDIR>>/src'
cd pymod && ARCHFLAGS="" python3.7 setup.py build
make[1]: git: Command not found
running build
running build_py
running build_ext
python3.7 ../tests/runtests.py
All tests were successful.
cd pymod && ARCHFLAGS="" python3.7 setup.py install --root="/<<PKGBUILDDIR>>/debian/tmp/" --install-layout=deb
make[1]: git: Command not found
running install
running build
running build_py
running build_ext
running install_lib
copying build/lib.linux-x86_64-3.7/pacparser/_pacparser.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser
copying build/lib.linux-x86_64-3.7/pacparser/__pycache__/__init__.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser/__pycache__
running install_egg_info
Removing /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser-1.egg-info
Writing /<<PKGBUILDDIR>>/debian/tmp/usr/lib/python3/dist-packages/pacparser-1.egg-info
make[1]: Leaving directory '/<<PKGBUILDDIR>>/src'
dh_install -s --autodest
dh_install: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_install: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_install: warning: This feature will be removed in compat 12.
dh_python2 -s
I: dh_python2 fs:343: renaming _pacparser.so to _pacparser.x86_64-linux-gnu.so
dh_python3 -s
/usr/bin/make -f debian/rules DH_OPTIONS=-s binary-common
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_testdir
dh_testdir: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_testdir: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_testdir: warning: This feature will be removed in compat 12.
dh_testroot
dh_installchangelogs -a
dh_installchangelogs: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installchangelogs: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installchangelogs: warning: This feature will be removed in compat 12.
dh_installdocs -a -XREADME.win32
dh_installdocs: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installdocs: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installdocs: warning: This feature will be removed in compat 12.
dh_installexamples -plibpacparser1 -X*.py
dh_installexamples: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installexamples: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installexamples: warning: This feature will be removed in compat 12.
dh_installexamples -ppython-pacparser -X*.c
dh_installexamples: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installexamples: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installexamples: warning: This feature will be removed in compat 12.
dh_installexamples -ppython3-pacparser -X*.c
dh_installexamples: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installexamples: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installexamples: warning: This feature will be removed in compat 12.
dh_installman -a
dh_installman: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installman: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installman: warning: This feature will be removed in compat 12.
dh_link -a
dh_link: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_link: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_link: warning: This feature will be removed in compat 12.
dh_strip -a
dh_strip: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_strip: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_strip: warning: This feature will be removed in compat 12.
dh_compress -a
dh_compress: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_compress: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_compress: warning: This feature will be removed in compat 12.
dh_fixperms -a
dh_fixperms: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_fixperms: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_fixperms: warning: This feature will be removed in compat 12.
dh_makeshlibs -a -X_pacparser.so
dh_makeshlibs: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_makeshlibs: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_makeshlibs: warning: This feature will be removed in compat 12.
dh_installdeb -a
dh_installdeb: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_installdeb: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_installdeb: warning: This feature will be removed in compat 12.
dh_shlibdeps -a
dh_shlibdeps: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_shlibdeps: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_shlibdeps: warning: This feature will be removed in compat 12.
dh_gencontrol -a
dh_gencontrol: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_gencontrol: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_gencontrol: warning: This feature will be removed in compat 12.
dpkg-gencontrol: warning: package python-pacparser: substitution variable ${python:Provides} unused, but is defined
dpkg-gencontrol: warning: package python-pacparser: substitution variable ${python:Versions} unused, but is defined
dpkg-gencontrol: warning: Depends field of package libpacparser-dev: substitution variable ${shlibs:Depends} used, but is not defined
dpkg-gencontrol: warning: package python3-pacparser: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pacparser: substitution variable ${python3:Versions} unused, but is defined
dpkg-gencontrol: warning: package python3-pacparser: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pacparser: substitution variable ${python3:Versions} unused, but is defined
dpkg-gencontrol: warning: package python-pacparser: substitution variable ${python:Provides} unused, but is defined
dpkg-gencontrol: warning: package python-pacparser: substitution variable ${python:Versions} unused, but is defined
dh_md5sums -a
dh_md5sums: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_md5sums: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_md5sums: warning: This feature will be removed in compat 12.
dh_builddeb -a
dh_builddeb: warning: Compatibility levels before 9 are deprecated (level 5 in use)
dh_builddeb: warning: -s/--same-arch is deprecated; please use -a/--arch instead
dh_builddeb: warning: This feature will be removed in compat 12.
dpkg-deb: building package 'libpacparser1' in '../libpacparser1_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'libpacparser-dev' in '../libpacparser-dev_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'python-pacparser-dbgsym' in '../python-pacparser-dbgsym_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'python3-pacparser-dbgsym' in '../python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'python-pacparser' in '../python-pacparser_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'python3-pacparser' in '../python3-pacparser_1.3.6-1.1_amd64.deb'.
dpkg-deb: building package 'libpacparser1-dbgsym' in '../libpacparser1-dbgsym_1.3.6-1.1_amd64.deb'.
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../pacparser_1.3.6-1.1_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T04:49:01Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


pacparser_1.3.6-1.1_amd64.changes:
----------------------------------

Format: 1.8
Date: Mon, 11 Jan 2016 14:07:26 -0500
Source: pacparser
Binary: libpacparser-dev libpacparser1 libpacparser1-dbgsym python-pacparser python-pacparser-dbgsym python3-pacparser python3-pacparser-dbgsym
Architecture: amd64
Version: 1.3.6-1.1
Distribution: unstable
Urgency: medium
Maintainer: Manu Garg <manugarg@gmail.com>
Changed-By: Scott Kitterman <scott@kitterman.com>
Description:
 libpacparser-dev - library to parse proxy auto-config files (development files)
 libpacparser1 - library to parse proxy auto-config files
 python-pacparser - Python module to parse proxy auto-config files
 python3-pacparser - Python 3 module to parse proxy auto-config files
Closes: 809466
Changes:
 pacparser (1.3.6-1.1) unstable; urgency=medium
 .
   * Non-maintainer upload. (Closes: #809466)
   * Loop over supported python3 versions in build/install rules to add support
     for multiple python3 versions
   * Add removal of python build directory to clean rule
   * Slightly change python3-pacparser descriptions to distinguish from python-
     pacparser
   * Add libpacparser1 to libpacparser-dev depends for proper shared library
     package operation
Checksums-Sha1:
 ff2ed0da91f0322dbe2d97bdd4a75a6f5e5f923a 17240 libpacparser-dev_1.3.6-1.1_amd64.deb
 ea1e91a228c55a203b680ff05045113ddb003696 530140 libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 d42c756c0ee274af97b72be67c8b15bedd577be9 330988 libpacparser1_1.3.6-1.1_amd64.deb
 02ba175a33f933f28bc503105edebebe5ee96bf0 8226 pacparser_1.3.6-1.1_amd64.buildinfo
 fb92cb4e8da082c07dcb9b5e8ca951ac4e09e754 530544 python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 483fc5f8e21b93136171d5bbc8f55a3d60063a9c 350168 python-pacparser_1.3.6-1.1_amd64.deb
 ef1566fd08b000bb8b325818c9ded7735fdcdd5b 1011356 python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 c24cda780b8f60afd6350059bda503f6165c9b56 349492 python3-pacparser_1.3.6-1.1_amd64.deb
Checksums-Sha256:
 1245fc6119f608201ac15e8fbeeafd23766dbf1d751b310d5a432e7d2a119adf 17240 libpacparser-dev_1.3.6-1.1_amd64.deb
 29d217fac80f340dba62364b0e56a59aab9ab7241b02b9038eb69fa900b2f49c 530140 libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 54a2f9b71bd7f511cad1a27e81b5df88aeeb56b66dd3ffd04beacfb6ae437236 330988 libpacparser1_1.3.6-1.1_amd64.deb
 4173c326ebde697b24cacc703d386ddd97e9ddf5da6df1e32e87540fcd2bd21c 8226 pacparser_1.3.6-1.1_amd64.buildinfo
 8fba74ae74ffe78390319478ad0a9d9db705887c2920621747aa292872f30212 530544 python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 4daec70fbc833304bc735119ba5b622aad35669728dd601244fd880686980f23 350168 python-pacparser_1.3.6-1.1_amd64.deb
 b944445eca3ff92faee09e0e43cf1c8612bee437966e28bcdc75a3aeff1ac378 1011356 python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 c50e73c3c187f06d43f14e1fd939390853af147c2d6bc7103de0b3259c1826f3 349492 python3-pacparser_1.3.6-1.1_amd64.deb
Files:
 4a6d4f86d691badc66b473db3c945d58 17240 libdevel extra libpacparser-dev_1.3.6-1.1_amd64.deb
 b875de9cb296ad167b54df464f1ffb73 530140 debug optional libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 c4d259b09a8d83f97c3b8a21aa22c43d 330988 libs extra libpacparser1_1.3.6-1.1_amd64.deb
 fb0d3c599e3f1dc0a1f69aae2f583e31 8226 libs extra pacparser_1.3.6-1.1_amd64.buildinfo
 b5f6eaaf6aa95b3d6a978b37e26c3d39 530544 debug optional python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 88785757727603a573630dbc0dc09e46 350168 python extra python-pacparser_1.3.6-1.1_amd64.deb
 b92ceba0bc470b20a2f742a75e3f5cb6 1011356 debug optional python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 6b996470e02f8d45eb54994ffc83df7e 349492 python extra python3-pacparser_1.3.6-1.1_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: pacparser
Binary: libpacparser1 libpacparser-dev python-pacparser python3-pacparser
Architecture: amd64
Version: 1.3.6-1.1
Checksums-Md5:
 4a6d4f86d691badc66b473db3c945d58 17240 libpacparser-dev_1.3.6-1.1_amd64.deb
 b875de9cb296ad167b54df464f1ffb73 530140 libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 c4d259b09a8d83f97c3b8a21aa22c43d 330988 libpacparser1_1.3.6-1.1_amd64.deb
 b5f6eaaf6aa95b3d6a978b37e26c3d39 530544 python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 88785757727603a573630dbc0dc09e46 350168 python-pacparser_1.3.6-1.1_amd64.deb
 b92ceba0bc470b20a2f742a75e3f5cb6 1011356 python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 6b996470e02f8d45eb54994ffc83df7e 349492 python3-pacparser_1.3.6-1.1_amd64.deb
Checksums-Sha1:
 ff2ed0da91f0322dbe2d97bdd4a75a6f5e5f923a 17240 libpacparser-dev_1.3.6-1.1_amd64.deb
 ea1e91a228c55a203b680ff05045113ddb003696 530140 libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 d42c756c0ee274af97b72be67c8b15bedd577be9 330988 libpacparser1_1.3.6-1.1_amd64.deb
 fb92cb4e8da082c07dcb9b5e8ca951ac4e09e754 530544 python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 483fc5f8e21b93136171d5bbc8f55a3d60063a9c 350168 python-pacparser_1.3.6-1.1_amd64.deb
 ef1566fd08b000bb8b325818c9ded7735fdcdd5b 1011356 python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 c24cda780b8f60afd6350059bda503f6165c9b56 349492 python3-pacparser_1.3.6-1.1_amd64.deb
Checksums-Sha256:
 1245fc6119f608201ac15e8fbeeafd23766dbf1d751b310d5a432e7d2a119adf 17240 libpacparser-dev_1.3.6-1.1_amd64.deb
 29d217fac80f340dba62364b0e56a59aab9ab7241b02b9038eb69fa900b2f49c 530140 libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
 54a2f9b71bd7f511cad1a27e81b5df88aeeb56b66dd3ffd04beacfb6ae437236 330988 libpacparser1_1.3.6-1.1_amd64.deb
 8fba74ae74ffe78390319478ad0a9d9db705887c2920621747aa292872f30212 530544 python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 4daec70fbc833304bc735119ba5b622aad35669728dd601244fd880686980f23 350168 python-pacparser_1.3.6-1.1_amd64.deb
 b944445eca3ff92faee09e0e43cf1c8612bee437966e28bcdc75a3aeff1ac378 1011356 python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
 c50e73c3c187f06d43f14e1fd939390853af147c2d6bc7103de0b3259c1826f3 349492 python3-pacparser_1.3.6-1.1_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 04:49:00 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-9 (= 1:9.0.1-8),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-python (= 4.20191017),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-9-dev (= 1:9.0.1-8),
 libclang-cpp9 (= 1:9.0.1-8),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libexpat1 (= 2.2.9-1),
 libexpat1-dev (= 2.2.9-1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm9 (= 1:9.0.1-8),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpdec2 (= 2.4.2-2),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libpython-dev (= 2.7.17-2),
 libpython-stdlib (= 2.7.17-2),
 libpython2-dev (= 2.7.17-2),
 libpython2-stdlib (= 2.7.17-2),
 libpython2.7 (= 2.7.17-1+b1),
 libpython2.7-dev (= 2.7.17-1+b1),
 libpython2.7-minimal (= 2.7.17-1+b1),
 libpython2.7-stdlib (= 2.7.17-1+b1),
 libpython3-all-dev (= 3.7.5-3),
 libpython3-dev (= 3.7.5-3),
 libpython3-stdlib (= 3.7.5-3),
 libpython3.7 (= 3.7.6-1+b1),
 libpython3.7-dev (= 3.7.6-1+b1),
 libpython3.7-minimal (= 3.7.6-1+b1),
 libpython3.7-stdlib (= 3.7.6-1+b1),
 libpython3.8 (= 3.8.2~rc2-2),
 libpython3.8-dev (= 3.8.2~rc2-2),
 libpython3.8-minimal (= 3.8.2~rc2-2),
 libpython3.8-stdlib (= 3.8.2~rc2-2),
 libquadmath0 (= 10-20200222-1),
 libreadline8 (= 8.0-3),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libsqlite3-0 (= 3.31.1-3),
 libssl1.1 (= 1.1.1d-2),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 mime-support (= 3.64),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 python (= 2.7.17-2),
 python-dev (= 2.7.17-2),
 python-minimal (= 2.7.17-2),
 python2 (= 2.7.17-2),
 python2-dev (= 2.7.17-2),
 python2-minimal (= 2.7.17-2),
 python2.7 (= 2.7.17-1+b1),
 python2.7-dev (= 2.7.17-1+b1),
 python2.7-minimal (= 2.7.17-1+b1),
 python3 (= 3.7.5-3),
 python3-all (= 3.7.5-3),
 python3-all-dev (= 3.7.5-3),
 python3-dev (= 3.7.5-3),
 python3-distutils (= 3.8.0-1),
 python3-lib2to3 (= 3.8.0-1),
 python3-minimal (= 3.7.5-3),
 python3.7 (= 3.7.6-1+b1),
 python3.7-dev (= 3.7.6-1+b1),
 python3.7-minimal (= 3.7.6-1+b1),
 python3.8 (= 3.8.2~rc2-2),
 python3.8-dev (= 3.8.2~rc2-2),
 python3.8-minimal (= 3.8.2~rc2-2),
 readline-common (= 8.0-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2),
 zlib1g-dev (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1452539246"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


libpacparser-dev_1.3.6-1.1_amd64.deb
------------------------------------

 new Debian package, version 2.0.
 size 17240 bytes: control archive=1320 bytes.
    1273 bytes,    27 lines      control              
     878 bytes,    11 lines      md5sums              
 Package: libpacparser-dev
 Source: pacparser
 Version: 1.3.6-1.1
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 92
 Depends: libpacparser1 (= 1.3.6-1.1)
 Conflicts: libpacparser1-dev
 Provides: libpacparser1-dev
 Section: libdevel
 Priority: extra
 Description: library to parse proxy auto-config files (development files)
  a library to parse proxy auto-config (PAC) files. Proxy auto-config files are
  a vastly used proxy configuration method these days. Web browsers can use a PAC
  file to determine which proxy server to use or whether to go direct for a given
  URL. PAC files are written in JavaScript and can be programmed to return
  different proxy methods (e.g. "PROXY proxy1:port; DIRECT") depending upon URL,
  source IP address, protocol, time of the day etc. PAC files introduce a lot of
  possibilities.
  .
  Needless to say, PAC files are now a widely accepted method for proxy
  configuration management and companies all over are using them in corporate
  environments. Almost all popular web browsers support PAC files. The idea
  behind pacparser is to make it easy to add this PAC file parsing capability to
  any program (C and Python supported right now).
  .
  This package contains the header files to build against the shared library.

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/include/
-rw-r--r-- root/root      5666 2016-01-11 19:07 ./usr/include/pacparser.h
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/lib/libpacparser.so -> libpacparser.so.1
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/
-rw-r--r-- root/root      1476 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/changelog.Debian.gz
-rw-r--r-- root/root       767 2015-09-04 20:06 ./usr/share/doc/libpacparser-dev/copyright
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/examples/
-rw-r--r-- root/root      3249 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/examples/fetchurl.py
-rw-r--r-- root/root       379 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/examples/pactest.c
-rw-r--r-- root/root       263 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/examples/pactest.py
-rw-r--r-- root/root       430 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/examples/wpad.dat
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/html/
-rw-r--r-- root/root     25363 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/html/doxygen.css
-rw-r--r-- root/root     20317 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/html/pacparser.html
-rw-r--r-- root/root      3281 2016-01-11 19:07 ./usr/share/doc/libpacparser-dev/html/pactester.1.html
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/man/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/man/man3/
-rw-r--r-- root/root      1675 2016-01-11 19:07 ./usr/share/man/man3/pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_cleanup.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_enable_microsoft_extensions.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_error_printer.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_find_proxy.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_init.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_just_find_proxy.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_parse_pac.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_parse_pac_file.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_parse_pac_string.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_set_error_printer.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_setmyip.3.gz -> pacparser.3.gz
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/man/man3/pacparser_version.3.gz -> pacparser.3.gz


libpacparser1-dbgsym_1.3.6-1.1_amd64.deb
----------------------------------------

 new Debian package, version 2.0.
 size 530140 bytes: control archive=584 bytes.
     393 bytes,    12 lines      control              
     212 bytes,     2 lines      md5sums              
 Package: libpacparser1-dbgsym
 Source: pacparser
 Version: 1.3.6-1.1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 610
 Depends: libpacparser1 (= 1.3.6-1.1)
 Section: debug
 Priority: optional
 Description: debug symbols for libpacparser1
 Build-Ids: 09d035f78252f8d331284f4dd6e02b17ae20e83a ec46f84e75a0c6f20a878a1c684dd0ec14a52cbd

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/09/
-rw-r--r-- root/root    602984 2016-01-11 19:07 ./usr/lib/debug/.build-id/09/d035f78252f8d331284f4dd6e02b17ae20e83a.debug
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/ec/
-rw-r--r-- root/root      9376 2016-01-11 19:07 ./usr/lib/debug/.build-id/ec/46f84e75a0c6f20a878a1c684dd0ec14a52cbd.debug
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/doc/libpacparser1-dbgsym -> libpacparser1


libpacparser1_1.3.6-1.1_amd64.deb
---------------------------------

 new Debian package, version 2.0.
 size 330988 bytes: control archive=1244 bytes.
    1190 bytes,    26 lines      control              
     406 bytes,     6 lines      md5sums              
      29 bytes,     1 lines      shlibs               
      65 bytes,     2 lines      triggers             
 Package: libpacparser1
 Source: pacparser
 Version: 1.3.6-1.1
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 1358
 Depends: libc6 (>= 2.29)
 Section: libs
 Priority: extra
 Description: library to parse proxy auto-config files
  a library to parse proxy auto-config (PAC) files. Proxy auto-config files are
  a vastly used proxy configuration method these days. Web browsers can use a PAC
  file to determine which proxy server to use or whether to go direct for a given
  URL. PAC files are written in JavaScript and can be programmed to return
  different proxy methods (e.g. "PROXY proxy1:port; DIRECT") depending upon URL,
  source IP address, protocol, time of the day etc. PAC files introduce a lot of
  possibilities.
  .
  Needless to say, PAC files are now a widely accepted method for proxy
  configuration management and companies all over are using them in corporate
  environments. Almost all popular web browsers support PAC files. The idea
  behind pacparser is to make it easy to add this PAC file parsing capability to
  any program (C and Python supported right now).
  .
  This package contains the shared library, and pactester, a tool for testing
  PAC files

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/bin/
-rwxr-xr-x root/root     14616 2016-01-11 19:07 ./usr/bin/pactester
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
-rw-r--r-- root/root   1353928 2016-01-11 19:07 ./usr/lib/libpacparser.so.1
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/libpacparser1/
-rw-r--r-- root/root      3466 2015-09-04 19:11 ./usr/share/doc/libpacparser1/README.md
-rw-r--r-- root/root      1476 2016-01-11 19:07 ./usr/share/doc/libpacparser1/changelog.Debian.gz
-rw-r--r-- root/root       767 2015-09-04 20:06 ./usr/share/doc/libpacparser1/copyright
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/man/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/man/man1/
-rw-r--r-- root/root       812 2016-01-11 19:07 ./usr/share/man/man1/pactester.1.gz


python-pacparser-dbgsym_1.3.6-1.1_amd64.deb
-------------------------------------------

 new Debian package, version 2.0.
 size 530544 bytes: control archive=524 bytes.
     361 bytes,    12 lines      control              
     106 bytes,     1 lines      md5sums              
 Package: python-pacparser-dbgsym
 Source: pacparser
 Version: 1.3.6-1.1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 603
 Depends: python-pacparser (= 1.3.6-1.1)
 Section: debug
 Priority: optional
 Description: debug symbols for python-pacparser
 Build-Ids: ccef2c34ebccae1f0fcef868f06bc2f7a3426ebb

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/cc/
-rw-r--r-- root/root    606568 2016-01-11 19:07 ./usr/lib/debug/.build-id/cc/ef2c34ebccae1f0fcef868f06bc2f7a3426ebb.debug
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/doc/python-pacparser-dbgsym -> python-pacparser


python-pacparser_1.3.6-1.1_amd64.deb
------------------------------------

 new Debian package, version 2.0.
 size 350168 bytes: control archive=1476 bytes.
    1261 bytes,    25 lines      control              
     696 bytes,     8 lines      md5sums              
     166 bytes,     9 lines   *  postinst             #!/bin/sh
     271 bytes,    14 lines   *  prerm                #!/bin/sh
 Package: python-pacparser
 Source: pacparser
 Version: 1.3.6-1.1
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 1422
 Depends: python2 (<< 2.8), python2 (>= 2.7~), python2:any (<< 2.8), python2:any (>= 2.7~), libc6 (>= 2.14)
 Section: python
 Priority: extra
 Description: Python module to parse proxy auto-config files
  a library to parse proxy auto-config (PAC) files. Proxy auto-config files are
  a vastly used proxy configuration method these days. Web browsers can use a PAC
  file to determine which proxy server to use or whether to go direct for a given
  URL. PAC files are written in JavaScript and can be programmed to return
  different proxy methods (e.g. "PROXY proxy1:port; DIRECT") depending upon URL,
  source IP address, protocol, time of the day etc. PAC files introduce a lot of
  possibilities.
  .
  Needless to say, PAC files are now a widely accepted method for proxy
  configuration management and companies all over are using them in corporate
  environments. Almost all popular web browsers support PAC files. The idea
  behind pacparser is to make it easy to add this PAC file parsing capability to
  any program (C and Python supported right now).
  .
  This package contains the Python bindings for the shared library

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python2.7/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python2.7/dist-packages/
-rw-r--r-- root/root       276 2016-01-11 19:07 ./usr/lib/python2.7/dist-packages/pacparser-1.egg-info
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python2.7/dist-packages/pacparser/
-rw-r--r-- root/root      3387 2015-09-04 19:11 ./usr/lib/python2.7/dist-packages/pacparser/__init__.py
-rw-r--r-- root/root   1427896 2016-01-11 19:07 ./usr/lib/python2.7/dist-packages/pacparser/_pacparser.x86_64-linux-gnu.so
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/python-pacparser/
-rw-r--r-- root/root      1476 2016-01-11 19:07 ./usr/share/doc/python-pacparser/changelog.Debian.gz
-rw-r--r-- root/root       767 2015-09-04 20:06 ./usr/share/doc/python-pacparser/copyright
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/python-pacparser/examples/
-rwxr-xr-x root/root      3249 2015-09-04 19:11 ./usr/share/doc/python-pacparser/examples/fetchurl.py
-rwxr-xr-x root/root       263 2015-09-04 19:11 ./usr/share/doc/python-pacparser/examples/pactest.py
-rw-r--r-- root/root       430 2015-09-04 19:11 ./usr/share/doc/python-pacparser/examples/wpad.dat


python3-pacparser-dbgsym_1.3.6-1.1_amd64.deb
--------------------------------------------

 new Debian package, version 2.0.
 size 1011356 bytes: control archive=588 bytes.
     406 bytes,    12 lines      control              
     212 bytes,     2 lines      md5sums              
 Package: python3-pacparser-dbgsym
 Source: pacparser
 Version: 1.3.6-1.1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 1199
 Depends: python3-pacparser (= 1.3.6-1.1)
 Section: debug
 Priority: optional
 Description: debug symbols for python3-pacparser
 Build-Ids: 5a8bd4798df318a0e276e50aa53a1eadaef85926 a4db31d40dba9226718cec3108371e93a483312b

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/5a/
-rw-r--r-- root/root    607488 2016-01-11 19:07 ./usr/lib/debug/.build-id/5a/8bd4798df318a0e276e50aa53a1eadaef85926.debug
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/debug/.build-id/a4/
-rw-r--r-- root/root    607320 2016-01-11 19:07 ./usr/lib/debug/.build-id/a4/db31d40dba9226718cec3108371e93a483312b.debug
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
lrwxrwxrwx root/root         0 2016-01-11 19:07 ./usr/share/doc/python3-pacparser-dbgsym -> python3-pacparser


python3-pacparser_1.3.6-1.1_amd64.deb
-------------------------------------

 new Debian package, version 2.0.
 size 349492 bytes: control archive=1504 bytes.
    1234 bytes,    25 lines      control              
     566 bytes,     6 lines      md5sums              
     260 bytes,    12 lines   *  postinst             #!/bin/sh
     409 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-pacparser
 Source: pacparser
 Version: 1.3.6-1.1
 Architecture: amd64
 Maintainer: Manu Garg <manugarg@gmail.com>
 Installed-Size: 2810
 Depends: python3 (<< 3.9), python3 (>= 3.7~), python3:any, libc6 (>= 2.14)
 Section: python
 Priority: extra
 Description: Python 3 module to parse proxy auto-config files
  a library to parse proxy auto-config (PAC) files. Proxy auto-config files are
  a vastly used proxy configuration method these days. Web browsers can use a PAC
  file to determine which proxy server to use or whether to go direct for a given
  URL. PAC files are written in JavaScript and can be programmed to return
  different proxy methods (e.g. "PROXY proxy1:port; DIRECT") depending upon URL,
  source IP address, protocol, time of the day etc. PAC files introduce a lot of
  possibilities.
  .
  Needless to say, PAC files are now a widely accepted method for proxy
  configuration management and companies all over are using them in corporate
  environments. Almost all popular web browsers support PAC files. The idea
  behind pacparser is to make it easy to add this PAC file parsing capability to
  any program (C and Python supported right now).
  .
  This package contains the Python 3 bindings for the shared library

drwxr-xr-x root/root         0 2016-01-11 19:07 ./
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python3/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python3/dist-packages/
-rw-r--r-- root/root       276 2016-01-11 19:07 ./usr/lib/python3/dist-packages/pacparser-1.egg-info
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/lib/python3/dist-packages/pacparser/
-rw-r--r-- root/root      3387 2015-09-04 19:11 ./usr/lib/python3/dist-packages/pacparser/__init__.py
-rw-r--r-- root/root   1428024 2016-01-11 19:07 ./usr/lib/python3/dist-packages/pacparser/_pacparser.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root   1428024 2016-01-11 19:07 ./usr/lib/python3/dist-packages/pacparser/_pacparser.cpython-38-x86_64-linux-gnu.so
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/
drwxr-xr-x root/root         0 2016-01-11 19:07 ./usr/share/doc/python3-pacparser/
-rw-r--r-- root/root      1476 2016-01-11 19:07 ./usr/share/doc/python3-pacparser/changelog.Debian.gz
-rw-r--r-- root/root       767 2015-09-04 20:06 ./usr/share/doc/python3-pacparser/copyright


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 51172
Build-Time: 18
Distribution: unstable
Host Architecture: amd64
Install-Time: 108
Job: pacparser_1.3.6-1.1
Machine Architecture: amd64
Package: pacparser
Package-Time: 201
Source-Version: 1.3.6-1.1
Space: 51172
Status: successful
Version: 1.3.6-1.1
--------------------------------------------------------------------------------
Finished at 2020-02-25T04:49:01Z
Build needed 00:03:21, 51172k disk space
DC-Status: OK 203.379147191s
DC-Time-Estimation: 203.379147191 versus expected 77 (r/m: 1.6412876258571427 ; m: 77.0)
