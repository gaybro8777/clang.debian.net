DC-Build-Header: pyfftw 0.12.0-1 / 2020-02-24 14:13:02 +0000
DC-Task: type:rebuild-binarch-only source:pyfftw version:0.12.0-1 chroot:unstable esttime:1741 logfile:/tmp/pyfftw_0.12.0-1_unstable_clang9.log modes:clang9:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang9 pyfftw_0.12.0-1'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-2-35.eu-central-1.compute.internal

+==============================================================================+
| pyfftw 0.12.0-1 (amd64)                      Mon, 24 Feb 2020 14:13:02 +0000 |
+==============================================================================+

Package: pyfftw
Version: 0.12.0-1
Source Version: 0.12.0-1
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-329de956-8357-4f29-8347-435e07714ea8' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang9
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=9
+ echo 'Install of clang-9'
Install of clang-9
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Translation-en [6191 kB]
Fetched 6416 kB in 3s (1913 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-9 libomp-9-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc4 libomp5-9 libstdc++-8-dev libz3-4
Suggested packages:
  clang-9-doc libomp-9-doc libstdc++-8-doc
Recommended packages:
  llvm-9-dev python3
The following NEW packages will be installed:
  clang-9 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-9-dev libomp5-9
  libstdc++-8-dev libz3-4
0 upgraded, 21 newly installed, 0 to remove and 1 not upgraded.
Need to get 43.9 MB of archives.
After this operation, 237 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm9 amd64 1:9.0.1-8 [15.0 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp9 amd64 1:9.0.1-8 [8429 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-9-dev amd64 1:9.0.1-8 [3727 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-9 amd64 1:9.0.1-8 [1156 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp5-9 amd64 1:9.0.1-8 [333 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp-9-dev amd64 1:9.0.1-8 [66.2 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 43.9 MB in 1s (62.4 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm9:amd64.
Preparing to unpack .../03-libllvm9_1%3a9.0.1-8_amd64.deb ...
Unpacking libllvm9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libclang-cpp9.
Preparing to unpack .../04-libclang-cpp9_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-cpp9 (1:9.0.1-8) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../05-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../06-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../07-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../08-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../09-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../10-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../11-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../12-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../13-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../14-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../15-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-9-dev.
Preparing to unpack .../16-libclang-common-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-common-9-dev (1:9.0.1-8) ...
Selecting previously unselected package clang-9.
Preparing to unpack .../17-clang-9_1%3a9.0.1-8_amd64.deb ...
Unpacking clang-9 (1:9.0.1-8) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../18-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-9:amd64.
Preparing to unpack .../19-libomp5-9_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp5-9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libomp-9-dev.
Preparing to unpack .../20-libomp-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp-9-dev (1:9.0.1-8) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-9:amd64 (1:9.0.1-8) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libomp-9-dev (1:9.0.1-8) ...
Setting up libllvm9:amd64 (1:9.0.1-8) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libclang-cpp9 (1:9.0.1-8) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-9-dev (1:9.0.1-8) ...
Setting up clang-9 (1:9.0.1-8) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-9 g++-4.6
+ ln -s clang-9 gcc-4.6
+ ln -s clang-9 cpp-4.6
+ ln -s clang-9 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-9 g++-4.7
+ ln -s clang-9 gcc-4.7
+ ln -s clang-9 cpp-4.7
+ ln -s clang-9 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-9 g++-4.8
+ ln -s clang-9 gcc-4.8
+ ln -s clang-9 cpp-4.8
+ ln -s clang-9 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-9 g++-4.9
+ ln -s clang-9 gcc-4.9
+ ln -s clang-9 cpp-4.9
+ ln -s clang-9 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-9 g++-5
+ ln -s clang-9 gcc-5
+ ln -s clang-9 cpp-5
+ ln -s clang-9 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-9 g++-6
+ ln -s clang-9 gcc-6
+ ln -s clang-9 cpp-6
+ ln -s clang-9 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-9 g++-7
+ ln -s clang-9 gcc-7
+ ln -s clang-9 cpp-7
+ ln -s clang-9 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-9 g++-8
+ ln -s clang-9 gcc-8
+ ln -s clang-9 cpp-8
+ ln -s clang-9 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-9 g++-9
+ ln -s clang-9 gcc-9
+ ln -s clang-9 cpp-9
+ ln -s clang-9 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-9 g++-10
+ ln -s clang-9 gcc-10
+ ln -s clang-9 cpp-10
+ ln -s clang-9 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/pyfftw-yWqnMX
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ grep clang
+ cpp --version
+ grep clang
+ g++ --version

I: Finished running '/tmp/clang9'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/pyfftw-yWqnMX/resolver-pWfR2w' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 253 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 253 kB in 0s (3860 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'pyfftw' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/science-team/pyfftw.git
Please use:
git clone https://salsa.debian.org/science-team/pyfftw.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 156 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main pyfftw 0.12.0-1 (dsc) [2334 B]
Get:2 http://127.0.0.1:12990/debian sid/main pyfftw 0.12.0-1 (tar) [147 kB]
Get:3 http://127.0.0.1:12990/debian sid/main pyfftw 0.12.0-1 (diff) [5832 B]
Fetched 156 kB in 0s (1164 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/pyfftw-yWqnMX/pyfftw-0.12.0' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/pyfftw-yWqnMX' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 12), dh-python, cython3 (>= 0.23), libfftw3-dev, python3-all-dev, python3-numpy (>= 1.10), python3-pkgconfig, python3-scipy (>= 0.16.0), python3-dask (>= 0.15.0), python3-setuptools, python3-sphinx, libjs-jquery, libjs-underscore, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 12), dh-python, cython3 (>= 0.23), libfftw3-dev, python3-all-dev, python3-numpy (>= 1.10), python3-pkgconfig, python3-scipy (>= 0.16.0), python3-dask (>= 0.15.0), python3-setuptools, python3-sphinx, libjs-jquery, libjs-underscore, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [473 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [558 B]
Fetched 1988 B in 0s (176 kB/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils ca-certificates
  cython3 debhelper dh-autoreconf dh-python dh-strip-nondeterminism
  docutils-common dwz file gettext gettext-base groff-base intltool-debian
  libarchive-zip-perl libblas3 libcroco3 libdebhelper-perl libelf1 libexpat1
  libexpat1-dev libfftw3-bin libfftw3-dev libfftw3-double3 libfftw3-long3
  libfftw3-quad3 libfftw3-single3 libfile-stripnondeterminism-perl
  libgfortran5 libglib2.0-0 libicu63 libjs-jquery libjs-sphinxdoc
  libjs-underscore liblapack3 liblbfgsb0 libmagic-mgc libmagic1 libmpdec2
  libpipeline1 libpython3-all-dev libpython3-dev libpython3-stdlib
  libpython3.7 libpython3.7-dev libpython3.7-minimal libpython3.7-stdlib
  libpython3.8 libpython3.8-dev libpython3.8-minimal libpython3.8-stdlib
  libreadline8 libsigsegv2 libsqlite3-0 libssl1.1 libsub-override-perl libtool
  libuchardet0 libxml2 m4 man-db mime-support openssl pkg-config po-debconf
  python-babel-localedata python3 python3-alabaster python3-all
  python3-all-dev python3-attr python3-babel python3-certifi python3-chardet
  python3-dask python3-decorator python3-dev python3-distutils
  python3-docutils python3-fsspec python3-idna python3-imagesize
  python3-jinja2 python3-lib2to3 python3-markupsafe python3-minimal
  python3-numpy python3-packaging python3-pkg-resources python3-pkgconfig
  python3-pygments python3-pyparsing python3-requests python3-roman
  python3-scipy python3-setuptools python3-six python3-sphinx python3-toolz
  python3-tz python3-urllib3 python3.7 python3.7-dev python3.7-minimal
  python3.8 python3.8-dev python3.8-minimal readline-common sensible-utils
  sgml-base sphinx-common xml-core zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation cython-doc dh-make gettext-doc libasprintf-dev libgettextpo-dev
  groff libfftw3-doc libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc
  apparmor less www-browser libmail-box-perl python3-doc python3-tk
  python3-venv python-attr-doc ipython python-dask-doc python3-bcolz
  python3-blosc python3-boto python3-distributed python3-graphviz python3-h5py
  python3-psutil python3-skimage python3-sklearn python3-sqlalchemy
  python3-tables docutils-doc fonts-linuxlibertine | ttf-linux-libertine
  texlive-lang-french texlive-latex-base texlive-latex-recommended
  python-fsspec-doc python-jinja2-doc gfortran python-numpy-doc python3-pytest
  python3-numpy-dbg python-pygments-doc ttf-bitstream-vera
  python-pyparsing-doc python3-cryptography python3-openssl python3-socks
  python-scipy-doc python-setuptools-doc dvipng imagemagick-6.q16 latexmk
  libjs-mathjax python3-sphinx-rtd-theme python3-stemmer sphinx-doc
  texlive-fonts-recommended texlive-latex-extra texlive-plain-generic
  python-toolz-doc python3.7-venv python3.7-doc binfmt-support python3.8-venv
  python3.8-doc readline-doc sgml-base-doc
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs javascript-common libltdl-dev libmail-sendmail-perl
  python3-cloudpickle python3-pandas python3-partd libpaper-utils python3-pil
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils ca-certificates
  cython3 debhelper dh-autoreconf dh-python dh-strip-nondeterminism
  docutils-common dwz file gettext gettext-base groff-base intltool-debian
  libarchive-zip-perl libblas3 libcroco3 libdebhelper-perl libelf1 libexpat1
  libexpat1-dev libfftw3-bin libfftw3-dev libfftw3-double3 libfftw3-long3
  libfftw3-quad3 libfftw3-single3 libfile-stripnondeterminism-perl
  libgfortran5 libglib2.0-0 libicu63 libjs-jquery libjs-sphinxdoc
  libjs-underscore liblapack3 liblbfgsb0 libmagic-mgc libmagic1 libmpdec2
  libpipeline1 libpython3-all-dev libpython3-dev libpython3-stdlib
  libpython3.7 libpython3.7-dev libpython3.7-minimal libpython3.7-stdlib
  libpython3.8 libpython3.8-dev libpython3.8-minimal libpython3.8-stdlib
  libreadline8 libsigsegv2 libsqlite3-0 libssl1.1 libsub-override-perl libtool
  libuchardet0 libxml2 m4 man-db mime-support openssl pkg-config po-debconf
  python-babel-localedata python3 python3-alabaster python3-all
  python3-all-dev python3-attr python3-babel python3-certifi python3-chardet
  python3-dask python3-decorator python3-dev python3-distutils
  python3-docutils python3-fsspec python3-idna python3-imagesize
  python3-jinja2 python3-lib2to3 python3-markupsafe python3-minimal
  python3-numpy python3-packaging python3-pkg-resources python3-pkgconfig
  python3-pygments python3-pyparsing python3-requests python3-roman
  python3-scipy python3-setuptools python3-six python3-sphinx python3-toolz
  python3-tz python3-urllib3 python3.7 python3.7-dev python3.7-minimal
  python3.8 python3.8-dev python3.8-minimal readline-common
  sbuild-build-depends-main-dummy sensible-utils sgml-base sphinx-common
  xml-core zlib1g-dev
0 upgraded, 118 newly installed, 0 to remove and 0 not upgraded.
Need to get 164 MB of archives.
After this operation, 496 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [984 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libssl1.1 amd64 1.1.1d-2 [1540 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-minimal amd64 3.7.6-1+b1 [591 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.2.9-1 [94.3 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 python3.7-minimal amd64 3.7.6-1+b1 [1813 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.7.5-3 [36.8 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 mime-support all 3.64 [37.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libmpdec2 amd64 2.4.2-2 [87.2 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.0-3 [72.5 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.0-3 [160 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.31.1-3 [661 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-stdlib amd64 3.7.6-1+b1 [1735 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 python3.7 amd64 3.7.6-1+b1 [351 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.7.5-3 [20.2 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.7.5-3 [62.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-minimal amd64 3.8.2~rc2-2 [750 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 python3.8-minimal amd64 3.8.2~rc2-2 [1939 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 sgml-base all 1.29.1 [15.0 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 openssl amd64 1.1.1d-2 [840 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 ca-certificates all 20190110 [157 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 cython3 amd64 0.29.14-0.1+b1 [2117 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.8.0-1 [78.3 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.8.0-1 [145 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 4.20191017 [94.4 kB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 xml-core all 0.18+nmu1 [23.8 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 docutils-common all 0.16+dfsg-1 [129 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libblas3 amd64 3.9.0-1 [153 kB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.2.9-1 [136 kB]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-double3 amd64 3.3.8-2 [733 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-long3 amd64 3.3.8-2 [319 kB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-quad3 amd64 3.3.8-2 [558 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-single3 amd64 3.3.8-2 [762 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-bin amd64 3.3.8-2 [50.7 kB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 libfftw3-dev amd64 3.3.8-2 [2106 kB]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 libgfortran5 amd64 10-20200222-1 [721 kB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 libjs-jquery all 3.3.1~dfsg-3 [332 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 libjs-underscore all 1.9.1~dfsg-1 [99.4 kB]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 libjs-sphinxdoc all 1.8.5-5 [96.7 kB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 liblapack3 amd64 3.9.0-1 [2168 kB]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 liblbfgsb0 amd64 3.0+dfsg.3-7 [29.5 kB]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7 amd64 3.7.6-1+b1 [1484 kB]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-dev amd64 3.7.6-1+b1 [41.4 MB]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dev amd64 3.7.5-3 [20.3 kB]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-stdlib amd64 3.8.2~rc2-2 [1665 kB]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8 amd64 3.8.2~rc2-2 [1619 kB]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-dev amd64 3.8.2~rc2-2 [47.3 MB]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dev amd64 3.7.5-3 [1072 B]
Get:81 http://127.0.0.1:12990/debian sid/main amd64 pkg-config amd64 0.29-6 [63.5 kB]
Get:82 http://127.0.0.1:12990/debian sid/main amd64 python-babel-localedata all 2.8.0+dfsg.1-1 [4400 kB]
Get:83 http://127.0.0.1:12990/debian sid/main amd64 python3-alabaster all 0.7.8-1 [18.4 kB]
Get:84 http://127.0.0.1:12990/debian sid/main amd64 python3.8 amd64 3.8.2~rc2-2 [409 kB]
Get:85 http://127.0.0.1:12990/debian sid/main amd64 python3-all amd64 3.7.5-3 [1060 B]
Get:86 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-1.2 [209 kB]
Get:87 http://127.0.0.1:12990/debian sid/main amd64 python3.7-dev amd64 3.7.6-1+b1 [518 kB]
Get:88 http://127.0.0.1:12990/debian sid/main amd64 python3-dev amd64 3.7.5-3 [1260 B]
Get:89 http://127.0.0.1:12990/debian sid/main amd64 python3.8-dev amd64 3.8.2~rc2-2 [515 kB]
Get:90 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dev amd64 3.7.5-3 [1076 B]
Get:91 http://127.0.0.1:12990/debian sid/main amd64 python3-attr all 19.3.0-1 [43.1 kB]
Get:92 http://127.0.0.1:12990/debian sid/main amd64 python3-pkg-resources all 44.0.0-1 [155 kB]
Get:93 http://127.0.0.1:12990/debian sid/main amd64 python3-tz all 2019.3-1 [27.2 kB]
Get:94 http://127.0.0.1:12990/debian sid/main amd64 python3-babel all 2.8.0+dfsg.1-1 [99.9 kB]
Get:95 http://127.0.0.1:12990/debian sid/main amd64 python3-certifi all 2019.11.28-1 [149 kB]
Get:96 http://127.0.0.1:12990/debian sid/main amd64 python3-chardet all 3.0.4-4 [80.8 kB]
Get:97 http://127.0.0.1:12990/debian sid/main amd64 python3-fsspec all 0.6.1-0.1 [45.7 kB]
Get:98 http://127.0.0.1:12990/debian sid/main amd64 python3-toolz all 0.9.0-1 [41.9 kB]
Get:99 http://127.0.0.1:12990/debian sid/main amd64 python3-dask all 2.8.1+dfsg-0.4 [570 kB]
Get:100 http://127.0.0.1:12990/debian sid/main amd64 python3-decorator all 4.3.0-1.1 [14.5 kB]
Get:101 http://127.0.0.1:12990/debian sid/main amd64 python3-roman all 2.0.0-3 [8768 B]
Get:102 http://127.0.0.1:12990/debian sid/main amd64 python3-docutils all 0.16+dfsg-1 [383 kB]
Get:103 http://127.0.0.1:12990/debian sid/main amd64 python3-idna all 2.6-2 [34.4 kB]
Get:104 http://127.0.0.1:12990/debian sid/main amd64 python3-imagesize all 1.2.0-1 [5764 B]
Get:105 http://127.0.0.1:12990/debian sid/main amd64 python3-markupsafe amd64 1.1.0-1+b2 [15.5 kB]
Get:106 http://127.0.0.1:12990/debian sid/main amd64 python3-jinja2 all 2.10.1-1 [107 kB]
Get:107 http://127.0.0.1:12990/debian sid/main amd64 python3-numpy amd64 1:1.17.4-5 [6150 kB]
Get:108 http://127.0.0.1:12990/debian sid/main amd64 python3-pyparsing all 2.4.6-1 [109 kB]
Get:109 http://127.0.0.1:12990/debian sid/main amd64 python3-six all 1.14.0-2 [16.7 kB]
Get:110 http://127.0.0.1:12990/debian sid/main amd64 python3-packaging all 19.1-2 [23.9 kB]
Get:111 http://127.0.0.1:12990/debian sid/main amd64 python3-pkgconfig all 1.5.1-3 [7204 B]
Get:112 http://127.0.0.1:12990/debian sid/main amd64 python3-pygments all 2.3.1+dfsg-1 [594 kB]
Get:113 http://127.0.0.1:12990/debian sid/main amd64 python3-urllib3 all 1.25.8-1 [104 kB]
Get:114 http://127.0.0.1:12990/debian sid/main amd64 python3-requests all 2.22.0-2 [67.0 kB]
Get:115 http://127.0.0.1:12990/debian sid/main amd64 python3-scipy amd64 1.3.3-3 [13.6 MB]
Get:116 http://127.0.0.1:12990/debian sid/main amd64 python3-setuptools all 44.0.0-1 [313 kB]
Get:117 http://127.0.0.1:12990/debian sid/main amd64 sphinx-common all 1.8.5-5 [491 kB]
Get:118 http://127.0.0.1:12990/debian sid/main amd64 python3-sphinx all 1.8.5-5 [482 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 164 MB in 3s (52.3 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../0-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../1-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../2-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../3-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../4-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../5-libssl1.1_1.1.1d-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.1d-2) ...
Selecting previously unselected package libpython3.7-minimal:amd64.
Preparing to unpack .../6-libpython3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../7-libexpat1_2.2.9-1_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.9-1) ...
Selecting previously unselected package python3.7-minimal.
Preparing to unpack .../8-python3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-minimal (3.7.6-1+b1) ...
Setting up libssl1.1:amd64 (1.1.1d-2) ...
Setting up libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Setting up libexpat1:amd64 (2.2.9-1) ...
Setting up python3.7-minimal (3.7.6-1+b1) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 14830 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.7.5-3_amd64.deb ...
Unpacking python3-minimal (3.7.5-3) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../1-mime-support_3.64_all.deb ...
Unpacking mime-support (3.64) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../2-libmpdec2_2.4.2-2_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-2) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../3-readline-common_8.0-3_all.deb ...
Unpacking readline-common (8.0-3) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../4-libreadline8_8.0-3_amd64.deb ...
Unpacking libreadline8:amd64 (8.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../5-libsqlite3-0_3.31.1-3_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.31.1-3) ...
Selecting previously unselected package libpython3.7-stdlib:amd64.
Preparing to unpack .../6-libpython3.7-stdlib_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package python3.7.
Preparing to unpack .../7-python3.7_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../8-libpython3-stdlib_3.7.5-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3-minimal (3.7.5-3) ...
Selecting previously unselected package python3.
(Reading database ... 15301 files and directories currently installed.)
Preparing to unpack .../00-python3_3.7.5-3_amd64.deb ...
Unpacking python3 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-minimal:amd64.
Preparing to unpack .../01-libpython3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package python3.8-minimal.
Preparing to unpack .../02-python3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-minimal (3.8.2~rc2-2) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../03-sgml-base_1.29.1_all.deb ...
Unpacking sgml-base (1.29.1) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../04-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../05-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../06-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../07-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../08-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../09-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../10-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../11-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../12-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../13-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../14-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package openssl.
Preparing to unpack .../15-openssl_1.1.1d-2_amd64.deb ...
Unpacking openssl (1.1.1d-2) ...
Selecting previously unselected package ca-certificates.
Preparing to unpack .../16-ca-certificates_20190110_all.deb ...
Unpacking ca-certificates (20190110) ...
Selecting previously unselected package cython3.
Preparing to unpack .../17-cython3_0.29.14-0.1+b1_amd64.deb ...
Unpacking cython3 (0.29.14-0.1+b1) ...
Selecting previously unselected package libtool.
Preparing to unpack .../18-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../19-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../20-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../21-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../22-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../23-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../24-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../25-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../26-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../27-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../28-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../29-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../30-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../31-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../32-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../33-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../34-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../35-python3-lib2to3_3.8.0-1_all.deb ...
Unpacking python3-lib2to3 (3.8.0-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../36-python3-distutils_3.8.0-1_all.deb ...
Unpacking python3-distutils (3.8.0-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../37-dh-python_4.20191017_all.deb ...
Unpacking dh-python (4.20191017) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../38-xml-core_0.18+nmu1_all.deb ...
Unpacking xml-core (0.18+nmu1) ...
Selecting previously unselected package docutils-common.
Preparing to unpack .../39-docutils-common_0.16+dfsg-1_all.deb ...
Unpacking docutils-common (0.16+dfsg-1) ...
Selecting previously unselected package libblas3:amd64.
Preparing to unpack .../40-libblas3_3.9.0-1_amd64.deb ...
Unpacking libblas3:amd64 (3.9.0-1) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../41-libexpat1-dev_2.2.9-1_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.2.9-1) ...
Selecting previously unselected package libfftw3-double3:amd64.
Preparing to unpack .../42-libfftw3-double3_3.3.8-2_amd64.deb ...
Unpacking libfftw3-double3:amd64 (3.3.8-2) ...
Selecting previously unselected package libfftw3-long3:amd64.
Preparing to unpack .../43-libfftw3-long3_3.3.8-2_amd64.deb ...
Unpacking libfftw3-long3:amd64 (3.3.8-2) ...
Selecting previously unselected package libfftw3-quad3:amd64.
Preparing to unpack .../44-libfftw3-quad3_3.3.8-2_amd64.deb ...
Unpacking libfftw3-quad3:amd64 (3.3.8-2) ...
Selecting previously unselected package libfftw3-single3:amd64.
Preparing to unpack .../45-libfftw3-single3_3.3.8-2_amd64.deb ...
Unpacking libfftw3-single3:amd64 (3.3.8-2) ...
Selecting previously unselected package libfftw3-bin.
Preparing to unpack .../46-libfftw3-bin_3.3.8-2_amd64.deb ...
Unpacking libfftw3-bin (3.3.8-2) ...
Selecting previously unselected package libfftw3-dev:amd64.
Preparing to unpack .../47-libfftw3-dev_3.3.8-2_amd64.deb ...
Unpacking libfftw3-dev:amd64 (3.3.8-2) ...
Selecting previously unselected package libgfortran5:amd64.
Preparing to unpack .../48-libgfortran5_10-20200222-1_amd64.deb ...
Unpacking libgfortran5:amd64 (10-20200222-1) ...
Selecting previously unselected package libjs-jquery.
Preparing to unpack .../49-libjs-jquery_3.3.1~dfsg-3_all.deb ...
Unpacking libjs-jquery (3.3.1~dfsg-3) ...
Selecting previously unselected package libjs-underscore.
Preparing to unpack .../50-libjs-underscore_1.9.1~dfsg-1_all.deb ...
Unpacking libjs-underscore (1.9.1~dfsg-1) ...
Selecting previously unselected package libjs-sphinxdoc.
Preparing to unpack .../51-libjs-sphinxdoc_1.8.5-5_all.deb ...
Unpacking libjs-sphinxdoc (1.8.5-5) ...
Selecting previously unselected package liblapack3:amd64.
Preparing to unpack .../52-liblapack3_3.9.0-1_amd64.deb ...
Unpacking liblapack3:amd64 (3.9.0-1) ...
Selecting previously unselected package liblbfgsb0:amd64.
Preparing to unpack .../53-liblbfgsb0_3.0+dfsg.3-7_amd64.deb ...
Unpacking liblbfgsb0:amd64 (3.0+dfsg.3-7) ...
Selecting previously unselected package libpython3.7:amd64.
Preparing to unpack .../54-libpython3.7_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3.7-dev:amd64.
Preparing to unpack .../55-libpython3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../56-libpython3-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-stdlib:amd64.
Preparing to unpack .../57-libpython3.8-stdlib_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8:amd64.
Preparing to unpack .../58-libpython3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8-dev:amd64.
Preparing to unpack .../59-libpython3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../60-libpython3-all-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../61-pkg-config_0.29-6_amd64.deb ...
Unpacking pkg-config (0.29-6) ...
Selecting previously unselected package python-babel-localedata.
Preparing to unpack .../62-python-babel-localedata_2.8.0+dfsg.1-1_all.deb ...
Unpacking python-babel-localedata (2.8.0+dfsg.1-1) ...
Selecting previously unselected package python3-alabaster.
Preparing to unpack .../63-python3-alabaster_0.7.8-1_all.deb ...
Unpacking python3-alabaster (0.7.8-1) ...
Selecting previously unselected package python3.8.
Preparing to unpack .../64-python3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8 (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../65-python3-all_3.7.5-3_amd64.deb ...
Unpacking python3-all (3.7.5-3) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../66-zlib1g-dev_1%3a1.2.11.dfsg-1.2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-1.2) ...
Selecting previously unselected package python3.7-dev.
Preparing to unpack .../67-python3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-dev (3.7.6-1+b1) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../68-python3-dev_3.7.5-3_amd64.deb ...
Unpacking python3-dev (3.7.5-3) ...
Selecting previously unselected package python3.8-dev.
Preparing to unpack .../69-python3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-dev (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../70-python3-all-dev_3.7.5-3_amd64.deb ...
Unpacking python3-all-dev (3.7.5-3) ...
Selecting previously unselected package python3-attr.
Preparing to unpack .../71-python3-attr_19.3.0-1_all.deb ...
Unpacking python3-attr (19.3.0-1) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../72-python3-pkg-resources_44.0.0-1_all.deb ...
Unpacking python3-pkg-resources (44.0.0-1) ...
Selecting previously unselected package python3-tz.
Preparing to unpack .../73-python3-tz_2019.3-1_all.deb ...
Unpacking python3-tz (2019.3-1) ...
Selecting previously unselected package python3-babel.
Preparing to unpack .../74-python3-babel_2.8.0+dfsg.1-1_all.deb ...
Unpacking python3-babel (2.8.0+dfsg.1-1) ...
Selecting previously unselected package python3-certifi.
Preparing to unpack .../75-python3-certifi_2019.11.28-1_all.deb ...
Unpacking python3-certifi (2019.11.28-1) ...
Selecting previously unselected package python3-chardet.
Preparing to unpack .../76-python3-chardet_3.0.4-4_all.deb ...
Unpacking python3-chardet (3.0.4-4) ...
Selecting previously unselected package python3-fsspec.
Preparing to unpack .../77-python3-fsspec_0.6.1-0.1_all.deb ...
Unpacking python3-fsspec (0.6.1-0.1) ...
Selecting previously unselected package python3-toolz.
Preparing to unpack .../78-python3-toolz_0.9.0-1_all.deb ...
Unpacking python3-toolz (0.9.0-1) ...
Selecting previously unselected package python3-dask.
Preparing to unpack .../79-python3-dask_2.8.1+dfsg-0.4_all.deb ...
Unpacking python3-dask (2.8.1+dfsg-0.4) ...
Selecting previously unselected package python3-decorator.
Preparing to unpack .../80-python3-decorator_4.3.0-1.1_all.deb ...
Unpacking python3-decorator (4.3.0-1.1) ...
Selecting previously unselected package python3-roman.
Preparing to unpack .../81-python3-roman_2.0.0-3_all.deb ...
Unpacking python3-roman (2.0.0-3) ...
Selecting previously unselected package python3-docutils.
Preparing to unpack .../82-python3-docutils_0.16+dfsg-1_all.deb ...
Unpacking python3-docutils (0.16+dfsg-1) ...
Selecting previously unselected package python3-idna.
Preparing to unpack .../83-python3-idna_2.6-2_all.deb ...
Unpacking python3-idna (2.6-2) ...
Selecting previously unselected package python3-imagesize.
Preparing to unpack .../84-python3-imagesize_1.2.0-1_all.deb ...
Unpacking python3-imagesize (1.2.0-1) ...
Selecting previously unselected package python3-markupsafe.
Preparing to unpack .../85-python3-markupsafe_1.1.0-1+b2_amd64.deb ...
Unpacking python3-markupsafe (1.1.0-1+b2) ...
Selecting previously unselected package python3-jinja2.
Preparing to unpack .../86-python3-jinja2_2.10.1-1_all.deb ...
Unpacking python3-jinja2 (2.10.1-1) ...
Selecting previously unselected package python3-numpy.
Preparing to unpack .../87-python3-numpy_1%3a1.17.4-5_amd64.deb ...
Unpacking python3-numpy (1:1.17.4-5) ...
Selecting previously unselected package python3-pyparsing.
Preparing to unpack .../88-python3-pyparsing_2.4.6-1_all.deb ...
Unpacking python3-pyparsing (2.4.6-1) ...
Selecting previously unselected package python3-six.
Preparing to unpack .../89-python3-six_1.14.0-2_all.deb ...
Unpacking python3-six (1.14.0-2) ...
Selecting previously unselected package python3-packaging.
Preparing to unpack .../90-python3-packaging_19.1-2_all.deb ...
Unpacking python3-packaging (19.1-2) ...
Selecting previously unselected package python3-pkgconfig.
Preparing to unpack .../91-python3-pkgconfig_1.5.1-3_all.deb ...
Unpacking python3-pkgconfig (1.5.1-3) ...
Selecting previously unselected package python3-pygments.
Preparing to unpack .../92-python3-pygments_2.3.1+dfsg-1_all.deb ...
Unpacking python3-pygments (2.3.1+dfsg-1) ...
Selecting previously unselected package python3-urllib3.
Preparing to unpack .../93-python3-urllib3_1.25.8-1_all.deb ...
Unpacking python3-urllib3 (1.25.8-1) ...
Selecting previously unselected package python3-requests.
Preparing to unpack .../94-python3-requests_2.22.0-2_all.deb ...
Unpacking python3-requests (2.22.0-2) ...
Selecting previously unselected package python3-scipy.
Preparing to unpack .../95-python3-scipy_1.3.3-3_amd64.deb ...
Unpacking python3-scipy (1.3.3-3) ...
Selecting previously unselected package python3-setuptools.
Preparing to unpack .../96-python3-setuptools_44.0.0-1_all.deb ...
Unpacking python3-setuptools (44.0.0-1) ...
Selecting previously unselected package sphinx-common.
Preparing to unpack .../97-sphinx-common_1.8.5-5_all.deb ...
Unpacking sphinx-common (1.8.5-5) ...
Selecting previously unselected package python3-sphinx.
Preparing to unpack .../98-python3-sphinx_1.8.5-5_all.deb ...
Unpacking python3-sphinx (1.8.5-5) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../99-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Setting up libfftw3-single3:amd64 (3.3.8-2) ...
Setting up mime-support (3.64) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libsqlite3-0:amd64 (3.31.1-3) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up libfftw3-long3:amd64 (3.3.8-2) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up python-babel-localedata (2.8.0+dfsg.1-1) ...
Setting up autotools-dev (20180224.1) ...
Setting up libblas3:amd64 (3.9.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 to provide /usr/lib/x86_64-linux-gnu/libblas.so.3 (libblas.so.3-x86_64-linux-gnu) in auto mode
Setting up libexpat1-dev:amd64 (2.2.9-1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up libfftw3-quad3:amd64 (3.3.8-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up pkg-config (0.29-6) ...
Setting up libfftw3-double3:amd64 (3.3.8-2) ...
Setting up libgfortran5:amd64 (10-20200222-1) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-1.2) ...
Setting up python3.8-minimal (3.8.2~rc2-2) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up sgml-base (1.29.1) ...
Setting up libmpdec2:amd64 (2.4.2-2) ...
Setting up libjs-jquery (3.3.1~dfsg-3) ...
Setting up openssl (1.1.1d-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up readline-common (8.0-3) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libjs-underscore (1.9.1~dfsg-1) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up liblapack3:amd64 (3.9.0-1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 to provide /usr/lib/x86_64-linux-gnu/liblapack.so.3 (liblapack.so.3-x86_64-linux-gnu) in auto mode
Setting up libtool (2.4.6-13) ...
Setting up libfftw3-bin (3.3.8-2) ...
Setting up libreadline8:amd64 (8.0-3) ...
Setting up m4 (1.4.18-4) ...
Setting up ca-certificates (20190110) ...
Updating certificates in /etc/ssl/certs...
128 added, 0 removed; done.
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up libjs-sphinxdoc (1.8.5-5) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up xml-core (0.18+nmu1) ...
Setting up libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Setting up python3.8 (3.8.2~rc2-2) ...
Setting up libfftw3-dev:amd64 (3.3.8-2) ...
Setting up liblbfgsb0:amd64 (3.0+dfsg.3-7) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Setting up gettext (0.19.8.1-10) ...
Setting up libpython3.7:amd64 (3.7.6-1+b1) ...
Setting up libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libpython3.8:amd64 (3.8.2~rc2-2) ...
Setting up sphinx-common (1.8.5-5) ...
Setting up libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3.7 (3.7.6-1+b1) ...
Setting up libpython3-dev:amd64 (3.7.5-3) ...
Setting up po-debconf (1.0.21) ...
Setting up python3 (3.7.5-3) ...
Setting up python3-markupsafe (1.1.0-1+b2) ...
Setting up python3.7-dev (3.7.6-1+b1) ...
Setting up python3-tz (2019.3-1) ...
Setting up python3-six (1.14.0-2) ...
Setting up python3-roman (2.0.0-3) ...
Setting up python3-decorator (4.3.0-1.1) ...
Setting up python3-jinja2 (2.10.1-1) ...
Setting up python3-pygments (2.3.1+dfsg-1) ...
Setting up python3-pyparsing (2.4.6-1) ...
Setting up python3-certifi (2019.11.28-1) ...
Setting up libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Setting up libpython3-all-dev:amd64 (3.7.5-3) ...
Setting up python3-idna (2.6-2) ...
Setting up cython3 (0.29.14-0.1+b1) ...
Setting up python3-urllib3 (1.25.8-1) ...
Setting up python3.8-dev (3.8.2~rc2-2) ...
Setting up python3-toolz (0.9.0-1) ...
Setting up python3-pkgconfig (1.5.1-3) ...
Setting up python3-lib2to3 (3.8.0-1) ...
Setting up python3-imagesize (1.2.0-1) ...
Setting up python3-pkg-resources (44.0.0-1) ...
Setting up python3-distutils (3.8.0-1) ...
Setting up dh-python (4.20191017) ...
Setting up python3-attr (19.3.0-1) ...
Setting up python3-setuptools (44.0.0-1) ...
Setting up python3-babel (2.8.0+dfsg.1-1) ...
update-alternatives: using /usr/bin/pybabel-python3 to provide /usr/bin/pybabel (pybabel) in auto mode
Setting up python3-alabaster (0.7.8-1) ...
Setting up python3-fsspec (0.6.1-0.1) ...
Setting up python3-dask (2.8.1+dfsg-0.4) ...
Setting up python3-all (3.7.5-3) ...
Setting up python3-packaging (19.1-2) ...
Setting up python3-chardet (3.0.4-4) ...
Setting up python3-dev (3.7.5-3) ...
Setting up python3-requests (2.22.0-2) ...
Setting up python3-numpy (1:1.17.4-5) ...
Setting up python3-all-dev (3.7.5-3) ...
Setting up python3-scipy (1.3.3-3) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Processing triggers for libc-bin (2.29-10) ...
Processing triggers for sgml-base (1.29.1) ...
Setting up docutils-common (0.16+dfsg-1) ...
Processing triggers for sgml-base (1.29.1) ...
Setting up python3-docutils (0.16+dfsg-1) ...
update-alternatives: using /usr/share/docutils/scripts/python3/rst-buildhtml to provide /usr/bin/rst-buildhtml (rst-buildhtml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html to provide /usr/bin/rst2html (rst2html) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html4 to provide /usr/bin/rst2html4 (rst2html4) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2html5 to provide /usr/bin/rst2html5 (rst2html5) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2latex to provide /usr/bin/rst2latex (rst2latex) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2man to provide /usr/bin/rst2man (rst2man) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2odt to provide /usr/bin/rst2odt (rst2odt) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2odt_prepstyles to provide /usr/bin/rst2odt_prepstyles (rst2odt_prepstyles) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2pseudoxml to provide /usr/bin/rst2pseudoxml (rst2pseudoxml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2s5 to provide /usr/bin/rst2s5 (rst2s5) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2xetex to provide /usr/bin/rst2xetex (rst2xetex) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rst2xml to provide /usr/bin/rst2xml (rst2xml) in auto mode
update-alternatives: using /usr/share/docutils/scripts/python3/rstpep2html to provide /usr/bin/rstpep2html (rstpep2html) in auto mode
Setting up python3-sphinx (1.8.5-5) ...
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-apidoc to provide /usr/bin/sphinx-apidoc (sphinx-apidoc) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-autogen to provide /usr/bin/sphinx-autogen (sphinx-autogen) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-build to provide /usr/bin/sphinx-build (sphinx-build) in auto mode
update-alternatives: using /usr/share/sphinx/scripts/python3/sphinx-quickstart to provide /usr/bin/sphinx-quickstart (sphinx-quickstart) in auto mode
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for ca-certificates (20190110) ...
Updating certificates in /etc/ssl/certs...
0 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d...
done.

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 ca-certificates_20190110 clang-9_1:9.0.1-8 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 cython3_0.29.14-0.1+b1 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-python_4.20191017 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 docutils-common_0.16+dfsg-1 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblas3_3.9.0-1 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-9-dev_1:9.0.1-8 libclang-cpp9_1:9.0.1-8 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libexpat1_2.2.9-1 libexpat1-dev_2.2.9-1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfftw3-bin_3.3.8-2 libfftw3-dev_3.3.8-2 libfftw3-double3_3.3.8-2 libfftw3-long3_3.3.8-2 libfftw3-quad3_3.3.8-2 libfftw3-single3_3.3.8-2 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libgfortran5_10-20200222-1 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libjs-jquery_3.3.1~dfsg-3 libjs-sphinxdoc_1.8.5-5 libjs-underscore_1.9.1~dfsg-1 liblapack3_3.9.0-1 liblbfgsb0_3.0+dfsg.3-7 libllvm9_1:9.0.1-8 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpdec2_2.4.2-2 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-9-dev_1:9.0.1-8 libomp5-9_1:9.0.1-8 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libpython3-all-dev_3.7.5-3 libpython3-dev_3.7.5-3 libpython3-stdlib_3.7.5-3 libpython3.7_3.7.6-1+b1 libpython3.7-dev_3.7.6-1+b1 libpython3.7-minimal_3.7.6-1+b1 libpython3.7-stdlib_3.7.6-1+b1 libpython3.8_3.8.2~rc2-2 libpython3.8-dev_3.8.2~rc2-2 libpython3.8-minimal_3.8.2~rc2-2 libpython3.8-stdlib_3.8.2~rc2-2 libquadmath0_10-20200222-1 libreadline8_8.0-3 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libsqlite3-0_3.31.1-3 libss2_1.45.5-2 libssl1.1_1.1.1d-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mime-support_3.64 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 openssl_1.1.1d-2 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 pkg-config_0.29-6 po-debconf_1.0.21 python-babel-localedata_2.8.0+dfsg.1-1 python3_3.7.5-3 python3-alabaster_0.7.8-1 python3-all_3.7.5-3 python3-all-dev_3.7.5-3 python3-attr_19.3.0-1 python3-babel_2.8.0+dfsg.1-1 python3-certifi_2019.11.28-1 python3-chardet_3.0.4-4 python3-dask_2.8.1+dfsg-0.4 python3-decorator_4.3.0-1.1 python3-dev_3.7.5-3 python3-distutils_3.8.0-1 python3-docutils_0.16+dfsg-1 python3-fsspec_0.6.1-0.1 python3-idna_2.6-2 python3-imagesize_1.2.0-1 python3-jinja2_2.10.1-1 python3-lib2to3_3.8.0-1 python3-markupsafe_1.1.0-1+b2 python3-minimal_3.7.5-3 python3-numpy_1:1.17.4-5 python3-packaging_19.1-2 python3-pkg-resources_44.0.0-1 python3-pkgconfig_1.5.1-3 python3-pygments_2.3.1+dfsg-1 python3-pyparsing_2.4.6-1 python3-requests_2.22.0-2 python3-roman_2.0.0-3 python3-scipy_1.3.3-3 python3-setuptools_44.0.0-1 python3-six_1.14.0-2 python3-sphinx_1.8.5-5 python3-toolz_0.9.0-1 python3-tz_2019.3-1 python3-urllib3_1.25.8-1 python3.7_3.7.6-1+b1 python3.7-dev_3.7.6-1+b1 python3.7-minimal_3.7.6-1+b1 python3.8_3.8.2~rc2-2 python3.8-dev_3.8.2~rc2-2 python3.8-minimal_3.8.2~rc2-2 readline-common_8.0-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sgml-base_1.29.1 sphinx-common_1.8.5-5 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xml-core_0.18+nmu1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-1.2 zlib1g-dev_1:1.2.11.dfsg-1.2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: pyfftw
Binary: python3-pyfftw, python-pyfftw-doc
Architecture: any all
Version: 0.12.0-1
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Ghislain Antony Vaillant <ghisvail@gmail.com>
Homepage: https://github.com/pyFFTW/pyFFTW
Standards-Version: 4.5.0
Vcs-Browser: https://salsa.debian.org/science-team/pyfftw
Vcs-Git: https://salsa.debian.org/science-team/pyfftw.git
Testsuite: autopkgtest
Testsuite-Triggers: python3-all, python3-dask, python3-pytest, python3-scipy
Build-Depends: debhelper-compat (= 12), dh-python, cython3 (>= 0.23), libfftw3-dev, python3-all-dev, python3-numpy (>= 1.10), python3-pkgconfig, python3-scipy (>= 0.16.0), python3-dask (>= 0.15.0), python3-setuptools, python3-sphinx, libjs-jquery, libjs-underscore
Package-List:
 python-pyfftw-doc deb python optional arch=all
 python3-pyfftw deb python optional arch=any
Checksums-Sha1:
 5d9f3410dcbc29032fa6b80c225fcca09e7594d4 147372 pyfftw_0.12.0.orig.tar.gz
 e99c14391c976b06317457a62318f6d61ae33ce0 5832 pyfftw_0.12.0-1.debian.tar.xz
Checksums-Sha256:
 55157460f27656d2f09bdc1bc3ba3a2e0d19ece9129aea1afb36099bb83222ef 147372 pyfftw_0.12.0.orig.tar.gz
 ceadf992e033fc9425fa68240a30522c1a8478db80d9fffa809f863044236767 5832 pyfftw_0.12.0-1.debian.tar.xz
Files:
 68eb892a9de886a17fd6d25f73f13bb8 147372 pyfftw_0.12.0.orig.tar.gz
 85ac02b89d0119305dfd083904695de3 5832 pyfftw_0.12.0-1.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEI8mpPlhYGekSbQo2Vz7x5L1aAfoFAl5CPtIACgkQVz7x5L1a
AfrkYBAArgIlQ9L2yRcDwHKZKrYd4sIbrL2wFmL7jcDsG3nfatcnW6uAIS8O6o9s
QjGIEnRRNdno1JRu1ePRuykpht33mfbbn84ZbW0qC4YU6JI5xh2Q5Ffx3YYeADq5
4gLPrfhM4fGwzi1JAvMdhGrOKZNXnl4Lj1NI7dVHC0YxzrC0sEVatBeicusFDL2V
fIr2iO2EBZz6dThofHQqfs+pc3dN+EkJi7OmRkTkzwrmqofYWBLBhvIpux/ClSk4
wUhjHQhyXzJ2xuHwbXXj+39J9nGliQYMN4j+RniXPowfJPHTcSml2aUVGbMWweaT
MCGlD5GTlC1YuVfN0OPNIFyB4InaMYvNCsgfuffUdtFNCpAswkyD8XcyDSR4fqPS
Lsi2918sAPlTQTgtQxvzGO7tPYT7aSb5yLyQJrh5Qq7gFZAKrQUtOJiVN5yzwTp/
4Y0iQOtnvvmG+Ip0i95E3F0Rw5D/16Yxv7PD/9Ik38ITstKYZYjK/Mst2vwP5qey
+93ZOAmB2XHwi3c5QgagsSLzf8+7hqr7QbeiL9BBWIqVkIjWy8uiDWRnK0nmR6Zs
ziyRYhCXVn/+W9jcxgrd909vnWMhScsmtpb2tNED1k8K0UzbjWmHyMhwm2Nu9UZT
WaRTLAdEE2jTUWVHiNt6IlfnY2rjFwkqajZCRiRdS/0gJXZ/PiY=
=AeRR
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Tue Feb 11 05:42:42 2020 UTC
gpgv:                using RSA key 23C9A93E585819E9126D0A36573EF1E4BD5A01FA
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./pyfftw_0.12.0-1.dsc
dpkg-source: info: extracting pyfftw in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking pyfftw_0.12.0.orig.tar.gz
dpkg-source: info: unpacking pyfftw_0.12.0-1.debian.tar.xz

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-329de956-8357-4f29-8347-435e07714ea8
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package pyfftw
dpkg-buildpackage: info: source version 0.12.0-1
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Drew Parsons <dparsons@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean --with python3 --buildsystem=pybuild
   dh_auto_clean -O--buildsystem=pybuild
I: pybuild base:217: python3.8 setup.py clean 
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build' (and everything under it)
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.8' does not exist -- can't clean it
I: pybuild base:217: python3.7 setup.py clean 
running clean
removing '/<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build' (and everything under it)
'build/bdist.linux-amd64' does not exist -- can't clean it
'build/scripts-3.7' does not exist -- can't clean it
   dh_autoreconf_clean -O--buildsystem=pybuild
   dh_clean -O--buildsystem=pybuild
 debian/rules build
dh build --with python3 --buildsystem=pybuild
   dh_update_autotools_config -O--buildsystem=pybuild
   dh_autoreconf -O--buildsystem=pybuild
   dh_auto_configure -O--buildsystem=pybuild
I: pybuild base:217: python3.8 setup.py config 
running config
I: pybuild base:217: python3.7 setup.py config 
running config
   dh_auto_build -O--buildsystem=pybuild
I: pybuild pybuild:272: find -name "*.c" -delete
I: pybuild base:217: /usr/bin/python3.8 setup.py build 
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw
copying pyfftw/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw
copying pyfftw/_version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw
copying pyfftw/config.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders
copying pyfftw/builders/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders
copying pyfftw/builders/_utils.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders
copying pyfftw/builders/builders.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/cache.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/scipy_fftpack.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/_utils.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/scipy_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/dask_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/numpy_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces
UPDATING /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/_version.py
set /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/_version.py to '0.12.0'
running build_ext
Build pyFFTW with support for FFTW with
double precision + openMP
single precision + openMP
long precision + openMP
cythoning pyfftw/pyfftw.pyx to pyfftw/pyfftw.c
building 'pyfftw.pyfftw' extension
creating build
creating build/temp.linux-amd64-3.8
creating build/temp.linux-amd64-3.8/pyfftw
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.8 -I/<<PKGBUILDDIR>>/include -I/<<PKGBUILDDIR>>/pyfftw -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include -I/usr/include/python3.8 -c pyfftw/pyfftw.c -o build/temp.linux-amd64-3.8/pyfftw/pyfftw.o
In file included from pyfftw/pyfftw.c:598:
In file included from /usr/include/python3.8/numpy/arrayobject.h:4:
In file included from /usr/include/python3.8/numpy/ndarrayobject.h:12:
In file included from /usr/include/python3.8/numpy/ndarraytypes.h:1830:
/usr/include/python3.8/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pyfftw/pyfftw.c:19626:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
2 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pyfftw/pyfftw.o -lfftw3l_omp -lfftw3l -lfftw3f_omp -lfftw3f -lfftw3_omp -lfftw3 -lm -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pyfftw/pyfftw.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
warning: pyfftw/pyfftw.pyx:344:22: Casting a GIL-requiring function into a nogil function circumvents GIL validation
warning: pyfftw/pyfftw.pyx:364:23: Casting a GIL-requiring function into a nogil function circumvents GIL validation
I: pybuild pybuild:272: find -name "*.c" -delete
I: pybuild base:217: /usr/bin/python3 setup.py build 
running build
running build_py
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw
copying pyfftw/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw
copying pyfftw/_version.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw
copying pyfftw/config.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders
copying pyfftw/builders/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders
copying pyfftw/builders/_utils.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders
copying pyfftw/builders/builders.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders
creating /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/cache.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/scipy_fftpack.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/__init__.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/_utils.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/scipy_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/dask_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
copying pyfftw/interfaces/numpy_fft.py -> /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces
UPDATING /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/_version.py
set /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/_version.py to '0.12.0'
running build_ext
Build pyFFTW with support for FFTW with
double precision + openMP
single precision + openMP
long precision + openMP
cythoning pyfftw/pyfftw.pyx to pyfftw/pyfftw.c
building 'pyfftw.pyfftw' extension
creating build/temp.linux-amd64-3.7
creating build/temp.linux-amd64-3.7/pyfftw
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -I/<<PKGBUILDDIR>>/include -I/<<PKGBUILDDIR>>/pyfftw -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include -I/usr/include/python3.7m -c pyfftw/pyfftw.c -o build/temp.linux-amd64-3.7/pyfftw/pyfftw.o
In file included from pyfftw/pyfftw.c:598:
In file included from /usr/include/python3.7m/numpy/arrayobject.h:4:
In file included from /usr/include/python3.7m/numpy/ndarrayobject.h:12:
In file included from /usr/include/python3.7m/numpy/ndarraytypes.h:1830:
/usr/include/python3.7m/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,relro -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.7/pyfftw/pyfftw.o -lfftw3l_omp -lfftw3l -lfftw3f_omp -lfftw3f -lfftw3_omp -lfftw3 -lm -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/pyfftw.cpython-37m-x86_64-linux-gnu.so
/usr/lib/python3/dist-packages/Cython/Compiler/Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: /<<PKGBUILDDIR>>/pyfftw/pyfftw.pxd
  tree = Parsing.p_module(s, pxd, full_module_name)
warning: pyfftw/pyfftw.pyx:344:22: Casting a GIL-requiring function into a nogil function circumvents GIL validation
warning: pyfftw/pyfftw.pyx:364:23: Casting a GIL-requiring function into a nogil function circumvents GIL validation
   debian/rules override_dh_auto_test
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_test || /bin/false
I: pybuild base:217: cd /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build; python3.8 -m unittest discover -v 
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_call (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test a call to an instance of the class. ... ok
test_call_with_copy_with_missized_array_error (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Force an input copy with a missized array. ... ok
test_call_with_different_input_dtype (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an array with a different input dtype ... ok
test_call_with_different_striding (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the input update with different strides to internal array. ... ok
test_call_with_invalid_output_striding (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an invalid strided output update. ... ok
test_call_with_invalid_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an invalid update. ... ok
test_call_with_keyword_input_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a keyword input update. ... ok
test_call_with_keyword_output_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a keyword output update. ... ok
test_call_with_keyword_updates (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional output update. ... ok
test_call_with_list_input (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a list rather than an array ... ok
test_call_with_normalisation_default (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_normalisation_off (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_normalisation_on (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_positional_input_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional input update. ... ok
test_call_with_positional_updates (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional array updates. ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_compute_array_shapes (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_compute_array_shapes_invalid_axes (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_invalid_inputs (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_invreal (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_normal (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_setup_input_slicers (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_call (test.test_pyfftw_call.FFTWCallTest)
Test a call to an instance of the class. ... ok
test_call_with_auto_input_alignment (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword input update. ... ok
test_call_with_copy_with_missized_array_error (test.test_pyfftw_call.FFTWCallTest)
Force an input copy with a missized array. ... ok
test_call_with_different_input_dtype (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an array with a different input dtype ... ok
test_call_with_different_striding (test.test_pyfftw_call.FFTWCallTest)
Test the input update with different strides to internal array. ... ok
test_call_with_invalid_output_striding (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an invalid strided output update. ... ok
test_call_with_invalid_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an invalid update. ... ok
test_call_with_keyword_input_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword input update. ... ok
test_call_with_keyword_output_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword output update. ... ok
test_call_with_keyword_updates (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional output update. ... ok
test_call_with_list_input (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a list rather than an array ... ok
test_call_with_normalisation_default (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_off (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_on (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_precision (test.test_pyfftw_call.FFTWCallTest)
The normalisation should use a double precision scaling. ... ok
test_call_with_ortho_off (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_ortho_on (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_positional_input_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional input update. ... ok
test_call_with_positional_updates (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional array updates. ... ok
test_call_with_unaligned (test.test_pyfftw_call.FFTWCallTest)
Make sure the right thing happens with unaligned data. ... ok
test_aligned_flag (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the aligned flag is correct ... ok
test_axes_property (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the axes property returns the correct thing ... ok
test_differing_aligned_arrays_update (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the alignment code is working as expected ... ok
test_direction_property (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the direction property returns the correct thing ... ok
test_flags (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the flags are correct ... ok
test_get_input_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the get_input_array method returns the correct thing ... ok
test_get_output_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the get_output_array method returns the correct thing ... ok
test_input_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the input_array property returns the correct thing ... ok
test_input_dtype (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_dtype property returns the correct thing ... ok
test_input_shape (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_shape property returns the correct thing ... ok
test_input_strides (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_strides property returns the correct thing ... ok
test_invalid_normalisation (test.test_pyfftw_class_misc.FFTWMiscTest) ... ok
test_normalise_idft_property (test.test_pyfftw_class_misc.FFTWMiscTest)
normalise_idft property defaults to True ... ok
test_ortho_property (test.test_pyfftw_class_misc.FFTWMiscTest)
ortho property defaults to False ... ok
test_output_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the output_array property returns the correct thing ... ok
test_output_dtype (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the output_dtype property returns the correct thing ... ok
test_output_strides (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the output_shape property returns the correct thing ... ok
test_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_3d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.Complex128FFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.Complex128FFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.Complex128FFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.Complex128FFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.Complex128FFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_time (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_3d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.Complex64FFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.Complex64FFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.Complex64FFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.Complex64FFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.Complex64FFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_time (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_default_config (test.test_pyfftw_config.ConfigTest) ... ok
test_default_threads_OpenMP (test.test_pyfftw_config.ConfigTest) ... ok
test_non_default_config (test.test_pyfftw_config.ConfigTest) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_acquired_names (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestModule) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
/usr/lib/python3/dist-packages/dask/array/core.py:1326: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  warnings.warn(
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_slow_lookup_no_race_condition (test.test_pyfftw_interfaces_cache.CacheSpecificInterfacesUtils)
Checks that lookups in _utils longer than the keepalive time are ok. ... ok
test_cache_parent_thread_ended (test.test_pyfftw_interfaces_cache.CacheTest)
Test ending cache parent thread ends cache thread. ... ok
test_contains (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_delete_cache_object (test.test_pyfftw_interfaces_cache.CacheTest)
Test deleting a cache object ends cache thread. ... ok
test_insert_and_lookup_item (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_invalid_lookup (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_keepalive_time_update (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_misaligned_data_doesnt_clobber_cache (test.test_pyfftw_interfaces_cache.CacheTest)
A bug was highlighted in #197 in which misaligned data causes ... ok
test_objects_removed_after_keepalive (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_cache_enable_disable (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_is_enabled (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_missing_threading (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_set_keepalive_time (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_25_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_25_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_25_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_byte_align (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_consistent_data (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_different_dtypes (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_integer_shape (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_set_dtype (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_empty_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_byte_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_byte_aligned_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_n_byte_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_n_byte_aligned_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_consistent_data (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_different_dtypes (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_empty (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_integer_shape (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_set_dtype (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_ones_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_zeros_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_acquired_names (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestModule) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_conversion (test.test_pyfftw_partial.FFTWPartialTest) ... skipped 'All data types available'
test_failure (test.test_pyfftw_partial.FFTWPartialTest) ... skipped 'All data types available'
test_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_acquired_names (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestSimple) ... skipped 'scipy.fft is unavailable'
test_scipy_backend (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestSimple) ... skipped 'scipy.fft is unavailable'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_acquired_names (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_funcs (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_scipy_overwrite (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_next_fast_len (test.test_pyfftw_utils.NextFastLenTest) ... ok
test_next_fast_len_strict (test.test_pyfftw_utils.NextFastLenTest) ... ok
test_get_alignment (test.test_pyfftw_utils.UtilsTest) ... ok
test_export (test.test_pyfftw_wisdom.FFTWWisdomTest) ... ok
test_import (test.test_pyfftw_wisdom.FFTWWisdomTest) ... ok

----------------------------------------------------------------------
Ran 1603 tests in 532.695s

OK (skipped=258)
One run: 3.77 ms (versus 10.25 ms for numpy.fft)
One run: 3.85 ms (versus 10.28 ms for numpy.fft)
One run: 1.70 ms (versus 10.15 ms for numpy.fft)
One run: 1.77 ms (versus 8.87 ms for numpy.fft)
One run: 3.91 ms (versus 4.36 ms for singled threaded)
One run: 4.66 ms (versus 5.39 ms for singled threaded)
One run: 3.14 ms (versus 5.17 ms for singled threaded)
One run: 3.38 ms (versus 4.83 ms for singled threaded)
One run: 1.24 ms (versus 1.86 ms for singled threaded)
One run: 1.87 ms (versus 1.97 ms for singled threaded)
One run: 1.64 ms (versus 1.93 ms for singled threaded)
One run: 1.30 ms (versus 1.98 ms for singled threaded)
One run: 17.83 ms (versus 31.56 ms for singled threaded)
One run: 20.65 ms (versus 31.07 ms for singled threaded)
One run: 18.23 ms (versus 30.49 ms for singled threaded)
One run: 19.99 ms (versus 32.04 ms for singled threaded)
One run: 1.94 ms (versus 7.19 ms for numpy.fft)
One run: 1.98 ms (versus 6.98 ms for numpy.fft)
One run: 1.56 ms (versus 7.27 ms for numpy.fft)
One run: 1.54 ms (versus 6.52 ms for numpy.fft)
One run: 1.91 ms (versus 4.73 ms for numpy.fft)
One run: 1.90 ms (versus 4.83 ms for numpy.fft)
One run: 1.99 ms (versus 5.58 ms for numpy.fft)
One run: 2.04 ms (versus 5.47 ms for numpy.fft)
/usr/lib/python3.8/multiprocessing/pool.py:265: ResourceWarning: unclosed running multiprocessing pool <multiprocessing.pool.ThreadPool state=RUN pool_size=4>
I: pybuild base:217: cd /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build; python3.7 -m unittest discover -v 
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestFFTN) ... ok
test_call (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test a call to an instance of the class. ... ok
test_call_with_copy_with_missized_array_error (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Force an input copy with a missized array. ... ok
test_call_with_different_input_dtype (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an array with a different input dtype ... ok
test_call_with_different_striding (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the input update with different strides to internal array. ... ok
test_call_with_invalid_output_striding (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an invalid strided output update. ... ok
test_call_with_invalid_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with an invalid update. ... ok
test_call_with_keyword_input_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a keyword input update. ... ok
test_call_with_keyword_output_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a keyword output update. ... ok
test_call_with_keyword_updates (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional output update. ... ok
test_call_with_list_input (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a list rather than an array ... ok
test_call_with_normalisation_default (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_normalisation_off (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_normalisation_on (test.test_pyfftw_builders.BuildersTestFFTWWrapper) ... ok
test_call_with_positional_input_update (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional input update. ... ok
test_call_with_positional_updates (test.test_pyfftw_builders.BuildersTestFFTWWrapper)
Test the class call with a positional array updates. ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestIRFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestIRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFT)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFT)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFT)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFT)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT2)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFT2)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFT2)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFT2)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_avoid_copy (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the avoid_copy flag ... ok
test_bigger_and_smaller_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_bigger_s_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFTN)
Test that FFTWWrapper deals with a destroyed input properly. ... ok
test_dtype_coercian (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_builders.BuildersTestRFFTN)
Test to make sure the input is maintained ... ok
test_output_dtype_correct (test.test_pyfftw_builders.BuildersTestRFFTN)
The output dtype should be correct given the input dtype. ... ok
test_overwrite_input (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the overwrite_input flag ... ok
test_persistent_padding (test.test_pyfftw_builders.BuildersTestRFFTN)
Test to confirm the padding it not touched after creation. ... ok
test_planner_effort (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_builders.BuildersTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_builders.BuildersTestRFFTN) ... ok
test_compute_array_shapes (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_compute_array_shapes_invalid_axes (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_invalid_inputs (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_invreal (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_cook_nd_args_normal (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_setup_input_slicers (test.test_pyfftw_builders.BuildersTestUtilities) ... ok
test_call (test.test_pyfftw_call.FFTWCallTest)
Test a call to an instance of the class. ... ok
test_call_with_auto_input_alignment (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword input update. ... ok
test_call_with_copy_with_missized_array_error (test.test_pyfftw_call.FFTWCallTest)
Force an input copy with a missized array. ... ok
test_call_with_different_input_dtype (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an array with a different input dtype ... ok
test_call_with_different_striding (test.test_pyfftw_call.FFTWCallTest)
Test the input update with different strides to internal array. ... ok
test_call_with_invalid_output_striding (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an invalid strided output update. ... ok
test_call_with_invalid_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with an invalid update. ... ok
test_call_with_keyword_input_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword input update. ... ok
test_call_with_keyword_output_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a keyword output update. ... ok
test_call_with_keyword_updates (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional output update. ... ok
test_call_with_list_input (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a list rather than an array ... ok
test_call_with_normalisation_default (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_off (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_on (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_normalisation_precision (test.test_pyfftw_call.FFTWCallTest)
The normalisation should use a double precision scaling. ... ok
test_call_with_ortho_off (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_ortho_on (test.test_pyfftw_call.FFTWCallTest) ... ok
test_call_with_positional_input_update (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional input update. ... ok
test_call_with_positional_updates (test.test_pyfftw_call.FFTWCallTest)
Test the class call with a positional array updates. ... ok
test_call_with_unaligned (test.test_pyfftw_call.FFTWCallTest)
Make sure the right thing happens with unaligned data. ... ok
test_aligned_flag (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the aligned flag is correct ... ok
test_axes_property (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the axes property returns the correct thing ... ok
test_differing_aligned_arrays_update (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the alignment code is working as expected ... ok
test_direction_property (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the direction property returns the correct thing ... ok
test_flags (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the flags are correct ... ok
test_get_input_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the get_input_array method returns the correct thing ... ok
test_get_output_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the get_output_array method returns the correct thing ... ok
test_input_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the input_array property returns the correct thing ... ok
test_input_dtype (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_dtype property returns the correct thing ... ok
test_input_shape (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_shape property returns the correct thing ... ok
test_input_strides (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the input_strides property returns the correct thing ... ok
test_invalid_normalisation (test.test_pyfftw_class_misc.FFTWMiscTest) ... ok
test_normalise_idft_property (test.test_pyfftw_class_misc.FFTWMiscTest)
normalise_idft property defaults to True ... ok
test_ortho_property (test.test_pyfftw_class_misc.FFTWMiscTest)
ortho property defaults to False ... ok
test_output_array (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see the output_array property returns the correct thing ... ok
test_output_dtype (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the output_dtype property returns the correct thing ... ok
test_output_strides (test.test_pyfftw_class_misc.FFTWMiscTest)
Test to see if the output_shape property returns the correct thing ... ok
test_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_3d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.Complex128FFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.Complex128FFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.Complex128FFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.Complex128FFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.Complex128FFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_time (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.Complex128FFTWTest) ... ok
test_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_3d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.Complex64FFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.Complex64FFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.Complex64FFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.Complex64FFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.Complex64FFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_time (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.Complex64FFTWTest) ... ok
test_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_complex.ComplexLongDoubleFFTWTest) ... ok
test_default_config (test.test_pyfftw_config.ConfigTest) ... ok
test_default_threads_OpenMP (test.test_pyfftw_config.ConfigTest) ... ok
test_non_default_config (test.test_pyfftw_config.ConfigTest) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestIRFFTN) ... ok
test_acquired_names (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestModule) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_dtype_coercion (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... /usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:77: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
/usr/lib/python3/dist-packages/numpy/core/_asarray.py:85: ComplexWarning: Casting complex values to real discards the imaginary part
  return array(a, dtype, copy=False, order=order)
/usr/lib/python3/dist-packages/numpy/fft/_pocketfft.py:80: ComplexWarning: Casting complex values to real discards the imaginary part
  r = pfi.execute(a, is_real, is_forward, fct)
ok
test_input_maintained (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN)
Test to make sure the input is maintained by default. ... /usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
/usr/lib/python3/dist-packages/dask/array/core.py:1333: FutureWarning: The `numpy.alltrue` function is not implemented by Dask array. You may want to use the da.map_blocks function or something similar to silence this warning. Your code may stop working in a future release.
  FutureWarning,
ok
test_same_sized_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_valid (test.test_pyfftw_dask_interface.InterfacesDaskFFTTestRFFTN) ... ok
test_slow_lookup_no_race_condition (test.test_pyfftw_interfaces_cache.CacheSpecificInterfacesUtils)
Checks that lookups in _utils longer than the keepalive time are ok. ... ok
test_cache_parent_thread_ended (test.test_pyfftw_interfaces_cache.CacheTest)
Test ending cache parent thread ends cache thread. ... ok
test_contains (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_delete_cache_object (test.test_pyfftw_interfaces_cache.CacheTest)
Test deleting a cache object ends cache thread. ... ok
test_insert_and_lookup_item (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_invalid_lookup (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_keepalive_time_update (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_misaligned_data_doesnt_clobber_cache (test.test_pyfftw_interfaces_cache.CacheTest)
A bug was highlighted in #197 in which misaligned data causes ... ok
test_objects_removed_after_keepalive (test.test_pyfftw_interfaces_cache.CacheTest) ... ok
test_cache_enable_disable (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_is_enabled (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_missing_threading (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_set_keepalive_time (test.test_pyfftw_interfaces_cache.InterfacesCacheTest) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestIRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_interfaces_cache.InterfacesNumpyFFTCacheTestRFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_25_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.Complex128MultiThreadedTest) ... ok
test_25_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.Complex64MultiThreadedTest) ... ok
test_25_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_2_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_4_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_7_threads (test.test_pyfftw_multithreaded.ComplexLongDoubleMultiThreadedTest) ... ok
test_byte_align (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_consistent_data (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_different_dtypes (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_integer_shape (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_byte_align_set_dtype (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_empty_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_byte_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_byte_aligned_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_n_byte_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_is_n_byte_aligned_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_consistent_data (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_different_dtypes (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_empty (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_fail_with_non_array (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_integer_shape (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_n_byte_align_set_dtype (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_ones_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_zeros_aligned (test.test_pyfftw_nbyte_align.ByteAlignTest) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestHFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFTN) ... ok
test_acquired_names (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestModule) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFT2) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestRFFTN) ... ok
test_conversion (test.test_pyfftw_partial.FFTWPartialTest) ... skipped 'All data types available'
test_failure (test.test_pyfftw_partial.FFTWPartialTest) ... skipped 'All data types available'
test_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardLongDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_planner_flags (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_time (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_backward.RealBackwardSingleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... skipped 'numpy.fft has issues with this dtype.'
test_update_data (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardLongDoubleFFTWTest) ... ok
test_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_3d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_alignment (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test to see if the alignment is returned correctly ... ok
test_default_args (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_destroy_input (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test the destroy input flag ... ok
test_different_dtypes_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_extra_dimension_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_f_contiguous_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_incorrect_byte_alignment_fails (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_args_raise (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_axes (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_invalid_flag_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test passing a garbage flag fails ... ok
test_invalid_planning_time_limit (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_missized_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_missized_nonfft_axes_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_multiple_1d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_multiple_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_contiguous_2d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_contiguous_2d_in_3d (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_non_monotonic_increasing_axes (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test the case where the axes arg does not monotonically increase. ... ok
test_planner_flags (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest)
Test all the planner flags on a small array ... ok
test_planning_time_limit (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_time (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_time_with_array_update (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_alignment_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_shape_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_stride_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_data_with_unaligned_original (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_update_unaligned_data_with_FFTW_UNALIGNED (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_wisdom_only (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_with_not_ndarray_error (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_wrong_direction_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_zero_length_fft_axis_fail (test.test_pyfftw_real_forward.RealForwardSingleFFTWTest) ... ok
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIRFFTN) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFT2) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestRFFTN) ... skipped 'scipy.fft is not available'
test_acquired_names (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestSimple) ... skipped 'scipy.fft is unavailable'
test_scipy_backend (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestSimple) ... skipped 'scipy.fft is unavailable'
test_auto_align_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_contiguous_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_and_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_bigger_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_dtype_coercian (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_input_maintained (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... skipped 'scipy.fft is not available'
test_on_non_numpy_array (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test to make sure that locked arrays work. ... skipped 'scipy.fft is not available'
test_overwrite_input (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the overwrite_input flag ... skipped 'scipy.fft is not available'
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... skipped 'scipy.fft is not available'
test_planner_effort (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the planner effort arg ... skipped 'scipy.fft is not available'
test_same_sized_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_smaller_s (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_threads_arg (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT)
Test the threads argument ... skipped 'scipy.fft is not available'
test_valid (test.test_pyfftw_scipy_fft.InterfacesScipyFFTTestIHFFT) ... skipped 'scipy.fft is not available'
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIHFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFT2) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestFFTN) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFT2) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_shape_and_s_different_lengths (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIFFTN) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestIRFFT) ... ok
test_auto_align_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_bigger_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_input_maintained (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_smaller_s (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_threads_arg (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestRFFT) ... ok
test_acquired_names (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_funcs (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_scipy_overwrite (test.test_pyfftw_scipy_interface.InterfacesScipyFFTPackTestSimple) ... ok
test_auto_align_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_auto_contiguous_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_and_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_bigger_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_dtype_coercian (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_fail_on_invalid_s_or_axes_or_norm (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_input_maintained (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure the input is maintained by default. ... ok
test_on_non_numpy_array (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_on_non_writeable_array_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test to make sure that locked arrays work. ... ok
test_overwrite_input (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the overwrite_input flag ... ok
test_overwrite_input_for_issue_92 (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Tests that trying to overwrite a locked array fails. ... ok
test_planner_effort (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the planner effort arg ... ok
test_same_sized_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_smaller_s (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_threads_arg (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT)
Test the threads argument ... ok
test_valid (test.test_pyfftw_numpy_interface.InterfacesNumpyFFTTestIRFFT) ... ok
test_next_fast_len (test.test_pyfftw_utils.NextFastLenTest) ... ok
test_next_fast_len_strict (test.test_pyfftw_utils.NextFastLenTest) ... ok
test_get_alignment (test.test_pyfftw_utils.UtilsTest) ... ok
test_export (test.test_pyfftw_wisdom.FFTWWisdomTest) ... ok
test_import (test.test_pyfftw_wisdom.FFTWWisdomTest) ... ok

----------------------------------------------------------------------
Ran 1603 tests in 537.713s

OK (skipped=258)
One run: 4.64 ms (versus 9.94 ms for numpy.fft)
One run: 4.96 ms (versus 10.40 ms for numpy.fft)
One run: 1.83 ms (versus 10.19 ms for numpy.fft)
One run: 1.75 ms (versus 9.87 ms for numpy.fft)
One run: 3.57 ms (versus 4.38 ms for singled threaded)
One run: 4.46 ms (versus 4.62 ms for singled threaded)
One run: 2.92 ms (versus 4.07 ms for singled threaded)
One run: 5.49 ms (versus 6.24 ms for singled threaded)
One run: 2.43 ms (versus 3.29 ms for singled threaded)
One run: 2.29 ms (versus 2.69 ms for singled threaded)
One run: 1.59 ms (versus 2.64 ms for singled threaded)
One run: 2.51 ms (versus 4.24 ms for singled threaded)
One run: 28.79 ms (versus 54.11 ms for singled threaded)
One run: 34.03 ms (versus 50.99 ms for singled threaded)
One run: 31.09 ms (versus 46.37 ms for singled threaded)
One run: 28.66 ms (versus 50.38 ms for singled threaded)
One run: 1.87 ms (versus 7.13 ms for numpy.fft)
One run: 1.87 ms (versus 7.81 ms for numpy.fft)
One run: 1.53 ms (versus 8.06 ms for numpy.fft)
One run: 1.47 ms (versus 6.88 ms for numpy.fft)
One run: 1.90 ms (versus 4.04 ms for numpy.fft)
One run: 1.36 ms (versus 2.72 ms for numpy.fft)
One run: 1.59 ms (versus 3.14 ms for numpy.fft)
One run: 1.61 ms (versus 2.95 ms for numpy.fft)
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
 fakeroot debian/rules binary
dh binary --with python3 --buildsystem=pybuild
   dh_testroot -O--buildsystem=pybuild
   dh_prep -O--buildsystem=pybuild
   dh_auto_install -O--buildsystem=pybuild
I: pybuild base:217: /usr/bin/python3.8 setup.py install --root /<<PKGBUILDDIR>>/debian/python3-pyfftw 
running install
running build
running build_py
UPDATING /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/_version.py
set /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/_version.py to '0.12.0'
running build_ext
Build pyFFTW with support for FFTW with
double precision + openMP
single precision + openMP
long precision + openMP
skipping 'pyfftw/pyfftw.c' Cython extension (up-to-date)
building 'pyfftw.pyfftw' extension
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.8 -I/<<PKGBUILDDIR>>/include -I/<<PKGBUILDDIR>>/pyfftw -I/usr/lib/python3/dist-packages/numpy/core/include -I/usr/include -I/usr/include/python3.8 -c pyfftw/pyfftw.c -o build/temp.linux-amd64-3.8/pyfftw/pyfftw.o
In file included from pyfftw/pyfftw.c:598:
In file included from /usr/include/python3.8/numpy/arrayobject.h:4:
In file included from /usr/include/python3.8/numpy/ndarrayobject.h:12:
In file included from /usr/include/python3.8/numpy/ndarraytypes.h:1830:
/usr/include/python3.8/numpy/npy_1_7_deprecated_api.h:17:2: warning: "Using deprecated NumPy API, disable it with "          "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-W#warnings]
#warning "Using deprecated NumPy API, disable it with " \
 ^
pyfftw/pyfftw.c:19626:3: warning: 'tp_print' is deprecated [-Wdeprecated-declarations]
  0, /*tp_print*/
  ^
/usr/include/python3.8/cpython/object.h:260:5: note: 'tp_print' has been explicitly marked deprecated here
    Py_DEPRECATED(3.8) int (*tp_print)(PyObject *, FILE *, int);
    ^
/usr/include/python3.8/pyport.h:515:54: note: expanded from macro 'Py_DEPRECATED'
#define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))
                                                     ^
2 warnings generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-amd64-3.8/pyfftw/pyfftw.o -lfftw3l_omp -lfftw3l -lfftw3f_omp -lfftw3f -lfftw3_omp -lfftw3 -lm -o /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so
running install_lib
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/_utils.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/builders.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/__pycache__/_utils.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/__pycache__/builders.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/builders/__pycache__/__init__.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/_version.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/config.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/cache.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/scipy_fftpack.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/_utils.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/scipy_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/dask_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/_utils.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/scipy_fftpack.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/numpy_fft.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/cache.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/__init__.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/__pycache__/dask_fft.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/interfaces/numpy_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/__pycache__/config.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/__pycache__/_version.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.8_pyfftw/build/pyfftw/__pycache__/__init__.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/__pycache__
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/_utils.py to _utils.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/builders/builders.py to builders.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/_version.py to _version.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/config.py to config.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/cache.py to cache.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/scipy_fftpack.py to scipy_fftpack.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/__init__.py to __init__.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/_utils.py to _utils.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/scipy_fft.py to scipy_fft.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/dask_fft.py to dask_fft.cpython-38.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyfftw/interfaces/numpy_fft.py to numpy_fft.cpython-38.pyc
running install_egg_info
running egg_info
creating pyFFTW.egg-info
writing pyFFTW.egg-info/PKG-INFO
writing dependency_links to pyFFTW.egg-info/dependency_links.txt
writing requirements to pyFFTW.egg-info/requires.txt
writing top-level names to pyFFTW.egg-info/top_level.txt
writing manifest file 'pyFFTW.egg-info/SOURCES.txt'
reading manifest file 'pyFFTW.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
warning: no files found matching 'CHANGELOG.md'
warning: no files found matching 'README.rst'
no previously-included directories found matching 'docs/_build'
no previously-included directories found matching 'build'
no previously-included directories found matching '*/__pycache__'
warning: no previously-included files matching '*.py[cod]' found anywhere in distribution
warning: no previously-included files matching '*.so' found anywhere in distribution
warning: no previously-included files matching '*.dll' found anywhere in distribution
warning: no previously-included files matching '*.dylib' found anywhere in distribution
warning: no previously-included files matching '*~' found anywhere in distribution
warning: no previously-included files matching '*.bak' found anywhere in distribution
warning: no previously-included files matching '*.swp' found anywhere in distribution
writing manifest file 'pyFFTW.egg-info/SOURCES.txt'
Copying pyFFTW.egg-info to /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.8/dist-packages/pyFFTW-0.12.0.egg-info
Skipping SOURCES.txt
running install_scripts
I: pybuild pybuild:298: dh_numpy3
I: pybuild base:217: /usr/bin/python3 setup.py install --root /<<PKGBUILDDIR>>/debian/python3-pyfftw 
running install
running build
running build_py
UPDATING /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/_version.py
set /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/_version.py to '0.12.0'
running build_ext
Build pyFFTW with support for FFTW with
double precision + openMP
single precision + openMP
long precision + openMP
skipping 'pyfftw/pyfftw.c' Cython extension (up-to-date)
running install_lib
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/pyfftw.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/_utils.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/builders.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/__pycache__/_utils.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/__pycache__/__init__.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/builders/__pycache__/builders.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/_version.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/config.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/cache.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/scipy_fftpack.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__init__.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/_utils.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/scipy_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/dask_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/_utils.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/dask_fft.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/__init__.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/scipy_fftpack.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/numpy_fft.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/__pycache__/cache.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/interfaces/numpy_fft.py -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces
creating /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/__pycache__/__init__.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/__pycache__/config.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/__pycache__
copying /<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build/pyfftw/__pycache__/_version.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/__pycache__
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/_utils.py to _utils.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/builders/builders.py to builders.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/_version.py to _version.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/config.py to config.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/cache.py to cache.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/scipy_fftpack.py to scipy_fftpack.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/__init__.py to __init__.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/_utils.py to _utils.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/scipy_fft.py to scipy_fft.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/dask_fft.py to dask_fft.cpython-37.pyc
byte-compiling /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyfftw/interfaces/numpy_fft.py to numpy_fft.cpython-37.pyc
running install_egg_info
running egg_info
writing pyFFTW.egg-info/PKG-INFO
writing dependency_links to pyFFTW.egg-info/dependency_links.txt
writing requirements to pyFFTW.egg-info/requires.txt
writing top-level names to pyFFTW.egg-info/top_level.txt
reading manifest file 'pyFFTW.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
warning: no files found matching 'CHANGELOG.md'
warning: no files found matching 'README.rst'
no previously-included directories found matching 'docs/_build'
no previously-included directories found matching 'build'
no previously-included directories found matching '*/__pycache__'
warning: no previously-included files matching '*.py[cod]' found anywhere in distribution
warning: no previously-included files matching '*.so' found anywhere in distribution
warning: no previously-included files matching '*.dll' found anywhere in distribution
warning: no previously-included files matching '*.dylib' found anywhere in distribution
warning: no previously-included files matching '*~' found anywhere in distribution
warning: no previously-included files matching '*.bak' found anywhere in distribution
warning: no previously-included files matching '*.swp' found anywhere in distribution
writing manifest file 'pyFFTW.egg-info/SOURCES.txt'
Copying pyFFTW.egg-info to /<<PKGBUILDDIR>>/debian/python3-pyfftw/usr/lib/python3.7/dist-packages/pyFFTW-0.12.0.egg-info
Skipping SOURCES.txt
running install_scripts
I: pybuild pybuild:298: dh_numpy3
   debian/rules override_dh_installdocs
make[1]: Entering directory '/<<PKGBUILDDIR>>'
cd docs; \
PYTHONPATH=/<<PKGBUILDDIR>>/.pybuild/cpython3_3.7_pyfftw/build: make html
make[2]: Entering directory '/<<PKGBUILDDIR>>/docs'
sphinx-build -b html -d _build/doctrees   . _build/html
Running Sphinx v1.8.5
making output directory...
loading intersphinx inventory from http://docs.python.org/objects.inv...
intersphinx inventory has moved: http://docs.python.org/objects.inv -> https://docs.python.org/3/objects.inv
loading intersphinx inventory from http://docs.scipy.org/doc/numpy/objects.inv...
intersphinx inventory has moved: http://docs.scipy.org/doc/numpy/objects.inv -> https://docs.scipy.org/doc/numpy/objects.inv
loading intersphinx inventory from http://docs.scipy.org/doc/scipy/reference/objects.inv...
intersphinx inventory has moved: http://docs.scipy.org/doc/scipy/reference/objects.inv -> https://docs.scipy.org/doc/scipy/reference/objects.inv
building [mo]: targets for 0 po files that are out of date
building [html]: targets for 14 source files that are out of date
updating environment: 14 added, 0 changed, 0 removed
reading sources... [  7%] index
reading sources... [ 14%] release/0.11.0
reading sources... [ 21%] release/0.12.0
reading sources... [ 28%] source/api
reading sources... [ 35%] source/license
reading sources... [ 42%] source/pyfftw/builders/_utils
reading sources... [ 50%] source/pyfftw/builders/builders
reading sources... [ 57%] source/pyfftw/interfaces/dask_fft
reading sources... [ 64%] source/pyfftw/interfaces/interfaces
reading sources... [ 71%] source/pyfftw/interfaces/numpy_fft
reading sources... [ 78%] source/pyfftw/interfaces/scipy_fft
reading sources... [ 85%] source/pyfftw/interfaces/scipy_fftpack
reading sources... [ 92%] source/pyfftw/pyfftw
reading sources... [100%] source/tutorial

WARNING: autodoc: failed to import module 'scipy_fft' from module 'pyfftw.interfaces'; the following exception was raised:
No module named 'scipy.fft'
looking for now-outdated files... none found
pickling environment... done
checking consistency... /<<PKGBUILDDIR>>/docs/release/0.11.0.rst: WARNING: document isn't included in any toctree
/<<PKGBUILDDIR>>/docs/release/0.12.0.rst: WARNING: document isn't included in any toctree
done
preparing documents... done
writing output... [  7%] index
writing output... [ 14%] release/0.11.0
writing output... [ 21%] release/0.12.0
writing output... [ 28%] source/api
writing output... [ 35%] source/license
writing output... [ 42%] source/pyfftw/builders/_utils
writing output... [ 50%] source/pyfftw/builders/builders
writing output... [ 57%] source/pyfftw/interfaces/dask_fft
writing output... [ 64%] source/pyfftw/interfaces/interfaces
writing output... [ 71%] source/pyfftw/interfaces/numpy_fft
writing output... [ 78%] source/pyfftw/interfaces/scipy_fft
writing output... [ 85%] source/pyfftw/interfaces/scipy_fftpack
writing output... [ 92%] source/pyfftw/pyfftw
writing output... [100%] source/tutorial

generating indices... genindex py-modindex
writing additional pages... search
copying static files... done
copying extra files... done
dumping search index in English (code: en) ... done
dumping object inventory... done
build succeeded, 3 warnings.

The HTML pages are in _build/html.

Build finished. The HTML pages are in _build/html.
make[2]: Leaving directory '/<<PKGBUILDDIR>>/docs'
for JSCRIPT in jquery underscore; do \
  JSDOC=/<<PKGBUILDDIR>>/docs/_build/html/_static/${JSCRIPT}.js; \
  rm ${JSDOC}; ln -s /usr/share/javascript/${JSCRIPT}/${JSCRIPT}.js ${JSDOC}; \
done
dh_installdocs -ppython-pyfftw-doc --doc-main-package=python-pyfftw-doc docs/_build/html/
dh_installdocs
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installchangelogs -O--buildsystem=pybuild
   dh_python3 -O--buildsystem=pybuild
   dh_installinit -O--buildsystem=pybuild
   dh_installsystemduser -O--buildsystem=pybuild
   dh_perl -O--buildsystem=pybuild
   dh_link -O--buildsystem=pybuild
   dh_strip_nondeterminism -O--buildsystem=pybuild
   dh_compress -O--buildsystem=pybuild
   dh_fixperms -O--buildsystem=pybuild
   dh_missing -O--buildsystem=pybuild
   dh_dwz -O--buildsystem=pybuild
   dh_strip -O--buildsystem=pybuild
   dh_makeshlibs -O--buildsystem=pybuild
   dh_shlibdeps -O--buildsystem=pybuild
dpkg-shlibdeps: warning: package could avoid a useless dependency if debian/python3-pyfftw/usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-37m-x86_64-linux-gnu.so debian/python3-pyfftw/usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so were not linked against libm.so.6 (they use none of the library's symbols)
dpkg-shlibdeps: warning: package could avoid a useless dependency if debian/python3-pyfftw/usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-37m-x86_64-linux-gnu.so debian/python3-pyfftw/usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so were not linked against libpthread.so.0 (they use none of the library's symbols)
   dh_installdeb -O--buildsystem=pybuild
   dh_gencontrol -O--buildsystem=pybuild
dpkg-gencontrol: warning: package python3-pyfftw: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pyfftw: substitution variable ${python3:Versions} unused, but is defined
dpkg-gencontrol: warning: package python3-pyfftw: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-pyfftw: substitution variable ${python3:Versions} unused, but is defined
   dh_md5sums -O--buildsystem=pybuild
   dh_builddeb -O--buildsystem=pybuild
dpkg-deb: building package 'python3-pyfftw' in '../python3-pyfftw_0.12.0-1_amd64.deb'.
dpkg-deb: building package 'python3-pyfftw-dbgsym' in '../python3-pyfftw-dbgsym_0.12.0-1_amd64.deb'.
dpkg-deb: building package 'python-pyfftw-doc' in '../python-pyfftw-doc_0.12.0-1_all.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../pyfftw_0.12.0-1_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-24T14:33:06Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


pyfftw_0.12.0-1_amd64.changes:
------------------------------

Format: 1.8
Date: Tue, 11 Feb 2020 12:37:21 +0800
Source: pyfftw
Binary: python-pyfftw-doc python3-pyfftw python3-pyfftw-dbgsym
Architecture: all amd64
Version: 0.12.0-1
Distribution: unstable
Urgency: medium
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Changed-By: Drew Parsons <dparsons@debian.org>
Description:
 python-pyfftw-doc - Pythonic wrapper around FFTW - docs
 python3-pyfftw - Pythonic wrapper around FFTW - Python 3
Changes:
 pyfftw (0.12.0-1) unstable; urgency=medium
 .
   * Team upload.
   * New upstream release.
     - applies patch fix_dask_011a808.patch
   * Standards-Version: 4.5.0
Checksums-Sha1:
 47f19ca801e15a339cbcd914935b1cf7778ef068 8062 pyfftw_0.12.0-1_amd64.buildinfo
 1491f948bce8768b28581fe158e9a2a3dbc1ad07 71128 python-pyfftw-doc_0.12.0-1_all.deb
 f25551a004e8da8e873015f76663ad39a17df612 334636 python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 c310e11a7112dbbfdf80afb2a43283001678e753 148292 python3-pyfftw_0.12.0-1_amd64.deb
Checksums-Sha256:
 500c3de15893392fbdb8525c1c9a2a5190a01140ef5558a49ed08da34897163d 8062 pyfftw_0.12.0-1_amd64.buildinfo
 379da0f0faae2efd85634445213c591865831b9808fcf8ecf9fafbda90885272 71128 python-pyfftw-doc_0.12.0-1_all.deb
 6d9cffee18f2eabea5ecd62651a4065e17bdcd716944a46fb35ae37f54d1c219 334636 python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 587215f4c78304e779d875a78f1e56bc26826eb9d154e49d79056c43e9884681 148292 python3-pyfftw_0.12.0-1_amd64.deb
Files:
 2d0ecbf896693d691d772dfed6305b36 8062 python optional pyfftw_0.12.0-1_amd64.buildinfo
 cfc4b68b7fee00f4b2060475cda7cfbd 71128 python optional python-pyfftw-doc_0.12.0-1_all.deb
 533d36ca4340fe93f370e05f5feb6d37 334636 debug optional python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 075deec0cb342fcb237c151da29a0393 148292 python optional python3-pyfftw_0.12.0-1_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: pyfftw
Binary: python3-pyfftw python-pyfftw-doc
Architecture: all amd64
Version: 0.12.0-1
Checksums-Md5:
 cfc4b68b7fee00f4b2060475cda7cfbd 71128 python-pyfftw-doc_0.12.0-1_all.deb
 533d36ca4340fe93f370e05f5feb6d37 334636 python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 075deec0cb342fcb237c151da29a0393 148292 python3-pyfftw_0.12.0-1_amd64.deb
Checksums-Sha1:
 1491f948bce8768b28581fe158e9a2a3dbc1ad07 71128 python-pyfftw-doc_0.12.0-1_all.deb
 f25551a004e8da8e873015f76663ad39a17df612 334636 python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 c310e11a7112dbbfdf80afb2a43283001678e753 148292 python3-pyfftw_0.12.0-1_amd64.deb
Checksums-Sha256:
 379da0f0faae2efd85634445213c591865831b9808fcf8ecf9fafbda90885272 71128 python-pyfftw-doc_0.12.0-1_all.deb
 6d9cffee18f2eabea5ecd62651a4065e17bdcd716944a46fb35ae37f54d1c219 334636 python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
 587215f4c78304e779d875a78f1e56bc26826eb9d154e49d79056c43e9884681 148292 python3-pyfftw_0.12.0-1_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Mon, 24 Feb 2020 14:33:06 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 ca-certificates (= 20190110),
 clang-9 (= 1:9.0.1-8),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 cython3 (= 0.29.14-0.1+b1),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-python (= 4.20191017),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 docutils-common (= 0.16+dfsg-1),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblas3 (= 3.9.0-1),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-9-dev (= 1:9.0.1-8),
 libclang-cpp9 (= 1:9.0.1-8),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libexpat1 (= 2.2.9-1),
 libexpat1-dev (= 2.2.9-1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfftw3-bin (= 3.3.8-2),
 libfftw3-dev (= 3.3.8-2),
 libfftw3-double3 (= 3.3.8-2),
 libfftw3-long3 (= 3.3.8-2),
 libfftw3-quad3 (= 3.3.8-2),
 libfftw3-single3 (= 3.3.8-2),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libgfortran5 (= 10-20200222-1),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libjs-jquery (= 3.3.1~dfsg-3),
 libjs-sphinxdoc (= 1.8.5-5),
 libjs-underscore (= 1.9.1~dfsg-1),
 liblapack3 (= 3.9.0-1),
 liblbfgsb0 (= 3.0+dfsg.3-7),
 libllvm9 (= 1:9.0.1-8),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpdec2 (= 2.4.2-2),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libpython3-all-dev (= 3.7.5-3),
 libpython3-dev (= 3.7.5-3),
 libpython3-stdlib (= 3.7.5-3),
 libpython3.7 (= 3.7.6-1+b1),
 libpython3.7-dev (= 3.7.6-1+b1),
 libpython3.7-minimal (= 3.7.6-1+b1),
 libpython3.7-stdlib (= 3.7.6-1+b1),
 libpython3.8 (= 3.8.2~rc2-2),
 libpython3.8-dev (= 3.8.2~rc2-2),
 libpython3.8-minimal (= 3.8.2~rc2-2),
 libpython3.8-stdlib (= 3.8.2~rc2-2),
 libquadmath0 (= 10-20200222-1),
 libreadline8 (= 8.0-3),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libsqlite3-0 (= 3.31.1-3),
 libssl1.1 (= 1.1.1d-2),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 mime-support (= 3.64),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 openssl (= 1.1.1d-2),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 pkg-config (= 0.29-6),
 po-debconf (= 1.0.21),
 python-babel-localedata (= 2.8.0+dfsg.1-1),
 python3 (= 3.7.5-3),
 python3-alabaster (= 0.7.8-1),
 python3-all (= 3.7.5-3),
 python3-all-dev (= 3.7.5-3),
 python3-attr (= 19.3.0-1),
 python3-babel (= 2.8.0+dfsg.1-1),
 python3-certifi (= 2019.11.28-1),
 python3-chardet (= 3.0.4-4),
 python3-dask (= 2.8.1+dfsg-0.4),
 python3-decorator (= 4.3.0-1.1),
 python3-dev (= 3.7.5-3),
 python3-distutils (= 3.8.0-1),
 python3-docutils (= 0.16+dfsg-1),
 python3-fsspec (= 0.6.1-0.1),
 python3-idna (= 2.6-2),
 python3-imagesize (= 1.2.0-1),
 python3-jinja2 (= 2.10.1-1),
 python3-lib2to3 (= 3.8.0-1),
 python3-markupsafe (= 1.1.0-1+b2),
 python3-minimal (= 3.7.5-3),
 python3-numpy (= 1:1.17.4-5),
 python3-packaging (= 19.1-2),
 python3-pkg-resources (= 44.0.0-1),
 python3-pkgconfig (= 1.5.1-3),
 python3-pygments (= 2.3.1+dfsg-1),
 python3-pyparsing (= 2.4.6-1),
 python3-requests (= 2.22.0-2),
 python3-roman (= 2.0.0-3),
 python3-scipy (= 1.3.3-3),
 python3-setuptools (= 44.0.0-1),
 python3-six (= 1.14.0-2),
 python3-sphinx (= 1.8.5-5),
 python3-toolz (= 0.9.0-1),
 python3-tz (= 2019.3-1),
 python3-urllib3 (= 1.25.8-1),
 python3.7 (= 3.7.6-1+b1),
 python3.7-dev (= 3.7.6-1+b1),
 python3.7-minimal (= 3.7.6-1+b1),
 python3.8 (= 3.8.2~rc2-2),
 python3.8-dev (= 3.8.2~rc2-2),
 python3.8-minimal (= 3.8.2~rc2-2),
 readline-common (= 8.0-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sgml-base (= 1.29.1),
 sphinx-common (= 1.8.5-5),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 tzdata (= 2019c-3),
 util-linux (= 2.34-0.1),
 xml-core (= 0.18+nmu1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-1.2),
 zlib1g-dev (= 1:1.2.11.dfsg-1.2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1581395841"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


python-pyfftw-doc_0.12.0-1_all.deb
----------------------------------

 new Debian package, version 2.0.
 size 71128 bytes: control archive=2224 bytes.
    1108 bytes,    27 lines      control              
    4812 bytes,    49 lines      md5sums              
 Package: python-pyfftw-doc
 Source: pyfftw
 Version: 0.12.0-1
 Architecture: all
 Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
 Installed-Size: 586
 Depends: libjs-jquery, libjs-underscore, python3-numpy
 Section: python
 Priority: optional
 Homepage: https://github.com/pyFFTW/pyFFTW
 Description: Pythonic wrapper around FFTW - docs
  Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
  aim is to present a unified interface for all the possible transforms
  that FFTW can perform.
  .
  Both the complex DFT and the real DFT are supported, as well as
  arbitrary axes of abitrary shaped and strided arrays, which makes it
  almost feature equivalent to standard and real FFT functions of
  numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
  does not).
  .
  pyFFTW is BSD-licensed and should not be confused with python-fftw, a
  GPL-licensed python module with the same aim of providing python
  bindings to FFTW3. Or python-gpyfft, which provides bindings to the
  OpenCL FFT library clFFT.
  .
  This package provides the pyFFTW documentation.

drwxr-xr-x root/root         0 2020-02-11 04:37 ./
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc-base/
-rw-r--r-- root/root       292 2020-02-11 04:37 ./usr/share/doc-base/pyfftw-doc
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/
-rw-r--r-- root/root      2305 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/changelog.Debian.gz
-rw-r--r-- root/root      4251 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/copyright
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/
-rw-r--r-- root/root       230 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/.buildinfo
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/
-rw-r--r-- root/root      1928 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/index.rst.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/release/
-rw-r--r-- root/root     12629 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/release/0.11.0.rst.txt
-rw-r--r-- root/root      3323 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/release/0.12.0.rst.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/
-rw-r--r-- root/root       146 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/api.rst.txt
-rw-r--r-- root/root      2155 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/license.rst.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/builders/
-rw-r--r-- root/root       334 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/builders/_utils.rst.txt
-rw-r--r-- root/root       296 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/builders/builders.rst.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/
-rw-r--r-- root/root       202 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/dask_fft.rst.txt
-rw-r--r-- root/root       338 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/interfaces.rst.txt
-rw-r--r-- root/root       204 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/numpy_fft.rst.txt
-rw-r--r-- root/root       223 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/scipy_fft.rst.txt
-rw-r--r-- root/root       188 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/interfaces/scipy_fftpack.rst.txt
-rw-r--r-- root/root      3774 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/pyfftw/pyfftw.rst.txt
-rw-r--r-- root/root     20562 2020-01-31 19:12 ./usr/share/doc/python-pyfftw-doc/html/_sources/source/tutorial.rst.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/
-rw-r--r-- root/root     10912 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/basic.css
-rw-r--r-- root/root      4146 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/classic.css
-rw-r--r-- root/root        28 2019-03-09 14:07 ./usr/share/doc/python-pyfftw-doc/html/_static/default.css
-rw-r--r-- root/root      9313 2019-03-10 07:47 ./usr/share/doc/python-pyfftw-doc/html/_static/doctools.js
-rw-r--r-- root/root       310 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/documentation_options.js
-rw-r--r-- root/root       286 2019-03-09 14:07 ./usr/share/doc/python-pyfftw-doc/html/_static/file.png
lrwxrwxrwx root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/jquery.js -> ../../../../javascript/jquery/jquery.js
-rw-r--r-- root/root     10847 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/language_data.js
-rw-r--r-- root/root        90 2019-03-09 14:07 ./usr/share/doc/python-pyfftw-doc/html/_static/minus.png
-rw-r--r-- root/root        90 2019-03-09 14:07 ./usr/share/doc/python-pyfftw-doc/html/_static/plus.png
-rw-r--r-- root/root      4395 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/pygments.css
-rw-r--r-- root/root     15059 2019-03-10 07:47 ./usr/share/doc/python-pyfftw-doc/html/_static/searchtools.js
-rw-r--r-- root/root      4803 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/sidebar.js
lrwxrwxrwx root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/_static/underscore.js -> ../../../../javascript/underscore/underscore.js
-rw-r--r-- root/root     21446 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/genindex.html
-rw-r--r-- root/root     11439 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/index.html
-rw-r--r-- root/root      1498 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/objects.inv
-rw-r--r-- root/root      5499 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/py-modindex.html
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/release/
-rw-r--r-- root/root     23633 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/release/0.11.0.html
-rw-r--r-- root/root      9320 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/release/0.12.0.html
-rw-r--r-- root/root      3718 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/search.html
-rw-r--r-- root/root     22705 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/searchindex.js
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/
-rw-r--r-- root/root      8101 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/api.html
-rw-r--r-- root/root      6845 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/license.html
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/builders/
-rw-r--r-- root/root     14717 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/builders/_utils.html
-rw-r--r-- root/root     44400 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/builders/builders.html
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/
-rw-r--r-- root/root     23919 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/dask_fft.html
-rw-r--r-- root/root     51690 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/interfaces.html
-rw-r--r-- root/root     25108 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/numpy_fft.html
-rw-r--r-- root/root      5800 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/scipy_fft.html
-rw-r--r-- root/root     20981 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/interfaces/scipy_fftpack.html
-rw-r--r-- root/root     61697 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/pyfftw/pyfftw.html
-rw-r--r-- root/root     69278 2020-02-11 04:37 ./usr/share/doc/python-pyfftw-doc/html/source/tutorial.html


python3-pyfftw-dbgsym_0.12.0-1_amd64.deb
----------------------------------------

 new Debian package, version 2.0.
 size 334636 bytes: control archive=648 bytes.
     440 bytes,    12 lines      control              
     303 bytes,     3 lines      md5sums              
 Package: python3-pyfftw-dbgsym
 Source: pyfftw
 Version: 0.12.0-1
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
 Installed-Size: 484
 Depends: python3-pyfftw (= 0.12.0-1)
 Section: debug
 Priority: optional
 Description: debug symbols for python3-pyfftw
 Build-Ids: 402d16fd123006dddfa9c16e58c23b77de44e1ea 6b94a3d9e1c7d6c145af6840aac8cbe80899c546

drwxr-xr-x root/root         0 2020-02-11 04:37 ./
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/.build-id/40/
-rw-r--r-- root/root    231512 2020-02-11 04:37 ./usr/lib/debug/.build-id/40/2d16fd123006dddfa9c16e58c23b77de44e1ea.debug
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/.build-id/6b/
-rw-r--r-- root/root    236416 2020-02-11 04:37 ./usr/lib/debug/.build-id/6b/94a3d9e1c7d6c145af6840aac8cbe80899c546.debug
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/.dwz/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/debug/.dwz/x86_64-linux-gnu/
-rw-r--r-- root/root     12696 2020-02-11 04:37 ./usr/lib/debug/.dwz/x86_64-linux-gnu/python3-pyfftw.debug
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/
lrwxrwxrwx root/root         0 2020-02-11 04:37 ./usr/share/doc/python3-pyfftw-dbgsym -> python3-pyfftw


python3-pyfftw_0.12.0-1_amd64.deb
---------------------------------

 new Debian package, version 2.0.
 size 148292 bytes: control archive=1960 bytes.
    1403 bytes,    31 lines      control              
    1961 bytes,    21 lines      md5sums              
     254 bytes,    12 lines   *  postinst             #!/bin/sh
     403 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-pyfftw
 Source: pyfftw
 Version: 0.12.0-1
 Architecture: amd64
 Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
 Installed-Size: 679
 Depends: python3-numpy (>= 1:1.16.0~rc1), python3-numpy-abi9, python3 (<< 3.9), python3 (>= 3.7~), python3:any, libc6 (>= 2.4), libfftw3-double3 (>= 3.3.5), libfftw3-long3 (>= 3.3.5), libfftw3-single3 (>= 3.3.5)
 Recommends: python3-scipy (>= 0.16.0), python3-dask (>= 0.15.0)
 Conflicts: python3-fftw3
 Replaces: python3-fftw3
 Provides: python3-fftw3
 Section: python
 Priority: optional
 Homepage: https://github.com/pyFFTW/pyFFTW
 Description: Pythonic wrapper around FFTW - Python 3
  Pythonic wrapper around FFTW, the speedy FFT library. The ultimate
  aim is to present a unified interface for all the possible transforms
  that FFTW can perform.
  .
  Both the complex DFT and the real DFT are supported, as well as
  arbitrary axes of abitrary shaped and strided arrays, which makes it
  almost feature equivalent to standard and real FFT functions of
  numpy.fft (indeed, it supports the clongdouble dtype which numpy.fft
  does not).
  .
  pyFFTW is BSD-licensed and should not be confused with python-fftw, a
  GPL-licensed python module with the same aim of providing python
  bindings to FFTW3. Or python3-gpyfft, which provides bindings to the
  OpenCL FFT library clFFT.
  .
  This package provides the Python 3 bindings.

drwxr-xr-x root/root         0 2020-02-11 04:37 ./
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/dist-packages/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyFFTW-0.12.0.egg-info/
-rw-r--r-- root/root      2325 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyFFTW-0.12.0.egg-info/PKG-INFO
-rw-r--r-- root/root         1 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyFFTW-0.12.0.egg-info/dependency_links.txt
-rw-r--r-- root/root        68 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyFFTW-0.12.0.egg-info/requires.txt
-rw-r--r-- root/root         7 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyFFTW-0.12.0.egg-info/top_level.txt
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/
-rw-r--r-- root/root      1320 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/__init__.py
-rw-r--r-- root/root       498 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/_version.py
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/builders/
-rw-r--r-- root/root       123 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/builders/__init__.py
-rw-r--r-- root/root     16499 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/builders/_utils.py
-rw-r--r-- root/root     21156 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/builders/builders.py
-rw-r--r-- root/root      2743 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/config.py
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/interfaces/
-rw-r--r-- root/root     11874 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/__init__.py
-rw-r--r-- root/root      5399 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/_utils.py
-rw-r--r-- root/root      9271 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/cache.py
-rw-r--r-- root/root      3173 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/dask_fft.py
-rw-r--r-- root/root     14297 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/numpy_fft.py
-rw-r--r-- root/root     12927 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/scipy_fft.py
-rw-r--r-- root/root     12197 2020-01-31 19:12 ./usr/lib/python3/dist-packages/pyfftw/interfaces/scipy_fftpack.py
-rw-r--r-- root/root    272920 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    272936 2020-02-11 04:37 ./usr/lib/python3/dist-packages/pyfftw/pyfftw.cpython-38-x86_64-linux-gnu.so
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/
drwxr-xr-x root/root         0 2020-02-11 04:37 ./usr/share/doc/python3-pyfftw/
-rw-r--r-- root/root      2305 2020-02-11 04:37 ./usr/share/doc/python3-pyfftw/changelog.Debian.gz
-rw-r--r-- root/root      4251 2020-02-11 04:37 ./usr/share/doc/python3-pyfftw/copyright


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 15728
Build-Time: 1116
Distribution: unstable
Host Architecture: amd64
Install-Time: 60
Job: pyfftw_0.12.0-1
Machine Architecture: amd64
Package: pyfftw
Package-Time: 1204
Source-Version: 0.12.0-1
Space: 15728
Status: successful
Version: 0.12.0-1
--------------------------------------------------------------------------------
Finished at 2020-02-24T14:33:06Z
Build needed 00:20:04, 15728k disk space
DC-Status: OK 1206.209155567s
DC-Time-Estimation: 1206.209155567 versus expected 1741 (r/m: 0.4433649354797114 ; m: 1206.209155567)
