DC-Build-Header: python-dmidecode 3.12.2-10 / 2020-02-25 05:38:32 +0000
DC-Task: type:rebuild-binarch-only source:python-dmidecode version:3.12.2-10 chroot:unstable esttime:64 logfile:/tmp/python-dmidecode_3.12.2-10_unstable_clang9.log modes:clang9:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang9 python-dmidecode_3.12.2-10'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-8-228.eu-central-1.compute.internal

+==============================================================================+
| python-dmidecode 3.12.2-10 (amd64)           Tue, 25 Feb 2020 05:38:32 +0000 |
+==============================================================================+

Package: python-dmidecode
Version: 3.12.2-10
Source Version: 3.12.2-10
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-9ded6963-2824-4c18-aa7e-0df8cb5231b3' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang9
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=9
+ echo 'Install of clang-9'
Install of clang-9
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:7 http://127.0.0.1:12990/debian sid/main Sources 2020-02-25-0213.11.pdiff [23.2 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-25-0213.11.pdiff [35.0 kB]
Get:12 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6572 kB in 2s (2652 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-9 libomp-9-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc4 libomp5-9 libstdc++-8-dev libz3-4
Suggested packages:
  clang-9-doc libomp-9-doc libstdc++-8-doc
Recommended packages:
  llvm-9-dev python3
The following NEW packages will be installed:
  clang-9 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-9-dev libomp5-9
  libstdc++-8-dev libz3-4
0 upgraded, 21 newly installed, 0 to remove and 2 not upgraded.
Need to get 43.9 MB of archives.
After this operation, 237 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm9 amd64 1:9.0.1-8 [15.0 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp9 amd64 1:9.0.1-8 [8429 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-9-dev amd64 1:9.0.1-8 [3727 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-9 amd64 1:9.0.1-8 [1156 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp5-9 amd64 1:9.0.1-8 [333 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp-9-dev amd64 1:9.0.1-8 [66.2 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 43.9 MB in 2s (25.6 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm9:amd64.
Preparing to unpack .../03-libllvm9_1%3a9.0.1-8_amd64.deb ...
Unpacking libllvm9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libclang-cpp9.
Preparing to unpack .../04-libclang-cpp9_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-cpp9 (1:9.0.1-8) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../05-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../06-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../07-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../08-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../09-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../10-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../11-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../12-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../13-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../14-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../15-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-9-dev.
Preparing to unpack .../16-libclang-common-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-common-9-dev (1:9.0.1-8) ...
Selecting previously unselected package clang-9.
Preparing to unpack .../17-clang-9_1%3a9.0.1-8_amd64.deb ...
Unpacking clang-9 (1:9.0.1-8) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../18-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-9:amd64.
Preparing to unpack .../19-libomp5-9_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp5-9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libomp-9-dev.
Preparing to unpack .../20-libomp-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp-9-dev (1:9.0.1-8) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-9:amd64 (1:9.0.1-8) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libomp-9-dev (1:9.0.1-8) ...
Setting up libllvm9:amd64 (1:9.0.1-8) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libclang-cpp9 (1:9.0.1-8) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-9-dev (1:9.0.1-8) ...
Setting up clang-9 (1:9.0.1-8) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-9 g++-4.6
+ ln -s clang-9 gcc-4.6
+ ln -s clang-9 cpp-4.6
+ ln -s clang-9 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-9 g++-4.7
+ ln -s clang-9 gcc-4.7
+ ln -s clang-9 cpp-4.7
+ ln -s clang-9 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-9 g++-4.8
+ ln -s clang-9 gcc-4.8
+ ln -s clang-9 cpp-4.8
+ ln -s clang-9 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-9 g++-4.9
+ ln -s clang-9 gcc-4.9
+ ln -s clang-9 cpp-4.9
+ ln -s clang-9 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-9 g++-5
+ ln -s clang-9 gcc-5
+ ln -s clang-9 cpp-5
+ ln -s clang-9 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-9 g++-6
+ ln -s clang-9 gcc-6
+ ln -s clang-9 cpp-6
+ ln -s clang-9 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-9 g++-7
+ ln -s clang-9 gcc-7
+ ln -s clang-9 cpp-7
+ ln -s clang-9 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-9 g++-8
+ ln -s clang-9 gcc-8
+ ln -s clang-9 cpp-8
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-8 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-9 g++-9
+ ln -s clang-9 gcc-9
+ ln -s clang-9 cpp-9
+ ln -s clang-9 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-9 g++-10
+ ln -s clang-9 gcc-10
+ ln -s clang-9 cpp-10
+ ln -s clang-9 gcc
+ echo 'gcc-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-10 hold'
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/python-dmidecode-mzYPTp
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version
+ cpp --version
+ grep clang
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang9'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/python-dmidecode-mzYPTp/resolver-gfIzKH' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10 zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 343 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 zlib1g amd64 1:1.2.11.dfsg-2 [90.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 343 kB in 0s (3230 kB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../zlib1g_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g:amd64 (1:1.2.11.dfsg-2) over (1:1.2.11.dfsg-1.2) ...
Setting up zlib1g:amd64 (1:1.2.11.dfsg-2) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'python-dmidecode' packaging is maintained in the 'Git' version control system at:
https://salsa.debian.org/python-team/modules/python-dmidecode.git
Please use:
git clone https://salsa.debian.org/python-team/modules/python-dmidecode.git
to retrieve the latest (possibly unreleased) updates to the package.
Need to get 156 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main python-dmidecode 3.12.2-10 (dsc) [2265 B]
Get:2 http://127.0.0.1:12990/debian sid/main python-dmidecode 3.12.2-10 (tar) [147 kB]
Get:3 http://127.0.0.1:12990/debian sid/main python-dmidecode 3.12.2-10 (diff) [6960 B]
Fetched 156 kB in 0s (1104 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/python-dmidecode-mzYPTp/python-dmidecode-3.12.2' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/python-dmidecode-mzYPTp' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper-compat (= 10), dh-python, python3-all-dev, python3-all-dbg, libxml2-dev, python3-libxml2, build-essential, fakeroot
Filtered Build-Depends: debhelper-compat (= 10), dh-python, python3-all-dev, python3-all-dbg, libxml2-dev, python3-libxml2, build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [401 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [486 B]
Fetched 1844 B in 0s (0 B/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism dwz file gettext
  gettext-base groff-base icu-devtools intltool-debian libarchive-zip-perl
  libcroco3 libdebhelper-perl libelf1 libexpat1 libexpat1-dev
  libfile-stripnondeterminism-perl libglib2.0-0 libicu-dev libicu63
  libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpython3-all-dbg
  libpython3-all-dev libpython3-dbg libpython3-dev libpython3-stdlib
  libpython3.7 libpython3.7-dbg libpython3.7-dev libpython3.7-minimal
  libpython3.7-stdlib libpython3.8 libpython3.8-dbg libpython3.8-dev
  libpython3.8-minimal libpython3.8-stdlib libreadline8 libsigsegv2
  libsqlite3-0 libssl1.1 libsub-override-perl libtool libuchardet0 libxml2
  libxml2-dev m4 man-db mime-support po-debconf python3 python3-all
  python3-all-dbg python3-all-dev python3-dbg python3-dev python3-distutils
  python3-lib2to3 python3-libxml2 python3-minimal python3.7 python3.7-dbg
  python3.7-dev python3.7-minimal python3.8 python3.8-dbg python3.8-dev
  python3.8-minimal readline-common sensible-utils zlib1g-dev
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff icu-doc
  libtool-doc gfortran | fortran95-compiler gcj-jdk pkg-config m4-doc apparmor
  less www-browser libmail-box-perl python3-doc python3-tk python3-venv
  python3.7-venv python3.7-doc python3-gdbm-dbg python3-tk-dbg binfmt-support
  python3.8-venv python3.8-doc readline-doc
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs libltdl-dev libmail-sendmail-perl gdb
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-python dh-strip-nondeterminism dwz file gettext
  gettext-base groff-base icu-devtools intltool-debian libarchive-zip-perl
  libcroco3 libdebhelper-perl libelf1 libexpat1 libexpat1-dev
  libfile-stripnondeterminism-perl libglib2.0-0 libicu-dev libicu63
  libmagic-mgc libmagic1 libmpdec2 libpipeline1 libpython3-all-dbg
  libpython3-all-dev libpython3-dbg libpython3-dev libpython3-stdlib
  libpython3.7 libpython3.7-dbg libpython3.7-dev libpython3.7-minimal
  libpython3.7-stdlib libpython3.8 libpython3.8-dbg libpython3.8-dev
  libpython3.8-minimal libpython3.8-stdlib libreadline8 libsigsegv2
  libsqlite3-0 libssl1.1 libsub-override-perl libtool libuchardet0 libxml2
  libxml2-dev m4 man-db mime-support po-debconf python3 python3-all
  python3-all-dbg python3-all-dev python3-dbg python3-dev python3-distutils
  python3-lib2to3 python3-libxml2 python3-minimal python3.7 python3.7-dbg
  python3.7-dev python3.7-minimal python3.8 python3.8-dbg python3.8-dev
  python3.8-minimal readline-common sbuild-build-depends-main-dummy
  sensible-utils zlib1g-dev
0 upgraded, 80 newly installed, 0 to remove and 0 not upgraded.
Need to get 196 MB of archives.
After this operation, 551 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [908 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libssl1.1 amd64 1.1.1d-2 [1540 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-minimal amd64 3.7.6-1+b1 [591 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libexpat1 amd64 2.2.9-1 [94.3 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 python3.7-minimal amd64 3.7.6-1+b1 [1813 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 python3-minimal amd64 3.7.5-3 [36.8 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 mime-support all 3.64 [37.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libmpdec2 amd64 2.4.2-2 [87.2 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 readline-common all 8.0-3 [72.5 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 libreadline8 amd64 8.0-3 [160 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 libsqlite3-0 amd64 3.31.1-3 [661 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-stdlib amd64 3.7.6-1+b1 [1735 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 python3.7 amd64 3.7.6-1+b1 [351 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libpython3-stdlib amd64 3.7.5-3 [20.2 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 python3 amd64 3.7.5-3 [62.1 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-minimal amd64 3.8.2~rc2-2 [750 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 python3.8-minimal amd64 3.8.2~rc2-2 [1939 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:37 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:38 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:39 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:40 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:41 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:42 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:43 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:44 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:45 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:46 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:47 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:48 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:49 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:50 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:51 http://127.0.0.1:12990/debian sid/main amd64 python3-lib2to3 all 3.8.0-1 [78.3 kB]
Get:52 http://127.0.0.1:12990/debian sid/main amd64 python3-distutils all 3.8.0-1 [145 kB]
Get:53 http://127.0.0.1:12990/debian sid/main amd64 dh-python all 4.20191017 [94.4 kB]
Get:54 http://127.0.0.1:12990/debian sid/main amd64 icu-devtools amd64 63.2-2 [189 kB]
Get:55 http://127.0.0.1:12990/debian sid/main amd64 libexpat1-dev amd64 2.2.9-1 [136 kB]
Get:56 http://127.0.0.1:12990/debian sid/main amd64 libicu-dev amd64 63.2-2 [9190 kB]
Get:57 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-dbg amd64 3.7.6-1+b1 [11.7 MB]
Get:58 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dbg amd64 3.7.5-3 [20.2 kB]
Get:59 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-stdlib amd64 3.8.2~rc2-2 [1665 kB]
Get:60 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-dbg amd64 3.8.2~rc2-2 [13.4 MB]
Get:61 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dbg amd64 3.7.5-3 [1068 B]
Get:62 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7 amd64 3.7.6-1+b1 [1484 kB]
Get:63 http://127.0.0.1:12990/debian sid/main amd64 libpython3.7-dev amd64 3.7.6-1+b1 [41.4 MB]
Get:64 http://127.0.0.1:12990/debian sid/main amd64 libpython3-dev amd64 3.7.5-3 [20.3 kB]
Get:65 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8 amd64 3.8.2~rc2-2 [1619 kB]
Get:66 http://127.0.0.1:12990/debian sid/main amd64 libpython3.8-dev amd64 3.8.2~rc2-2 [47.3 MB]
Get:67 http://127.0.0.1:12990/debian sid/main amd64 libpython3-all-dev amd64 3.7.5-3 [1072 B]
Get:68 http://127.0.0.1:12990/debian sid/main amd64 libxml2-dev amd64 2.9.10+dfsg-3 [805 kB]
Get:69 http://127.0.0.1:12990/debian sid/main amd64 python3.8 amd64 3.8.2~rc2-2 [409 kB]
Get:70 http://127.0.0.1:12990/debian sid/main amd64 python3-all amd64 3.7.5-3 [1060 B]
Get:71 http://127.0.0.1:12990/debian sid/main amd64 python3.7-dbg amd64 3.7.6-1+b1 [16.5 MB]
Get:72 http://127.0.0.1:12990/debian sid/main amd64 python3-dbg amd64 3.7.5-3 [1296 B]
Get:73 http://127.0.0.1:12990/debian sid/main amd64 python3.8-dbg amd64 3.8.2~rc2-2 [19.3 MB]
Get:74 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dbg amd64 3.7.5-3 [1076 B]
Get:75 http://127.0.0.1:12990/debian sid/main amd64 zlib1g-dev amd64 1:1.2.11.dfsg-2 [190 kB]
Get:76 http://127.0.0.1:12990/debian sid/main amd64 python3.7-dev amd64 3.7.6-1+b1 [518 kB]
Get:77 http://127.0.0.1:12990/debian sid/main amd64 python3-dev amd64 3.7.5-3 [1260 B]
Get:78 http://127.0.0.1:12990/debian sid/main amd64 python3.8-dev amd64 3.8.2~rc2-2 [515 kB]
Get:79 http://127.0.0.1:12990/debian sid/main amd64 python3-all-dev amd64 3.7.5-3 [1076 B]
Get:80 http://127.0.0.1:12990/debian sid/main amd64 python3-libxml2 amd64 2.9.10+dfsg-3 [225 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 196 MB in 11s (18.6 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../0-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../1-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../2-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../3-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../4-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../5-libssl1.1_1.1.1d-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.1d-2) ...
Selecting previously unselected package libpython3.7-minimal:amd64.
Preparing to unpack .../6-libpython3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libexpat1:amd64.
Preparing to unpack .../7-libexpat1_2.2.9-1_amd64.deb ...
Unpacking libexpat1:amd64 (2.2.9-1) ...
Selecting previously unselected package python3.7-minimal.
Preparing to unpack .../8-python3.7-minimal_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-minimal (3.7.6-1+b1) ...
Setting up libssl1.1:amd64 (1.1.1d-2) ...
Setting up libpython3.7-minimal:amd64 (3.7.6-1+b1) ...
Setting up libexpat1:amd64 (2.2.9-1) ...
Setting up python3.7-minimal (3.7.6-1+b1) ...
Selecting previously unselected package python3-minimal.
(Reading database ... 14830 files and directories currently installed.)
Preparing to unpack .../0-python3-minimal_3.7.5-3_amd64.deb ...
Unpacking python3-minimal (3.7.5-3) ...
Selecting previously unselected package mime-support.
Preparing to unpack .../1-mime-support_3.64_all.deb ...
Unpacking mime-support (3.64) ...
Selecting previously unselected package libmpdec2:amd64.
Preparing to unpack .../2-libmpdec2_2.4.2-2_amd64.deb ...
Unpacking libmpdec2:amd64 (2.4.2-2) ...
Selecting previously unselected package readline-common.
Preparing to unpack .../3-readline-common_8.0-3_all.deb ...
Unpacking readline-common (8.0-3) ...
Selecting previously unselected package libreadline8:amd64.
Preparing to unpack .../4-libreadline8_8.0-3_amd64.deb ...
Unpacking libreadline8:amd64 (8.0-3) ...
Selecting previously unselected package libsqlite3-0:amd64.
Preparing to unpack .../5-libsqlite3-0_3.31.1-3_amd64.deb ...
Unpacking libsqlite3-0:amd64 (3.31.1-3) ...
Selecting previously unselected package libpython3.7-stdlib:amd64.
Preparing to unpack .../6-libpython3.7-stdlib_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package python3.7.
Preparing to unpack .../7-python3.7_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-stdlib:amd64.
Preparing to unpack .../8-libpython3-stdlib_3.7.5-3_amd64.deb ...
Unpacking libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3-minimal (3.7.5-3) ...
Selecting previously unselected package python3.
(Reading database ... 15301 files and directories currently installed.)
Preparing to unpack .../00-python3_3.7.5-3_amd64.deb ...
Unpacking python3 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-minimal:amd64.
Preparing to unpack .../01-libpython3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package python3.8-minimal.
Preparing to unpack .../02-python3.8-minimal_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-minimal (3.8.2~rc2-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../03-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../04-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../05-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../06-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../07-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../08-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../09-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../10-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../11-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../12-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../13-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../14-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../15-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../16-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../17-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../18-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../19-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../20-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../21-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../22-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../23-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../24-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../25-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../26-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../27-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../28-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../29-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../30-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package python3-lib2to3.
Preparing to unpack .../31-python3-lib2to3_3.8.0-1_all.deb ...
Unpacking python3-lib2to3 (3.8.0-1) ...
Selecting previously unselected package python3-distutils.
Preparing to unpack .../32-python3-distutils_3.8.0-1_all.deb ...
Unpacking python3-distutils (3.8.0-1) ...
Selecting previously unselected package dh-python.
Preparing to unpack .../33-dh-python_4.20191017_all.deb ...
Unpacking dh-python (4.20191017) ...
Selecting previously unselected package icu-devtools.
Preparing to unpack .../34-icu-devtools_63.2-2_amd64.deb ...
Unpacking icu-devtools (63.2-2) ...
Selecting previously unselected package libexpat1-dev:amd64.
Preparing to unpack .../35-libexpat1-dev_2.2.9-1_amd64.deb ...
Unpacking libexpat1-dev:amd64 (2.2.9-1) ...
Selecting previously unselected package libicu-dev:amd64.
Preparing to unpack .../36-libicu-dev_63.2-2_amd64.deb ...
Unpacking libicu-dev:amd64 (63.2-2) ...
Selecting previously unselected package libpython3.7-dbg:amd64.
Preparing to unpack .../37-libpython3.7-dbg_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-dbg:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-dbg:amd64.
Preparing to unpack .../38-libpython3-dbg_3.7.5-3_amd64.deb ...
Unpacking libpython3-dbg:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.8-stdlib:amd64.
Preparing to unpack .../39-libpython3.8-stdlib_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8-dbg:amd64.
Preparing to unpack .../40-libpython3.8-dbg_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-dbg:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3-all-dbg:amd64.
Preparing to unpack .../41-libpython3-all-dbg_3.7.5-3_amd64.deb ...
Unpacking libpython3-all-dbg:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.7:amd64.
Preparing to unpack .../42-libpython3.7_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3.7-dev:amd64.
Preparing to unpack .../43-libpython3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Selecting previously unselected package libpython3-dev:amd64.
Preparing to unpack .../44-libpython3-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package libpython3.8:amd64.
Preparing to unpack .../45-libpython3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3.8-dev:amd64.
Preparing to unpack .../46-libpython3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Selecting previously unselected package libpython3-all-dev:amd64.
Preparing to unpack .../47-libpython3-all-dev_3.7.5-3_amd64.deb ...
Unpacking libpython3-all-dev:amd64 (3.7.5-3) ...
Selecting previously unselected package libxml2-dev:amd64.
Preparing to unpack .../48-libxml2-dev_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2-dev:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package python3.8.
Preparing to unpack .../49-python3.8_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8 (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all.
Preparing to unpack .../50-python3-all_3.7.5-3_amd64.deb ...
Unpacking python3-all (3.7.5-3) ...
Selecting previously unselected package python3.7-dbg.
Preparing to unpack .../51-python3.7-dbg_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-dbg (3.7.6-1+b1) ...
Selecting previously unselected package python3-dbg.
Preparing to unpack .../52-python3-dbg_3.7.5-3_amd64.deb ...
Unpacking python3-dbg (3.7.5-3) ...
Selecting previously unselected package python3.8-dbg.
Preparing to unpack .../53-python3.8-dbg_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-dbg (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all-dbg.
Preparing to unpack .../54-python3-all-dbg_3.7.5-3_amd64.deb ...
Unpacking python3-all-dbg (3.7.5-3) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../55-zlib1g-dev_1%3a1.2.11.dfsg-2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Selecting previously unselected package python3.7-dev.
Preparing to unpack .../56-python3.7-dev_3.7.6-1+b1_amd64.deb ...
Unpacking python3.7-dev (3.7.6-1+b1) ...
Selecting previously unselected package python3-dev.
Preparing to unpack .../57-python3-dev_3.7.5-3_amd64.deb ...
Unpacking python3-dev (3.7.5-3) ...
Selecting previously unselected package python3.8-dev.
Preparing to unpack .../58-python3.8-dev_3.8.2~rc2-2_amd64.deb ...
Unpacking python3.8-dev (3.8.2~rc2-2) ...
Selecting previously unselected package python3-all-dev.
Preparing to unpack .../59-python3-all-dev_3.7.5-3_amd64.deb ...
Unpacking python3-all-dev (3.7.5-3) ...
Selecting previously unselected package python3-libxml2:amd64.
Preparing to unpack .../60-python3-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking python3-libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../61-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libpython3.8-minimal:amd64 (3.8.2~rc2-2) ...
Setting up mime-support (3.64) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libdebhelper-perl (12.9) ...
Setting up libsqlite3-0:amd64 (3.31.1-3) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libexpat1-dev:amd64 (2.2.9-1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up autopoint (0.19.8.1-10) ...
Setting up icu-devtools (63.2-2) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-2) ...
Setting up python3.8-minimal (3.8.2~rc2-2) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libmpdec2:amd64 (2.4.2-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up readline-common (8.0-3) ...
Setting up libicu-dev:amd64 (63.2-2) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up libreadline8:amd64 (8.0-3) ...
Setting up m4 (1.4.18-4) ...
Setting up libxml2-dev:amd64 (2.9.10+dfsg-3) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up libpython3.8-stdlib:amd64 (3.8.2~rc2-2) ...
Setting up python3.8 (3.8.2~rc2-2) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up libpython3.7-stdlib:amd64 (3.7.6-1+b1) ...
Setting up gettext (0.19.8.1-10) ...
Setting up libpython3.7:amd64 (3.7.6-1+b1) ...
Setting up libpython3.7-dev:amd64 (3.7.6-1+b1) ...
Setting up libpython3.8-dbg:amd64 (3.8.2~rc2-2) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up libpython3.7-dbg:amd64 (3.7.6-1+b1) ...
Setting up libpython3.8:amd64 (3.8.2~rc2-2) ...
Setting up libpython3-stdlib:amd64 (3.7.5-3) ...
Setting up python3.8-dbg (3.8.2~rc2-2) ...
Setting up python3.7 (3.7.6-1+b1) ...
Setting up python3.7-dbg (3.7.6-1+b1) ...
Setting up libpython3-dev:amd64 (3.7.5-3) ...
Setting up po-debconf (1.0.21) ...
Setting up libpython3-dbg:amd64 (3.7.5-3) ...
Setting up python3 (3.7.5-3) ...
Setting up libpython3-all-dbg:amd64 (3.7.5-3) ...
Setting up python3.7-dev (3.7.6-1+b1) ...
Setting up python3-libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libpython3.8-dev:amd64 (3.8.2~rc2-2) ...
Setting up libpython3-all-dev:amd64 (3.7.5-3) ...
Setting up python3.8-dev (3.8.2~rc2-2) ...
Setting up python3-lib2to3 (3.8.0-1) ...
Setting up python3-dbg (3.7.5-3) ...
Setting up python3-distutils (3.8.0-1) ...
Setting up dh-python (4.20191017) ...
Setting up python3-all (3.7.5-3) ...
Setting up python3-dev (3.7.5-3) ...
Setting up python3-all-dbg (3.7.5-3) ...
Setting up python3-all-dev (3.7.5-3) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any all)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-9_1:9.0.1-8 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-python_4.20191017 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 icu-devtools_63.2-2 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-9-dev_1:9.0.1-8 libclang-cpp9_1:9.0.1-8 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libexpat1_2.2.9-1 libexpat1-dev_2.2.9-1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu-dev_63.2-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm9_1:9.0.1-8 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpdec2_2.4.2-2 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-9-dev_1:9.0.1-8 libomp5-9_1:9.0.1-8 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libpython3-all-dbg_3.7.5-3 libpython3-all-dev_3.7.5-3 libpython3-dbg_3.7.5-3 libpython3-dev_3.7.5-3 libpython3-stdlib_3.7.5-3 libpython3.7_3.7.6-1+b1 libpython3.7-dbg_3.7.6-1+b1 libpython3.7-dev_3.7.6-1+b1 libpython3.7-minimal_3.7.6-1+b1 libpython3.7-stdlib_3.7.6-1+b1 libpython3.8_3.8.2~rc2-2 libpython3.8-dbg_3.8.2~rc2-2 libpython3.8-dev_3.8.2~rc2-2 libpython3.8-minimal_3.8.2~rc2-2 libpython3.8-stdlib_3.8.2~rc2-2 libquadmath0_10-20200222-1 libreadline8_8.0-3 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libsqlite3-0_3.31.1-3 libss2_1.45.5-2 libssl1.1_1.1.1d-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libxml2-dev_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mime-support_3.64 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 python3_3.7.5-3 python3-all_3.7.5-3 python3-all-dbg_3.7.5-3 python3-all-dev_3.7.5-3 python3-dbg_3.7.5-3 python3-dev_3.7.5-3 python3-distutils_3.8.0-1 python3-lib2to3_3.8.0-1 python3-libxml2_2.9.10+dfsg-3 python3-minimal_3.7.5-3 python3.7_3.7.6-1+b1 python3.7-dbg_3.7.6-1+b1 python3.7-dev_3.7.6-1+b1 python3.7-minimal_3.7.6-1+b1 python3.8_3.8.2~rc2-2 python3.8-dbg_3.8.2~rc2-2 python3.8-dev_3.8.2~rc2-2 python3.8-minimal_3.8.2~rc2-2 readline-common_8.0-3 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-2 zlib1g-dev_1:1.2.11.dfsg-2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Format: 3.0 (quilt)
Source: python-dmidecode
Binary: python3-dmidecode, python3-dmidecode-dbg, python-dmidecode-data
Architecture: any all
Version: 3.12.2-10
Maintainer: Sandro Tosi <morph@debian.org>
Uploaders: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
Homepage: https://github.com/nima/python-dmidecode
Standards-Version: 4.4.0
Vcs-Browser: https://salsa.debian.org/python-team/modules/python-dmidecode
Vcs-Git: https://salsa.debian.org/python-team/modules/python-dmidecode.git
Build-Depends: debhelper-compat (= 10), dh-python, python3-all-dev, python3-all-dbg, libxml2-dev, python3-libxml2
Package-List:
 python-dmidecode-data deb python optional arch=all
 python3-dmidecode deb python optional arch=any
 python3-dmidecode-dbg deb debug optional arch=any
Checksums-Sha1:
 e0a5f9bca278b1a6eb3e899b32e181c9eb5eabbd 147096 python-dmidecode_3.12.2.orig.tar.gz
 f3aaefedfaffc3ddd6c6aa738fa9fb8b6be1083e 6960 python-dmidecode_3.12.2-10.debian.tar.xz
Checksums-Sha256:
 2f9d311f09988a645707dbed883d513daca9729ab84efe8317fe5393eae9769d 147096 python-dmidecode_3.12.2.orig.tar.gz
 4fe420a6be3f1b89f5075a1f71f1b08e132fadd066e50ac2d4fc4c5d3df6d7bd 6960 python-dmidecode_3.12.2-10.debian.tar.xz
Files:
 458d83ac45316ec40df327b183b2030e 147096 python-dmidecode_3.12.2.orig.tar.gz
 f9591a4af663c9584cdc5f1ef75eaee0 6960 python-dmidecode_3.12.2-10.debian.tar.xz

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEufrTGSrz5KUwnZ05h588mTgBqU8FAl1diYoACgkQh588mTgB
qU9eWRAAxhLcvqrZIuR946AQAN8r0nSXyOtyyxompXgIlOHtXEmOLIfCLl9kIC9T
/UufYgNTNECnSXmuVh4KoqaMX2v4gbPJ+/okNaAobf5TOfQ3QAgRtUn77A3oxe8/
H1O3ujAiPAEe6MrcTQnNYCwpAW7/xdbEBrQv2sWPpBxNgmYyq6hC11usyZm7JwsQ
3E1aP4QIG8i0pTtq69sdTEtPooPYi4Os3VLmGRvIqbzaVHKeNvQR4vpsGXFnuLdH
xfxg0WU0br36vhjnMP+aJBIyiqfsf8ZWQxtYSK1OIsfCbFk0J4oYtU41b9CHbCm8
Uj7wdYCHgIzw5Sgl1k8BpQowpgW5M1bNBVlOx7fC4HPf0foL+UzdLYCjVI2ws2la
ax3mdV1YbQkP21W10T/sA7XL8nLpTEOGIQMkF+RW6A/7zajV7oSP8BrMvmdo9QPF
R62qtKYkI9od6yPJPWWdXaZ0xGe2wZ1szC707RKuCefFi/sFtdA1HI/cwOswHamF
lstiL2h7xgSW9xqramVgVN5KQ561SdoHsTexBP9CzFrKZQAXhggu/xuVXWfDnpPq
ZjwRxNuXVWW9Blg2/iLO0knKSrtJFlRVbFZ+A6TzlgUAXK11wrfUGMqejS98kW+C
C0d92/SA7oXz8+IUg1BNu+1fFYioQJx6lStQE8ND7ays4m2c8jA=
=21H2
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Wed Aug 21 18:12:26 2019 UTC
gpgv:                using RSA key B9FAD3192AF3E4A5309D9D39879F3C993801A94F
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./python-dmidecode_3.12.2-10.dsc
dpkg-source: info: extracting python-dmidecode in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking python-dmidecode_3.12.2.orig.tar.gz
dpkg-source: info: unpacking python-dmidecode_3.12.2-10.debian.tar.xz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying 0001-Don-t-use-unaligned-access-on-ARM.patch
dpkg-source: info: applying 0002-Stop-linking-with-libxml2mod.patch
dpkg-source: info: applying 0003-Fix-memory-Type-Detail-map-size.patch
dpkg-source: info: applying 0004-makefile-dont-cp.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-9ded6963-2824-4c18-aa7e-0df8cb5231b3
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package python-dmidecode
dpkg-buildpackage: info: source version 3.12.2-10
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Sandro Tosi <morph@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean --with python3
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_clean
	make -j4 clean
make[2]: Entering directory '/<<PKGBUILDDIR>>'
/bin/sh: 1: python2: not found
make[2]: python2: Command not found
make[2]: python2: Command not found
python src/setup.py clean --all
/bin/bash: python: command not found
make[2]: [Makefile:74: clean] Error 127 (ignored)
rm -f *.so lib/*.o core dmidump src/*.o
rm -rf build
rm -rf rpm
rm -rf src/setup_common.py[oc]
rm -rf __pycache__ src/__pycache__
rm -rf python-dmidecode- python-dmidecode-.tar.gz
make -C unit-tests clean
make[3]: Entering directory '/<<PKGBUILDDIR>>/unit-tests'
rm -f *.{py[oc],o,so} *~
make[3]: Leaving directory '/<<PKGBUILDDIR>>/unit-tests'
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
/usr/bin/make clean
make[2]: Entering directory '/<<PKGBUILDDIR>>'
/bin/sh: 1: python2: not found
make[2]: python2: Command not found
make[2]: python2: Command not found
python src/setup.py clean --all
/bin/bash: python: command not found
make[2]: [Makefile:74: clean] Error 127 (ignored)
rm -f *.so lib/*.o core dmidump src/*.o
rm -rf build
rm -rf rpm
rm -rf src/setup_common.py[oc]
rm -rf __pycache__ src/__pycache__
rm -rf python-dmidecode- python-dmidecode-.tar.gz
/usr/bin/make -C unit-tests clean
make[3]: Entering directory '/<<PKGBUILDDIR>>/unit-tests'
rm -f *.{py[oc],o,so} *~
make[3]: Leaving directory '/<<PKGBUILDDIR>>/unit-tests'
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_clean
 debian/rules build
dh build --with python3
   dh_update_autotools_config
   dh_autoreconf
   dh_auto_configure
   debian/rules override_dh_auto_build
make[1]: Entering directory '/<<PKGBUILDDIR>>'
set -e ;\
for python in python3.8 python3.7; do \
	/usr/bin/make PY_BIN=$python ; \
	/usr/bin/make PY_BIN=$python-dbg ; \
done
make[2]: Entering directory '/<<PKGBUILDDIR>>'
python3.8 src/setup.py build
running build
running build_py
creating build
creating build/lib.linux-x86_64-3.8
copying dmidecode.py -> build/lib.linux-x86_64-3.8
running build_ext
building 'dmidecodemod' extension
creating build/temp.linux-x86_64-3.8
creating build/temp.linux-x86_64-3.8/src
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmidecodemodule.c -o build/temp.linux-x86_64-3.8/src/dmidecodemodule.o
src/dmidecodemodule.c:511:25: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                section = PyUnicode_AsUTF8(args);
                        ^ ~~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:642:19: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                f = PyUnicode_AsUTF8(arg);
                  ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:690:23: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                fname = PyUnicode_AsUTF8(arg);
                      ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:765:28: warning: incompatible pointer types initializing 'PyCFunction' (aka 'struct _object *(*)(struct _object *, struct _object *)') with an expression of type 'PyObject *(PyObject *, PyObject *, PyObject *)' (aka 'struct _object *(struct _object *, struct _object *, struct _object *)') [-Wincompatible-pointer-types]
        {(char *)"xmlapi", dmidecode_xmlapi, METH_VARARGS | METH_KEYWORDS,
                           ^~~~~~~~~~~~~~~~
src/dmidecodemodule.c:871:72: warning: incompatible pointer types passing 'void (void *)' to parameter of type 'PyCapsule_Destructor' (aka 'void (*)(struct _object *)') [-Wincompatible-pointer-types]
        PyModule_AddObject(module, "options", PyCapsule_New(opt, NULL, destruct_options));
                                                                       ^~~~~~~~~~~~~~~~
/usr/include/python3.8/pycapsule.h:31:26: note: passing argument to parameter 'destructor' here
    PyCapsule_Destructor destructor);
                         ^
5 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/util.c -o build/temp.linux-x86_64-3.8/src/util.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmioem.c -o build/temp.linux-x86_64-3.8/src/dmioem.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmidecode.c -o build/temp.linux-x86_64-3.8/src/dmidecode.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmixml.c -o build/temp.linux-x86_64-3.8/src/dmixml.o
src/dmixml.c:68:33: warning: passing 'xmlChar *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        xmlStrVPrintf(ret, len, xmlfmt, ap);
                                ^~~~~~
/usr/include/libxml2/libxml/xmlstring.h:105:54: note: passing argument to parameter 'msg' here
                                         const char *msg,
                                                     ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmierror.c -o build/temp.linux-x86_64-3.8/src/dmierror.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmilog.c -o build/temp.linux-x86_64-3.8/src/dmilog.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/xmlpythonizer.c -o build/temp.linux-x86_64-3.8/src/xmlpythonizer.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/efi.c -o build/temp.linux-x86_64-3.8/src/efi.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8 -c src/dmidump.c -o build/temp.linux-x86_64-3.8/src/dmidump.o
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -g -fwrapv -O2 -Wl,-z,relro -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.8/src/dmidecodemodule.o build/temp.linux-x86_64-3.8/src/util.o build/temp.linux-x86_64-3.8/src/dmioem.o build/temp.linux-x86_64-3.8/src/dmidecode.o build/temp.linux-x86_64-3.8/src/dmixml.o build/temp.linux-x86_64-3.8/src/dmierror.o build/temp.linux-x86_64-3.8/src/dmilog.o build/temp.linux-x86_64-3.8/src/xmlpythonizer.o build/temp.linux-x86_64-3.8/src/efi.o build/temp.linux-x86_64-3.8/src/dmidump.o -L/usr/lib/python3/dist-packages -L/usr/lib/pymodules/python3.8 -lxml2 -o build/lib.linux-x86_64-3.8/dmidecodemod.cpython-38-x86_64-linux-gnu.so
cc  -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2  -c -o src/util.o src/util.c
cc  -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2  -c -o src/efi.o src/efi.c
cc  -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2  -c -o src/dmilog.o src/dmilog.c
cc -o dmidump src/dmidump.c src/util.o src/efi.o src/dmilog.o -g -Wall -D_DMIDUMP_MAIN_
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Entering directory '/<<PKGBUILDDIR>>'
python3.8 src/setup.py build
running build
running build_py
running build_ext
cc -o dmidump src/dmidump.c src/util.o src/efi.o src/dmilog.o -g -Wall -D_DMIDUMP_MAIN_
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Entering directory '/<<PKGBUILDDIR>>'
python3.7 src/setup.py build
running build
running build_py
creating build/lib.linux-x86_64-3.7
copying dmidecode.py -> build/lib.linux-x86_64-3.7
running build_ext
building 'dmidecodemod' extension
creating build/temp.linux-x86_64-3.7
creating build/temp.linux-x86_64-3.7/src
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmidecodemodule.c -o build/temp.linux-x86_64-3.7/src/dmidecodemodule.o
src/dmidecodemodule.c:511:25: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                section = PyUnicode_AsUTF8(args);
                        ^ ~~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:642:19: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                f = PyUnicode_AsUTF8(arg);
                  ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:690:23: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                fname = PyUnicode_AsUTF8(arg);
                      ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:765:28: warning: incompatible pointer types initializing 'PyCFunction' (aka 'struct _object *(*)(struct _object *, struct _object *)') with an expression of type 'PyObject *(PyObject *, PyObject *, PyObject *)' (aka 'struct _object *(struct _object *, struct _object *, struct _object *)') [-Wincompatible-pointer-types]
        {(char *)"xmlapi", dmidecode_xmlapi, METH_VARARGS | METH_KEYWORDS,
                           ^~~~~~~~~~~~~~~~
src/dmidecodemodule.c:871:72: warning: incompatible pointer types passing 'void (void *)' to parameter of type 'PyCapsule_Destructor' (aka 'void (*)(struct _object *)') [-Wincompatible-pointer-types]
        PyModule_AddObject(module, "options", PyCapsule_New(opt, NULL, destruct_options));
                                                                       ^~~~~~~~~~~~~~~~
/usr/include/python3.7m/pycapsule.h:31:26: note: passing argument to parameter 'destructor' here
    PyCapsule_Destructor destructor);
                         ^
5 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/util.c -o build/temp.linux-x86_64-3.7/src/util.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmioem.c -o build/temp.linux-x86_64-3.7/src/dmioem.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmidecode.c -o build/temp.linux-x86_64-3.7/src/dmidecode.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmixml.c -o build/temp.linux-x86_64-3.7/src/dmixml.o
src/dmixml.c:68:33: warning: passing 'xmlChar *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        xmlStrVPrintf(ret, len, xmlfmt, ap);
                                ^~~~~~
/usr/include/libxml2/libxml/xmlstring.h:105:54: note: passing argument to parameter 'msg' here
                                         const char *msg,
                                                     ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmierror.c -o build/temp.linux-x86_64-3.7/src/dmierror.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmilog.c -o build/temp.linux-x86_64-3.7/src/dmilog.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/xmlpythonizer.c -o build/temp.linux-x86_64-3.7/src/xmlpythonizer.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/efi.c -o build/temp.linux-x86_64-3.7/src/efi.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7m -c src/dmidump.c -o build/temp.linux-x86_64-3.7/src/dmidump.o
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,relro -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.7/src/dmidecodemodule.o build/temp.linux-x86_64-3.7/src/util.o build/temp.linux-x86_64-3.7/src/dmioem.o build/temp.linux-x86_64-3.7/src/dmidecode.o build/temp.linux-x86_64-3.7/src/dmixml.o build/temp.linux-x86_64-3.7/src/dmierror.o build/temp.linux-x86_64-3.7/src/dmilog.o build/temp.linux-x86_64-3.7/src/xmlpythonizer.o build/temp.linux-x86_64-3.7/src/efi.o build/temp.linux-x86_64-3.7/src/dmidump.o -L/usr/lib/python3/dist-packages -L/usr/lib/pymodules/python3.7 -lxml2 -o build/lib.linux-x86_64-3.7/dmidecodemod.cpython-37m-x86_64-linux-gnu.so
cc -o dmidump src/dmidump.c src/util.o src/efi.o src/dmilog.o -g -Wall -D_DMIDUMP_MAIN_
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[2]: Entering directory '/<<PKGBUILDDIR>>'
python3.7 src/setup.py build
running build
running build_py
running build_ext
cc -o dmidump src/dmidump.c src/util.o src/efi.o src/dmilog.o -g -Wall -D_DMIDUMP_MAIN_
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
make[2]: Leaving directory '/<<PKGBUILDDIR>>'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   debian/rules override_dh_auto_test
make[1]: Entering directory '/<<PKGBUILDDIR>>'
set -e ;\
for python in python3.8 python3.7; do \
	/usr/bin/make PY_BIN=$python -C unit-tests test; \
	#/usr/bin/make PY_BIN=$python-dbg -C unit-tests test; \
done
make[2]: Entering directory '/<<PKGBUILDDIR>>/unit-tests'
python3.8 unit -vv
================================================================================
 * Testing for command line version of dmidecode ...WARN
 * Running test as normal user, some tests will be skipped
 * Creation of temporary files...PASS
================================================================================
 * Importing module...
Not running as root, a warning above can be expected...PASS
   * Version: 3.12.2
   * DMI Version String: None
 * Testing that default device is /dev/mem...PASS
 * Testing ability to change device to /tmp/tmpf1qy5b_z...PASS
 * Testing that device has changed to /tmp/tmpf1qy5b_z...PASS
 * Skipped testing dump() function, dmidecode does not have access to DMI data
 * Loading ../src/pymap.xml for XML->Python dictonary mapping...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.2.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.2.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.2.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.2.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/VMware-Virtual-Platform.0.dmidump...PASS
   * Testing set_dev/get_dev on private/VMware-Virtual-Platform.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0003'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x001e', '0x001f', '0x0020', '0x0021', '0x001d'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x001a', '0x0002'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0013', '0x0014', '0x0015', '0x0016', '0x0017', '0x0018', '0x0019'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x0029', '0x0001'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x000f', '0x0010', '0x0011', '0x0012'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x000d', '0x000e'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
     * dict_keys(['0x001a'])
   * Testing type 9...PASS
     * dict_keys(['0x0013', '0x0014', '0x0015', '0x0016', '0x0017', '0x0018', '0x0019'])
   * Testing type 4...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0002'])
   * Testing type 33...PASS
     * dict_keys(['0x002a'])
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x0023'])
   * Testing type 23...PASS
     * dict_keys(['0x0026'])
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
     * dict_keys(['0x0027'])
   * Testing type 5...PASS
     * dict_keys(['0x0008'])
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x001e', '0x001f', '0x0020', '0x0021'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x000d', '0x000e'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
     * dict_keys(['0x0009', '0x000a', '0x000b', '0x000c'])
   * Testing type 32...PASS
     * dict_keys(['0x0029'])
   * Testing type 30...PASS
     * dict_keys(['0x0028'])
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x000f', '0x0010', '0x0011', '0x0012'])
   * Testing type 15...PASS
     * dict_keys(['0x001c'])
   * Testing type 3...PASS
     * dict_keys(['0x0003'])
   * Testing type 18...PASS
     * dict_keys(['0x0022'])
   * Testing type 11...PASS
     * dict_keys(['0x001b'])
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x0024', '0x0025'])
   * Testing type 16...PASS
     * dict_keys(['0x001d'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL580-G5.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL580-G5.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003', '0x1004'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0401', '0x0402', '0x0403', '0x0404'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909', '0x090a', '0x090b'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0711', '0x0712', '0x0713', '0x0714', '0x0721', '0x0722', '0x0723', '0x0724', '0x0731', '0x0732', '0x0733', '0x0734'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909', '0x090a', '0x090b'])
   * Testing type 4...PASS
     * dict_keys(['0x0401', '0x0402', '0x0403', '0x0404'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303', '0x1304'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0711', '0x0712', '0x0713', '0x0714', '0x0721', '0x0722', '0x0723', '0x0724', '0x0731', '0x0732', '0x0733', '0x0734'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003', '0x1004'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/LenovoThinkPad-T61p.dmp...PASS
   * Testing set_dev/get_dev on private/LenovoThinkPad-T61p.dmp...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0003'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x002c', '0x002d', '0x002b'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0006'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x0027', '0x0002'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0020', '0x0021', '0x0024'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0029', '0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x0037', '0x0001'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x000d', '0x000e', '0x000f', '0x0012', '0x0013', '0x0014', '0x0015', '0x0016', '0x001f'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x000a', '0x000b', '0x000c'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
     * dict_keys(['0x0027'])
   * Testing type 9...PASS
     * dict_keys(['0x0020', '0x0021', '0x0024'])
   * Testing type 4...PASS
     * dict_keys(['0x0006'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0002'])
   * Testing type 33...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0029'])
   * Testing type 19...PASS
     * dict_keys(['0x002f'])
   * Testing type 23...PASS
   * Testing type 21...PASS
     * dict_keys(['0x0032', '0x0033'])
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
     * dict_keys(['0x0036'])
   * Testing type 5...PASS
     * dict_keys(['0x0007'])
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x002c', '0x002d'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x000a', '0x000b', '0x000c'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
     * dict_keys(['0x0008', '0x0009'])
   * Testing type 32...PASS
     * dict_keys(['0x0037'])
   * Testing type 30...PASS
   * Testing type 22...PASS
     * dict_keys(['0x0034'])
   * Testing type 8...PASS
     * dict_keys(['0x000d', '0x000e', '0x000f', '0x0012', '0x0013', '0x0014', '0x0015', '0x0016', '0x001f'])
   * Testing type 15...PASS
     * dict_keys(['0x002a'])
   * Testing type 3...PASS
     * dict_keys(['0x0003'])
   * Testing type 18...PASS
     * dict_keys(['0x002e'])
   * Testing type 11...PASS
     * dict_keys(['0x0028'])
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x0030', '0x0031'])
   * Testing type 16...PASS
     * dict_keys(['0x002b'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-BL460c-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-BL460c-G1.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0710', '0x0716', '0x0720', '0x0726', '0x0730', '0x0736'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0716', '0x0720', '0x0726', '0x0730', '0x0736'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/Parallels-Virtual-Platform.0.dmidump...PASS
   * Testing set_dev/get_dev on private/Parallels-Virtual-Platform.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0002'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x000c', '0x000d', '0x000e', '0x000f', '0x000b'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0003'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x000a'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007', '0x0008', '0x0009'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x0011', '0x0001'])
   * Testing connector (8/9)...PASS
   * Testing cache (9/9)...PASS
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
     * dict_keys(['0x000a'])
   * Testing type 9...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007', '0x0008', '0x0009'])
   * Testing type 4...PASS
     * dict_keys(['0x0003'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x0010'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x000c', '0x000d', '0x000e', '0x000f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0011'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0002'])
   * Testing type 18...PASS
   * Testing type 11...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 28...PASS
   * Testing type 20...PASS
   * Testing type 16...PASS
     * dict_keys(['0x000b'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/DellPrecisionWorkStation-490.dmp...PASS
   * Testing set_dev/get_dev on private/DellPrecisionWorkStation-490.dmp...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x0a02', '0x0a03', '0x0200'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0d00', '0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a', '0x080b', '0x080c', '0x080d', '0x080e', '0x080f', '0x0810', '0x0811'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
     * dict_keys(['0x0a02', '0x0a03'])
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0200'])
   * Testing type 33...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0d00'])
   * Testing type 19...PASS
     * dict_keys(['0x1301'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
     * dict_keys(['0x1900'])
   * Testing type 26...PASS
     * dict_keys(['0x1a00', '0x1a02', '0x1a04'])
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
     * dict_keys(['0x1800'])
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703'])
   * Testing type 27...PASS
     * dict_keys(['0x1b00', '0x1b10', '0x1b11', '0x1b12'])
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a', '0x080b', '0x080c', '0x080d', '0x080e', '0x080f', '0x0810', '0x0811'])
   * Testing type 15...PASS
     * dict_keys(['0x0f00'])
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
     * dict_keys(['0x1c00'])
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/IBM-x3950-M2.1.dmidump...PASS
   * Testing set_dev/get_dev on private/IBM-x3950-M2.1.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x003a'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191', '0x0171'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0170', '0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x0273', '0x016c', '0x016d', '0x016e', '0x016f', '0x0001'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
     * dict_keys(['0x016c', '0x016d', '0x016e', '0x016f'])
   * Testing type 38...PASS
     * dict_keys(['0x0274'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing type 4...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing type 33...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0170'])
   * Testing type 19...PASS
     * dict_keys(['0x0272'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0273'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x003a'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x016b'])
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 28...PASS
   * Testing type 20...PASS
   * Testing type 16...PASS
     * dict_keys(['0x0171'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G2.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G2.1.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804', '0x0805'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804', '0x0805'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G2.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0720', '0x0721'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0720', '0x0721'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/IBM-x3950-M2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/IBM-x3950-M2.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x003a'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191', '0x0171'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0170', '0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x0273', '0x016c', '0x016d', '0x016e', '0x016f', '0x0001'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
     * dict_keys(['0x016c', '0x016d', '0x016e', '0x016f'])
   * Testing type 38...PASS
     * dict_keys(['0x0274'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing type 4...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing type 33...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0170'])
   * Testing type 19...PASS
     * dict_keys(['0x0272'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0273'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x003a'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x016b'])
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 28...PASS
   * Testing type 20...PASS
   * Testing type 16...PASS
     * dict_keys(['0x0171'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/kvm-QEMU.0.dmidump...PASS
   * Testing set_dev/get_dev on private/kvm-QEMU.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0401'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
   * Testing cache (9/9)...PASS
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0401'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.1.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.1.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1104', '0x1105', '0x1106', '0x1107', '0x110c', '0x110d', '0x110e', '0x110f', '0x1114', '0x1115', '0x1116', '0x1117', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1104', '0x1105', '0x1106', '0x1107', '0x110c', '0x110d', '0x110e', '0x110f', '0x1114', '0x1115', '0x1116', '0x1117', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/PowerEdge-1800.0.dmidump...PASS
   * Testing set_dev/get_dev on private/PowerEdge-1800.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing baseboard (4/9)...PASS
     * dict_keys(['0x0a00', '0x0200'])
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0900', '0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0d00', '0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0c00', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703', '0x0704', '0x0705'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
     * dict_keys(['0x0c00'])
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
     * dict_keys(['0x0a00'])
   * Testing type 9...PASS
     * dict_keys(['0x0900', '0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 40...PASS
   * Testing type 2...PASS
     * dict_keys(['0x0200'])
   * Testing type 33...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0d00'])
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703', '0x0704', '0x0705'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G2.0.dmidump...PASS
   * Testing chassis (1/9)...PASS
     * dict_keys(['0x0300'])
   * Testing memory (2/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000'])
   * Testing processor (3/9)...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing baseboard (4/9)...PASS
   * Testing slot (5/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing bios (6/9)...PASS
     * dict_keys(['0x0000'])
   * Testing system (7/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing connector (8/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing cache (9/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 12...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 10...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing type 40...PASS
   * Testing type 2...PASS
   * Testing type 33...PASS
   * Testing type 13...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 23...PASS
   * Testing type 21...PASS
   * Testing type 25...PASS
   * Testing type 26...PASS
   * Testing type 37...PASS
   * Testing type 29...PASS
   * Testing type 24...PASS
   * Testing type 5...PASS
   * Testing type 41...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 35...PASS
   * Testing type 39...PASS
   * Testing type 34...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing type 27...PASS
   * Testing type 126...PASS
   * Testing type 127...PASS
   * Testing type 31...PASS
   * Testing type 6...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 30...PASS
   * Testing type 22...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 15...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 18...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 28...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 14...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (9/9)...PASS
================================================================================
Devices : 19
Total   : 2230
Skipped : 0
Warned  : 1
Passed  : 2229
Failed  : 0
make[2]: Leaving directory '/<<PKGBUILDDIR>>/unit-tests'
make[2]: Entering directory '/<<PKGBUILDDIR>>/unit-tests'
python3.7 unit -vv
================================================================================
 * Testing for command line version of dmidecode ...WARN
 * Running test as normal user, some tests will be skipped
 * Creation of temporary files...PASS
================================================================================
 * Importing module...
Not running as root, a warning above can be expected...PASS
   * Version: 3.12.2
   * DMI Version String: None
 * Testing that default device is /dev/mem...PASS
 * Testing ability to change device to /tmp/tmpc2geu8k1...PASS
 * Testing that device has changed to /tmp/tmpc2geu8k1...PASS
 * Skipped testing dump() function, dmidecode does not have access to DMI data
 * Loading ../src/pymap.xml for XML->Python dictonary mapping...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/DellPrecisionWorkStation-490.dmp...PASS
   * Testing set_dev/get_dev on private/DellPrecisionWorkStation-490.dmp...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x0a02', '0x0a03', '0x0200'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a', '0x080b', '0x080c', '0x080d', '0x080e', '0x080f', '0x0810', '0x0811'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0d00', '0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
     * dict_keys(['0x1900'])
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1301'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
     * dict_keys(['0x1800'])
   * Testing type 127...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0d00'])
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906'])
   * Testing type 2...PASS
     * dict_keys(['0x0200'])
   * Testing type 38...PASS
   * Testing type 27...PASS
     * dict_keys(['0x1b00', '0x1b10', '0x1b11', '0x1b12'])
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
     * dict_keys(['0x0a02', '0x0a03'])
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
     * dict_keys(['0x0f00'])
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
     * dict_keys(['0x1a00', '0x1a02', '0x1a04'])
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a', '0x080b', '0x080c', '0x080d', '0x080e', '0x080f', '0x0810', '0x0811'])
   * Testing type 30...PASS
   * Testing type 28...PASS
     * dict_keys(['0x1c00'])
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.2.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.2.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/kvm-QEMU.0.dmidump...PASS
   * Testing set_dev/get_dev on private/kvm-QEMU.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
   * Testing cache (5/9)...PASS
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0401'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100'])
   * Testing type 10...PASS
   * Testing type 11...PASS
   * Testing type 7...PASS
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/IBM-x3950-M2.1.dmidump...PASS
   * Testing set_dev/get_dev on private/IBM-x3950-M2.1.dmidump...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x0273', '0x016c', '0x016d', '0x016e', '0x016f', '0x0001'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x003a'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0170', '0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191', '0x0171'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
     * dict_keys(['0x016c', '0x016d', '0x016e', '0x016f'])
   * Testing type 19...PASS
     * dict_keys(['0x0272'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing type 16...PASS
     * dict_keys(['0x0171'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0170'])
   * Testing type 3...PASS
     * dict_keys(['0x003a'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing type 2...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing type 38...PASS
     * dict_keys(['0x0274'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x016b'])
   * Testing type 7...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0273'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.2.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.2.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.1.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1104', '0x1105', '0x1106', '0x1107', '0x110c', '0x110d', '0x110e', '0x110f', '0x1114', '0x1115', '0x1116', '0x1117', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1104', '0x1105', '0x1106', '0x1107', '0x110c', '0x110d', '0x110e', '0x110f', '0x1114', '0x1115', '0x1116', '0x1117', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/Parallels-Virtual-Platform.0.dmidump...PASS
   * Testing set_dev/get_dev on private/Parallels-Virtual-Platform.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x000a'])
   * Testing connector (2/9)...PASS
   * Testing system (3/9)...PASS
     * dict_keys(['0x0011', '0x0001'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007', '0x0008', '0x0009'])
   * Testing cache (5/9)...PASS
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0003'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0002'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x000c', '0x000d', '0x000e', '0x000f', '0x000b'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x0010'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0003'])
   * Testing type 16...PASS
     * dict_keys(['0x000b'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0002'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007', '0x0008', '0x0009'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x000c', '0x000d', '0x000e', '0x000f'])
   * Testing type 10...PASS
     * dict_keys(['0x000a'])
   * Testing type 11...PASS
   * Testing type 7...PASS
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0011'])
   * Testing type 33...PASS
   * Testing type 8...PASS
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G2.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing type 2...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G1.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0404', '0x0406', '0x0402', '0x0400'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0712', '0x0710', '0x0726', '0x0724', '0x0722', '0x0720', '0x0736', '0x0734', '0x0732', '0x0730'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G2.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0720', '0x0721'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing type 2...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0720', '0x0721'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-BL460c-G1.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-BL460c-G1.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0710', '0x0716', '0x0720', '0x0726', '0x0730', '0x0736'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 2...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0716', '0x0720', '0x0726', '0x0730', '0x0736'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/IBM-x3950-M2.0.dmidump...PASS
   * Testing set_dev/get_dev on private/IBM-x3950-M2.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x0273', '0x016c', '0x016d', '0x016e', '0x016f', '0x0001'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x003a'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0170', '0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191', '0x0171'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
     * dict_keys(['0x016c', '0x016d', '0x016e', '0x016f'])
   * Testing type 19...PASS
     * dict_keys(['0x0272'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x00a2', '0x00a3', '0x00a4', '0x00a5'])
   * Testing type 16...PASS
     * dict_keys(['0x0171'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0170'])
   * Testing type 3...PASS
     * dict_keys(['0x003a'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x012b', '0x012c', '0x012d', '0x012e', '0x012f', '0x0130', '0x0131'])
   * Testing type 2...PASS
     * dict_keys(['0x0002', '0x0003', '0x0005', '0x0006', '0x0007', '0x0008'])
   * Testing type 38...PASS
     * dict_keys(['0x0274'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x0172', '0x0173', '0x0174', '0x0175', '0x0176', '0x0177', '0x0178', '0x0179', '0x017a', '0x017b', '0x017c', '0x017d', '0x017e', '0x017f', '0x0180', '0x0181', '0x0182', '0x0183', '0x0184', '0x0185', '0x0186', '0x0187', '0x0188', '0x0189', '0x018a', '0x018b', '0x018c', '0x018d', '0x018e', '0x018f', '0x0190', '0x0191'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x016b'])
   * Testing type 7...PASS
     * dict_keys(['0x0043', '0x0046', '0x0049', '0x004c'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0273'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x00c2', '0x00c3', '0x00c4', '0x00c5', '0x00c6', '0x00c7', '0x00c8', '0x00c9', '0x00ca', '0x00cb', '0x00cc', '0x00cd', '0x00ce', '0x00cf', '0x00d0', '0x00d1', '0x00d2'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL585-G2.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL585-G2.1.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804', '0x0805'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401', '0x0402', '0x0403'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903', '0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909'])
   * Testing type 2...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0710', '0x0711', '0x0712', '0x0713', '0x0720', '0x0721', '0x0722', '0x0723'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804', '0x0805'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/LenovoThinkPad-T61p.dmp...PASS
   * Testing set_dev/get_dev on private/LenovoThinkPad-T61p.dmp...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x0027', '0x0002'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x000d', '0x000e', '0x000f', '0x0012', '0x0013', '0x0014', '0x0015', '0x0016', '0x001f'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x0037', '0x0001'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0020', '0x0021', '0x0024'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x000a', '0x000b', '0x000c'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0006'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0003'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0029', '0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x002c', '0x002d', '0x002b'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x002f'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0006'])
   * Testing type 16...PASS
     * dict_keys(['0x002b'])
   * Testing type 5...PASS
     * dict_keys(['0x0007'])
   * Testing type 23...PASS
   * Testing type 24...PASS
     * dict_keys(['0x0036'])
   * Testing type 127...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0029'])
   * Testing type 3...PASS
     * dict_keys(['0x0003'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0020', '0x0021', '0x0024'])
   * Testing type 2...PASS
     * dict_keys(['0x0002'])
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
     * dict_keys(['0x0032', '0x0033'])
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x0030', '0x0031'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x002c', '0x002d'])
   * Testing type 10...PASS
     * dict_keys(['0x0027'])
   * Testing type 11...PASS
     * dict_keys(['0x0028'])
   * Testing type 7...PASS
     * dict_keys(['0x000a', '0x000b', '0x000c'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
     * dict_keys(['0x002a'])
   * Testing type 22...PASS
     * dict_keys(['0x0034'])
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 37...PASS
   * Testing type 6...PASS
     * dict_keys(['0x0008', '0x0009'])
   * Testing type 34...PASS
   * Testing type 18...PASS
     * dict_keys(['0x002e'])
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0037'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x000d', '0x000e', '0x000f', '0x0012', '0x0013', '0x0014', '0x0015', '0x0016', '0x001f'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/VMware-Virtual-Platform.0.dmidump...PASS
   * Testing set_dev/get_dev on private/VMware-Virtual-Platform.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x001a', '0x0002'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x000f', '0x0010', '0x0011', '0x0012'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x0029', '0x0001'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0013', '0x0014', '0x0015', '0x0016', '0x0017', '0x0018', '0x0019'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x000d', '0x000e'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0003'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x001e', '0x001f', '0x0020', '0x0021', '0x001d'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x0023'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0004', '0x0005', '0x0006', '0x0007'])
   * Testing type 16...PASS
     * dict_keys(['0x001d'])
   * Testing type 5...PASS
     * dict_keys(['0x0008'])
   * Testing type 23...PASS
     * dict_keys(['0x0026'])
   * Testing type 24...PASS
     * dict_keys(['0x0027'])
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0003'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0013', '0x0014', '0x0015', '0x0016', '0x0017', '0x0018', '0x0019'])
   * Testing type 2...PASS
     * dict_keys(['0x0002'])
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x0024', '0x0025'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x001e', '0x001f', '0x0020', '0x0021'])
   * Testing type 10...PASS
     * dict_keys(['0x001a'])
   * Testing type 11...PASS
     * dict_keys(['0x001b'])
   * Testing type 7...PASS
     * dict_keys(['0x000d', '0x000e'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
     * dict_keys(['0x001c'])
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0001'])
   * Testing type 37...PASS
   * Testing type 6...PASS
     * dict_keys(['0x0009', '0x000a', '0x000b', '0x000c'])
   * Testing type 34...PASS
   * Testing type 18...PASS
     * dict_keys(['0x0022'])
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x0029'])
   * Testing type 33...PASS
     * dict_keys(['0x002a'])
   * Testing type 8...PASS
     * dict_keys(['0x000f', '0x0010', '0x0011', '0x0012'])
   * Testing type 30...PASS
     * dict_keys(['0x0028'])
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL580-G5.0.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL580-G5.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909', '0x090a', '0x090b'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0711', '0x0712', '0x0713', '0x0714', '0x0721', '0x0722', '0x0723', '0x0724', '0x0731', '0x0732', '0x0733', '0x0734'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0401', '0x0402', '0x0403', '0x0404'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f', '0x1000', '0x1001', '0x1002', '0x1003', '0x1004'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301', '0x1302', '0x1303', '0x1304'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0401', '0x0402', '0x0403', '0x0404'])
   * Testing type 16...PASS
     * dict_keys(['0x1000', '0x1001', '0x1002', '0x1003', '0x1004'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0904', '0x0905', '0x0906', '0x0907', '0x0908', '0x0909', '0x090a', '0x090b'])
   * Testing type 2...PASS
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407', '0x1408', '0x1409', '0x140a', '0x140b', '0x140c', '0x140d', '0x140e', '0x140f', '0x1410', '0x1411', '0x1412', '0x1413', '0x1414', '0x1415', '0x1416', '0x1417', '0x1418', '0x1419', '0x141a', '0x141b', '0x141c', '0x141d', '0x141e', '0x141f'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1108', '0x1109', '0x110a', '0x110b', '0x110c', '0x110d', '0x110e', '0x110f', '0x1110', '0x1111', '0x1112', '0x1113', '0x1114', '0x1115', '0x1116', '0x1117', '0x1118', '0x1119', '0x111a', '0x111b', '0x111c', '0x111d', '0x111e', '0x111f'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0711', '0x0712', '0x0713', '0x0714', '0x0721', '0x0722', '0x0723', '0x0724', '0x0731', '0x0732', '0x0733', '0x0734'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803', '0x0804'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/PowerEdge-1800.0.dmidump...PASS
   * Testing set_dev/get_dev on private/PowerEdge-1800.0.dmidump...PASS
   * Testing baseboard (1/9)...PASS
     * dict_keys(['0x0a00', '0x0200'])
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0c00', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0900', '0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703', '0x0704', '0x0705'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0d00', '0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
     * dict_keys(['0x0c00'])
   * Testing type 19...PASS
     * dict_keys(['0x1300'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0401'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
     * dict_keys(['0x0d00'])
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0900', '0x0901', '0x0902', '0x0903', '0x0904', '0x0905'])
   * Testing type 2...PASS
     * dict_keys(['0x0200'])
   * Testing type 38...PASS
     * dict_keys(['0x2600'])
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105'])
   * Testing type 10...PASS
     * dict_keys(['0x0a00'])
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0700', '0x0701', '0x0702', '0x0703', '0x0704', '0x0705'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0800', '0x0801', '0x0802', '0x0803', '0x0804', '0x0805', '0x0806', '0x0807', '0x0808', '0x0809', '0x080a'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
 * Testing private/ProLiant-DL385-G1.1.dmidump...PASS
   * Testing set_dev/get_dev on private/ProLiant-DL385-G1.1.dmidump...PASS
   * Testing baseboard (1/9)...PASS
   * Testing connector (2/9)...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing system (3/9)...PASS
     * dict_keys(['0x2000', '0x0100'])
   * Testing slot (4/9)...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing cache (5/9)...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing processor (6/9)...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing chassis (7/9)...PASS
     * dict_keys(['0x0300'])
   * Testing bios (8/9)...PASS
     * dict_keys(['0x0000'])
   * Testing memory (9/9)...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107', '0x1000'])
   * Testing bad type -1...PASS
   * Testing bad type -1000...PASS
   * Testing bad type 256...PASS
   * Testing type 0...PASS
     * dict_keys(['0x0000'])
   * Testing type 25...PASS
   * Testing type 12...PASS
   * Testing type 19...PASS
     * dict_keys(['0x1300', '0x1301'])
   * Testing type 35...PASS
   * Testing type 4...PASS
     * dict_keys(['0x0400', '0x0406'])
   * Testing type 16...PASS
     * dict_keys(['0x1000'])
   * Testing type 5...PASS
   * Testing type 23...PASS
   * Testing type 24...PASS
   * Testing type 127...PASS
   * Testing type 13...PASS
   * Testing type 3...PASS
     * dict_keys(['0x0300'])
   * Testing type 126...PASS
   * Testing type 14...PASS
   * Testing type 9...PASS
     * dict_keys(['0x0901', '0x0902', '0x0903'])
   * Testing type 2...PASS
   * Testing type 38...PASS
   * Testing type 27...PASS
   * Testing type 41...PASS
   * Testing type 21...PASS
   * Testing type 31...PASS
   * Testing type 20...PASS
     * dict_keys(['0x1400', '0x1401', '0x1402', '0x1403', '0x1404', '0x1405', '0x1406', '0x1407'])
   * Testing type 36...PASS
   * Testing type 17...PASS
     * dict_keys(['0x1100', '0x1101', '0x1102', '0x1103', '0x1104', '0x1105', '0x1106', '0x1107'])
   * Testing type 10...PASS
   * Testing type 11...PASS
     * dict_keys(['0x0b00'])
   * Testing type 7...PASS
     * dict_keys(['0x0716', '0x0714', '0x0726', '0x0724', '0x0736', '0x0734'])
   * Testing type 40...PASS
   * Testing type 39...PASS
   * Testing type 15...PASS
   * Testing type 22...PASS
   * Testing type 29...PASS
   * Testing type 1...PASS
     * dict_keys(['0x0100'])
   * Testing type 37...PASS
   * Testing type 6...PASS
   * Testing type 34...PASS
   * Testing type 18...PASS
   * Testing type 26...PASS
   * Testing type 32...PASS
     * dict_keys(['0x2000'])
   * Testing type 33...PASS
   * Testing type 8...PASS
     * dict_keys(['0x0801', '0x0802', '0x0803'])
   * Testing type 30...PASS
   * Testing type 28...PASS
   * XML: Swapping result type dmidecodeXML::SetResultType('-') - invalid type... Not working => PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_DOC) - valid type...PASS
   * XML: Swapping result type - dmidecodeXML::SetResultType(dmidecode.DMIXML_NODE) - valid type...PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(-1000)...Not working => PASS
   * XML: Testing bad type - dmidecodeXML::QueryTypeId(256)...Not working => PASS
   * XML: Testing dmidecodeXML::QueryTypeId(0)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(25)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(12)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(19)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(35)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(4)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(16)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(5)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(23)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(24)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(127)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(13)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(3)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(126)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(14)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(9)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(2)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(38)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(27)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(41)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(21)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(31)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(20)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(36)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(17)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(10)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(11)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(7)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(40)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(39)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(15)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(22)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(29)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(1)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(37)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(6)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(34)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(18)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(26)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(32)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(33)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(8)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(30)...PASS
   * XML: Testing dmidecodeXML::QueryTypeId(28)...PASS
   * XML: Testing dmidecodeXML::QuerySection('baseboard') (1/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('connector') (2/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('system') (3/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('slot') (4/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('cache') (5/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('processor') (6/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('chassis') (7/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('bios') (8/9)...PASS
   * XML: Testing dmidecodeXML::QuerySection('memory') (9/9)...PASS
================================================================================
Devices : 19
Total   : 2230
Skipped : 0
Warned  : 1
Passed  : 2229
Failed  : 0
make[2]: Leaving directory '/<<PKGBUILDDIR>>/unit-tests'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   create-stamp debian/debhelper-build-stamp
 fakeroot debian/rules binary
dh binary --with python3
   dh_testroot
   dh_prep
   debian/rules override_dh_auto_install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
set -e ;\
for python in python3.8 python3.7 ; do \
	$python     src/setup.py     install_lib --install-dir /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages/ ; \
	$python-dbg src/setup-dbg.py install_lib --install-dir /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib/python3/dist-packages/ ; \
done
running install_lib
running build_py
running build_ext
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages/__pycache__
copying build/lib.linux-x86_64-3.8/__pycache__/dmidecode.cpython-38.pyc -> /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages/__pycache__
copying build/lib.linux-x86_64-3.8/dmidecode.py -> /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages
copying build/lib.linux-x86_64-3.8/dmidecodemod.cpython-38-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages
running install_lib
running build_py
file dmidecode-dbg.py (for module dmidecode-dbg) not found
file dmidecode-dbg.py (for module dmidecode-dbg) not found
running build_ext
building 'dmidecodemod' extension
creating build/temp.linux-x86_64-3.8-pydebug
creating build/temp.linux-x86_64-3.8-pydebug/src
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmidecodemodule.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmidecodemodule.o
src/dmidecodemodule.c:511:25: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                section = PyUnicode_AsUTF8(args);
                        ^ ~~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:642:19: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                f = PyUnicode_AsUTF8(arg);
                  ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:690:23: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                fname = PyUnicode_AsUTF8(arg);
                      ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:765:28: warning: incompatible pointer types initializing 'PyCFunction' (aka 'struct _object *(*)(struct _object *, struct _object *)') with an expression of type 'PyObject *(PyObject *, PyObject *, PyObject *)' (aka 'struct _object *(struct _object *, struct _object *, struct _object *)') [-Wincompatible-pointer-types]
        {(char *)"xmlapi", dmidecode_xmlapi, METH_VARARGS | METH_KEYWORDS,
                           ^~~~~~~~~~~~~~~~
src/dmidecodemodule.c:871:72: warning: incompatible pointer types passing 'void (void *)' to parameter of type 'PyCapsule_Destructor' (aka 'void (*)(struct _object *)') [-Wincompatible-pointer-types]
        PyModule_AddObject(module, "options", PyCapsule_New(opt, NULL, destruct_options));
                                                                       ^~~~~~~~~~~~~~~~
/usr/include/python3.8d/pycapsule.h:31:26: note: passing argument to parameter 'destructor' here
    PyCapsule_Destructor destructor);
                         ^
5 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/util.c -o build/temp.linux-x86_64-3.8-pydebug/src/util.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmioem.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmioem.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmidecode.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmidecode.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmixml.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmixml.o
src/dmixml.c:68:33: warning: passing 'xmlChar *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        xmlStrVPrintf(ret, len, xmlfmt, ap);
                                ^~~~~~
/usr/include/libxml2/libxml/xmlstring.h:105:54: note: passing argument to parameter 'msg' here
                                         const char *msg,
                                                     ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmierror.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmierror.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmilog.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmilog.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/xmlpythonizer.c -o build/temp.linux-x86_64-3.8-pydebug/src/xmlpythonizer.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/efi.c -o build/temp.linux-x86_64-3.8-pydebug/src/efi.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.8d -c src/dmidump.c -o build/temp.linux-x86_64-3.8-pydebug/src/dmidump.o
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
creating build/lib.linux-x86_64-3.8-pydebug
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,relro -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.8-pydebug/src/dmidecodemodule.o build/temp.linux-x86_64-3.8-pydebug/src/util.o build/temp.linux-x86_64-3.8-pydebug/src/dmioem.o build/temp.linux-x86_64-3.8-pydebug/src/dmidecode.o build/temp.linux-x86_64-3.8-pydebug/src/dmixml.o build/temp.linux-x86_64-3.8-pydebug/src/dmierror.o build/temp.linux-x86_64-3.8-pydebug/src/dmilog.o build/temp.linux-x86_64-3.8-pydebug/src/xmlpythonizer.o build/temp.linux-x86_64-3.8-pydebug/src/efi.o build/temp.linux-x86_64-3.8-pydebug/src/dmidump.o -L/usr/lib/python3/dist-packages -L/usr/lib/pymodules/python3.8 -lxml2 -o build/lib.linux-x86_64-3.8-pydebug/dmidecodemod.cpython-38d-x86_64-linux-gnu.so
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib/python3
creating /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib/python3/dist-packages
copying build/lib.linux-x86_64-3.8-pydebug/dmidecodemod.cpython-38d-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib/python3/dist-packages
running install_lib
running build_py
running build_ext
copying build/lib.linux-x86_64-3.7/__pycache__/dmidecode.cpython-37.pyc -> /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages/__pycache__
copying build/lib.linux-x86_64-3.7/dmidecodemod.cpython-37m-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-dmidecode/usr/lib/python3/dist-packages
running install_lib
running build_py
file dmidecode-dbg.py (for module dmidecode-dbg) not found
file dmidecode-dbg.py (for module dmidecode-dbg) not found
running build_ext
building 'dmidecodemod' extension
creating build/temp.linux-x86_64-3.7-pydebug
creating build/temp.linux-x86_64-3.7-pydebug/src
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmidecodemodule.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmidecodemodule.o
src/dmidecodemodule.c:511:25: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                section = PyUnicode_AsUTF8(args);
                        ^ ~~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:642:19: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                f = PyUnicode_AsUTF8(arg);
                  ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:690:23: warning: assigning to 'char *' from 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                fname = PyUnicode_AsUTF8(arg);
                      ^ ~~~~~~~~~~~~~~~~~~~~~
src/dmidecodemodule.c:765:28: warning: incompatible pointer types initializing 'PyCFunction' (aka 'struct _object *(*)(struct _object *, struct _object *)') with an expression of type 'PyObject *(PyObject *, PyObject *, PyObject *)' (aka 'struct _object *(struct _object *, struct _object *, struct _object *)') [-Wincompatible-pointer-types]
        {(char *)"xmlapi", dmidecode_xmlapi, METH_VARARGS | METH_KEYWORDS,
                           ^~~~~~~~~~~~~~~~
src/dmidecodemodule.c:871:72: warning: incompatible pointer types passing 'void (void *)' to parameter of type 'PyCapsule_Destructor' (aka 'void (*)(struct _object *)') [-Wincompatible-pointer-types]
        PyModule_AddObject(module, "options", PyCapsule_New(opt, NULL, destruct_options));
                                                                       ^~~~~~~~~~~~~~~~
/usr/include/python3.7dm/pycapsule.h:31:26: note: passing argument to parameter 'destructor' here
    PyCapsule_Destructor destructor);
                         ^
5 warnings generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/util.c -o build/temp.linux-x86_64-3.7-pydebug/src/util.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmioem.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmioem.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmidecode.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmidecode.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmixml.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmixml.o
src/dmixml.c:68:33: warning: passing 'xmlChar *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        xmlStrVPrintf(ret, len, xmlfmt, ap);
                                ^~~~~~
/usr/include/libxml2/libxml/xmlstring.h:105:54: note: passing argument to parameter 'msg' here
                                         const char *msg,
                                                     ^
1 warning generated.
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmierror.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmierror.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmilog.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmilog.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/xmlpythonizer.c -o build/temp.linux-x86_64-3.7-pydebug/src/xmlpythonizer.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/efi.c -o build/temp.linux-x86_64-3.7-pydebug/src/efi.o
x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -UNDEBUG -I/usr/include/libxml2 -I/usr/include/python3.7dm -c src/dmidump.c -o build/temp.linux-x86_64-3.7-pydebug/src/dmidump.o
src/dmidump.c:98:49: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^                               ~~
src/dmidump.c:98:49: note: add parentheses after the '!' to evaluate the comparison first
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                 (                                  )
src/dmidump.c:98:49: note: add parentheses around left hand side expression to silence this warning
                if(!checksum(buf, buf[0x05]) || !memcmp(buf + 0x10, "_DMI_", 5) == 0 ||
                                                ^
                                                (                              )
1 warning generated.
creating build/lib.linux-x86_64-3.7-pydebug
x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,relro -std=gnu89 -Wdate-time -D_FORTIFY_SOURCE=2 build/temp.linux-x86_64-3.7-pydebug/src/dmidecodemodule.o build/temp.linux-x86_64-3.7-pydebug/src/util.o build/temp.linux-x86_64-3.7-pydebug/src/dmioem.o build/temp.linux-x86_64-3.7-pydebug/src/dmidecode.o build/temp.linux-x86_64-3.7-pydebug/src/dmixml.o build/temp.linux-x86_64-3.7-pydebug/src/dmierror.o build/temp.linux-x86_64-3.7-pydebug/src/dmilog.o build/temp.linux-x86_64-3.7-pydebug/src/xmlpythonizer.o build/temp.linux-x86_64-3.7-pydebug/src/efi.o build/temp.linux-x86_64-3.7-pydebug/src/dmidump.o -L/usr/lib/python3/dist-packages -L/usr/lib/pymodules/python3.7 -lxml2 -o build/lib.linux-x86_64-3.7-pydebug/dmidecodemod.cpython-37dm-x86_64-linux-gnu.so
copying build/lib.linux-x86_64-3.7-pydebug/dmidecodemod.cpython-37dm-x86_64-linux-gnu.so -> /<<PKGBUILDDIR>>/debian/python3-dmidecode-dbg/usr/lib/python3/dist-packages
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_install
   debian/rules override_dh_installdocs
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_installdocs -A README doc/AUTHORS doc/changelog doc/README.types doc/AUTHORS.upstream doc/README.upstream
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installchangelogs
   dh_python3
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
   dh_fixperms
   dh_missing
   debian/rules override_dh_strip
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_strip -ppython3-dmidecode --dbg-package=python3-dmidecode-dbg
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_makeshlibs
   dh_shlibdeps
   dh_installdeb
   dh_gencontrol
dpkg-gencontrol: warning: package python3-dmidecode: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-dmidecode: substitution variable ${python3:Versions} unused, but is defined
dpkg-gencontrol: warning: Depends field of package python-dmidecode-data: substitution variable ${shlibs:Depends} used, but is not defined
dpkg-gencontrol: warning: package python3-dmidecode-dbg: substitution variable ${python3:Depends} unused, but is defined
dpkg-gencontrol: warning: package python3-dmidecode-dbg: substitution variable ${python3:Provides} unused, but is defined
dpkg-gencontrol: warning: package python3-dmidecode-dbg: substitution variable ${python3:Versions} unused, but is defined
   dh_md5sums
   dh_builddeb
dpkg-deb: building package 'python3-dmidecode' in '../python3-dmidecode_3.12.2-10_amd64.deb'.
dpkg-deb: building package 'python3-dmidecode-dbg' in '../python3-dmidecode-dbg_3.12.2-10_amd64.deb'.
dpkg-deb: building package 'python-dmidecode-data' in '../python-dmidecode-data_3.12.2-10_all.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../python-dmidecode_3.12.2-10_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-25T05:42:05Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


python-dmidecode_3.12.2-10_amd64.changes:
-----------------------------------------

Format: 1.8
Date: Wed, 21 Aug 2019 14:12:13 -0400
Source: python-dmidecode
Binary: python-dmidecode-data python3-dmidecode python3-dmidecode-dbg
Architecture: all amd64
Version: 3.12.2-10
Distribution: unstable
Urgency: medium
Maintainer: Sandro Tosi <morph@debian.org>
Changed-By: Sandro Tosi <morph@debian.org>
Description:
 python-dmidecode-data - Python extension module for dmidecode (debug) - Data
 python3-dmidecode - Python extension module for dmidecode - Python 3
 python3-dmidecode-dbg - Python extension module for dmidecode (debug) - Python 3
Changes:
 python-dmidecode (3.12.2-10) unstable; urgency=medium
 .
   [ Ondřej Nový ]
   * Use debhelper-compat instead of debian/compat.
   * Bump Standards-Version to 4.4.0.
 .
   [ Sandro Tosi ]
   * Drop python 2 support
Checksums-Sha1:
 f23ef90bb0bd3bcce371be2fb785cb899aaf47d9 22904 python-dmidecode-data_3.12.2-10_all.deb
 2590dfbc6fb23354ee5a471d4297c74d985a44ba 6968 python-dmidecode_3.12.2-10_amd64.buildinfo
 5687b659063141a01c386596bdbae82c564ee316 270088 python3-dmidecode-dbg_3.12.2-10_amd64.deb
 89121c668e17c9c6c7197cb31c96fed42f6df00d 82044 python3-dmidecode_3.12.2-10_amd64.deb
Checksums-Sha256:
 bd7b3c132cded818e9f884fb5072a56c1c513c3888c1634ebbb8e208a1788231 22904 python-dmidecode-data_3.12.2-10_all.deb
 4840e9c3e8075d757fa9f3c01a453afb991dac7571e0331e6e2dcaf7c6af4db1 6968 python-dmidecode_3.12.2-10_amd64.buildinfo
 bae57ff56a5cb5d6659a50fc8619b57138b6d9b11812aed6a13b3a5472cb2832 270088 python3-dmidecode-dbg_3.12.2-10_amd64.deb
 966c93538db2280ed4412025193ee10a69d0cdc903b58afc1f2db89f2f1cb5cc 82044 python3-dmidecode_3.12.2-10_amd64.deb
Files:
 b167e287d498f24c624edf1448125f54 22904 python optional python-dmidecode-data_3.12.2-10_all.deb
 367adad13a5b0e879e4e0012fe0cc146 6968 python optional python-dmidecode_3.12.2-10_amd64.buildinfo
 786c3704a40cd66a1518a5f31af1d650 270088 debug optional python3-dmidecode-dbg_3.12.2-10_amd64.deb
 cd0a3862af40cab30871356e5303e947 82044 python optional python3-dmidecode_3.12.2-10_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: python-dmidecode
Binary: python3-dmidecode python3-dmidecode-dbg python-dmidecode-data
Architecture: all amd64
Version: 3.12.2-10
Checksums-Md5:
 b167e287d498f24c624edf1448125f54 22904 python-dmidecode-data_3.12.2-10_all.deb
 786c3704a40cd66a1518a5f31af1d650 270088 python3-dmidecode-dbg_3.12.2-10_amd64.deb
 cd0a3862af40cab30871356e5303e947 82044 python3-dmidecode_3.12.2-10_amd64.deb
Checksums-Sha1:
 f23ef90bb0bd3bcce371be2fb785cb899aaf47d9 22904 python-dmidecode-data_3.12.2-10_all.deb
 5687b659063141a01c386596bdbae82c564ee316 270088 python3-dmidecode-dbg_3.12.2-10_amd64.deb
 89121c668e17c9c6c7197cb31c96fed42f6df00d 82044 python3-dmidecode_3.12.2-10_amd64.deb
Checksums-Sha256:
 bd7b3c132cded818e9f884fb5072a56c1c513c3888c1634ebbb8e208a1788231 22904 python-dmidecode-data_3.12.2-10_all.deb
 bae57ff56a5cb5d6659a50fc8619b57138b6d9b11812aed6a13b3a5472cb2832 270088 python3-dmidecode-dbg_3.12.2-10_amd64.deb
 966c93538db2280ed4412025193ee10a69d0cdc903b58afc1f2db89f2f1cb5cc 82044 python3-dmidecode_3.12.2-10_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Tue, 25 Feb 2020 05:42:05 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-9 (= 1:9.0.1-8),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-python (= 4.20191017),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 icu-devtools (= 63.2-2),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-9-dev (= 1:9.0.1-8),
 libclang-cpp9 (= 1:9.0.1-8),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libexpat1 (= 2.2.9-1),
 libexpat1-dev (= 2.2.9-1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu-dev (= 63.2-2),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm9 (= 1:9.0.1-8),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpdec2 (= 2.4.2-2),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libpython3-all-dbg (= 3.7.5-3),
 libpython3-all-dev (= 3.7.5-3),
 libpython3-dbg (= 3.7.5-3),
 libpython3-dev (= 3.7.5-3),
 libpython3-stdlib (= 3.7.5-3),
 libpython3.7 (= 3.7.6-1+b1),
 libpython3.7-dbg (= 3.7.6-1+b1),
 libpython3.7-dev (= 3.7.6-1+b1),
 libpython3.7-minimal (= 3.7.6-1+b1),
 libpython3.7-stdlib (= 3.7.6-1+b1),
 libpython3.8 (= 3.8.2~rc2-2),
 libpython3.8-dbg (= 3.8.2~rc2-2),
 libpython3.8-dev (= 3.8.2~rc2-2),
 libpython3.8-minimal (= 3.8.2~rc2-2),
 libpython3.8-stdlib (= 3.8.2~rc2-2),
 libquadmath0 (= 10-20200222-1),
 libreadline8 (= 8.0-3),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libsqlite3-0 (= 3.31.1-3),
 libssl1.1 (= 1.1.1d-2),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libxml2-dev (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 mime-support (= 3.64),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 python3 (= 3.7.5-3),
 python3-all (= 3.7.5-3),
 python3-all-dbg (= 3.7.5-3),
 python3-all-dev (= 3.7.5-3),
 python3-dbg (= 3.7.5-3),
 python3-dev (= 3.7.5-3),
 python3-distutils (= 3.8.0-1),
 python3-lib2to3 (= 3.8.0-1),
 python3-libxml2 (= 2.9.10+dfsg-3),
 python3-minimal (= 3.7.5-3),
 python3.7 (= 3.7.6-1+b1),
 python3.7-dbg (= 3.7.6-1+b1),
 python3.7-dev (= 3.7.6-1+b1),
 python3.7-minimal (= 3.7.6-1+b1),
 python3.8 (= 3.8.2~rc2-2),
 python3.8-dbg (= 3.8.2~rc2-2),
 python3.8-dev (= 3.8.2~rc2-2),
 python3.8-minimal (= 3.8.2~rc2-2),
 readline-common (= 8.0-3),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-2),
 zlib1g-dev (= 1:1.2.11.dfsg-2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1566411133"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


python-dmidecode-data_3.12.2-10_all.deb
---------------------------------------

 new Debian package, version 2.0.
 size 22904 bytes: control archive=920 bytes.
     632 bytes,    17 lines      control              
     738 bytes,     9 lines      md5sums              
 Package: python-dmidecode-data
 Source: python-dmidecode
 Version: 3.12.2-10
 Architecture: all
 Maintainer: Sandro Tosi <morph@debian.org>
 Installed-Size: 79
 Breaks: python-dmidecode (<< 3.12.2-5)
 Replaces: python-dmidecode (<< 3.12.2-5)
 Section: python
 Priority: optional
 Homepage: https://github.com/nima/python-dmidecode
 Description: Python extension module for dmidecode (debug) - Data
  DMI (the desktop management interface) provides a standardized description of
  a computer's hardware, including characteristics such as BIOS serial number
  and hardware connectors.
  .
  This package contains the common data files for dmidecode.

drwxr-xr-x root/root         0 2019-08-21 18:12 ./
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/python-dmidecode-data/
-rw-r--r-- root/root       709 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/AUTHORS
-rw-r--r-- root/root      1275 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/AUTHORS.upstream
-rw-r--r-- root/root        63 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/README
-rw-r--r-- root/root      1619 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/README.types
-rw-r--r-- root/root      2292 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/README.upstream.gz
-rw-r--r-- root/root      3954 2019-08-21 18:12 ./usr/share/doc/python-dmidecode-data/changelog.Debian.gz
-rw-r--r-- root/root      7759 2015-06-08 15:19 ./usr/share/doc/python-dmidecode-data/changelog.gz
-rw-r--r-- root/root       649 2019-08-21 18:12 ./usr/share/doc/python-dmidecode-data/copyright
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/python-dmidecode/
-rw-r--r-- root/root     50198 2019-08-21 18:12 ./usr/share/python-dmidecode/pymap.xml


python3-dmidecode-dbg_3.12.2-10_amd64.deb
-----------------------------------------

 new Debian package, version 2.0.
 size 270088 bytes: control archive=1300 bytes.
     761 bytes,    17 lines      control              
    1098 bytes,    12 lines      md5sums              
     208 bytes,     5 lines   *  postinst             #!/bin/sh
     208 bytes,     5 lines   *  postrm               #!/bin/sh
     208 bytes,     5 lines   *  preinst              #!/bin/sh
     208 bytes,     5 lines   *  prerm                #!/bin/sh
 Package: python3-dmidecode-dbg
 Source: python-dmidecode
 Version: 3.12.2-10
 Architecture: amd64
 Maintainer: Sandro Tosi <morph@debian.org>
 Installed-Size: 918
 Depends: python3-dmidecode (= 3.12.2-10), libc6 (>= 2.14), libxml2 (>= 2.7.4), python3-dbg
 Section: debug
 Priority: optional
 Homepage: https://github.com/nima/python-dmidecode
 Description: Python extension module for dmidecode (debug) - Python 3
  DMI (the desktop management interface) provides a standardized description of
  a computer's hardware, including characteristics such as BIOS serial number
  and hardware connectors.
  .
  This package contains the extension built for the Python 3 debug interpreter.
 Build-Ids: 06bc39fd70f8239315ac6268b6c0296d03288553 3a28a0ae9d3b92b8668c7f4f6840233b5ec0b784

drwxr-xr-x root/root         0 2019-08-21 18:12 ./
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/debug/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/debug/.build-id/06/
-rw-r--r-- root/root     87352 2019-08-21 18:12 ./usr/lib/debug/.build-id/06/bc39fd70f8239315ac6268b6c0296d03288553.debug
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/debug/.build-id/3a/
-rw-r--r-- root/root     87088 2019-08-21 18:12 ./usr/lib/debug/.build-id/3a/28a0ae9d3b92b8668c7f4f6840233b5ec0b784.debug
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/python3/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/python3/dist-packages/
-rw-r--r-- root/root    361600 2019-08-21 18:12 ./usr/lib/python3/dist-packages/dmidecodemod.cpython-37dm-x86_64-linux-gnu.so
-rw-r--r-- root/root    361280 2019-08-21 18:12 ./usr/lib/python3/dist-packages/dmidecodemod.cpython-38d-x86_64-linux-gnu.so
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode-dbg/
-rw-r--r-- root/root       709 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/AUTHORS
-rw-r--r-- root/root      1275 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/AUTHORS.upstream
-rw-r--r-- root/root        63 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/README
-rw-r--r-- root/root      1619 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/README.types
-rw-r--r-- root/root      2292 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/README.upstream.gz
-rw-r--r-- root/root      3954 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode-dbg/changelog.Debian.gz
-rw-r--r-- root/root      7759 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode-dbg/changelog.gz
-rw-r--r-- root/root       649 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode-dbg/copyright


python3-dmidecode_3.12.2-10_amd64.deb
-------------------------------------

 new Debian package, version 2.0.
 size 82044 bytes: control archive=1420 bytes.
     806 bytes,    18 lines      control              
     929 bytes,    11 lines      md5sums              
     260 bytes,    12 lines   *  postinst             #!/bin/sh
     409 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-dmidecode
 Source: python-dmidecode
 Version: 3.12.2-10
 Architecture: amd64
 Maintainer: Sandro Tosi <morph@debian.org>
 Installed-Size: 413
 Depends: python3 (<< 3.9), python3 (>= 3.7~), python3:any, libc6 (>= 2.14), libxml2 (>= 2.7.4), python3-libxml2, python-dmidecode-data
 Section: python
 Priority: optional
 Homepage: https://github.com/nima/python-dmidecode
 Description: Python extension module for dmidecode - Python 3
  DMI (the desktop management interface) provides a standardized description of
  a computer's hardware, including characteristics such as BIOS serial number
  and hardware connectors.
  .
  This package provides an interface to the DMI data available from the BIOS.
  It is intended to be used as a back-end tool by other hardware detection
  programs implemented in Python.

drwxr-xr-x root/root         0 2019-08-21 18:12 ./
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/python3/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/lib/python3/dist-packages/
-rw-r--r-- root/root      3461 2015-06-08 15:19 ./usr/lib/python3/dist-packages/dmidecode.py
-rw-r--r-- root/root    192000 2019-08-21 18:12 ./usr/lib/python3/dist-packages/dmidecodemod.cpython-37m-x86_64-linux-gnu.so
-rw-r--r-- root/root    192000 2019-08-21 18:12 ./usr/lib/python3/dist-packages/dmidecodemod.cpython-38-x86_64-linux-gnu.so
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/
drwxr-xr-x root/root         0 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode/
-rw-r--r-- root/root       709 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/AUTHORS
-rw-r--r-- root/root      1275 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/AUTHORS.upstream
-rw-r--r-- root/root        63 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/README
-rw-r--r-- root/root      1619 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/README.types
-rw-r--r-- root/root      2292 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/README.upstream.gz
-rw-r--r-- root/root      3954 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode/changelog.Debian.gz
-rw-r--r-- root/root      7759 2015-06-08 15:19 ./usr/share/doc/python3-dmidecode/changelog.gz
-rw-r--r-- root/root       649 2019-08-21 18:12 ./usr/share/doc/python3-dmidecode/copyright


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 7400
Build-Time: 16
Distribution: unstable
Host Architecture: amd64
Install-Time: 136
Job: python-dmidecode_3.12.2-10
Machine Architecture: amd64
Package: python-dmidecode
Package-Time: 213
Source-Version: 3.12.2-10
Space: 7400
Status: successful
Version: 3.12.2-10
--------------------------------------------------------------------------------
Finished at 2020-02-25T05:42:05Z
Build needed 00:03:33, 7400k disk space
DC-Status: OK 214.189616438s
DC-Time-Estimation: 214.189616438 versus expected 64 (r/m: 2.34671275684375 ; m: 64.0)
