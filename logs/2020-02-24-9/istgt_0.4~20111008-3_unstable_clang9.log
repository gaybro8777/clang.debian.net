DC-Build-Header: istgt 0.4~20111008-3 / 2020-02-24 23:40:59 +0000
DC-Task: type:rebuild-binarch-only source:istgt version:0.4~20111008-3 chroot:unstable esttime:178 logfile:/tmp/istgt_0.4~20111008-3_unstable_clang9.log modes:clang9:binarch-only
DC-Sbuild-call: su user42 -c 'sbuild -n --arch-any --apt-update -d unstable -v --no-run-lintian --chroot-setup-commands=/tmp/clang9 istgt_0.4~20111008-3'
sbuild (Debian sbuild) 0.78.1 (09 February 2019) on ip-172-31-13-89.eu-central-1.compute.internal

+==============================================================================+
| istgt 0.4~20111008-3 (amd64)                 Mon, 24 Feb 2020 23:41:00 +0000 |
+==============================================================================+

Package: istgt
Version: 0.4~20111008-3
Source Version: 0.4~20111008-3
Distribution: unstable
Machine Architecture: amd64
Host Architecture: amd64
Build Architecture: amd64
Build Type: binary

I: NOTICE: Log filtering will replace 'var/run/schroot/mount/sid-amd64-sbuild-dad314dc-cf46-4a01-bcd4-e822f6ce4ef4' with '<<CHROOT>>'

+------------------------------------------------------------------------------+
| Chroot Setup Commands                                                        |
+------------------------------------------------------------------------------+


/tmp/clang9
-----------

+ echo 'Entering customization script...'
Entering customization script...
+ CLANG_VERSION=9
+ echo 'Install of clang-9'
Install of clang-9
+ apt-get update
Get:1 http://127.0.0.1:12990/debian sid InRelease [142 kB]
Get:2 http://127.0.0.1:12990/debian sid/main Sources.diff/Index [27.9 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 Packages.diff/Index [27.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-0823.32.pdiff [11.0 kB]
Get:5 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-1420.34.pdiff [30.2 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main Sources 2020-02-24-2014.03.pdiff [16.9 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-0823.32.pdiff [15.5 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-1420.34.pdiff [27.5 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 Packages 2020-02-24-2014.03.pdiff [21.6 kB]
Get:10 http://127.0.0.1:12990/debian sid/main Translation-en [6193 kB]
Fetched 6514 kB in 3s (2434 kB/s)
Reading package lists...
+ apt-get install --yes --no-install-recommends --force-yes clang-9 libomp-9-dev libobjc-9-dev
Reading package lists...
Building dependency tree...
The following additional packages will be installed:
  gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc4 libomp5-9 libstdc++-8-dev libz3-4
Suggested packages:
  clang-9-doc libomp-9-doc libstdc++-8-doc
Recommended packages:
  llvm-9-dev python3
The following NEW packages will be installed:
  clang-9 gcc-8-base lib32gcc-s1 lib32gcc1 lib32stdc++6 libbsd0 libc6-i386
  libclang-common-9-dev libclang-cpp9 libedit2 libgc1c2 libgcc-8-dev libllvm9
  libmpx2 libobjc-8-dev libobjc-9-dev libobjc4 libomp-9-dev libomp5-9
  libstdc++-8-dev libz3-4
0 upgraded, 21 newly installed, 0 to remove and 1 not upgraded.
Need to get 43.9 MB of archives.
After this operation, 237 MB of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libbsd0 amd64 0.10.0-1 [107 kB]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 libedit2 amd64 3.1-20191231-1 [95.4 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libz3-4 amd64 4.8.7-4 [6790 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 libllvm9 amd64 1:9.0.1-8 [15.0 MB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libclang-cpp9 amd64 1:9.0.1-8 [8429 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 gcc-8-base amd64 8.3.0-29 [194 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 libmpx2 amd64 8.3.0-29 [11.4 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libgcc-8-dev amd64 8.3.0-29 [2297 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libstdc++-8-dev amd64 8.3.0-29 [1543 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 libgc1c2 amd64 1:7.6.4-0.4 [224 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 libobjc4 amd64 10-20200222-1 [41.6 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libobjc-8-dev amd64 8.3.0-29 [227 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 libc6-i386 amd64 2.29-10 [2918 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc-s1 amd64 10-20200222-1 [49.4 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 lib32gcc1 amd64 1:10-20200222-1 [1104 B]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 lib32stdc++6 amd64 10-20200222-1 [510 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 libclang-common-9-dev amd64 1:9.0.1-8 [3727 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 clang-9 amd64 1:9.0.1-8 [1156 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 libobjc-9-dev amd64 9.2.1-29 [219 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libomp5-9 amd64 1:9.0.1-8 [333 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libomp-9-dev amd64 1:9.0.1-8 [66.2 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 43.9 MB in 1s (68.9 MB/s)
Selecting previously unselected package libbsd0:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 12119 files and directories currently installed.)
Preparing to unpack .../00-libbsd0_0.10.0-1_amd64.deb ...
Unpacking libbsd0:amd64 (0.10.0-1) ...
Selecting previously unselected package libedit2:amd64.
Preparing to unpack .../01-libedit2_3.1-20191231-1_amd64.deb ...
Unpacking libedit2:amd64 (3.1-20191231-1) ...
Selecting previously unselected package libz3-4:amd64.
Preparing to unpack .../02-libz3-4_4.8.7-4_amd64.deb ...
Unpacking libz3-4:amd64 (4.8.7-4) ...
Selecting previously unselected package libllvm9:amd64.
Preparing to unpack .../03-libllvm9_1%3a9.0.1-8_amd64.deb ...
Unpacking libllvm9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libclang-cpp9.
Preparing to unpack .../04-libclang-cpp9_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-cpp9 (1:9.0.1-8) ...
Selecting previously unselected package gcc-8-base:amd64.
Preparing to unpack .../05-gcc-8-base_8.3.0-29_amd64.deb ...
Unpacking gcc-8-base:amd64 (8.3.0-29) ...
Selecting previously unselected package libmpx2:amd64.
Preparing to unpack .../06-libmpx2_8.3.0-29_amd64.deb ...
Unpacking libmpx2:amd64 (8.3.0-29) ...
Selecting previously unselected package libgcc-8-dev:amd64.
Preparing to unpack .../07-libgcc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libgcc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libstdc++-8-dev:amd64.
Preparing to unpack .../08-libstdc++-8-dev_8.3.0-29_amd64.deb ...
Unpacking libstdc++-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libgc1c2:amd64.
Preparing to unpack .../09-libgc1c2_1%3a7.6.4-0.4_amd64.deb ...
Unpacking libgc1c2:amd64 (1:7.6.4-0.4) ...
Selecting previously unselected package libobjc4:amd64.
Preparing to unpack .../10-libobjc4_10-20200222-1_amd64.deb ...
Unpacking libobjc4:amd64 (10-20200222-1) ...
Selecting previously unselected package libobjc-8-dev:amd64.
Preparing to unpack .../11-libobjc-8-dev_8.3.0-29_amd64.deb ...
Unpacking libobjc-8-dev:amd64 (8.3.0-29) ...
Selecting previously unselected package libc6-i386.
Preparing to unpack .../12-libc6-i386_2.29-10_amd64.deb ...
Unpacking libc6-i386 (2.29-10) ...
Selecting previously unselected package lib32gcc-s1.
Preparing to unpack .../13-lib32gcc-s1_10-20200222-1_amd64.deb ...
Unpacking lib32gcc-s1 (10-20200222-1) ...
Selecting previously unselected package lib32gcc1.
Preparing to unpack .../14-lib32gcc1_1%3a10-20200222-1_amd64.deb ...
Unpacking lib32gcc1 (1:10-20200222-1) ...
Selecting previously unselected package lib32stdc++6.
Preparing to unpack .../15-lib32stdc++6_10-20200222-1_amd64.deb ...
Unpacking lib32stdc++6 (10-20200222-1) ...
Selecting previously unselected package libclang-common-9-dev.
Preparing to unpack .../16-libclang-common-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libclang-common-9-dev (1:9.0.1-8) ...
Selecting previously unselected package clang-9.
Preparing to unpack .../17-clang-9_1%3a9.0.1-8_amd64.deb ...
Unpacking clang-9 (1:9.0.1-8) ...
Selecting previously unselected package libobjc-9-dev:amd64.
Preparing to unpack .../18-libobjc-9-dev_9.2.1-29_amd64.deb ...
Unpacking libobjc-9-dev:amd64 (9.2.1-29) ...
Selecting previously unselected package libomp5-9:amd64.
Preparing to unpack .../19-libomp5-9_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp5-9:amd64 (1:9.0.1-8) ...
Selecting previously unselected package libomp-9-dev.
Preparing to unpack .../20-libomp-9-dev_1%3a9.0.1-8_amd64.deb ...
Unpacking libomp-9-dev (1:9.0.1-8) ...
Setting up libgc1c2:amd64 (1:7.6.4-0.4) ...
Setting up libobjc4:amd64 (10-20200222-1) ...
Setting up libz3-4:amd64 (4.8.7-4) ...
Setting up gcc-8-base:amd64 (8.3.0-29) ...
Setting up libobjc-9-dev:amd64 (9.2.1-29) ...
Setting up libmpx2:amd64 (8.3.0-29) ...
Setting up libc6-i386 (2.29-10) ...
Setting up libbsd0:amd64 (0.10.0-1) ...
Setting up libomp5-9:amd64 (1:9.0.1-8) ...
Setting up libedit2:amd64 (3.1-20191231-1) ...
Setting up lib32gcc-s1 (10-20200222-1) ...
Setting up libgcc-8-dev:amd64 (8.3.0-29) ...
Setting up libomp-9-dev (1:9.0.1-8) ...
Setting up libllvm9:amd64 (1:9.0.1-8) ...
Setting up libstdc++-8-dev:amd64 (8.3.0-29) ...
Setting up libclang-cpp9 (1:9.0.1-8) ...
Setting up lib32gcc1 (1:10-20200222-1) ...
Setting up libobjc-8-dev:amd64 (8.3.0-29) ...
Setting up lib32stdc++6 (10-20200222-1) ...
Setting up libclang-common-9-dev (1:9.0.1-8) ...
Setting up clang-9 (1:9.0.1-8) ...
Processing triggers for libc-bin (2.29-10) ...
W: --force-yes is deprecated, use one of the options starting with --allow instead.
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSIONS='4.6 4.7 4.8 4.9 5 6 7 8 9 10'
+ cd /usr/bin
+ for VERSION in $VERSIONS
+ rm -f g++-4.6 gcc-4.6 cpp-4.6 gcc
+ ln -s clang++-9 g++-4.6
+ ln -s clang-9 gcc-4.6
+ ln -s clang-9 cpp-4.6
+ ln -s clang-9 gcc
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
dpkg: warning: package not in status nor available database at line 1: g++-4.6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.7 gcc-4.7 cpp-4.7 gcc
+ ln -s clang++-9 g++-4.7
+ ln -s clang-9 gcc-4.7
+ ln -s clang-9 cpp-4.7
+ ln -s clang-9 gcc
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
dpkg: warning: package not in status nor available database at line 1: g++-4.7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.8 gcc-4.8 cpp-4.8 gcc
+ ln -s clang++-9 g++-4.8
+ ln -s clang-9 gcc-4.8
+ ln -s clang-9 cpp-4.8
+ ln -s clang-9 gcc
+ echo 'gcc-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-4.8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-4.8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-4.9 gcc-4.9 cpp-4.9 gcc
+ ln -s clang++-9 g++-4.9
+ ln -s clang-9 gcc-4.9
+ ln -s clang-9 cpp-4.9
+ ln -s clang-9 gcc
+ echo 'gcc-4.9 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-4.9 hold'
dpkg: warning: package not in status nor available database at line 1: g++-4.9
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-5 gcc-5 cpp-5 gcc
+ ln -s clang++-9 g++-5
+ ln -s clang-9 gcc-5
+ ln -s clang-9 cpp-5
+ ln -s clang-9 gcc
+ echo 'gcc-5 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-5 hold'
dpkg: warning: package not in status nor available database at line 1: g++-5
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-6 gcc-6 cpp-6 gcc
+ ln -s clang++-9 g++-6
+ ln -s clang-9 gcc-6
+ ln -s clang-9 cpp-6
+ ln -s clang-9 gcc
+ echo 'gcc-6 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ dpkg --set-selections
+ echo 'g++-6 hold'
dpkg: warning: package not in status nor available database at line 1: g++-6
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-7 gcc-7 cpp-7 gcc
+ ln -s clang++-9 g++-7
+ ln -s clang-9 gcc-7
+ ln -s clang-9 cpp-7
+ ln -s clang-9 gcc
+ echo 'gcc-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-7 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-7
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-8 gcc-8 cpp-8 gcc
+ ln -s clang++-9 g++-8
+ ln -s clang-9 gcc-8
+ ln -s clang-9 cpp-8
+ ln -s clang-9 gcc
+ echo 'gcc-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: gcc-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-8 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-8
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ for VERSION in $VERSIONS
+ rm -f g++-9 gcc-9 cpp-9 gcc
+ ln -s clang++-9 g++-9
+ ln -s clang-9 gcc-9
+ ln -s clang-9 cpp-9
+ ln -s clang-9 gcc
+ echo 'gcc-9 hold'
+ dpkg --set-selections
+ echo 'g++-9 hold'
+ dpkg --set-selections
+ for VERSION in $VERSIONS
+ rm -f g++-10 gcc-10 cpp-10 gcc
+ ln -s clang++-9 g++-10
+ ln -s clang-9 gcc-10
+ ln -s clang-9 cpp-10
+ ln -s clang-9 gcc
+ dpkg --set-selections
+ echo 'gcc-10 hold'
dpkg: warning: package not in status nor available database at line 1: gcc-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ echo 'g++-10 hold'
+ dpkg --set-selections
dpkg: warning: package not in status nor available database at line 1: g++-10
dpkg: warning: found unknown packages; this might mean the available database
is outdated, and needs to be updated through a frontend method;
please see the FAQ <https://wiki.debian.org/Teams/Dpkg/FAQ>
+ cd -
/build/istgt-l56l73
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang
+ grep clang
+ cpp --version
+ g++ --version
+ grep clang

I: Finished running '/tmp/clang9'.

Finished processing commands.
--------------------------------------------------------------------------------
I: NOTICE: Log filtering will replace 'build/istgt-l56l73/resolver-6iLEql' with '<<RESOLVERDIR>>'

+------------------------------------------------------------------------------+
| Update chroot                                                                |
+------------------------------------------------------------------------------+

Hit:1 http://127.0.0.1:12990/debian sid InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
Calculating upgrade...
The following packages will be upgraded:
  libgmp10
1 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 253 kB of archives.
After this operation, 0 B of additional disk space will be used.
Get:1 http://127.0.0.1:12990/debian sid/main amd64 libgmp10 amd64 2:6.2.0+dfsg-4 [253 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 253 kB in 0s (17.1 MB/s)
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../libgmp10_2%3a6.2.0+dfsg-4_amd64.deb ...
Unpacking libgmp10:amd64 (2:6.2.0+dfsg-4) over (2:6.2.0+dfsg-3) ...
Setting up libgmp10:amd64 (2:6.2.0+dfsg-4) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Fetch source files                                                           |
+------------------------------------------------------------------------------+


Check APT
---------

Checking available source versions...

Download source files with APT
------------------------------

Reading package lists...
NOTICE: 'istgt' packaging is maintained in the 'Svn' version control system at:
svn://svn.debian.org/svn/glibc-bsd/trunk/istgt
Need to get 250 kB of source archives.
Get:1 http://127.0.0.1:12990/debian sid/main istgt 0.4~20111008-3 (dsc) [2041 B]
Get:2 http://127.0.0.1:12990/debian sid/main istgt 0.4~20111008-3 (tar) [235 kB]
Get:3 http://127.0.0.1:12990/debian sid/main istgt 0.4~20111008-3 (diff) [12.8 kB]
Fetched 250 kB in 0s (2791 kB/s)
Download complete and in download only mode
I: NOTICE: Log filtering will replace 'build/istgt-l56l73/istgt-0.4~20111008' with '<<PKGBUILDDIR>>'
I: NOTICE: Log filtering will replace 'build/istgt-l56l73' with '<<BUILDDIR>>'

+------------------------------------------------------------------------------+
| Install package build dependencies                                           |
+------------------------------------------------------------------------------+


Setup apt archive
-----------------

Merged Build-Depends: debhelper (>= 8.0), autotools-dev, libssl-dev, dpkg-dev (>= 1.16.1~), build-essential, fakeroot
Filtered Build-Depends: debhelper (>= 8.0), autotools-dev, libssl-dev, dpkg-dev (>= 1.16.1~), build-essential, fakeroot
dpkg-deb: building package 'sbuild-build-depends-main-dummy' in '/<<RESOLVERDIR>>/apt_archive/sbuild-build-depends-main-dummy.deb'.
Ign:1 copy:/<<RESOLVERDIR>>/apt_archive ./ InRelease
Get:2 copy:/<<RESOLVERDIR>>/apt_archive ./ Release [957 B]
Ign:3 copy:/<<RESOLVERDIR>>/apt_archive ./ Release.gpg
Get:4 copy:/<<RESOLVERDIR>>/apt_archive ./ Sources [415 B]
Get:5 copy:/<<RESOLVERDIR>>/apt_archive ./ Packages [477 B]
Fetched 1849 B in 0s (170 kB/s)
Reading package lists...
Reading package lists...

Install main build dependencies (apt-based resolver)
----------------------------------------------------

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libpipeline1 libsigsegv2 libssl-dev libssl1.1 libsub-override-perl
  libtool libuchardet0 libxml2 m4 man-db po-debconf sensible-utils
Suggested packages:
  autoconf-archive gnu-standards autoconf-doc wamerican | wordlist whois
  vacation dh-make gettext-doc libasprintf-dev libgettextpo-dev groff
  libssl-doc libtool-doc gfortran | fortran95-compiler gcj-jdk m4-doc apparmor
  less www-browser libmail-box-perl
Recommended packages:
  curl | wget | lynx libarchive-cpio-perl libglib2.0-data shared-mime-info
  xdg-user-dirs libltdl-dev libmail-sendmail-perl
The following NEW packages will be installed:
  autoconf automake autopoint autotools-dev bsdmainutils debhelper
  dh-autoreconf dh-strip-nondeterminism dwz file gettext gettext-base
  groff-base intltool-debian libarchive-zip-perl libcroco3 libdebhelper-perl
  libelf1 libfile-stripnondeterminism-perl libglib2.0-0 libicu63 libmagic-mgc
  libmagic1 libpipeline1 libsigsegv2 libssl-dev libssl1.1 libsub-override-perl
  libtool libuchardet0 libxml2 m4 man-db po-debconf
  sbuild-build-depends-main-dummy sensible-utils
0 upgraded, 36 newly installed, 0 to remove and 0 not upgraded.
Need to get 22.5 MB of archives.
After this operation, 82.7 MB of additional disk space will be used.
Get:1 copy:/<<RESOLVERDIR>>/apt_archive ./ sbuild-build-depends-main-dummy 0.invalid.0 [904 B]
Get:2 http://127.0.0.1:12990/debian sid/main amd64 bsdmainutils amd64 11.1.2+b1 [191 kB]
Get:3 http://127.0.0.1:12990/debian sid/main amd64 libuchardet0 amd64 0.0.6-3 [64.9 kB]
Get:4 http://127.0.0.1:12990/debian sid/main amd64 groff-base amd64 1.22.4-4 [919 kB]
Get:5 http://127.0.0.1:12990/debian sid/main amd64 libpipeline1 amd64 1.5.2-2 [33.9 kB]
Get:6 http://127.0.0.1:12990/debian sid/main amd64 man-db amd64 2.9.0-2 [1307 kB]
Get:7 http://127.0.0.1:12990/debian sid/main amd64 sensible-utils all 0.0.12+nmu1 [16.0 kB]
Get:8 http://127.0.0.1:12990/debian sid/main amd64 libmagic-mgc amd64 1:5.38-4 [262 kB]
Get:9 http://127.0.0.1:12990/debian sid/main amd64 libmagic1 amd64 1:5.38-4 [120 kB]
Get:10 http://127.0.0.1:12990/debian sid/main amd64 file amd64 1:5.38-4 [67.9 kB]
Get:11 http://127.0.0.1:12990/debian sid/main amd64 gettext-base amd64 0.19.8.1-10 [123 kB]
Get:12 http://127.0.0.1:12990/debian sid/main amd64 libsigsegv2 amd64 2.12-2 [32.8 kB]
Get:13 http://127.0.0.1:12990/debian sid/main amd64 m4 amd64 1.4.18-4 [203 kB]
Get:14 http://127.0.0.1:12990/debian sid/main amd64 autoconf all 2.69-11.1 [341 kB]
Get:15 http://127.0.0.1:12990/debian sid/main amd64 autotools-dev all 20180224.1 [77.0 kB]
Get:16 http://127.0.0.1:12990/debian sid/main amd64 automake all 1:1.16.1-4 [771 kB]
Get:17 http://127.0.0.1:12990/debian sid/main amd64 autopoint all 0.19.8.1-10 [435 kB]
Get:18 http://127.0.0.1:12990/debian sid/main amd64 libtool all 2.4.6-13 [513 kB]
Get:19 http://127.0.0.1:12990/debian sid/main amd64 dh-autoreconf all 19 [16.9 kB]
Get:20 http://127.0.0.1:12990/debian sid/main amd64 libdebhelper-perl all 12.9 [183 kB]
Get:21 http://127.0.0.1:12990/debian sid/main amd64 libarchive-zip-perl all 1.67-1 [104 kB]
Get:22 http://127.0.0.1:12990/debian sid/main amd64 libsub-override-perl all 0.09-2 [10.2 kB]
Get:23 http://127.0.0.1:12990/debian sid/main amd64 libfile-stripnondeterminism-perl all 1.6.3-2 [23.7 kB]
Get:24 http://127.0.0.1:12990/debian sid/main amd64 dh-strip-nondeterminism all 1.6.3-2 [14.7 kB]
Get:25 http://127.0.0.1:12990/debian sid/main amd64 libelf1 amd64 0.176-1.1 [161 kB]
Get:26 http://127.0.0.1:12990/debian sid/main amd64 dwz amd64 0.13-5 [151 kB]
Get:27 http://127.0.0.1:12990/debian sid/main amd64 libglib2.0-0 amd64 2.62.4-2 [1319 kB]
Get:28 http://127.0.0.1:12990/debian sid/main amd64 libicu63 amd64 63.2-2 [8301 kB]
Get:29 http://127.0.0.1:12990/debian sid/main amd64 libxml2 amd64 2.9.10+dfsg-3 [709 kB]
Get:30 http://127.0.0.1:12990/debian sid/main amd64 libcroco3 amd64 0.6.13-1 [146 kB]
Get:31 http://127.0.0.1:12990/debian sid/main amd64 gettext amd64 0.19.8.1-10 [1303 kB]
Get:32 http://127.0.0.1:12990/debian sid/main amd64 intltool-debian all 0.35.0+20060710.5 [26.8 kB]
Get:33 http://127.0.0.1:12990/debian sid/main amd64 po-debconf all 1.0.21 [248 kB]
Get:34 http://127.0.0.1:12990/debian sid/main amd64 debhelper all 12.9 [994 kB]
Get:35 http://127.0.0.1:12990/debian sid/main amd64 libssl1.1 amd64 1.1.1d-2 [1540 kB]
Get:36 http://127.0.0.1:12990/debian sid/main amd64 libssl-dev amd64 1.1.1d-2 [1797 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 22.5 MB in 0s (63.1 MB/s)
Selecting previously unselected package bsdmainutils.
(Reading database ... 13921 files and directories currently installed.)
Preparing to unpack .../00-bsdmainutils_11.1.2+b1_amd64.deb ...
Unpacking bsdmainutils (11.1.2+b1) ...
Selecting previously unselected package libuchardet0:amd64.
Preparing to unpack .../01-libuchardet0_0.0.6-3_amd64.deb ...
Unpacking libuchardet0:amd64 (0.0.6-3) ...
Selecting previously unselected package groff-base.
Preparing to unpack .../02-groff-base_1.22.4-4_amd64.deb ...
Unpacking groff-base (1.22.4-4) ...
Selecting previously unselected package libpipeline1:amd64.
Preparing to unpack .../03-libpipeline1_1.5.2-2_amd64.deb ...
Unpacking libpipeline1:amd64 (1.5.2-2) ...
Selecting previously unselected package man-db.
Preparing to unpack .../04-man-db_2.9.0-2_amd64.deb ...
Unpacking man-db (2.9.0-2) ...
Selecting previously unselected package sensible-utils.
Preparing to unpack .../05-sensible-utils_0.0.12+nmu1_all.deb ...
Unpacking sensible-utils (0.0.12+nmu1) ...
Selecting previously unselected package libmagic-mgc.
Preparing to unpack .../06-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Unpacking libmagic-mgc (1:5.38-4) ...
Selecting previously unselected package libmagic1:amd64.
Preparing to unpack .../07-libmagic1_1%3a5.38-4_amd64.deb ...
Unpacking libmagic1:amd64 (1:5.38-4) ...
Selecting previously unselected package file.
Preparing to unpack .../08-file_1%3a5.38-4_amd64.deb ...
Unpacking file (1:5.38-4) ...
Selecting previously unselected package gettext-base.
Preparing to unpack .../09-gettext-base_0.19.8.1-10_amd64.deb ...
Unpacking gettext-base (0.19.8.1-10) ...
Selecting previously unselected package libsigsegv2:amd64.
Preparing to unpack .../10-libsigsegv2_2.12-2_amd64.deb ...
Unpacking libsigsegv2:amd64 (2.12-2) ...
Selecting previously unselected package m4.
Preparing to unpack .../11-m4_1.4.18-4_amd64.deb ...
Unpacking m4 (1.4.18-4) ...
Selecting previously unselected package autoconf.
Preparing to unpack .../12-autoconf_2.69-11.1_all.deb ...
Unpacking autoconf (2.69-11.1) ...
Selecting previously unselected package autotools-dev.
Preparing to unpack .../13-autotools-dev_20180224.1_all.deb ...
Unpacking autotools-dev (20180224.1) ...
Selecting previously unselected package automake.
Preparing to unpack .../14-automake_1%3a1.16.1-4_all.deb ...
Unpacking automake (1:1.16.1-4) ...
Selecting previously unselected package autopoint.
Preparing to unpack .../15-autopoint_0.19.8.1-10_all.deb ...
Unpacking autopoint (0.19.8.1-10) ...
Selecting previously unselected package libtool.
Preparing to unpack .../16-libtool_2.4.6-13_all.deb ...
Unpacking libtool (2.4.6-13) ...
Selecting previously unselected package dh-autoreconf.
Preparing to unpack .../17-dh-autoreconf_19_all.deb ...
Unpacking dh-autoreconf (19) ...
Selecting previously unselected package libdebhelper-perl.
Preparing to unpack .../18-libdebhelper-perl_12.9_all.deb ...
Unpacking libdebhelper-perl (12.9) ...
Selecting previously unselected package libarchive-zip-perl.
Preparing to unpack .../19-libarchive-zip-perl_1.67-1_all.deb ...
Unpacking libarchive-zip-perl (1.67-1) ...
Selecting previously unselected package libsub-override-perl.
Preparing to unpack .../20-libsub-override-perl_0.09-2_all.deb ...
Unpacking libsub-override-perl (0.09-2) ...
Selecting previously unselected package libfile-stripnondeterminism-perl.
Preparing to unpack .../21-libfile-stripnondeterminism-perl_1.6.3-2_all.deb ...
Unpacking libfile-stripnondeterminism-perl (1.6.3-2) ...
Selecting previously unselected package dh-strip-nondeterminism.
Preparing to unpack .../22-dh-strip-nondeterminism_1.6.3-2_all.deb ...
Unpacking dh-strip-nondeterminism (1.6.3-2) ...
Selecting previously unselected package libelf1:amd64.
Preparing to unpack .../23-libelf1_0.176-1.1_amd64.deb ...
Unpacking libelf1:amd64 (0.176-1.1) ...
Selecting previously unselected package dwz.
Preparing to unpack .../24-dwz_0.13-5_amd64.deb ...
Unpacking dwz (0.13-5) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../25-libglib2.0-0_2.62.4-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.62.4-2) ...
Selecting previously unselected package libicu63:amd64.
Preparing to unpack .../26-libicu63_63.2-2_amd64.deb ...
Unpacking libicu63:amd64 (63.2-2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../27-libxml2_2.9.10+dfsg-3_amd64.deb ...
Unpacking libxml2:amd64 (2.9.10+dfsg-3) ...
Selecting previously unselected package libcroco3:amd64.
Preparing to unpack .../28-libcroco3_0.6.13-1_amd64.deb ...
Unpacking libcroco3:amd64 (0.6.13-1) ...
Selecting previously unselected package gettext.
Preparing to unpack .../29-gettext_0.19.8.1-10_amd64.deb ...
Unpacking gettext (0.19.8.1-10) ...
Selecting previously unselected package intltool-debian.
Preparing to unpack .../30-intltool-debian_0.35.0+20060710.5_all.deb ...
Unpacking intltool-debian (0.35.0+20060710.5) ...
Selecting previously unselected package po-debconf.
Preparing to unpack .../31-po-debconf_1.0.21_all.deb ...
Unpacking po-debconf (1.0.21) ...
Selecting previously unselected package debhelper.
Preparing to unpack .../32-debhelper_12.9_all.deb ...
Unpacking debhelper (12.9) ...
Selecting previously unselected package libssl1.1:amd64.
Preparing to unpack .../33-libssl1.1_1.1.1d-2_amd64.deb ...
Unpacking libssl1.1:amd64 (1.1.1d-2) ...
Selecting previously unselected package libssl-dev:amd64.
Preparing to unpack .../34-libssl-dev_1.1.1d-2_amd64.deb ...
Unpacking libssl-dev:amd64 (1.1.1d-2) ...
Selecting previously unselected package sbuild-build-depends-main-dummy.
Preparing to unpack .../35-sbuild-build-depends-main-dummy_0.invalid.0_amd64.deb ...
Unpacking sbuild-build-depends-main-dummy (0.invalid.0) ...
Setting up libpipeline1:amd64 (1.5.2-2) ...
Setting up libmagic-mgc (1:5.38-4) ...
Setting up libarchive-zip-perl (1.67-1) ...
Setting up libglib2.0-0:amd64 (2.62.4-2) ...
No schema files found: doing nothing.
Setting up libssl1.1:amd64 (1.1.1d-2) ...
Setting up libdebhelper-perl (12.9) ...
Setting up libmagic1:amd64 (1:5.38-4) ...
Setting up gettext-base (0.19.8.1-10) ...
Setting up file (1:5.38-4) ...
Setting up libicu63:amd64 (63.2-2) ...
Setting up autotools-dev (20180224.1) ...
Setting up libsigsegv2:amd64 (2.12-2) ...
Setting up bsdmainutils (11.1.2+b1) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode
Setting up libssl-dev:amd64 (1.1.1d-2) ...
Setting up autopoint (0.19.8.1-10) ...
Setting up sensible-utils (0.0.12+nmu1) ...
Setting up libuchardet0:amd64 (0.0.6-3) ...
Setting up libsub-override-perl (0.09-2) ...
Setting up libelf1:amd64 (0.176-1.1) ...
Setting up libxml2:amd64 (2.9.10+dfsg-3) ...
Setting up libfile-stripnondeterminism-perl (1.6.3-2) ...
Setting up libtool (2.4.6-13) ...
Setting up m4 (1.4.18-4) ...
Setting up libcroco3:amd64 (0.6.13-1) ...
Setting up autoconf (2.69-11.1) ...
Setting up dh-strip-nondeterminism (1.6.3-2) ...
Setting up dwz (0.13-5) ...
Setting up groff-base (1.22.4-4) ...
Setting up automake (1:1.16.1-4) ...
update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Setting up gettext (0.19.8.1-10) ...
Setting up man-db (2.9.0-2) ...
Not building database; man-db/auto-update is not 'true'.
Setting up intltool-debian (0.35.0+20060710.5) ...
Setting up po-debconf (1.0.21) ...
Setting up dh-autoreconf (19) ...
Setting up debhelper (12.9) ...
Setting up sbuild-build-depends-main-dummy (0.invalid.0) ...
Processing triggers for libc-bin (2.29-10) ...

+------------------------------------------------------------------------------+
| Check architectures                                                          |
+------------------------------------------------------------------------------+

Arch check ok (amd64 included in any)

+------------------------------------------------------------------------------+
| Build environment                                                            |
+------------------------------------------------------------------------------+

Kernel: Linux 4.19.0-6-cloud-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) amd64 (x86_64)
Toolchain package versions: binutils_2.34-3 dpkg-dev_1.19.7 g++-9_9.2.1-29 gcc-9_9.2.1-29 libc6-dev_2.29-10 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 linux-libc-dev_5.4.19-1
Package versions: adduser_3.118 apt_1.8.4 autoconf_2.69-11.1 automake_1:1.16.1-4 autopoint_0.19.8.1-10 autotools-dev_20180224.1 base-files_11 base-passwd_3.5.47 bash_5.0-5 binutils_2.34-3 binutils-common_2.34-3 binutils-x86-64-linux-gnu_2.34-3 bsdmainutils_11.1.2+b1 bsdutils_1:2.34-0.1 build-essential_12.8 bzip2_1.0.8-2 clang-9_1:9.0.1-8 coreutils_8.30-3+b1 cpp_4:9.2.1-3.1 cpp-9_9.2.1-29 dash_0.5.10.2-6 debconf_1.5.73 debhelper_12.9 debian-archive-keyring_2019.1 debianutils_4.9.1 dh-autoreconf_19 dh-strip-nondeterminism_1.6.3-2 diffutils_1:3.7-3 dpkg_1.19.7 dpkg-dev_1.19.7 dwz_0.13-5 e2fsprogs_1.45.5-2 fakeroot_1.24-1 fdisk_2.34-0.1 file_1:5.38-4 findutils_4.7.0-1 g++_4:9.2.1-3.1 g++-9_9.2.1-29 gcc_4:9.2.1-3.1 gcc-10-base_10-20200222-1 gcc-8-base_8.3.0-29 gcc-9_9.2.1-29 gcc-9-base_9.2.1-29 gettext_0.19.8.1-10 gettext-base_0.19.8.1-10 gpgv_2.2.19-1 grep_3.4-1 groff-base_1.22.4-4 gzip_1.9-3+b1 hostname_3.23 init-system-helpers_1.57 intltool-debian_0.35.0+20060710.5 lib32gcc-s1_10-20200222-1 lib32gcc1_1:10-20200222-1 lib32stdc++6_10-20200222-1 libacl1_2.2.53-5 libapt-pkg5.0_1.8.4 libarchive-zip-perl_1.67-1 libasan5_9.2.1-29 libatomic1_10-20200222-1 libattr1_1:2.4.48-5 libaudit-common_1:2.8.5-2 libaudit1_1:2.8.5-2+b1 libbinutils_2.34-3 libblkid1_2.34-0.1 libbsd0_0.10.0-1 libbz2-1.0_1.0.8-2 libc-bin_2.29-10 libc-dev-bin_2.29-10 libc6_2.29-10 libc6-dev_2.29-10 libc6-i386_2.29-10 libcap-ng0_0.7.9-2.1+b1 libcc1-0_10-20200222-1 libclang-common-9-dev_1:9.0.1-8 libclang-cpp9_1:9.0.1-8 libcom-err2_1.45.5-2 libcroco3_0.6.13-1 libcrypt-dev_1:4.4.10-10 libcrypt1_1:4.4.10-10 libctf-nobfd0_2.34-3 libctf0_2.34-3 libdb5.3_5.3.28+dfsg1-0.6 libdebconfclient0_0.251 libdebhelper-perl_12.9 libdpkg-perl_1.19.7 libedit2_3.1-20191231-1 libelf1_0.176-1.1 libext2fs2_1.45.5-2 libfakeroot_1.24-1 libfdisk1_2.34-0.1 libffi7_3.3-3 libfile-stripnondeterminism-perl_1.6.3-2 libgc1c2_1:7.6.4-0.4 libgcc-8-dev_8.3.0-29 libgcc-9-dev_9.2.1-29 libgcc-s1_10-20200222-1 libgcc1_1:10-20200222-1 libgcrypt20_1.8.5-5 libgdbm-compat4_1.18.1-5 libgdbm6_1.18.1-5 libglib2.0-0_2.62.4-2 libgmp10_2:6.2.0+dfsg-4 libgnutls30_3.6.12-2 libgomp1_10-20200222-1 libgpg-error0_1.37-1 libhogweed5_3.5.1+really3.5.1-2 libicu63_63.2-2 libidn2-0_2.2.0-2 libisl22_0.22.1-1 libitm1_10-20200222-1 libllvm9_1:9.0.1-8 liblsan0_10-20200222-1 liblz4-1_1.9.2-2 liblzma5_5.2.4-1+b1 libmagic-mgc_1:5.38-4 libmagic1_1:5.38-4 libmount1_2.34-0.1 libmpc3_1.1.0-1 libmpfr6_4.0.2-1 libmpx2_8.3.0-29 libncursesw6_6.1+20191019-1 libnettle7_3.5.1+really3.5.1-2 libobjc-8-dev_8.3.0-29 libobjc-9-dev_9.2.1-29 libobjc4_10-20200222-1 libomp-9-dev_1:9.0.1-8 libomp5-9_1:9.0.1-8 libp11-kit0_0.23.20-1 libpam-modules_1.3.1-5 libpam-modules-bin_1.3.1-5 libpam-runtime_1.3.1-5 libpam0g_1.3.1-5 libpcre2-8-0_10.34-7 libpcre3_2:8.39-12+b1 libperl5.30_5.30.0-9 libpipeline1_1.5.2-2 libquadmath0_10-20200222-1 libseccomp2_2.4.2-2 libselinux1_3.0-1+b1 libsemanage-common_3.0-1 libsemanage1_3.0-1+b1 libsepol1_3.0-1 libsigsegv2_2.12-2 libsmartcols1_2.34-0.1 libss2_1.45.5-2 libssl-dev_1.1.1d-2 libssl1.1_1.1.1d-2 libstdc++-8-dev_8.3.0-29 libstdc++-9-dev_9.2.1-29 libstdc++6_10-20200222-1 libsub-override-perl_0.09-2 libsystemd0_244.3-1 libtasn1-6_4.16.0-2 libtinfo6_6.1+20191019-1 libtool_2.4.6-13 libtsan0_10-20200222-1 libubsan1_10-20200222-1 libuchardet0_0.0.6-3 libudev1_244.3-1 libunistring2_0.9.10-2 libuuid1_2.34-0.1 libxml2_2.9.10+dfsg-3 libz3-4_4.8.7-4 libzstd1_1.4.4+dfsg-3 linux-libc-dev_5.4.19-1 login_1:4.8.1-1 logsave_1.45.5-2 lsb-base_11.1.0 m4_1.4.18-4 make_4.2.1-1.2 man-db_2.9.0-2 mawk_1.3.4.20200120-2 mount_2.34-0.1 ncurses-base_6.1+20191019-1 ncurses-bin_6.1+20191019-1 passwd_1:4.8.1-1 patch_2.7.6-6 perl_5.30.0-9 perl-base_5.30.0-9 perl-modules-5.30_5.30.0-9 po-debconf_1.0.21 sbuild-build-depends-main-dummy_0.invalid.0 sed_4.7-1 sensible-utils_0.0.12+nmu1 sysvinit-utils_2.96-2.1 tar_1.30+dfsg-6+b1 tzdata_2019c-3 util-linux_2.34-0.1 xz-utils_5.2.4-1+b1 zlib1g_1:1.2.11.dfsg-1.2

+------------------------------------------------------------------------------+
| Build                                                                        |
+------------------------------------------------------------------------------+


Unpack source
-------------

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Format: 3.0 (quilt)
Source: istgt
Binary: istgt
Architecture: any
Version: 0.4~20111008-3
Maintainer: GNU/kFreeBSD Maintainers <debian-bsd@lists.debian.org>
Uploaders: Arno Töll <arno@debian.org>, Robert Millan <rmh@debian.org>
Homepage: http://www.peach.ne.jp/archives/istgt/
Standards-Version: 3.9.3.1
Vcs-Browser: https://alioth.debian.org/scm/viewvc.php/trunk/istgt/?root=glibc-bsd
Vcs-Svn: svn://svn.debian.org/svn/glibc-bsd/trunk/istgt
Build-Depends: debhelper (>= 8.0), autotools-dev, libssl-dev, libcam-dev [kfreebsd-any], dpkg-dev (>= 1.16.1~)
Package-List: 
 istgt deb admin extra
Checksums-Sha1: 
 aa7bc47365763bddf82b4fcdffd659b2cb38a77c 235227 istgt_0.4~20111008.orig.tar.gz
 f7c12d7bca22d215f432f47f2d31a0fb33b5cf8e 12804 istgt_0.4~20111008-3.debian.tar.gz
Checksums-Sha256: 
 41ddc49dbd0cda81c3f7557e76d27b851e042a32acb448dac1b743c759b0b37e 235227 istgt_0.4~20111008.orig.tar.gz
 c52df318f0287d4050c88f818a96c4f7f78ee6d7e67e7165153d26796fcbe17a 12804 istgt_0.4~20111008-3.debian.tar.gz
Files: 
 f9a685851e127f018502a07181d7799e 235227 istgt_0.4~20111008.orig.tar.gz
 103635ea341c6854aa96ead7be077a7a 12804 istgt_0.4~20111008-3.debian.tar.gz

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iQIcBAEBAgAGBQJP6ji1AAoJEMcrUe6dgPNt09QQAKWaDC3G+Ua81ovwZ78ULOhR
nNgoAtoPt9pXIth+/rIX4JEg/T2HqsEfAQneIO7ZETJU4UgdbbQtJACBlRqfKOjF
lkMqbhTMj01F/GNaT+YvgOjqpmsowtydmNy+rOZX39UUfy8bdfggu9hGKLdJ1skF
ojpIaFf6sq0LyDsVAckZVKrpn0YaLUT1D5gVhc5zPBuNLId3rtxL2mHjT254sEb3
U8Dd9tE+om3t03D1qLVA+CFZfNL+DcTuYjvmzkegMrHQc0fUEP15yL8IyEToWJ4H
NEOe8mU60QuapbgSxa7IDWpX2XlaN/CEYFlRdAq2xJbdkH8r2HCO6X6XNGSpxq2R
5pacsnAcU2Iu4JQ1j95DUkJcT2U/itPx67L8tQeMObflwFWpx/rQCXxJLSN5Gpn1
oVBA0XCZNGuUUFRPmbJOnRI3RHcxWKczIzzlZ2R+kRwxlG2hygm18/eVAF6S7ReZ
FkrC2QWxFra0ZiLWrm3Q6oRpU86o/X8RygdVDKVzW4zwoO5M2UJV7g5T0ly6Pz1c
dpWsGtgwc7NodKB0UfSXC2nweVDCdSAUasi+kwaJbfpHdx3rdKYXZ12T95kKcGQ+
Aw5AWsEoUDKjiLstJMgR/jsAPbmWxSWBI5xXbmGAsClBOxJaRHAUyjVfdy7n8k7i
wdYNSFGHAbGETKD2Lsbr
=KfZu
-----END PGP SIGNATURE-----

gpgv: unknown type of key resource 'trustedkeys.kbx'
gpgv: keyblock resource '/sbuild-nonexistent/.gnupg/trustedkeys.kbx': General error
gpgv: Signature made Tue Jun 26 22:33:25 2012 UTC
gpgv:                using RSA key C72B51EE9D80F36D
gpgv: Can't check signature: No public key
dpkg-source: warning: failed to verify signature on ./istgt_0.4~20111008-3.dsc
dpkg-source: info: extracting istgt in /<<PKGBUILDDIR>>
dpkg-source: info: unpacking istgt_0.4~20111008.orig.tar.gz
dpkg-source: info: unpacking istgt_0.4~20111008-3.debian.tar.gz
dpkg-source: info: using patch list from debian/patches/series
dpkg-source: info: applying fix-installdir.patch
dpkg-source: info: applying add-istgtcontrol-manpage
dpkg-source: info: applying fix-as-needed-build.patch
dpkg-source: info: applying fix-autosize.patch
dpkg-source: info: applying add-reload.patch

Check disk space
----------------

Sufficient free space for build

User Environment
----------------

APT_CONFIG=/var/lib/sbuild/apt.conf
HOME=/sbuild-nonexistent
LANG=C.UTF-8
LC_ALL=C.UTF-8
LOGNAME=user42
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
SCHROOT_ALIAS_NAME=unstable
SCHROOT_CHROOT_NAME=sid-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=1001
SCHROOT_GROUP=user42
SCHROOT_SESSION_ID=sid-amd64-sbuild-dad314dc-cf46-4a01-bcd4-e822f6ce4ef4
SCHROOT_UID=1001
SCHROOT_USER=user42
SHELL=/bin/sh
USER=user42

dpkg-buildpackage
-----------------

Command: dpkg-buildpackage -us -uc -b -rfakeroot
dpkg-buildpackage: info: source package istgt
dpkg-buildpackage: info: source version 0.4~20111008-3
dpkg-buildpackage: info: source distribution unstable
dpkg-buildpackage: info: source changed by Arno Töll <arno@debian.org>
 dpkg-source --before-build .
dpkg-buildpackage: info: host architecture amd64
 fakeroot debian/rules clean
dh clean
dh: warning: Compatibility levels before 9 are deprecated (level 8 in use)
   dh_clean
	rm -f debian/debhelper-build-stamp
	rm -rf debian/.debhelper/
dh_clean: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	rm -f -- debian/istgt.substvars debian/files
	rm -fr -- debian/istgt/ debian/tmp/
	find .  \( \( \
		\( -path .\*/.git -o -path .\*/.svn -o -path .\*/.bzr -o -path .\*/.hg -o -path .\*/CVS -o -path .\*/.pc -o -path .\*/_darcs \) -prune -o -type f -a \
	        \( -name '#*#' -o -name '.*~' -o -name '*~' -o -name DEADJOE \
		 -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \
		 -o -name '.*.orig' -o -name .*.rej -o -name '.SUMS' \
		 -o -name TAGS -o \( -path '*/.deps/*' -a -name '*.P' \) \
		\) -exec rm -f {} + \) -o \
		\( -type d -a -name autom4te.cache -prune -exec rm -rf {} + \) \)
 debian/rules build
dh build
dh: warning: Compatibility levels before 9 are deprecated (level 8 in use)
   dh_update_autotools_config
   debian/rules override_dh_auto_configure
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_auto_configure -- --with-configdir=/etc/istgt \
	--with-logfacility=daemon \
	--localstatedir=/var/run/istgt \
	CFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" CPPFLAGS="-Wdate-time -D_FORTIFY_SOURCE=2" CXXFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" FCFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" FFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" GCJFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" LDFLAGS="-Wl,-z,relro" OBJCFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" OBJCXXFLAGS="-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" 
dh_auto_configure: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	./configure --build=x86_64-linux-gnu --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libexecdir=\${prefix}/lib/istgt --disable-maintainer-mode --disable-dependency-tracking --with-configdir=/etc/istgt --with-logfacility=daemon --localstatedir=/var/run/istgt "CFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" "CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2" "CXXFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" "FCFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" "FFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" "GCJFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong" LDFLAGS=-Wl,-z,relro "OBJCFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security" "OBJCXXFLAGS=-g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security"
configure: WARNING: unrecognized options: --disable-silent-rules, --disable-maintainer-mode, --disable-dependency-tracking
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for a BSD-compatible install... /usr/bin/install -c
checking for ranlib... ranlib
checking for a sed that does not truncate output... /bin/sed
checking for pthread_create in -lpthread... yes
checking for MD5_Update in -lcrypto... yes
checking for cam_open_spec_device in -lcam... no
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking arpa/inet.h usability... yes
checking arpa/inet.h presence... yes
checking for arpa/inet.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking for inttypes.h... (cached) yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking netdb.h usability... yes
checking netdb.h presence... yes
checking for netdb.h... yes
checking netinet/in.h usability... yes
checking netinet/in.h presence... yes
checking for netinet/in.h... yes
checking stddef.h usability... yes
checking stddef.h presence... yes
checking for stddef.h... yes
checking for stdint.h... (cached) yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/ioctl.h usability... yes
checking sys/ioctl.h presence... yes
checking for sys/ioctl.h... yes
checking sys/param.h usability... yes
checking sys/param.h presence... yes
checking for sys/param.h... yes
checking sys/socket.h usability... yes
checking sys/socket.h presence... yes
checking for sys/socket.h... yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking syslog.h usability... yes
checking syslog.h presence... yes
checking for syslog.h... yes
checking for unistd.h... (cached) yes
checking for inline... inline
checking for int32_t... yes
checking for int64_t... yes
checking for off_t... yes
checking for pid_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking for struct stat.st_blocks... yes
checking for uint16_t... yes
checking for uint32_t... yes
checking for uint64_t... yes
checking for uint8_t... yes
checking whether lstat correctly handles trailing slash... yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible realloc... yes
checking for ftruncate... yes
checking for memset... yes
checking for realpath... yes
checking for socket... yes
checking for strcasecmp... yes
checking for strchr... yes
checking for strncasecmp... yes
checking for strspn... yes
checking for strtol... yes
checking for strtoull... yes
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking aio.h usability... yes
checking aio.h presence... yes
checking for aio.h... yes
checking sched.h usability... yes
checking sched.h presence... yes
checking for sched.h... yes
checking uuid.h usability... no
checking uuid.h presence... no
checking for uuid.h... no
checking sys/disk.h usability... no
checking sys/disk.h presence... no
checking for sys/disk.h... no
checking sys/disklabel.h usability... no
checking sys/disklabel.h presence... no
checking for sys/disklabel.h... no
checking pthread.h usability... yes
checking pthread.h presence... yes
checking for pthread.h... yes
checking for pthread_np.h... no
checking for strlcpy... no
checking for arc4random... no
checking for srandomdev... no
checking for pthread_yield... yes
checking for sched_yield... yes
checking for pthread_set_name_np... no
checking for setproctitle... no
checking for mkdep... no
checking whether the C compiler accepts -Wall... yes
checking whether to use debug mode... no
checking which syslog facility to use... "daemon"
checking which syslog priority to use... "info"
checking for sys/types.h... (cached) yes
checking for machine/atomic.h... no
checking sys/atomic.h usability... no
checking sys/atomic.h presence... no
checking for sys/atomic.h... no
checking for atomic operations... no
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating etc/Makefile
config.status: creating doc/Makefile
config.status: creating src/build.h
config.status: creating src/config.h
configure: WARNING: unrecognized options: --disable-silent-rules, --disable-maintainer-mode, --disable-dependency-tracking
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_build
dh_auto_build: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	make -j1
make[1]: Entering directory '/<<PKGBUILDDIR>>'
for subdir in src etc doc; do \
          (cd $subdir; make all) || exit $?; \
done
make[2]: Entering directory '/<<PKGBUILDDIR>>/src'
make depend
make[3]: Entering directory '/<<PKGBUILDDIR>>/src'
if [ "x" != "x" ]; then \
	 -MM -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. istgt.c istgt_iscsi.c istgt_iscsi_param.c istgt_lu.c istgt_lu_disk.c istgt_lu_dvd.c istgt_lu_tape.c istgt_lu_pass.c istgt_lu_ctl.c istgt_log.c istgt_conf.c istgt_sock.c istgt_misc.c istgt_queue.c istgt_crc32c.c istgt_md5.c; \
fi
touch stamp-depend
make[3]: Leaving directory '/<<PKGBUILDDIR>>/src'
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt.o istgt.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_iscsi.o istgt_iscsi.c
istgt_iscsi.c:497:18: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                int opcode = BGET8W(&pdu->bhs.opcode, 5, 6);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:659:25: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'ISCSI_PDU_Ptr' (aka 'struct iscsi_pdu_t *') increases required alignment from 1 to 8 [-Wcast-align]
                lu_task->lu_cmd.pdu = (ISCSI_PDU_Ptr) ((uint8_t *)lu_task
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
istgt_iscsi.c:738:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        opcode = BGET8W(&cp[0], 5, 6);
                 ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:1778:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], 1, 7, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:1778:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], 1, 7, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:1971:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        T_bit = BGET8(&cp[1], 7);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:1972:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        C_bit = BGET8(&cp[1], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:1973:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        CSG = BGET8W(&cp[1], 3, 2);
              ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:1974:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        NSG = BGET8W(&cp[1], 1, 2);
              ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:2564:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], T_bit, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2564:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], T_bit, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2565:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], C_bit, 6);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2565:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], C_bit, 6);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2566:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], CSG, 3, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2566:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], CSG, 3, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2567:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], NSG, 1, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2567:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], NSG, 1, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2654:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        I_bit = BGET8(&cp[0], 7);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:2655:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        F_bit = BGET8(&cp[1], 7);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:2656:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        C_bit = BGET8(&cp[1], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:2757:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], F_bit, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2757:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], F_bit, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2758:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], C_bit, 6);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2758:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], C_bit, 6);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2827:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        reason = BGET8W(&cp[1], 6, 7);
                 ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:2871:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], 1, 7, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:2871:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&rsp[1], 1, 7, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3035:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], F_bit, 7);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3035:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], F_bit, 7);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3036:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], 0, 6); // A_bit Acknowledge
                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3036:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], 0, 6); // A_bit Acknowledge
                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3038:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], O_bit, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3038:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], O_bit, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3039:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], U_bit, 1);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3039:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], U_bit, 1);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3041:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], 0, 2);
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3041:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], 0, 2);
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3042:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], 0, 1);
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3042:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&rsp[1], 0, 1);
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3044:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], S_bit, 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3044:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&rsp[1], S_bit, 0);
                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3127:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        I_bit = BGET8(&cp[0], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3128:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        F_bit = BGET8(&cp[1], 7);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3129:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        R_bit = BGET8(&cp[1], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3130:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        W_bit = BGET8(&cp[1], 5);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3131:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        Attr_bit = BGET8W(&cp[1], 2, 3);
                   ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3360:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3360:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3361:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], o_bit, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3361:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], o_bit, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3362:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], u_bit, 3);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3362:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], u_bit, 3);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3363:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], O_bit, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3363:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], O_bit, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3364:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], U_bit, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3364:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], U_bit, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3484:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3484:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3485:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], o_bit, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3485:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], o_bit, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3486:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], u_bit, 3);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3486:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], u_bit, 3);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3487:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], O_bit, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3487:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], O_bit, 2);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3488:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], U_bit, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3488:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], U_bit, 1);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3549:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        I_bit = BGET8(&cp[0], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3550:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        function = BGET8W(&cp[1], 6, 7);
                   ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3671:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3671:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3727:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        I_bit = BGET8(&cp[0], 6);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:3807:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:3807:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:4077:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        F_bit = BGET8(&cp[1], 7);
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4153:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:4153:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:4347:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        immediate = BGET8W(&data_pdu.bhs.opcode, 6, 1);
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4348:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        opcode = BGET8W(&data_pdu.bhs.opcode, 5, 6);
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4351:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        F_bit = BGET8(&cp[1], 7);
                                ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4522:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                F_bit = BGET8(&cp[1], 7);
                        ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4529:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                F_bit = BGET8(&cp[1], 7);
                        ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4581:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:4581:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&rsp[1], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_iscsi.c:4613:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        immediate = BGET8W(&conn->pdu.bhs.opcode, 6, 1);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:4614:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        opcode = BGET8W(&conn->pdu.bhs.opcode, 5, 6);
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_iscsi.c:5243:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        opcode = BGET8W(&conn->pdu.bhs.opcode, 5, 6);
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
86 warnings generated.
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_iscsi_param.o istgt_iscsi_param.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu.o istgt_lu.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu_disk.o istgt_lu_disk.c
istgt_lu_disk.c:1094:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        evpd = BGET8(&cdb[1], 0);
               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:1100:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1101:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1101:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1131:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1132:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1132:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1164:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1165:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1165:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1177:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1178:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1178:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1180:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 0, 7, 1); /* PIV=0 */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1181:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1181:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1182:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1182:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1204:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1205:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1205:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1207:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 0, 7, 1); /* PIV=0 */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1208:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1208:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1209:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1209:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1240:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1241:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1241:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1243:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1244:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_DEVICE, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1244:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_DEVICE, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1245:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1245:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1263:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1264:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1264:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1266:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1267:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1267:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1268:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1268:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1287:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1288:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1288:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1290:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1291:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1291:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1292:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1292:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1316:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1317:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1317:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1319:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1320:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1320:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1321:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_TARGET_PORT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1321:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_TARGET_PORT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1343:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1344:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1344:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1346:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1347:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1347:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1348:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_LOGICAL_UNIT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1348:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_LOGICAL_UNIT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1374:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1375:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1375:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1389:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[5], 1, 2);     /* HEADSUP */
                                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1389:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[5], 1, 2);     /* HEADSUP */
                                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1391:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[5], 1, 0);     /* SIMPSUP */
                                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1391:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[5], 1, 0);     /* SIMPSUP */
                                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1405:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1406:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1406:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1441:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1442:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1442:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1453:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0x3f, 5, 6);    /* all page code */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1458:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[2], 0, 7); /* own copy */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1459:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1459:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1476:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1477:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1477:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1516:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1517:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1517:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1519:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[1], 1, 7, 1); /* PIV */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1520:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1520:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1521:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1521:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1551:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1552:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1552:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1560:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&data[4], 0, 0); /* support zero length in WRITE SAME */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1608:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[32], 0, 7); /* not valid ALIGNMENT */
                                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1608:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&data[32], 0, 7); /* not valid ALIGNMENT */
                                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1621:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1622:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1622:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1646:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[7], spec->lu->lun[spec->lun].formfactor, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1661:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1662:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1662:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1672:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&data[5], 0, 0);
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1697:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[0], pq, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1698:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1698:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1700:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[1], rmb, 7, 1);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1705:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[3], 2, 3, 4);             /* format 2 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1706:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[1], 1, 4);         /* hierarchical support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1706:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[1], 1, 4);         /* hierarchical support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1714:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[5], 0x00, 5, 2); /* Not support TPGS */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1714:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[5], 0x00, 5, 2); /* Not support TPGS */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1720:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[6], 1, 4, 1); /* MULTIP */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1720:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[6], 1, 4, 1); /* MULTIP */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1724:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[7], 1, 1);     /* CMDQUE */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1724:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[7], 1, 1);     /* CMDQUE */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1855:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 7); /* PS */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1855:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 7); /* PS */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1856:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 2); /* WCE */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1856:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 2); /* WCE */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1863:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[2], 1, 2); /* WCE=1 */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1863:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[2], 1, 2); /* WCE=1 */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1865:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[2], 0, 2); /* WCE=0 */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1865:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[2], 0, 2); /* WCE=0 */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1869:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 0); /* RCD=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1869:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 0); /* RCD=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1871:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 0); /* RCD=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:1871:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 0); /* RCD=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2059:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 7);     /* WP */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2059:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 7);     /* WP */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2111:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[3], 1, 7);     /* WP */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2111:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[3], 1, 7);     /* WP */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2114:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 1, 1);      /* Long LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2116:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 0, 1);      /* Short LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2191:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        ps = BGET8(&data[0], 7);
             ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2192:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        spf = BGET8(&data[0], 6);
              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2230:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wce = BGET8(&data[2], 2); /* WCE */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2231:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        rcd = BGET8(&data[2], 0); /* RCD */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2391:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&cp[0], 1, 7); /* PREF */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2394:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_ACTIVE_OPTIMIZED, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2394:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_ACTIVE_OPTIMIZED, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2397:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_ACTIVE_NON_OPTIMIZED, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2397:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_ACTIVE_NON_OPTIMIZED, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2400:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_STANDBY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2400:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_STANDBY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2403:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_UNAVAILABLE, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2403:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_UNAVAILABLE, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2406:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_TRANSITIONING, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2406:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], AAS_TRANSITIONING, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2417:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[1], 1, 1); /* active/non-optimized supported */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2417:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[1], 1, 1); /* active/non-optimized supported */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2418:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[1], 1, 0); /* active/optimized supported */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2418:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[1], 1, 0); /* active/optimized supported */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2496:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        aas = BGET8W(&data[0], 3, 4);
              ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2731:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        fc = BGET8W(&data[0], 7, 2);
             ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2732:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        pi = BGET8W(&data[0], 3, 4);
             ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2822:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[21], spec->rsv_scope, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2823:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[21], spec->rsv_type, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2823:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[21], spec->rsv_type, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2842:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 3); /* Specify Initiator Ports Capable */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2842:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 3); /* Specify Initiator Ports Capable */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2843:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 2); /* All Target Ports Capable */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2843:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[2], 1, 2); /* All Target Ports Capable */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2879:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[12], 1, 1);
                                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2879:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[12], 1, 1);
                                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2885:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[12], 1, 0);
                                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2885:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[12], 1, 0);
                                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2886:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8W(&cp[13], spec->rsv_scope & 0x0f, 7, 4);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2886:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8W(&cp[13], spec->rsv_scope & 0x0f, 7, 4);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2887:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8W(&cp[13], spec->rsv_type & 0x0f, 3, 4);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2887:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8W(&cp[13], spec->rsv_type & 0x0f, 3, 4);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:2948:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        spec_i_pt = BGET8(&data[20], 3);
                    ^~~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2949:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        all_tg_pt = BGET8(&data[20], 2);
                    ^~~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:2950:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        aptpl = BGET8(&data[20], 0);
                ^~~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:3762:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[1], 0x02, 4, 5); /* RELEASE */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3763:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[2], 0x00, 7, 4); /* LU_SCOPE */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3764:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cdb[2], 0x03, 3, 4); /* ISTGT_LU_PR_TYPE_EXCLUSIVE_ACCESS */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3764:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cdb[2], 0x03, 3, 4); /* ISTGT_LU_PR_TYPE_EXCLUSIVE_ACCESS */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3791:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[1], 0x06, 4, 5); /* REGISTER AND IGNORE EXISTING KEY */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3849:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[1], 0x06, 4, 5); /* REGISTER AND IGNORE EXISTING KEY */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3877:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[1], 0x01, 4, 5); /* RESERVE */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3878:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cdb[2], 0x00, 7, 4); /* LU_SCOPE */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3879:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cdb[2], 0x03, 3, 4); /* ISTGT_LU_PR_TYPE_EXCLUSIVE_ACCESS */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:3879:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cdb[2], 0x03, 3, 4); /* ISTGT_LU_PR_TYPE_EXCLUSIVE_ACCESS */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4318:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8(&cp[0], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4319:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cp[0], resp_code, 6, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4319:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cp[0], resp_code, 6, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4323:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cp[2], sk, 3, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4387:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8(&cp[0], 1, 7);
        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4388:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cp[0], resp_code, 6, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4388:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&cp[0], resp_code, 6, 7);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4392:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&cp[2], sk, 3, 4);
        ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4823:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], 0x03, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4824:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:4824:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:5398:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], 0x03, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:5399:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:5399:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_disk.c:5550:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[4], 7, 4);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5551:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        loej = BGET8(&cdb[4], 1);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5552:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        start = BGET8(&cdb[4], 0);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5592:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                switch (BGET8W(&cdb[1], 4, 5)) { /* SERVICE ACTION */
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5641:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5642:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5705:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5706:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5735:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llba = BGET8(&data[4], 0);  /* Long LBA */
                               ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5781:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5782:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5783:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5830:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llbaa = BGET8(&cdb[1], 4);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5831:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5832:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5833:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5878:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        desc = BGET8(&cdb[1], 0);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5974:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5975:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:5976:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6010:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6011:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6012:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6046:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6047:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6048:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6117:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6118:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6119:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6154:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6155:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6156:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6191:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6192:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6193:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6221:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6222:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        bytchk = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6245:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6246:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        bytchk = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6269:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6270:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        bytchk = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6299:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wprotect = BGET8W(&cdb[1], 7, 3);
                                   ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6300:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pbdata = BGET8(&cdb[1], 2);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6301:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        lbdata = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6304:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        group_no = BGET8W(&cdb[6], 4, 5);
                                   ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6348:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wprotect = BGET8W(&cdb[1], 7, 3);
                                   ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6349:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        anchor = BGET8(&cdb[1], 4);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6350:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        unmap = BGET8(&cdb[1], 3);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6351:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pbdata = BGET8(&cdb[1], 2);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6352:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        lbdata = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6355:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        group_no = BGET8W(&cdb[14], 4, 5);
                                   ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6412:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wprotect = BGET8W(&cdb[1], 7, 3);
                                   ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6413:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6414:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6415:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua_nv = BGET8(&cdb[1], 1);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6418:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        group_no = BGET8W(&cdb[14], 4, 5);
                                   ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6457:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sync_nv = BGET8(&cdb[1], 2);
                                  ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6458:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        immed = BGET8(&cdb[1], 1);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6491:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sync_nv = BGET8(&cdb[1], 2);
                                  ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6492:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        immed = BGET8(&cdb[1], 1);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6515:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                switch (BGET8W(&cdb[1], 4, 5)) { /* SERVICE ACTION */
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6543:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                            BGET8W(&cdb[1], 4, 5));
                            ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_log.h:66:10: note: expanded from macro 'ISTGT_TRACELOG'
                                                   __VA_ARGS__);                                                                \
                                                   ^~~~~~~~~~~
istgt_lu_disk.c:6553:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                switch (BGET8W(&cdb[1], 4, 5)) { /* SERVICE ACTION */
                        ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6606:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                            BGET8W(&cdb[1], 4, 5));
                            ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_log.h:66:10: note: expanded from macro 'ISTGT_TRACELOG'
                                                   __VA_ARGS__);                                                                \
                                                   ^~~~~~~~~~~
istgt_lu_disk.c:6625:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sa = BGET8W(&cdb[1], 4, 5);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6658:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sa = BGET8W(&cdb[1], 4, 5);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6659:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        scope = BGET8W(&cdb[2], 7, 4);
                                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_disk.c:6660:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        type = BGET8W(&cdb[2], 3, 4);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
271 warnings generated.
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu_dvd.o istgt_lu_dvd.c
istgt_lu_dvd.c:698:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        evpd = BGET8(&cdb[1], 0);
               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:704:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:705:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:705:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:729:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:730:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:730:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:752:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:753:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:753:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:765:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:766:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:766:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:768:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 0, 7, 1); /* PIV=0 */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:769:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:769:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:770:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:770:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:792:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:793:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:793:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:795:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 0, 7, 1); /* PIV=0 */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:796:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:796:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:797:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:797:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:823:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:824:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:824:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:826:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:827:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_DEVICE, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:827:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_DEVICE, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:828:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:828:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:846:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:847:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:847:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:849:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:850:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:850:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:851:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:851:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:870:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:871:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:871:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:873:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:874:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:874:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:875:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:875:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:899:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:900:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:900:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:902:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:903:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:903:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:904:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_TARGET_PORT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:904:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_TARGET_PORT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:926:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:927:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:927:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:929:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:930:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:930:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:931:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_LOGICAL_UNIT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:931:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_LOGICAL_UNIT_GROUP,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:957:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:958:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:958:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:983:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:984:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:984:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1019:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1020:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1020:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1031:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0x3f, 5, 6);    /* all page code */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1036:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[2], 0, 7); /* own copy */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1037:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1037:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1054:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1055:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1055:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1094:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1095:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1095:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1097:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[1], 1, 7, 1); /* PIV */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1098:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1098:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1099:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1099:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1138:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[0], pq, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1139:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1139:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1141:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[1], rmb, 7, 1);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1146:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[3], 2, 3, 4);             /* format 2 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1147:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[1], 1, 4);         /* hierarchical support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1147:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[1], 1, 4);         /* hierarchical support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1266:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 7); /* PS */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1266:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 7); /* PS */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1267:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 2); /* WCE */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1267:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 2); /* WCE */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1270:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 2); /* WCE=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1270:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 2); /* WCE=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1272:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 2); /* WCE=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1272:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 2); /* WCE=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1275:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 0); /* RCD=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1275:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 0); /* RCD=1 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1277:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 0); /* RCD=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1277:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 0); /* RCD=0 */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1354:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 3); /* DVD-ROM read */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1354:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 3); /* DVD-ROM read */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1422:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[2], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1422:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[2], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1496:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[3], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1496:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[3], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1503:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 1, 1);      /* Long LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1505:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 0, 1);      /* Short LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1594:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        ps = BGET8(&data[0], 7);
             ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1595:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        spf = BGET8(&data[0], 6);
              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1633:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wce = BGET8(&data[2], 2); /* WCE */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1634:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        rcd = BGET8(&data[2], 0); /* RCD */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1684:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0, 5, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1685:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 1);                     /* Persistent=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1686:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 0);                     /* Current=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1694:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&cp[2], 0);               /* CurrentP(0)=1 */
                        ^~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1703:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&cp[2], 0);               /* CurrentP(0)=1 */
                        ^~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1716:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x01, 5, 4); /* MMC4 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1717:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 1);                     /* Persistent=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1718:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 0);                     /* Current=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1724:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[8], 0);                     /* DBE=0*/
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1724:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[8], 0);                     /* DBE=0*/
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1734:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x01, 5, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1735:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 1);                     /* Persistent=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1736:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 0);                     /* Current=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1740:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[4], 0x01, 7, 3); /* Tray type loading mechanism */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1741:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[4], 3);                     /* eject via START/STOP YES */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1742:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[4], 0);                     /* locking YES */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1752:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x00, 5, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1753:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 1);                     /* Persistent=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1754:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 0);                     /* Current=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1762:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[10], 0);            /* PP=0 */
                ^~~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1762:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[10], 0);            /* PP=0 */
                ^~~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1772:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x00, 5, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1773:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 1);                     /* Persistent=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1774:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[2], 0);                     /* Current=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1785:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x02, 5, 4); /* MMC4 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1786:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[2], 1);                     /* Persistent=0 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1786:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[2], 1);                     /* Persistent=0 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1788:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[2], 0);             /* Current=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1790:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BCLR8(&data[2], 0);             /* Current=0 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1790:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BCLR8(&data[2], 0);             /* Current=0 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1795:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 7);             /* not support DAP */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1795:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 7);             /* not support DAP */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1796:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 1);             /* not support C2 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1796:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 1);             /* not support C2 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1797:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 0);             /* not support CD-Text */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1797:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[4], 0);             /* not support CD-Text */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1807:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x00, 5, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1808:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[2], 1);                     /* Persistent=0 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1808:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BCLR8(&data[2], 1);                     /* Persistent=0 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1810:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[2], 0);             /* Current=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1812:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BCLR8(&data[2], 0);             /* Current=0 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:58: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1812:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BCLR8(&data[2], 0);             /* Current=0 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:138:21: note: expanded from macro 'BCLR8'
#define BCLR8(B,N) (BCLR8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:132:71: note: expanded from macro 'BCLR8W'
#define BCLR8W(B,N,W) (*((uint8_t *)(B)) &= (uint8_t) (~(BMASKW((W))) << BSHIFTNW((N),(W))))
                                                       ~~~~~~~~~~~~~~ ^
istgt_lu_dvd.c:1858:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        if (BGET8(&cp[2], 0) == 1) {
                            ^~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:1906:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x01, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1908:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1910:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&cp[1], 0, 7);                   /* not prevented */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1911:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1911:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1919:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x02, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1921:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1933:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x03, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1935:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1937:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&cp[1], 0, 7);                   /* not prevented */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1938:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);               /* Ready */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1938:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);               /* Ready */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1946:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x04, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1956:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp[0], 0x02, 3, 4);    /* NewMedia */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1959:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8(&cp[1], 1, 1);                   /* media present */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1960:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 0, 0);                   /* tray close */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1960:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 0, 0);                   /* tray close */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1963:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp[0], 0x03, 3, 4);    /* MediaRemoval */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1966:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8(&cp[1], 0, 1);                   /* media absent */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1967:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 1, 0);                   /* tray open */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1967:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 1, 0);                   /* tray open */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1973:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp[0], 0x01, 3, 4);    /* EjectRequest */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1976:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8(&cp[1], 0, 1);                   /* media absent */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1977:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 1, 0);                   /* tray open */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1977:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8(&cp[1], 1, 0);                   /* tray open */
                                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1981:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1984:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDSET8(&cp[1], 1, 1);                   /* media present */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1985:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[1], 0, 0);                   /* tray close */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1985:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[1], 0, 0);                   /* tray close */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1988:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1991:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDSET8(&cp[1], 0, 1);                   /* media absent */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1992:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[1], 0, 0);                   /* tray close */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:1992:6: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                        BDADD8(&cp[1], 0, 0);                   /* tray close */
                                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2005:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x05, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2007:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2009:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&cp[1], 0, 7);                   /* not prevented */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2010:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);               /* Ready */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2010:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0, 3, 4);               /* Ready */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2018:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], 0x06, 2, 3);  /* Notification Class */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2020:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 3, 4);    /* NoChg */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2036:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[2], 0, 7);                 /* NEA=1 */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2055:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8(&data[0], 0, 7);
        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2056:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[0], 0x00, 6, 2);          /* Ready */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2056:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[0], 0x00, 6, 2);          /* Ready */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2057:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[0], (selected_slot & 0x1f), 4, 5); /* slot low bits */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2057:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[0], (selected_slot & 0x1f), 4, 5); /* slot low bits */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2059:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8W(&data[1], 0x00, 7, 3);          /* Idle */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2060:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[1], (selected_slot & 0xe0) >> 5, 2, 3); /* slot high bits */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2060:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[1], (selected_slot & 0xe0) >> 5, 2, 3); /* slot high bits */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2076:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[0], 1, 7);                   /* disc in slot */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2079:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[0], 0, 7);                   /* no disc in slot */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2081:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 0);                           /* disc changed */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2081:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 1, 0);                           /* disc changed */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2085:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[0], 1, 7);                   /* disc in slot */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2088:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[0], 0, 7);                   /* no disc in slot */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2090:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 0, 0);                           /* disc not changed */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2090:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[0], 0, 0);                           /* disc not changed */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2093:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDSET8(&cp[1], 0, 1);                           /* non Cartridge Write Protection */
        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2094:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&cp[1], 0, 0);                           /* CWP=0 */
        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2094:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8(&cp[1], 0, 0);                           /* CWP=0 */
        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2352:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], datatype, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2353:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0, 4, 1);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2353:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0, 4, 1);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2354:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0x03, 3, 2);  /* Complete Session */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2354:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0x03, 3, 2);  /* Complete Session */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2355:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0x02, 1, 2);  /* Finalized Disc */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2355:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[2], 0x02, 1, 2);  /* Finalized Disc */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2365:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[7], 0, 7);                 /* Disc ID Valid */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2366:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 0, 6);                 /* Disc Bar Code Valid */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2366:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 0, 6);                 /* Disc Bar Code Valid */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2367:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 1, 5);                 /* Unrestricted Use Disc */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2367:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 1, 5);                 /* Unrestricted Use Disc */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2368:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 0, 4);                 /* Disc Application Code Valid */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2368:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[7], 0, 4);                 /* Disc Application Code Valid */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2369:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[7], 0, 1, 2);             /* BG Format Status */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2369:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[7], 0, 1, 2);             /* BG Format Status */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2404:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], datatype, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2427:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[2], datatype, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2478:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 7, 4);    /* DVD-ROM */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2479:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 0x01, 3, 4);    /* part 1 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2479:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 0x01, 3, 4);    /* part 1 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2481:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[1], 0x00, 7, 4);    /* 120mm */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2482:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0x0f, 3, 4);    /* Not Specified */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2482:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[1], 0x0f, 3, 4);    /* Not Specified */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2484:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[2], 0x00, 6, 2);    /* one layer */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2485:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[2], 0x00, 4, 1);    /* Parallel Track Path */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2485:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[2], 0x00, 4, 1);    /* Parallel Track Path */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2486:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[2], 0x00, 3, 4);    /* embossed data */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2486:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[2], 0x00, 3, 4);    /* embossed data */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2488:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[3], 0x00, 7, 4);    /* 0.267 um/bit */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2489:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[3], 0x00, 3, 4);    /* 0.74 um/track */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2489:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[3], 0x00, 3, 4);    /* 0.74 um/track */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2497:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&cp[16], 0, 7);
                ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2569:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&cp[0], 0x00, 7, 2);    /* No Drive region setting */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2571:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 4, 5, 3);               /* # of vendor */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2571:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 4, 5, 3);               /* # of vendor */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2572:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 5, 2, 3);               /* # of user */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2572:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[0], 5, 2, 3);               /* # of user */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2933:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], 0x03, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2934:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:2934:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_dvd.c:3070:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[4], 7, 4);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3071:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fl = BGET8(&cdb[4], 2);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3072:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        loej = BGET8(&cdb[4], 1);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3073:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        start = BGET8(&cdb[4], 0);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3137:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        persistent = BGET8(&cdb[4], 1);
                                     ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3138:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        prevent = BGET8(&cdb[4], 0);
                                  ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3198:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3199:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3240:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3241:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3259:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llba = BGET8(&data[4], 0);  /* Long LBA */
                               ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3294:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3295:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3296:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3332:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llbaa = BGET8(&cdb[1], 4);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3333:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3334:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3335:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3381:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        desc = BGET8(&cdb[1], 0);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3454:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        rt = BGET8W(&cdb[1], 1, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3497:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        polled = BGET8(&cdb[1], 0);
                                 ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3545:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dt = BGET8W(&cdb[1], 4, 5);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3604:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        msf = BGET8(&cdb[1], 1);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3605:13: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        format = BGET8W(&cdb[2], 3, 4);
                                 ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3647:15: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        datatype = BGET8W(&cdb[1], 2, 3);
                                   ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3688:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        mediatype = BGET8W(&cdb[1], 3, 4);
                                    ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3691:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        agid = BGET8W(&cdb[10], 7, 2);
                               ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3749:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        agid = BGET8W(&cdb[10], 7, 2);
                               ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3750:16: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        keyformat = BGET8W(&cdb[10], 5, 6);
                                    ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3806:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3807:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3840:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dpo = BGET8(&cdb[1], 4);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_dvd.c:3841:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fua = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
298 warnings generated.
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu_tape.o istgt_lu_tape.c
istgt_lu_tape.c:489:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) data;
              ^~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:554:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) data;
              ^~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:616:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) data;
              ^~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:1579:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        evpd = BGET8(&cdb[1], 0);
               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:1585:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1586:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1586:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1629:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1630:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1630:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1652:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1653:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1653:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1665:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1666:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_ASCII, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1666:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_ASCII, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1668:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 0, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1669:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1669:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1670:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1670:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_T10_VENDOR_ID, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1693:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1696:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1696:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1698:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1699:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1699:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_LOGICAL_UNIT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1700:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1700:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1718:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1721:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1721:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1723:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1724:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1724:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1725:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1725:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_NAA, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1743:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0, 7, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1746:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1746:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[0], SPC_VPD_CODE_SET_BINARY, 3, 4);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1748:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[1], 1, 7, 1); /* PIV */
                        ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1749:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1749:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1750:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1750:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[1], SPC_VPD_IDENTIFIER_TYPE_RELATIVE_TARGET_PORT,
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1968:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1969:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1969:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1994:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1995:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:1995:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2030:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2031:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2031:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2042:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&cp[0], 0x3f, 5, 6);    /* all page code */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2047:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8(&cp[2], 0, 7); /* own copy */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2048:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2048:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&cp[2], 0x00, 1, 2); /* Shared */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2065:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2066:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2066:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2105:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[0], SPC_PROTOCOL_IDENTIFIER_ISCSI, 7, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2106:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2106:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[0], SPC_VPD_CODE_SET_UTF8, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2108:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDSET8W(&cp2[1], 1, 7, 1); /* PIV */
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2109:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2109:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_ASSOCIATION_TARGET_PORT, 5, 2);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2110:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2110:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                                BDADD8W(&cp2[1], SPC_VPD_IDENTIFIER_TYPE_SCSI_NAME, 3, 4);
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2141:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2142:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2142:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2161:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2162:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2162:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2185:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2186:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2186:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2204:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], pq, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2205:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2205:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], pd, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2237:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[0], pq, 7, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2238:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2238:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&data[0], pd, 4, 5);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2240:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[1], rmb, 7, 1);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2245:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[3], 2, 3, 4);             /* format 2 */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2268:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[36], 11, 7, 4); /* 40/80GB */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2269:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8W(&data[36], 1, 3, 4); /* Vxxx firmware */
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2409:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 7);   /* DCE=1 compression enable */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2409:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 1, 7);   /* DCE=1 compression enable */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2411:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 7);   /* DCE=0 compression disable */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2411:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&cp[2], 0, 7);   /* DCE=0 compression disable */
                        ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2414:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 6);       /* DCC=1 support compression */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2414:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[2], 1, 6);       /* DCC=1 support compression */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2415:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[3], 1, 7);       /* DDE=1 decompression enable */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2415:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&cp[3], 1, 7);       /* DDE=1 decompression enable */
                ^~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2416:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[3], 0, 6, 2);   /* RED=0 not support */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2416:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8W(&cp[3], 0, 6, 2);   /* RED=0 not support */
                ^~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2440:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[8], 0, 5); /* report setmarks not support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2440:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[8], 0, 5); /* report setmarks not support */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2442:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[8], 1, 6);
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2442:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[8], 1, 6);
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2444:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[10], 1, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2444:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[10], 1, 4);
                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2445:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[10], 1, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2445:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDADD8(&data[10], 1, 3);
                ^~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2578:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[2], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2578:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[2], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2584:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[2], 1, 6, 3);             /* Buffed Mode=1 */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2584:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[2], 1, 6, 3);             /* Buffed Mode=1 */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2655:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[3], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2655:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8(&data[3], 1, 7);     /* WP */
                        ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:136:24: note: expanded from macro 'BDADD8'
#define BDADD8(B,D,N) (BDADD8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2661:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[3], 1, 6, 3);             /* Buffed Mode=1 */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2661:2: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        BDADD8W(&data[3], 1, 6, 3);             /* Buffed Mode=1 */
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2663:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 1, 1);      /* Long LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2665:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BDSET8(&data[4], 0, 1);      /* Short LBA */
                ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:135:24: note: expanded from macro 'BDSET8'
#define BDSET8(B,D,N) (BDSET8W((B),(D),(N),1))
                       ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:2754:7: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        ps = BGET8(&data[0], 7);
             ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:2755:8: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
        spf = BGET8(&data[0], 6);
              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:2796:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dce = BGET8(&data[2], 7); /* DCE */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:2797:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dde = BGET8(&data[3], 7); /* DDE */
                              ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:2798:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        red = BGET8W(&data[3], 6, 2); /* RED */
                              ^~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3150:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) data;
              ^~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:3535:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[0], 7);      /* BOP=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3538:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[0], 6);      /* EOP=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3541:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[0], 5);         /* LOCU=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3543:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[0], 4);         /* BYCU=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3547:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[0], 0);     /* PERR=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3570:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[0], 7);      /* BOP=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3573:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&data[0], 6);      /* EOP=1 */
                        ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3577:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&data[0], 3);         /* MPU=1 */
                ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3626:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&cp[2], 7); /* FILEMARK=1 */
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3629:3: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                BSET8(&cp[2], 6); /* EOM=1 */
                ^~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:3713:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) lu_cmd->iobuf;
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:3846:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) lu_cmd->iobuf;
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:3934:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BSET8(&lu_cmd->sense_data[2+2], 5); /* ILI=1 */
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:137:21: note: expanded from macro 'BSET8'
#define BSET8(B,N) (BSET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:131:56: note: expanded from macro 'BSET8W'
#define BSET8W(B,N,W) (*((uint8_t *)(B)) |= (uint8_t) (BMASKW((W))) << BSHIFTNW((N),(W)))
                                                       ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4003:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) lu_cmd->iobuf;
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:4131:8: warning: cast from 'uint8_t *' (aka 'unsigned char *') to 'tape_markblock_t *' (aka 'struct tape_markblock_t *') increases required alignment from 1 to 8 [-Wcast-align]
        mbp = (tape_markblock_t *) lu_cmd->iobuf;
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
istgt_lu_tape.c:4353:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDSET8W(&data[0], 0x03, 7, 3);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:129:42: note: expanded from macro 'BDSET8W'
#define BDSET8W(B,D,N,W) DSET8((B),(((D)&BMASKW((W)))<<BSHIFTNW((N),(W))))
                                         ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:4354:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:53: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                    ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:4354:4: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        BDADD8W(&data[0], 0x1f, 4, 5);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:130:108: note: expanded from macro 'BDADD8W'
#define BDADD8W(B,D,N,W) DSET8((B),((DGET8((B)) & ~(BMASKW((W)) << BSHIFTNW((N),(W)))) | (uint8_t) (((D) & BMASKW((W))) << BSHIFTNW((N),(W)))))
                                                                                                           ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
./istgt_misc.h:38:52: note: expanded from macro 'DSET8'
#define DSET8(B,D)  (*((uint8_t *)(B)) = (uint8_t)(D))
                                                   ^
istgt_lu_tape.c:4503:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        hold = BGET8(&cdb[4], 3);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4504:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        eot = BGET8(&cdb[4], 2);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4505:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        reten = BGET8(&cdb[4], 1);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4506:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        load = BGET8(&cdb[4], 0);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4570:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        persistent = BGET8(&cdb[4], 1);
                                     ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4571:14: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        prevent = BGET8(&cdb[4], 0);
                                  ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4634:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4635:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4682:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pf = BGET8(&cdb[1], 4);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4683:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sp = BGET8(&cdb[1], 0);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4701:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llba = BGET8(&data[4], 0);  /* Long LBA */
                               ^~~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4748:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4749:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4750:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4786:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        llbaa = BGET8(&cdb[1], 4);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4787:10: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        dbd = BGET8(&cdb[1], 3);
                              ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4788:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        pc = BGET8W(&cdb[2], 7, 2);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4789:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        page = BGET8W(&cdb[2], 5, 6);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4848:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        desc = BGET8(&cdb[1], 0);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4922:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        xlong = BGET8(&cdb[1], 0);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:4970:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        code = BGET8W(&cdb[1], 3, 4);
                               ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5002:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        wsmk = BGET8(&cdb[1], 1);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5109:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sa = BGET8W(&cdb[1], 4, 5);
                             ^~~~~~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5147:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        bt = BGET8(&cdb[1], 2);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5148:9: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        cp = BGET8(&cdb[1], 1);
                             ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5193:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sili = BGET8(&cdb[1], 1);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5194:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fixed = BGET8(&cdb[1], 0);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5313:11: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        sili = BGET8(&cdb[1], 1);
                               ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
istgt_lu_tape.c:5314:12: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
                        fixed = BGET8(&cdb[1], 0);
                                ^~~~~~~~~~~~~~~~~
./istgt_misc.h:139:21: note: expanded from macro 'BGET8'
#define BGET8(B,N) (BGET8W((B),(N),1))
                    ^~~~~~~~~~~~~~~~~
./istgt_misc.h:133:67: note: expanded from macro 'BGET8W'
#define BGET8W(B,N,W) ((*((uint8_t *)(B)) >> BSHIFTNW((N),(W))) & BMASKW((W)))
                                                                  ^~~~~~~~~~~
./istgt_misc.h:127:40: note: expanded from macro 'BMASKW'
#define BMASKW(W) (((W) > 0) ? (~((~0) << (W))) : 0)
                                  ~~~~ ^
169 warnings generated.
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu_pass.o istgt_lu_pass.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_lu_ctl.o istgt_lu_ctl.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_log.o istgt_log.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_conf.o istgt_conf.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_sock.o istgt_sock.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_misc.o istgt_misc.c
istgt_misc.c:597:2: warning: implicit declaration of function 'pthread_yield' is invalid in C99 [-Wimplicit-function-declaration]
        pthread_yield();
        ^
1 warning generated.
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_queue.o istgt_queue.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_crc32c.o istgt_crc32c.c
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgt_md5.o istgt_md5.c
gcc -Wl,-z,relro -o istgt istgt.o istgt_iscsi.o istgt_iscsi_param.o istgt_lu.o istgt_lu_disk.o istgt_lu_dvd.o istgt_lu_tape.o istgt_lu_pass.o istgt_lu_ctl.o istgt_log.o istgt_conf.o istgt_sock.o istgt_misc.o istgt_queue.o istgt_crc32c.o istgt_md5.o -lcrypto -lpthread 
gcc -DHAVE_CONFIG_H -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wall -DDEBUG -fno-strict-aliasing -Wstrict-aliasing -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wredundant-decls -Wshadow -Wstrict-prototypes -Wwrite-strings -Wdate-time -D_FORTIFY_SOURCE=2 -I.. -I. -c -o istgtcontrol.o istgtcontrol.c
gcc -Wl,-z,relro -o istgtcontrol istgtcontrol.o istgt_conf.o istgt_sock.o istgt_misc.o istgt_md5.o -lcrypto -lpthread  
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[2]: Entering directory '/<<PKGBUILDDIR>>/etc'
/bin/sed -e 's:%%SYSCONFDIR%%:/etc:g' \
	-e 's:%%CONFIGDIR%%:/etc/istgt:g' \
	-e 's:%%MEDIADIR%%:/var/istgt:g' < istgt.large.conf.in > istgt.large.conf
/bin/sed -e 's:%%SYSCONFDIR%%:/etc:g' \
	-e 's:%%CONFIGDIR%%:/etc/istgt:g' \
	-e 's:%%MEDIADIR%%:/var/istgt:g' < istgt.conf.in > istgt.conf
/bin/sed -e 's:%%SYSCONFDIR%%:/etc:g' \
	-e 's:%%CONFIGDIR%%:/etc/istgt:g' \
	-e 's:%%MEDIADIR%%:/var/istgt:g' \
	-e 's:%%BINDIR%%:/usr/bin:g' < istgt.sh.in > istgt.sh
make[2]: Leaving directory '/<<PKGBUILDDIR>>/etc'
make[2]: Entering directory '/<<PKGBUILDDIR>>/doc'
/bin/sed -e 's:%%PREFIX%%:/usr:g' \
	-e 's:%%CONFIGDIR%%:/etc/istgt:g' \
	-e 's:%%MEDIADIR%%:/var/istgt:g' <  istgt.1.in > istgt.1
/bin/sed -e 's:%%PREFIX%%:/usr:g' \
	-e 's:%%CONFIGDIR%%:/etc/istgt:g' \
	-e 's:%%MEDIADIR%%:/var/istgt:g' <  istgtcontrol.1.in > istgtcontrol.1
make[2]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_auto_test
dh_auto_test: warning: Compatibility levels before 9 are deprecated (level 8 in use)
 fakeroot debian/rules binary
dh binary
dh: warning: Compatibility levels before 9 are deprecated (level 8 in use)
   dh_testroot
   dh_prep
	rm -f -- debian/istgt.substvars
	rm -fr -- debian/.debhelper/generated/istgt/ debian/istgt/ debian/tmp/
   dh_auto_install
dh_auto_install: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt
	make -j1 install DESTDIR=/<<BUILDDIR>>/istgt-0.4\~20111008/debian/istgt AM_UPDATE_INFO_DIR=no
make[1]: Entering directory '/<<PKGBUILDDIR>>'
for subdir in src etc doc; do \
          (cd $subdir; make install) || exit $?; \
done
make[2]: Entering directory '/<<PKGBUILDDIR>>/src'
mkdir -p /<<PKGBUILDDIR>>/debian/istgt/usr/sbin
install -c -m 0755 istgt /<<PKGBUILDDIR>>/debian/istgt/usr/sbin
install -c -m 0755 istgtcontrol /<<PKGBUILDDIR>>/debian/istgt/usr/sbin
make[2]: Leaving directory '/<<PKGBUILDDIR>>/src'
make[2]: Entering directory '/<<PKGBUILDDIR>>/etc'
mkdir -p /<<PKGBUILDDIR>>/debian/istgt/etc/istgt
mkdir -p /<<PKGBUILDDIR>>/debian/istgt/etc/rc.d
install -c -m 0644 istgt.conf /<<PKGBUILDDIR>>/debian/istgt/etc/istgt/istgt.conf.sample
install -c -m 0644 istgt.large.conf \
/<<PKGBUILDDIR>>/debian/istgt/etc/istgt/istgt.large.conf.sample
install -c -m 0600 auth.conf /<<PKGBUILDDIR>>/debian/istgt/etc/istgt/auth.conf.sample
install -c -m 0600 istgtcontrol.conf \
/<<PKGBUILDDIR>>/debian/istgt/etc/istgt/istgtcontrol.conf.sample
install -c -m 0555 istgt.sh /<<PKGBUILDDIR>>/debian/istgt/etc/rc.d/istgt
make[2]: Leaving directory '/<<PKGBUILDDIR>>/etc'
make[2]: Entering directory '/<<PKGBUILDDIR>>/doc'
mkdir -p /<<PKGBUILDDIR>>/debian/istgt/usr/man/man1
set -e
for file in  istgt.1  istgtcontrol.1 ; \
do \
	install -c -m 0644 $file /<<PKGBUILDDIR>>/debian/istgt/usr/man/man1/ ; \
	rm -f /<<PKGBUILDDIR>>/debian/istgt/usr/man/man1/$file.gz ; \
	gzip -9 /<<PKGBUILDDIR>>/debian/istgt/usr/man/man1/$file ; \
done
make[2]: Leaving directory '/<<PKGBUILDDIR>>/doc'
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   debian/rules override_dh_install
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_install
dh_install: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/.debhelper/generated/istgt
rm -f debian/istgt/etc/rc.d/istgt
rmdir debian/istgt/etc/rc.d
rm -f debian/istgt/usr/man/man1/istgt*.gz
rmdir debian/istgt/usr/man/man1 debian/istgt/usr/man
rm -f debian/istgt/etc/istgt/*.conf.sample
install -m 0644 -t debian/istgt/etc/istgt debian/README.configuration
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_installdocs
dh_installdocs: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt/usr/share/doc/istgt
	cp --reflink=auto -a ./README debian/istgt/usr/share/doc/istgt
	chown -R 0:0 debian/istgt/usr/share/doc
	chmod -R u\+rw,go=rX debian/istgt/usr/share/doc
	install -p -m0644 debian/copyright debian/istgt/usr/share/doc/istgt/copyright
   dh_installchangelogs
dh_installchangelogs: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -p -m0644 debian/changelog debian/istgt/usr/share/doc/istgt/changelog.Debian
   dh_installexamples
dh_installexamples: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt/usr/share/doc/istgt/examples
	cp --reflink=auto -a ./etc/auth.conf debian/istgt/usr/share/doc/istgt/examples
	cp --reflink=auto -a ./etc/istgt.conf debian/istgt/usr/share/doc/istgt/examples
	cp --reflink=auto -a ./etc/istgt.large.conf debian/istgt/usr/share/doc/istgt/examples
	cp --reflink=auto -a ./etc/istgtcontrol.conf debian/istgt/usr/share/doc/istgt/examples
   dh_installman
dh_installman: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt/usr/share/man/man1/
	install -p -m0644 ./doc/istgt.1 debian/istgt/usr/share/man/man1/istgt.1
	install -p -m0644 ./doc/istgtcontrol.1 debian/istgt/usr/share/man/man1/istgtcontrol.1
	man-recode --to-code UTF-8 --suffix .dh-new debian/istgt/usr/share/man/man1/istgtcontrol.1
	man-recode --to-code UTF-8 --suffix .dh-new debian/istgt/usr/share/man/man1/istgt.1
	mv debian/istgt/usr/share/man/man1/istgtcontrol.1.dh-new debian/istgt/usr/share/man/man1/istgtcontrol.1
	chmod 0644 -- debian/istgt/usr/share/man/man1/istgtcontrol.1
	mv debian/istgt/usr/share/man/man1/istgt.1.dh-new debian/istgt/usr/share/man/man1/istgt.1
	chmod 0644 -- debian/istgt/usr/share/man/man1/istgt.1
   debian/rules override_dh_installinit
make[1]: Entering directory '/<<PKGBUILDDIR>>'
dh_installinit --no-start
dh_installinit: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt/etc/init.d
	install -p -m0755 debian/init debian/istgt/etc/init.d/istgt
	[META] Append autosnippet "postinst-init-nostart" to postinst [debian/.debhelper/generated/istgt/postinst.service]
	[META] Append autosnippet "postrm-init" to postrm [debian/.debhelper/generated/istgt/postrm.service]
make[1]: Leaving directory '/<<PKGBUILDDIR>>'
   dh_perl
   dh_link
   dh_strip_nondeterminism
   dh_compress
dh_compress: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	cd debian/istgt
	chmod a-x usr/share/doc/istgt/README usr/share/doc/istgt/changelog.Debian usr/share/doc/istgt/examples/istgt.conf usr/share/doc/istgt/examples/istgt.large.conf usr/share/man/man1/istgt.1 usr/share/man/man1/istgtcontrol.1
	gzip -9nf usr/share/doc/istgt/README usr/share/doc/istgt/changelog.Debian usr/share/doc/istgt/examples/istgt.conf usr/share/doc/istgt/examples/istgt.large.conf usr/share/man/man1/istgt.1 usr/share/man/man1/istgtcontrol.1
	cd '/<<PKGBUILDDIR>>'
   dh_fixperms
	find debian/istgt -true -print0 2>/dev/null | xargs -0r chown --no-dereference 0:0
	find debian/istgt ! -type l -a -true -a -true -print0 2>/dev/null | xargs -0r chmod go=rX,u+rw,a-s
	find debian/istgt/usr/share/doc -type f -a -true -a ! -regex 'debian/istgt/usr/share/doc/[^/]*/examples/.*' -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/istgt/usr/share/doc -type d -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0755
	find debian/istgt/usr/share/man -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/istgt -type f \( -name '*.so.*' -o -name '*.so' -o -name '*.la' -o -name '*.a' -o -name '*.js' -o -name '*.css' -o -name '*.scss' -o -name '*.sass' -o -name '*.jpeg' -o -name '*.jpg' -o -name '*.png' -o -name '*.gif' -o -name '*.cmxs' -o -name '*.node' \) -a -true -a -true -print0 2>/dev/null | xargs -0r chmod 0644
	find debian/istgt/usr/sbin debian/istgt/etc/init.d -type f -a -true -a -true -print0 2>/dev/null | xargs -0r chmod a+x
   dh_missing
dh_missing: warning: Compatibility levels before 9 are deprecated (level 8 in use)
   dh_strip
dh_strip: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/52
	objcopy --only-keep-debug --compress-debug-sections debian/istgt/usr/sbin/istgtcontrol debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/52/44700d032f7f98f4d51aff99caf90f39284088.debug
	chmod 0644 -- debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/52/44700d032f7f98f4d51aff99caf90f39284088.debug
	chown 0:0 -- debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/52/44700d032f7f98f4d51aff99caf90f39284088.debug
	strip --remove-section=.comment --remove-section=.note debian/istgt/usr/sbin/istgtcontrol
	objcopy --add-gnu-debuglink debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/52/44700d032f7f98f4d51aff99caf90f39284088.debug debian/istgt/usr/sbin/istgtcontrol
	install -d debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/5a
	objcopy --only-keep-debug --compress-debug-sections debian/istgt/usr/sbin/istgt debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/5a/2941071ab471558284b0ec4f6b11be51ba22b8.debug
	chmod 0644 -- debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/5a/2941071ab471558284b0ec4f6b11be51ba22b8.debug
	chown 0:0 -- debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/5a/2941071ab471558284b0ec4f6b11be51ba22b8.debug
	strip --remove-section=.comment --remove-section=.note debian/istgt/usr/sbin/istgt
	objcopy --add-gnu-debuglink debian/.debhelper/istgt/dbgsym-root/usr/lib/debug/.build-id/5a/2941071ab471558284b0ec4f6b11be51ba22b8.debug debian/istgt/usr/sbin/istgt
	install -d debian/.debhelper/istgt/dbgsym-root/usr/share/doc
	ln -s istgt debian/.debhelper/istgt/dbgsym-root/usr/share/doc/istgt-dbgsym
   dh_makeshlibs
dh_makeshlibs: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	rm -f debian/istgt/DEBIAN/shlibs
   dh_shlibdeps
dh_shlibdeps: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	install -d debian/istgt/DEBIAN
	dpkg-shlibdeps -Tdebian/istgt.substvars debian/istgt/usr/sbin/istgtcontrol debian/istgt/usr/sbin/istgt
   dh_installdeb
dh_installdeb: warning: Compatibility levels before 9 are deprecated (level 8 in use)
	printf '#!/bin/sh\nset -e\n' > debian/istgt/DEBIAN/postinst
	cat debian/.debhelper/generated/istgt/postinst.service >> debian/istgt/DEBIAN/postinst
	chmod 0755 -- debian/istgt/DEBIAN/postinst
	chown 0:0 -- debian/istgt/DEBIAN/postinst
	printf '#!/bin/sh\nset -e\n' > debian/istgt/DEBIAN/postrm
	cat debian/.debhelper/generated/istgt/postrm.service >> debian/istgt/DEBIAN/postrm
	chmod 0755 -- debian/istgt/DEBIAN/postrm
	chown 0:0 -- debian/istgt/DEBIAN/postrm
	find debian/istgt/etc -type f -printf '/etc/%P
' | LC_ALL=C sort >> debian/istgt/DEBIAN/conffiles
	chmod 0644 -- debian/istgt/DEBIAN/conffiles
	chown 0:0 -- debian/istgt/DEBIAN/conffiles
   dh_gencontrol
	echo misc:Depends= >> debian/istgt.substvars
	echo misc:Pre-Depends= >> debian/istgt.substvars
	install -d debian/.debhelper/istgt/dbgsym-root/DEBIAN
	dpkg-gencontrol -pistgt -ldebian/changelog -Tdebian/istgt.substvars -Pdebian/.debhelper/istgt/dbgsym-root -UPre-Depends -URecommends -USuggests -UEnhances -UProvides -UEssential -UConflicts -DPriority=optional -UHomepage -UImportant -UBuilt-Using -DAuto-Built-Package=debug-symbols -DPackage=istgt-dbgsym "-DDepends=istgt (= \${binary:Version})" "-DDescription=debug symbols for istgt" "-DBuild-Ids=5244700d032f7f98f4d51aff99caf90f39284088 5a2941071ab471558284b0ec4f6b11be51ba22b8" -DSection=debug -UMulti-Arch -UReplaces -UBreaks
	chmod 0644 -- debian/.debhelper/istgt/dbgsym-root/DEBIAN/control
	chown 0:0 -- debian/.debhelper/istgt/dbgsym-root/DEBIAN/control
	dpkg-gencontrol -pistgt -ldebian/changelog -Tdebian/istgt.substvars -Pdebian/istgt -UMulti-Arch
	chmod 0644 -- debian/istgt/DEBIAN/control
	chown 0:0 -- debian/istgt/DEBIAN/control
   dh_md5sums
	cd debian/istgt >/dev/null && xargs -r0 md5sum | perl -pe 'if (s@^\\@@) { s/\\\\/\\/g; }' > DEBIAN/md5sums
	chmod 0644 -- debian/istgt/DEBIAN/md5sums
	chown 0:0 -- debian/istgt/DEBIAN/md5sums
	cd debian/.debhelper/istgt/dbgsym-root >/dev/null && xargs -r0 md5sum | perl -pe 'if (s@^\\@@) { s/\\\\/\\/g; }' > DEBIAN/md5sums
	chmod 0644 -- debian/.debhelper/istgt/dbgsym-root/DEBIAN/md5sums
	chown 0:0 -- debian/.debhelper/istgt/dbgsym-root/DEBIAN/md5sums
   dh_builddeb
	dpkg-deb --build debian/istgt ..
	dpkg-deb --build debian/.debhelper/istgt/dbgsym-root ..
dpkg-deb: building package 'istgt' in '../istgt_0.4~20111008-3_amd64.deb'.
dpkg-deb: building package 'istgt-dbgsym' in '../istgt-dbgsym_0.4~20111008-3_amd64.deb'.
 dpkg-genbuildinfo --build=binary
 dpkg-genchanges --build=binary >../istgt_0.4~20111008-3_amd64.changes
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
--------------------------------------------------------------------------------
Build finished at 2020-02-24T23:41:49Z

Finished
--------

I: Built successfully

+------------------------------------------------------------------------------+
| Changes                                                                      |
+------------------------------------------------------------------------------+


istgt_0.4~20111008-3_amd64.changes:
-----------------------------------

Format: 1.8
Date: Wed, 27 Jun 2012 00:23:23 +0200
Source: istgt
Binary: istgt istgt-dbgsym
Architecture: amd64
Version: 0.4~20111008-3
Distribution: unstable
Urgency: low
Maintainer: GNU/kFreeBSD Maintainers <debian-bsd@lists.debian.org>
Changed-By: Arno Töll <arno@debian.org>
Description:
 istgt      - iSCSI userspace target daemon for Unix-like operating systems
Closes: 650212 679055
Changes:
 istgt (0.4~20111008-3) unstable; urgency=low
 .
   * Fix "cannot determine device size from symlink" Apply patch to use stat()
     instead of lstat(). Thanks Michal Suchanek  (Closes: #650212). I apologize
     for the delay, but I was postponing this decision for a long time, given
     it was rejected by upstream for security concerns. I do not share these.
   * Fix "Add support to reload the istgt.conf file." by merging the excellent
     patch Andrew Ruthven <andrew@etc.gen.nz>. Much appreciated (Closes: #679055)
   * Improve init script:
     + Better support fancy outputs
     + Improve failure toleance of the reload handler
     + Log istgt start output to syslog
Checksums-Sha1:
 7d1ecc1a7e5bd6fcc2c54ca575484ff9b9f2dde3 237628 istgt-dbgsym_0.4~20111008-3_amd64.deb
 2bf0b0cd50b16eeedc96146a969deb7760cef3f6 5234 istgt_0.4~20111008-3_amd64.buildinfo
 f4e7dca9c6d8bc88750603bb087b2d6dd093daf6 134480 istgt_0.4~20111008-3_amd64.deb
Checksums-Sha256:
 33d0e7767ba35c3a0a99a719a7c397bcce2e1570b65c15c04693543d9bfccf19 237628 istgt-dbgsym_0.4~20111008-3_amd64.deb
 726c09e298d3677b388dc0958478245325f75ff888c0be1f208f30b36db51e46 5234 istgt_0.4~20111008-3_amd64.buildinfo
 32fd4160e2624df65054320565b65a105cc81c7077774dd9589ae9f6ca7520ab 134480 istgt_0.4~20111008-3_amd64.deb
Files:
 3b7dfd93ef666046c33d49249fa48841 237628 debug optional istgt-dbgsym_0.4~20111008-3_amd64.deb
 05361baafbb0774c2bfe476e5737d219 5234 admin extra istgt_0.4~20111008-3_amd64.buildinfo
 1d45be25655e20915f81685aa8938b4b 134480 admin extra istgt_0.4~20111008-3_amd64.deb

+------------------------------------------------------------------------------+
| Buildinfo                                                                    |
+------------------------------------------------------------------------------+

Format: 1.0
Source: istgt
Binary: istgt
Architecture: amd64
Version: 0.4~20111008-3
Checksums-Md5:
 3b7dfd93ef666046c33d49249fa48841 237628 istgt-dbgsym_0.4~20111008-3_amd64.deb
 1d45be25655e20915f81685aa8938b4b 134480 istgt_0.4~20111008-3_amd64.deb
Checksums-Sha1:
 7d1ecc1a7e5bd6fcc2c54ca575484ff9b9f2dde3 237628 istgt-dbgsym_0.4~20111008-3_amd64.deb
 f4e7dca9c6d8bc88750603bb087b2d6dd093daf6 134480 istgt_0.4~20111008-3_amd64.deb
Checksums-Sha256:
 33d0e7767ba35c3a0a99a719a7c397bcce2e1570b65c15c04693543d9bfccf19 237628 istgt-dbgsym_0.4~20111008-3_amd64.deb
 32fd4160e2624df65054320565b65a105cc81c7077774dd9589ae9f6ca7520ab 134480 istgt_0.4~20111008-3_amd64.deb
Build-Origin: Debian
Build-Architecture: amd64
Build-Date: Mon, 24 Feb 2020 23:41:49 +0000
Build-Path: /<<PKGBUILDDIR>>
Installed-Build-Depends:
 autoconf (= 2.69-11.1),
 automake (= 1:1.16.1-4),
 autopoint (= 0.19.8.1-10),
 autotools-dev (= 20180224.1),
 base-files (= 11),
 base-passwd (= 3.5.47),
 bash (= 5.0-5),
 binutils (= 2.34-3),
 binutils-common (= 2.34-3),
 binutils-x86-64-linux-gnu (= 2.34-3),
 bsdmainutils (= 11.1.2+b1),
 bsdutils (= 1:2.34-0.1),
 build-essential (= 12.8),
 bzip2 (= 1.0.8-2),
 clang-9 (= 1:9.0.1-8),
 coreutils (= 8.30-3+b1),
 cpp (= 4:9.2.1-3.1),
 cpp-9 (= 9.2.1-29),
 dash (= 0.5.10.2-6),
 debconf (= 1.5.73),
 debhelper (= 12.9),
 debianutils (= 4.9.1),
 dh-autoreconf (= 19),
 dh-strip-nondeterminism (= 1.6.3-2),
 diffutils (= 1:3.7-3),
 dpkg (= 1.19.7),
 dpkg-dev (= 1.19.7),
 dwz (= 0.13-5),
 fdisk (= 2.34-0.1),
 file (= 1:5.38-4),
 findutils (= 4.7.0-1),
 g++ (= 4:9.2.1-3.1),
 g++-9 (= 9.2.1-29),
 gcc (= 4:9.2.1-3.1),
 gcc-10-base (= 10-20200222-1),
 gcc-8-base (= 8.3.0-29),
 gcc-9 (= 9.2.1-29),
 gcc-9-base (= 9.2.1-29),
 gettext (= 0.19.8.1-10),
 gettext-base (= 0.19.8.1-10),
 grep (= 3.4-1),
 groff-base (= 1.22.4-4),
 gzip (= 1.9-3+b1),
 hostname (= 3.23),
 init-system-helpers (= 1.57),
 intltool-debian (= 0.35.0+20060710.5),
 lib32gcc-s1 (= 10-20200222-1),
 lib32gcc1 (= 1:10-20200222-1),
 lib32stdc++6 (= 10-20200222-1),
 libacl1 (= 2.2.53-5),
 libarchive-zip-perl (= 1.67-1),
 libasan5 (= 9.2.1-29),
 libatomic1 (= 10-20200222-1),
 libattr1 (= 1:2.4.48-5),
 libaudit-common (= 1:2.8.5-2),
 libaudit1 (= 1:2.8.5-2+b1),
 libbinutils (= 2.34-3),
 libblkid1 (= 2.34-0.1),
 libbsd0 (= 0.10.0-1),
 libbz2-1.0 (= 1.0.8-2),
 libc-bin (= 2.29-10),
 libc-dev-bin (= 2.29-10),
 libc6 (= 2.29-10),
 libc6-dev (= 2.29-10),
 libc6-i386 (= 2.29-10),
 libcap-ng0 (= 0.7.9-2.1+b1),
 libcc1-0 (= 10-20200222-1),
 libclang-common-9-dev (= 1:9.0.1-8),
 libclang-cpp9 (= 1:9.0.1-8),
 libcroco3 (= 0.6.13-1),
 libcrypt-dev (= 1:4.4.10-10),
 libcrypt1 (= 1:4.4.10-10),
 libctf-nobfd0 (= 2.34-3),
 libctf0 (= 2.34-3),
 libdb5.3 (= 5.3.28+dfsg1-0.6),
 libdebconfclient0 (= 0.251),
 libdebhelper-perl (= 12.9),
 libdpkg-perl (= 1.19.7),
 libedit2 (= 3.1-20191231-1),
 libelf1 (= 0.176-1.1),
 libfdisk1 (= 2.34-0.1),
 libffi7 (= 3.3-3),
 libfile-stripnondeterminism-perl (= 1.6.3-2),
 libgc1c2 (= 1:7.6.4-0.4),
 libgcc-8-dev (= 8.3.0-29),
 libgcc-9-dev (= 9.2.1-29),
 libgcc-s1 (= 10-20200222-1),
 libgcc1 (= 1:10-20200222-1),
 libgcrypt20 (= 1.8.5-5),
 libgdbm-compat4 (= 1.18.1-5),
 libgdbm6 (= 1.18.1-5),
 libglib2.0-0 (= 2.62.4-2),
 libgmp10 (= 2:6.2.0+dfsg-4),
 libgomp1 (= 10-20200222-1),
 libgpg-error0 (= 1.37-1),
 libicu63 (= 63.2-2),
 libisl22 (= 0.22.1-1),
 libitm1 (= 10-20200222-1),
 libllvm9 (= 1:9.0.1-8),
 liblsan0 (= 10-20200222-1),
 liblz4-1 (= 1.9.2-2),
 liblzma5 (= 5.2.4-1+b1),
 libmagic-mgc (= 1:5.38-4),
 libmagic1 (= 1:5.38-4),
 libmount1 (= 2.34-0.1),
 libmpc3 (= 1.1.0-1),
 libmpfr6 (= 4.0.2-1),
 libmpx2 (= 8.3.0-29),
 libncursesw6 (= 6.1+20191019-1),
 libobjc-8-dev (= 8.3.0-29),
 libobjc4 (= 10-20200222-1),
 libpam-modules (= 1.3.1-5),
 libpam-modules-bin (= 1.3.1-5),
 libpam-runtime (= 1.3.1-5),
 libpam0g (= 1.3.1-5),
 libpcre2-8-0 (= 10.34-7),
 libpcre3 (= 2:8.39-12+b1),
 libperl5.30 (= 5.30.0-9),
 libpipeline1 (= 1.5.2-2),
 libquadmath0 (= 10-20200222-1),
 libseccomp2 (= 2.4.2-2),
 libselinux1 (= 3.0-1+b1),
 libsigsegv2 (= 2.12-2),
 libsmartcols1 (= 2.34-0.1),
 libssl-dev (= 1.1.1d-2),
 libssl1.1 (= 1.1.1d-2),
 libstdc++-8-dev (= 8.3.0-29),
 libstdc++-9-dev (= 9.2.1-29),
 libstdc++6 (= 10-20200222-1),
 libsub-override-perl (= 0.09-2),
 libsystemd0 (= 244.3-1),
 libtinfo6 (= 6.1+20191019-1),
 libtool (= 2.4.6-13),
 libtsan0 (= 10-20200222-1),
 libubsan1 (= 10-20200222-1),
 libuchardet0 (= 0.0.6-3),
 libudev1 (= 244.3-1),
 libunistring2 (= 0.9.10-2),
 libuuid1 (= 2.34-0.1),
 libxml2 (= 2.9.10+dfsg-3),
 libz3-4 (= 4.8.7-4),
 linux-libc-dev (= 5.4.19-1),
 login (= 1:4.8.1-1),
 lsb-base (= 11.1.0),
 m4 (= 1.4.18-4),
 make (= 4.2.1-1.2),
 man-db (= 2.9.0-2),
 mawk (= 1.3.4.20200120-2),
 ncurses-base (= 6.1+20191019-1),
 ncurses-bin (= 6.1+20191019-1),
 patch (= 2.7.6-6),
 perl (= 5.30.0-9),
 perl-base (= 5.30.0-9),
 perl-modules-5.30 (= 5.30.0-9),
 po-debconf (= 1.0.21),
 sed (= 4.7-1),
 sensible-utils (= 0.0.12+nmu1),
 sysvinit-utils (= 2.96-2.1),
 tar (= 1.30+dfsg-6+b1),
 util-linux (= 2.34-0.1),
 xz-utils (= 5.2.4-1+b1),
 zlib1g (= 1:1.2.11.dfsg-1.2)
Environment:
 DEB_BUILD_OPTIONS="parallel=4"
 LANG="C.UTF-8"
 LC_ALL="C.UTF-8"
 SOURCE_DATE_EPOCH="1340749403"


+------------------------------------------------------------------------------+
| Package contents                                                             |
+------------------------------------------------------------------------------+


istgt-dbgsym_0.4~20111008-3_amd64.deb
-------------------------------------

 new Debian package, version 2.0.
 size 237628 bytes: control archive=588 bytes.
     399 bytes,    12 lines      control              
     212 bytes,     2 lines      md5sums              
 Package: istgt-dbgsym
 Source: istgt
 Version: 0.4~20111008-3
 Auto-Built-Package: debug-symbols
 Architecture: amd64
 Maintainer: GNU/kFreeBSD Maintainers <debian-bsd@lists.debian.org>
 Installed-Size: 270
 Depends: istgt (= 0.4~20111008-3)
 Section: debug
 Priority: optional
 Description: debug symbols for istgt
 Build-Ids: 5244700d032f7f98f4d51aff99caf90f39284088 5a2941071ab471558284b0ec4f6b11be51ba22b8

drwxr-xr-x root/root         0 2012-06-26 22:23 ./
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/lib/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/lib/debug/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/lib/debug/.build-id/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/lib/debug/.build-id/52/
-rw-r--r-- root/root     36736 2012-06-26 22:23 ./usr/lib/debug/.build-id/52/44700d032f7f98f4d51aff99caf90f39284088.debug
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/lib/debug/.build-id/5a/
-rw-r--r-- root/root    227640 2012-06-26 22:23 ./usr/lib/debug/.build-id/5a/2941071ab471558284b0ec4f6b11be51ba22b8.debug
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/doc/
lrwxrwxrwx root/root         0 2012-06-26 22:23 ./usr/share/doc/istgt-dbgsym -> istgt


istgt_0.4~20111008-3_amd64.deb
------------------------------

 new Debian package, version 2.0.
 size 134480 bytes: control archive=1324 bytes.
      50 bytes,     2 lines      conffiles            
     728 bytes,    21 lines      control              
     756 bytes,    11 lines      md5sums              
     316 bytes,     9 lines   *  postinst             #!/bin/sh
     165 bytes,     7 lines   *  postrm               #!/bin/sh
 Package: istgt
 Version: 0.4~20111008-3
 Architecture: amd64
 Maintainer: GNU/kFreeBSD Maintainers <debian-bsd@lists.debian.org>
 Installed-Size: 382
 Depends: lsb-base (>= 3.0-6), libc6 (>= 2.14), libssl1.1 (>= 1.1.0)
 Section: admin
 Priority: extra
 Homepage: http://www.peach.ne.jp/archives/istgt/
 Description: iSCSI userspace target daemon for Unix-like operating systems
  istgt is a iSCSI target for Unix-like operating systems (including those with
  Linux and kFreeBSD kernels) running as daemon process in user space.
  .
  It supports:
  .
   * Multipath I/O
   * 64bit LBA for volumes over 2 TiB size
   * Header/Data digest by CRC32C
   * Mutual authentication with CHAP
   * Multiple LUNs and ACLs for portals
   * IPv6/IPv4 support

drwxr-xr-x root/root         0 2012-06-26 22:23 ./
drwxr-xr-x root/root         0 2012-06-26 22:23 ./etc/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./etc/init.d/
-rwxr-xr-x root/root      4002 2012-06-26 22:20 ./etc/init.d/istgt
drwxr-xr-x root/root         0 2012-06-26 22:23 ./etc/istgt/
-rw-r--r-- root/root       210 2012-06-26 22:23 ./etc/istgt/README.configuration
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/sbin/
-rwxr-xr-x root/root    302040 2012-06-26 22:23 ./usr/sbin/istgt
-rwxr-xr-x root/root     47616 2012-06-26 22:23 ./usr/sbin/istgtcontrol
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/doc/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/doc/istgt/
-rw-r--r-- root/root      2312 2011-09-18 08:46 ./usr/share/doc/istgt/README.gz
-rw-r--r-- root/root      1598 2012-06-26 22:23 ./usr/share/doc/istgt/changelog.Debian.gz
-rw-r--r-- root/root      1781 2011-08-01 03:56 ./usr/share/doc/istgt/copyright
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/doc/istgt/examples/
-rw-r--r-- root/root       922 2010-07-07 09:42 ./usr/share/doc/istgt/examples/auth.conf
-rw-r--r-- root/root      2303 2012-06-26 22:23 ./usr/share/doc/istgt/examples/istgt.conf.gz
-rw-r--r-- root/root      3128 2012-06-26 22:23 ./usr/share/doc/istgt/examples/istgt.large.conf.gz
-rw-r--r-- root/root       733 2009-03-22 16:54 ./usr/share/doc/istgt/examples/istgtcontrol.conf
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/man/
drwxr-xr-x root/root         0 2012-06-26 22:23 ./usr/share/man/man1/
-rw-r--r-- root/root       713 2012-06-26 22:23 ./usr/share/man/man1/istgt.1.gz
-rw-r--r-- root/root      1637 2012-06-26 22:23 ./usr/share/man/man1/istgtcontrol.1.gz


+------------------------------------------------------------------------------+
| Post Build                                                                   |
+------------------------------------------------------------------------------+


+------------------------------------------------------------------------------+
| Cleanup                                                                      |
+------------------------------------------------------------------------------+

Purging /<<BUILDDIR>>
Not cleaning session: cloned chroot in use

+------------------------------------------------------------------------------+
| Summary                                                                      |
+------------------------------------------------------------------------------+

Build Architecture: amd64
Build Type: binary
Build-Space: 6072
Build-Time: 21
Distribution: unstable
Host Architecture: amd64
Install-Time: 9
Job: istgt_0.4~20111008-3
Machine Architecture: amd64
Package: istgt
Package-Time: 49
Source-Version: 0.4~20111008-3
Space: 6072
Status: successful
Version: 0.4~20111008-3
--------------------------------------------------------------------------------
Finished at 2020-02-24T23:41:49Z
Build needed 00:00:49, 6072k disk space
DC-Status: OK 51.206108345s
DC-Time-Estimation: 51.206108345 versus expected 178 (r/m: 2.476147783009188 ; m: 51.206108345)
