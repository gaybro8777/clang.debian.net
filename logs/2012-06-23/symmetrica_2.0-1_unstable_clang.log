DC-Build-Header: symmetrica 2.0-1 / Sat Jun 23 16:08:23 +0000 2012
DC-Task: logfile:/tmp/symmetrica_2.0-1_unstable_clang.log version:2.0-1 chroot:unstable modes:binary-only:clang source:symmetrica architecture:any esttime:1318
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang symmetrica_2.0-1'
sbuild (Debian sbuild) 0.62.5 (13 Jul 2011) on ip-10-28-241-51.ec2.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ symmetrica 2.0-1 (amd64)                                   23 Jun 2012 16:08 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: symmetrica
Version: 2.0-1
Source Version: 2.0-1
Distribution: unstable
Architecture: amd64

I: NOTICE: Log filtering will replace 'build/symmetrica-bIbVur/symmetrica-2.0' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/symmetrica-bIbVur' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-8d113421-4181-4b06-bce4-d9ae83c03a82' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Ign http://localhost unstable InRelease
Get:1 http://localhost unstable Release.gpg [836 B]
Get:2 http://localhost unstable Release [233 kB]
Get:3 http://localhost unstable/main Sources/DiffIndex [7876 B]
Get:4 http://localhost unstable/main amd64 Packages/DiffIndex [7876 B]
Get:5 http://localhost unstable/main Translation-en/DiffIndex [7876 B]
Get:6 http://localhost unstable/main 2012-06-23-0814.36.pdiff [8967 B]
Get:7 http://localhost unstable/main 2012-06-23-0814.36.pdiff [8967 B]
Get:8 http://localhost unstable/main amd64 2012-06-23-0814.36.pdiff [6101 B]
Get:9 http://localhost unstable/main 2012-06-23-0814.36.pdiff [1297 B]
Get:10 http://localhost unstable/main amd64 2012-06-23-0814.36.pdiff [6101 B]
Get:11 http://localhost unstable/main 2012-06-23-0814.36.pdiff [1297 B]
Fetched 274 kB in 4s (60.5 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 725 kB of source archives.
Get:1 http://localhost/debian/ unstable/main symmetrica 2.0-1 (dsc) [1199 B]
Get:2 http://localhost/debian/ unstable/main symmetrica 2.0-1 (tar) [721 kB]
Get:3 http://localhost/debian/ unstable/main symmetrica 2.0-1 (diff) [3097 B]
Fetched 725 kB in 0s (2906 kB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ echo 'Install of clang'
Install of clang
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends clang -t unstable
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-dev libffi5 libllvm3.1
Recommended packages:
  llvm-3.1-dev python
The following NEW packages will be installed:
  clang libclang-common-dev libffi5 libllvm3.1
0 upgraded, 4 newly installed, 0 to remove and 0 not upgraded.
Need to get 13.1 MB of archives.
After this operation, 35.6 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libffi5 amd64 3.0.10-3 [24.8 kB]
Get:2 http://localhost/debian/ unstable/main libllvm3.1 amd64 3.1-1 [7276 kB]
Get:3 http://localhost/debian/ unstable/main libclang-common-dev amd64 3.1-6 [84.0 kB]
Get:4 http://localhost/debian/ unstable/main clang amd64 3.1-6 [5755 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 13.1 MB in 0s (30.0 MB/s)
Selecting previously unselected package libffi5:amd64.
(Reading database ... 11730 files and directories currently installed.)
Unpacking libffi5:amd64 (from .../libffi5_3.0.10-3_amd64.deb) ...
Selecting previously unselected package libllvm3.1:amd64.
Unpacking libllvm3.1:amd64 (from .../libllvm3.1_3.1-1_amd64.deb) ...
Selecting previously unselected package libclang-common-dev.
Unpacking libclang-common-dev (from .../libclang-common-dev_3.1-6_amd64.deb) ...
Selecting previously unselected package clang.
Unpacking clang (from .../archives/clang_3.1-6_amd64.deb) ...
Setting up libffi5:amd64 (3.0.10-3) ...
Setting up libllvm3.1:amd64 (3.1-1) ...
Setting up libclang-common-dev (3.1-6) ...
Setting up clang (3.1-6) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSION=4.7
+ cd /usr/bin
+ rm g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ dpkg --set-selections
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ grep clang
+ gcc --version

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-vsxTlP/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/708 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 11810 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), cdbs (>= 0.4.27), debhelper (>= 5), quilt, patchutils (>= 0.2.25)
Filtered Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), cdbs (>= 0.4.27), debhelper (>= 5), quilt, patchutils (>= 0.2.25)
dpkg-deb: building package `sbuild-build-depends-symmetrica-dummy' in `/«BUILDDIR»/resolver-wYuFFp/apt_archive/sbuild-build-depends-symmetrica-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install symmetrica build dependencies (apt-based resolver)                   │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  bsdmainutils cdbs debhelper diffstat file gettext gettext-base groff-base
  html2text intltool-debian libasprintf0c2 libcroco3 libgettextpo0
  libglib2.0-0 libmagic1 libpcre3 libpipeline1 libunistring0 libxml2 man-db
  patchutils po-debconf quilt
Suggested packages:
  wamerican wordlist whois vacation devscripts dh-make gettext-doc groff less
  www-browser libmail-box-perl procmail graphviz default-mta
  mail-transport-agent
Recommended packages:
  autotools-dev curl wget lynx-cur autopoint libglib2.0-data shared-mime-info
  xml-core libmail-sendmail-perl
The following NEW packages will be installed:
  bsdmainutils cdbs debhelper diffstat file gettext gettext-base groff-base
  html2text intltool-debian libasprintf0c2 libcroco3 libgettextpo0
  libglib2.0-0 libmagic1 libpcre3 libpipeline1 libunistring0 libxml2 man-db
  patchutils po-debconf quilt sbuild-build-depends-symmetrica-dummy
0 upgraded, 24 newly installed, 0 to remove and 0 not upgraded.
Need to get 10.5 MB/10.5 MB of archives.
After this operation, 26.8 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libpipeline1 amd64 1.2.1-1 [39.2 kB]
Get:2 http://localhost/debian/ unstable/main libasprintf0c2 amd64 0.18.1.1-9 [26.8 kB]
Get:3 http://localhost/debian/ unstable/main libmagic1 amd64 5.11-1 [250 kB]
Get:4 http://localhost/debian/ unstable/main libpcre3 amd64 1:8.30-5 [242 kB]
Get:5 http://localhost/debian/ unstable/main libxml2 amd64 2.8.0+dfsg1-4 [903 kB]
Get:6 http://localhost/debian/ unstable/main libglib2.0-0 amd64 2.32.3-1 [2081 kB]
Get:7 http://localhost/debian/ unstable/main libcroco3 amd64 0.6.5-1 [151 kB]
Get:8 http://localhost/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:9 http://localhost/debian/ unstable/main libgettextpo0 amd64 0.18.1.1-9 [145 kB]
Get:10 http://localhost/debian/ unstable/main bsdmainutils amd64 9.0.3 [209 kB]
Get:11 http://localhost/debian/ unstable/main groff-base amd64 1.21-8 [1152 kB]
Get:12 http://localhost/debian/ unstable/main man-db amd64 2.6.2-1 [1061 kB]
Get:13 http://localhost/debian/ unstable/main file amd64 5.11-1 [53.2 kB]
Get:14 http://localhost/debian/ unstable/main gettext-base amd64 0.18.1.1-9 [154 kB]
Get:15 http://localhost/debian/ unstable/main cdbs all 0.4.115 [80.2 kB]
Get:16 http://localhost/debian/ unstable/main html2text amd64 1.3.2a-15 [103 kB]
Get:17 http://localhost/debian/ unstable/main gettext amd64 0.18.1.1-9 [1975 kB]
Get:18 http://localhost/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:19 http://localhost/debian/ unstable/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:20 http://localhost/debian/ unstable/main debhelper all 9.20120608 [700 kB]
Get:21 http://localhost/debian/ unstable/main diffstat amd64 1.55-3 [30.0 kB]
Get:22 http://localhost/debian/ unstable/main patchutils amd64 0.3.2-1.1 [110 kB]
Get:23 http://localhost/debian/ unstable/main quilt all 0.60-2 [377 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 10.5 MB in 0s (24.1 MB/s)
Selecting previously unselected package libpipeline1:amd64.
(Reading database ... 11810 files and directories currently installed.)
Unpacking libpipeline1:amd64 (from .../libpipeline1_1.2.1-1_amd64.deb) ...
Selecting previously unselected package libasprintf0c2:amd64.
Unpacking libasprintf0c2:amd64 (from .../libasprintf0c2_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package libmagic1:amd64.
Unpacking libmagic1:amd64 (from .../libmagic1_5.11-1_amd64.deb) ...
Selecting previously unselected package libpcre3:amd64.
Unpacking libpcre3:amd64 (from .../libpcre3_1%3a8.30-5_amd64.deb) ...
Selecting previously unselected package libxml2:amd64.
Unpacking libxml2:amd64 (from .../libxml2_2.8.0+dfsg1-4_amd64.deb) ...
Selecting previously unselected package libglib2.0-0:amd64.
Unpacking libglib2.0-0:amd64 (from .../libglib2.0-0_2.32.3-1_amd64.deb) ...
Selecting previously unselected package libcroco3:amd64.
Unpacking libcroco3:amd64 (from .../libcroco3_0.6.5-1_amd64.deb) ...
Selecting previously unselected package libunistring0:amd64.
Unpacking libunistring0:amd64 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package libgettextpo0:amd64.
Unpacking libgettextpo0:amd64 (from .../libgettextpo0_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package bsdmainutils.
Unpacking bsdmainutils (from .../bsdmainutils_9.0.3_amd64.deb) ...
Selecting previously unselected package groff-base.
Unpacking groff-base (from .../groff-base_1.21-8_amd64.deb) ...
Selecting previously unselected package man-db.
Unpacking man-db (from .../man-db_2.6.2-1_amd64.deb) ...
Selecting previously unselected package file.
Unpacking file (from .../archives/file_5.11-1_amd64.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package cdbs.
Unpacking cdbs (from .../archives/cdbs_0.4.115_all.deb) ...
Selecting previously unselected package html2text.
Unpacking html2text (from .../html2text_1.3.2a-15_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package intltool-debian.
Unpacking intltool-debian (from .../intltool-debian_0.35.0+20060710.1_all.deb) ...
Selecting previously unselected package po-debconf.
Unpacking po-debconf (from .../po-debconf_1.0.16+nmu2_all.deb) ...
Selecting previously unselected package debhelper.
Unpacking debhelper (from .../debhelper_9.20120608_all.deb) ...
Selecting previously unselected package diffstat.
Unpacking diffstat (from .../diffstat_1.55-3_amd64.deb) ...
Selecting previously unselected package patchutils.
Unpacking patchutils (from .../patchutils_0.3.2-1.1_amd64.deb) ...
Selecting previously unselected package quilt.
Unpacking quilt (from .../archives/quilt_0.60-2_all.deb) ...
Selecting previously unselected package sbuild-build-depends-symmetrica-dummy.
Unpacking sbuild-build-depends-symmetrica-dummy (from .../sbuild-build-depends-symmetrica-dummy.deb) ...
Setting up libpipeline1:amd64 (1.2.1-1) ...
Setting up libasprintf0c2:amd64 (0.18.1.1-9) ...
Setting up libmagic1:amd64 (5.11-1) ...
Setting up libpcre3:amd64 (1:8.30-5) ...
Setting up libxml2:amd64 (2.8.0+dfsg1-4) ...
Setting up libglib2.0-0:amd64 (2.32.3-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.5-1) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up libgettextpo0:amd64 (0.18.1.1-9) ...
Setting up bsdmainutils (9.0.3) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode.
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode.
Setting up groff-base (1.21-8) ...
Setting up man-db (2.6.2-1) ...
Building database of manual pages ...
Setting up file (5.11-1) ...
Setting up gettext-base (0.18.1.1-9) ...
Setting up cdbs (0.4.115) ...
Setting up html2text (1.3.2a-15) ...
Setting up gettext (0.18.1.1-9) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (9.20120608) ...
Setting up diffstat (1.55-3) ...
Setting up patchutils (0.3.2-1.1) ...
Setting up quilt (0.60-2) ...
Setting up sbuild-build-depends-symmetrica-dummy (0.invalid.0) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.22-6.1 dpkg-dev_1.16.4.3 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 gcc-4.6_4.6.3-7 gcc-4.7_4.7.1-1 libc6-dev_2.13-33 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 linux-libc-dev_3.2.20-1
Package versions: apt_0.9.7 base-files_6.11 base-passwd_3.5.25 bash_4.2-2 binutils_2.22-6.1 bsdmainutils_9.0.3 bsdutils_1:2.20.1-5 build-essential_11.5 bzip2_1.0.6-3 cdbs_0.4.115 clang_3.1-6 coreutils_8.13-3.2 cpp_4:4.7.0-6 cpp-4.6_4.6.3-7 cpp-4.7_4.7.1-1 dash_0.5.7-3 debconf_1.5.44 debconf-i18n_1.5.44 debfoster_2.7-1.1 debhelper_9.20120608 debian-archive-keyring_2012.4 debianutils_4.3.1 diffstat_1.55-3 diffutils_1:3.2-6 dpkg_1.16.4.3 dpkg-dev_1.16.4.3 e2fslibs_1.42.4-3 e2fsprogs_1.42.4-3 fakeroot_1.18.4-2 file_5.11-1 findutils_4.4.2-4 g++_4:4.7.0-6 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 gcc_4:4.7.0-6 gcc-4.4-base_4.4.7-1 gcc-4.5-base_4.5.3-12 gcc-4.6_4.6.3-7 gcc-4.6-base_4.6.3-7 gcc-4.7_4.7.1-1 gcc-4.7-base_4.7.1-1 gettext_0.18.1.1-9 gettext-base_0.18.1.1-9 gnupg_1.4.12-4 gpgv_1.4.12-4 grep_2.12-2 groff-base_1.21-8 gzip_1.5-1.1 hostname_3.11 html2text_1.3.2a-15 initscripts_2.88dsf-27 insserv_1.14.0-3 intltool-debian_0.35.0+20060710.1 libacl1_2.2.51-8 libapt-pkg4.12_0.9.7 libasprintf0c2_0.18.1.1-9 libattr1_1:2.4.46-8 libblkid1_2.20.1-5 libbz2-1.0_1.0.6-3 libc-bin_2.13-33 libc-dev-bin_2.13-33 libc6_2.13-33 libc6-dev_2.13-33 libclang-common-dev_3.1-6 libclass-isa-perl_0.36-3 libcomerr2_1.42.4-3 libcroco3_0.6.5-1 libdb5.1_5.1.29-4 libdpkg-perl_1.16.4.3 libffi5_3.0.10-3 libfile-fcntllock-perl_0.14-2 libgc1c2_1:7.1-8 libgcc1_1:4.7.1-1 libgdbm3_1.8.3-11 libgettextpo0_0.18.1.1-9 libglib2.0-0_2.32.3-1 libgmp10_2:5.0.5+dfsg-2 libgomp1_4.7.1-1 libitm1_4.7.1-1 libllvm3.1_3.1-1 liblocale-gettext-perl_1.05-7+b1 liblzma5_5.1.1alpha+20120614-1 libmagic1_5.11-1 libmount1_2.20.1-5 libmpc2_0.9-4 libmpfr4_3.1.0-5 libncurses5_5.9-9 libpam-modules_1.1.3-7.1 libpam-modules-bin_1.1.3-7.1 libpam-runtime_1.1.3-7.1 libpam0g_1.1.3-7.1 libpcre3_1:8.30-5 libpipeline1_1.2.1-1 libquadmath0_4.7.1-1 libreadline6_6.2-8 libselinux1_2.1.9-5 libsemanage-common_2.1.6-6 libsemanage1_2.1.6-6 libsepol1_2.1.4-3 libslang2_2.2.4-13 libss2_1.42.4-3 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 libswitch-perl_2.16-2 libtext-charwidth-perl_0.04-7+b1 libtext-iconv-perl_1.7-5 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_1.2000-1 libtinfo5_5.9-9 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5 libxml2_2.8.0+dfsg1-4 linux-libc-dev_3.2.20-1 login_1:4.1.5.1-1 lsb-base_4.1+Debian7 make_3.81-8.2 man-db_2.6.2-1 mawk_1.3.3-17 mount_2.20.1-5 multiarch-support_2.13-33 ncurses-base_5.9-9 ncurses-bin_5.9-9 passwd_1:4.1.5.1-1 patch_2.6.1-3 patchutils_0.3.2-1.1 perl_5.14.2-12 perl-base_5.14.2-12 perl-modules_5.14.2-12 po-debconf_1.0.16+nmu2 quilt_0.60-2 readline-common_6.2-8 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-symmetrica-dummy_0.invalid.0 sed_4.2.1-10 sensible-utils_0.0.7 sysv-rc_2.88dsf-27 sysvinit_2.88dsf-27 sysvinit-utils_2.88dsf-27 tar_1.26-4 tzdata_2012c-1 ucf_3.0025+nmu3 util-linux_2.20.1-5 xz-utils_5.1.1alpha+20120614-1 zlib1g_1:1.2.7.dfsg-13

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Fri Jun 27 00:06:36 2008 UTC using DSA key ID 521381BA
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./symmetrica_2.0-1.dsc
dpkg-source: info: extracting symmetrica in symmetrica-2.0
dpkg-source: info: unpacking symmetrica_2.0.orig.tar.gz
dpkg-source: info: applying symmetrica_2.0-1.diff.gz

Check disc space
────────────────

Sufficient free space for build

User Environment
────────────────

HOME=/sbuild-nonexistent
LOGNAME=root
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=0
SCHROOT_GROUP=root
SCHROOT_SESSION_ID=unstable-amd64-sbuild-8d113421-4181-4b06-bce4-d9ae83c03a82
SCHROOT_UID=0
SCHROOT_USER=root
SHELL=/bin/sh
USER=root

dpkg-buildpackage
─────────────────

dpkg-buildpackage: warning: using a gain-root-command while being root
dpkg-buildpackage: source package symmetrica
dpkg-buildpackage: source version 2.0-1
dpkg-buildpackage: source changed by Tim Abbott <tabbott@mit.edu>
 dpkg-source --before-build symmetrica-2.0
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
test -x debian/rules
dh_testroot
rm -f debian/stamp-makefile-build debian/stamp-makefile-install
/usr/bin/make  -C . CFLAGS="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall" CXXFLAGS="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall" CPPFLAGS="-D_FORTIFY_SOURCE=2" LDFLAGS="-Wl,-z,relro"  -k clean
make[1]: Entering directory `/«PKGBUILDDIR»'
make[1]: *** No rule to make target `clean'.
make[1]: Leaving directory `/«PKGBUILDDIR»'
make: [makefile-clean] Error 2 (ignored)
dh_clean 
/usr/bin/make -f debian/rules reverse-config
make[1]: Entering directory `/«PKGBUILDDIR»'
make[1]: Nothing to be done for `reverse-config'.
make[1]: Leaving directory `/«PKGBUILDDIR»'
if [ -d "." ]; then \
	  cd . && QUILT_PATCHES=/«PKGBUILDDIR»/debian/patches quilt --quiltrc /dev/null pop -a -R || test $? = 2 ; \
	fi
No patch removed
rm -rf ./.pc
rm -f debian/stamp-patch*
 debian/rules build-arch
test -x debian/rules
mkdir -p "."
/usr/bin/make -f debian/rules reverse-config
make[1]: Entering directory `/«PKGBUILDDIR»'
make[1]: Nothing to be done for `reverse-config'.
make[1]: Leaving directory `/«PKGBUILDDIR»'
cd . && QUILT_PATCHES=/«PKGBUILDDIR»/debian/patches quilt --quiltrc /dev/null push -a || test $? = 2
Applying patch shared-library.patch
patching file makefile

Applying patch macros-bugfix.patch
patching file macro.h

Applying patch banner.patch
patching file de.c

Now at patch banner.patch
touch debian/stamp-patched
/usr/bin/make -f debian/rules update-config
make[1]: Entering directory `/«PKGBUILDDIR»'
make[1]: Nothing to be done for `update-config'.
make[1]: Leaving directory `/«PKGBUILDDIR»'
/usr/bin/make  -C . CFLAGS="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall" CXXFLAGS="-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall" CPPFLAGS="-D_FORTIFY_SOURCE=2" LDFLAGS="-Wl,-z,relro"  
make[1]: Entering directory `/«PKGBUILDDIR»'
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE bar.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
bar.c:59:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("new_divdiff_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:71:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("divdiff_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:226:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("rz_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:261:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("rz_lehmercode_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:275:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sscan_permutation");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:295:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:359:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("max_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:376:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ordcon_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:398:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ordcen_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:414:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("makevectorof_class_rep_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:431:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("makevectorof_class_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:500:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("class_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:579:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_bar_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:605:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:629:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("length_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:651:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("lehmercode_bar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bar.c:791:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scalarproduct_bar_schubert");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
17 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE bi.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
bi.c:249:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("insert_bt_bt");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bi.c:420:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        else if ((p = (Node *) SYM_malloc(sizeof(Node))))
        ^
bi.c:522:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_BINTREE_VECTOR");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE boe.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
boe.c:42:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,specht_dg);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
boe.c:421:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("alt_sdg_trafo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
boe.c:841:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("an_trafo_odg");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
boe.c:1154:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("gen_mat");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
boe.c:1659:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("make_all_st_tabs");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
5 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE bruch.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
bruch.c:118:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:159:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("absolute_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:255:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:296:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("negeinsp_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:307:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nullp_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:331:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:347:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_apply_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:359:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_apply_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:374:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:549:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("tex_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:603:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:671:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_ou_b");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:729:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:746:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_integerbruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:761:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDO("s_b_o");
    ^
./macro.h:806:17: note: expanded from macro 'ENDO'
#define ENDO(a) endr_ende: if (erg != OK) EDC(a); return (OP) NULL;
                ^
bruch.c:773:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDO("s_b_u");
    ^
./macro.h:806:17: note: expanded from macro 'ENDO'
#define ENDO(a) endr_ende: if (erg != OK) EDC(a); return (OP) NULL;
                ^
bruch.c:784:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("s_b_i")
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:847:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("posp_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:957:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("kuerzen");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1001:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("kuerzen_integer_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1038:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        else if (S_B_UI(bruch) == -1) { 
        ^
bruch.c:1168:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    else if (S_B_UI(bruch) == -1) {
    ^
bruch.c:1251:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    MAS_B_CO(b); /* check on 1 in denominator */
    ^
bruch.c:1228:5: note: expanded from macro 'MAS_B_CO'
    else if (S_B_UI(b) == (INT)-1)\
    ^
bruch.c:1275:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        MAS_B_CO(b); /* check on 1 in denominator */
        ^
bruch.c:1228:5: note: expanded from macro 'MAS_B_CO'
    else if (S_B_UI(b) == (INT)-1)\
    ^
bruch.c:1305:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    MAS_B_CO(b); /* check on 1 in denominator */
    ^
bruch.c:1228:5: note: expanded from macro 'MAS_B_CO'
    else if (S_B_UI(b) == (INT)-1)\
    ^
bruch.c:1463:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_bruch_scalar");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1674:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_apply_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1904:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1963:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectwrite_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:1979:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectread_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
bruch.c:2409:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("en_forme");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
31 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE classical.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
classical.c:128:4: warning: unused label 'endr_ende' [-Wunused-label]
   ENDR("gl_dimension");
   ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
classical.c:665:15: warning: unused variable 'new_part' [-Wunused-variable]
   OP new_tab,new_part,ext;
              ^
classical.c:823:15: warning: unused variable 'new_part' [-Wunused-variable]
   OP new_tab,new_part,ext;
              ^
classical.c:988:15: warning: unused variable 'new_part' [-Wunused-variable]
   OP new_tab,new_part,ext;
              ^
classical.c:1352:15: warning: unused variable 'new_part' [-Wunused-variable]
   OP new_tab,new_part,ext,spin_cop,mon;
              ^
classical.c:577:26: warning: unused variable 'no_cols' [-Wunused-variable]
static INT ni,ri,no_rows,no_cols,level,count;
                         ^
6 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE de.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
de.c:58:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDTYP("SYM_malloc",char *);
    ^
./macro.h:807:21: note: expanded from macro 'ENDTYP'
#define ENDTYP(a,t) endr_ende: if (erg != OK) EDC(a); return (t) NULL;
                    ^
de.c:212:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("anfang");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
de.c:658:34: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        fprintf(stderr,"%s hash:%d\n",text,s_m_hash(a));
                                ~^         ~~~~~~~~~~~
                                %ld
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE di.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
di.c:554:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
dixon_wilf_examples(G,weight,anz,FP)
^~~~~~~~~~~~~~~~~~~
di.c:671:53: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        if(count %100  == 0L)fprintf(stderr,"Versuch nr:  %d Gef.: %d\r",count,k);
                                                          ~^             ~~~~~
                                                          %ld       
di.c:671:62: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        if(count %100  == 0L)fprintf(stderr,"Versuch nr:  %d Gef.: %d\r",count,k);
                                                                   ~^          ~
                                                                   %ld       
di.c:1089:11: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                                                           else
                                                           ^
di.c:1288:42: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        fprintf(stderr,"Gruppe erzeugt Ordnung %d\n",S_V_LI(G));
                                               ~^    ~~~~~~~~~
                                               %ld       
di.c:1294:54: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        fprintf(stderr,"Konjugiertenklassen erzeugt Anzahl %d\n",Canz);
                                                           ~^    ~~~~
                                                           %ld       
di.c:1317:41: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        printf("Anzahl Bahnrepraesentanten: %d\n",S_I_I(MG));
                                                            ~^    ~~~~~~~~~
                                                            %ld
di.c:1343:35: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                                fprintf(stderr,"Versuch nr:  %d Gef.: %d\r",count,k);
                                                             ~^             ~~~~~
                                                             %ld
di.c:1343:44: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                                fprintf(stderr,"Versuch nr:  %d Gef.: %d\r",count,k);
                                                                      ~^          ~
                                                                      %ld
di.c:1345:52: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        fprintf(stderr,"Anzahl der gemachten Versuche: %d\n",count);
                                                                       ~^    ~~~~~
                                                                       %ld
di.c:1381:24: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        printf("Fixpunkte  %d  Gef. Bahnrepr.: %d Versuche %d\n",
                                           ~^
                                           %ld                     
di.c:1381:44: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        printf("Fixpunkte  %d  Gef. Bahnrepr.: %d Versuche %d\n",
                                                               ~^
                                                               %ld
di.c:1381:56: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        printf("Fixpunkte  %d  Gef. Bahnrepr.: %d Versuche %d\n",
                                                                           ~^
                                                                           %ld
di.c:1132:12: warning: unused function 'bestimme_egf' [-Wunused-function]
static INT bestimme_egf(fix,egf) OP     fix; OP egf;
           ^
14 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE ff.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
ff.c:896:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:911:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1033:13: warning: unused variable 'res2' [-Wunused-variable]
    INT res,res2;
            ^
ff.c:1070:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1084:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_apply_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1097:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_apply_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1210:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1226:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_char_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1245:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1263:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1295:25: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    if (S_O_K(c) != FF) FREESELF(c);
                        ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ff.c:1363:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1387:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_INTEGER_FF");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1411:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("cast_apply_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1422:4: warning: unused label 'endr_ende' [-Wunused-label]
   ENDR("minimal_extension");
   ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:1906:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("order_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2093:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("reduce_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2118:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("primep_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2138:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2155:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprint_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2174:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectwrite_bruch");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2195:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectread_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2205:18: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
    sprintf(f,"[%d,",S_FF_CI(a)); i = strlen(f); f = f+i;
                ~^   ~~~~~~~~~~
                %ld
ff.c:2207:21: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
        sprintf(f,"%d,",S_FF_II(a,i));
                   ~^   ~~~~~~~~~~~~
                   %ld
ff.c:2210:17: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
    sprintf(f,"%d]",S_FF_II(a,i));
               ~^   ~~~~~~~~~~~~
               %ld
ff.c:2243:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_vector_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2328:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("next_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:2909:14: warning: unused variable 'hll' [-Wunused-variable]
    INT spur,hll;
             ^
ff.c:3287:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("get_ff_irred");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:3314:9: warning: unused variable 'datneu' [-Wunused-variable]
    INT datneu = 0;     /* Kennzeichen ob Datei neu  */
        ^
ff.c:3426:19: warning: unused variable 'j' [-Wunused-variable]
    OP y,z; INT i,j;
                  ^
ff.c:3485:4: warning: add explicit braces to avoid dangling else [-Wdangling-else]
   CE3(p,k,c,primitive_element_ff);
   ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ff.c:3511:19: warning: unused variable 'j' [-Wunused-variable]
    OP y,z; INT i,j;
                  ^
ff.c:3633:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("freeself_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:3684:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("multadd_apply_ff");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:3739:18: warning: unused variable 'res2' [-Wunused-variable]
         INT res,res2;
                 ^
ff.c:3757:23: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    if (S_O_K(c)==FF) FREESELF(c);
                      ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ff.c:3816:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("null_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:3840:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eins_ff");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ff.c:3875:43: warning: unused variable 'counter' [-Wunused-variable]
   OP nn,fac,ff2,d,c,mox,ff;INT i,j,k=1,l,counter=0;
                                          ^
ff.c:1780:12: warning: unused function 'UE_ist_null' [-Wunused-function]
static INT UE_ist_null(e) INT **e;
           ^
41 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE galois.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
galois.c:20:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("scan_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:34:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("add_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:53:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("t_galois_polynom");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:87:14: warning: unused variable 'i' [-Wunused-variable]
        INT erg =OK,i=2;
                    ^
galois.c:131:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("init_galois_global");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:142:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("galois_anfang");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:151:3: warning: unused label 'strlabel' [-Wunused-label]
                S2R(mgg_c,mgg_d,"galois_mult",mgg_mt);
                ^
./macro.h:789:53: note: expanded from macro 'S2R'
#define S2R(a,b,t,c) erg += store_result_2(a,b,t,c);strlabel:
                                                    ^
galois.c:240:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("mult_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:251:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("unitp_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:262:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("nullp_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:270:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("null_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:281:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("einsp_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:290:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("first_gr_given_c_d");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:303:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("eins_gr_given_c_d");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:317:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("eins_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:352:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("addinvers_apply_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:369:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_gr_given_c_d");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:388:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("next_apply_gr");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:393:14: warning: unused variable 'i' [-Wunused-variable]
        INT erg =OK,i,j,c;
                    ^
galois.c:393:16: warning: unused variable 'j' [-Wunused-variable]
        INT erg =OK,i,j,c;
                      ^
galois.c:393:18: warning: unused variable 'c' [-Wunused-variable]
        INT erg =OK,i,j,c;
                        ^
galois.c:407:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("next_gr");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:421:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("vectorofzerodivisors_galois");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:456:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_subgroup_glk_grcd_smaller_k");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:489:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_subgroup_glk_grcd_diagonal");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:567:1: warning: '/*' within block comment [-Wcomment]
/* AK 281106 */
^
galois.c:579:11: warning: unused variable 'np' [-Wunused-variable]
    INT i,np=-1;
          ^
galois.c:630:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("random_subgroup_glk_grcd");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
galois.c:672:37: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                      if (NULLP(c)) INC(S_M_IJ(matrix,i,S_V_II(eindimbahnen,j)-1));
                                    ^
./macro.h:1461:41: note: expanded from macro 'INC'
if (S_O_K(a) == INTEGER) INC_INTEGER(a);\
                                        ^
29 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE ga.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
ga.c:14:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(perm,konj,res, konj_perm_perm);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ga.c:35:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(eins,zwei,res,mult_gral_gral);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ga.c:66:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_scalar_gral");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:165:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("konjuation");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:177:15: warning: unused variable 'y' [-Wunused-variable]
    OP  v,w,x,y,z;
              ^
ga.c:198:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("konjugierende");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:210:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(gral,perm,res,konj_gral_perm);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ga.c:208:9: warning: unused variable 'x' [-Wunused-variable]
    OP  x, z, zeiger;
        ^
ga.c:275:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hplus");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:284:12: warning: unused variable 'x' [-Wunused-variable]
    OP u,w,x,y,z,m,tc;
           ^
ga.c:327:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("vminus");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:352:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("idempotent");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:381:14: warning: expression result unused [-Wunused-value]
             m_skn_gral(p,S_V_I(s_sc_w(vecsc),ind),
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./macro.h:532:65: note: expanded from macro 'm_skn_gral'
#define m_skn_gral(a,b,c,d) ( m_skn_po(a,b,c,d), C_O_K(d,GRAL), OK )
                                                                ^
./def.h:40:12: note: expanded from macro 'OK'
#define OK (INT)0
           ^    ~
ga.c:423:11: warning: expression result unused [-Wunused-value]
          m_skn_gral(p,S_PO_K(zeiger),NULL,z);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./macro.h:532:65: note: expanded from macro 'm_skn_gral'
#define m_skn_gral(a,b,c,d) ( m_skn_po(a,b,c,d), C_O_K(d,GRAL), OK )
                                                                ^
./def.h:40:12: note: expanded from macro 'OK'
#define OK (INT)0
           ^    ~
ga.c:462:30: warning: format specifies type 'int' but the argument has type 'OBJECTKIND' (aka 'long') [-Wformat]
        fprintf(filename, " %d ",POLYNOM);
                            ~^   ~~~~~~~
                            %ld
ga.c:584:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_gral");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ga.c:603:13: warning: expression result unused [-Wunused-value]
            m_skn_gral(d,e,NULL,c);
            ^~~~~~~~~~~~~~~~~~~~~~
./macro.h:532:65: note: expanded from macro 'm_skn_gral'
#define m_skn_gral(a,b,c,d) ( m_skn_po(a,b,c,d), C_O_K(d,GRAL), OK )
                                                                ^
./def.h:40:12: note: expanded from macro 'OK'
#define OK (INT)0
           ^    ~
ga.c:683:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("vminus_hecke");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
18 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE gra.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
gra.c:440:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,add_adjacency_matrix);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
gra.c:473:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("random_adjacency_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
gra.c:490:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("Kn_adjacency_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE hash.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
hash.c:52:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:63:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mem_size_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:79:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_scalar_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:95:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_integer_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:114:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_integer_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:133:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_bruch_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:151:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_bruch_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:167:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_apply_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:261:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDO("find_hashtable");
    ^
./macro.h:806:17: note: expanded from macro 'ENDO'
#define ENDO(a) endr_ende: if (erg != OK) EDC(a); return (OP) NULL;
                ^
hash.c:282:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprint_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:288:22: warning: unused variable 'k' [-Wunused-variable]
        INT erg = OK,i,j=-1,k;
                            ^
hash.c:311:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("objectread_hashtable");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:321:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("objectread_hashtable");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:344:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("init_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:367:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("clone_size_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:479:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("insert_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:665:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("double_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:702:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("split_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:722:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:740:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash_monompartition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:803:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:845:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_SCHUR");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:857:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_MONOMIAL");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:869:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_HOMSYM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:881:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_ELMSYM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:893:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_POWSYM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:905:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_HASHTABLE_POLYNOM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:955:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,POLYNOM,comp_monomvector_monomvector,t_BINTREE_POLYNOM);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:964:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,SCHUR,comp_monomschur,t_BINTREE_SCHUR);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:973:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,POWSYM,comp_monompowsym,t_BINTREE_POWSYM);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:982:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,HOMSYM,comp_monomhomsym,t_BINTREE_HOMSYM);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:992:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,ELMSYM,comp_monomelmsym,t_BINTREE_ELMSYM);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:1003:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    t_HASHTABLE_SF_apply(a,MONOMIAL,comp_monommonomial,t_BINTREE_MONOMIAL);
    ^
hash.c:936:9: note: expanded from macro 't_HASHTABLE_SF_apply'
        else {\
        ^
hash.c:1093:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash2");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:1103:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash1");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:1120:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq2");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:1126:9: warning: unused variable 'res' [-Wunused-variable]
    INT res;
        ^
hash.c:1138:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq1");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hash.c:1146:12: warning: unused variable 'v' [-Wunused-variable]
    OP res,v;
           ^
hash.c:1161:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDO("find_1result_hashtable");
    ^
./macro.h:806:17: note: expanded from macro 'ENDO'
#define ENDO(a) endr_ende: if (erg != OK) EDC(a); return (OP) NULL;
                ^
40 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE hiccup.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
hiccup.c:175:12: warning: unused variable 'mat' [-Wunused-variable]
        OP n,p,lc,mat;
                  ^
hiccup.c:293:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("represent_hecke_element");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hiccup.c:338:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("hecke_dg");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hiccup.c:359:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("build_lc");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hiccup.c:478:3: warning: implicit declaration of function 'set_multiplier' is invalid in C99 [-Wimplicit-function-declaration]
                set_multiplier(S_MO_K(S_L_S(a)));
                ^
hiccup.c:720:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("set_garnir_parameters");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hiccup.c:792:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:822:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1103:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1137:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1215:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1294:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1353:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1401:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:1422:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("internal hiccup.c:construct_mo_mp");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
hiccup.c:1688:12: warning: unused variable 'mat' [-Wunused-variable]
        OP n,p,lc,mat;
                  ^
hiccup.c:1822:3: warning: implicit declaration of function 'root_standardise_tableau_list' is invalid in C99 [-Wimplicit-function-declaration]
                root_standardise_tableau_list(list,e);
                ^
hiccup.c:1892:3: warning: implicit declaration of function 'set_root_multiplier' is invalid in C99 [-Wimplicit-function-declaration]
                set_root_multiplier(S_MO_K(S_L_S(a)));
                ^
hiccup.c:1894:3: warning: implicit declaration of function 'root_standardise_tableau' is invalid in C99 [-Wimplicit-function-declaration]
                root_standardise_tableau(imitate,result);
                ^
hiccup.c:2094:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
set_root_multiplier (extra) OP extra;
^~~~~~~~~~~~~~~~~~~
hiccup.c:2103:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2106:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
root_standardise_tableau_list ( list,  expression)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hiccup.c:2124:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2127:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
root_standardise_tableau ( tableau,  expression)
^~~~~~~~~~~~~~~~~~~~~~~~
hiccup.c:2154:4: warning: implicit declaration of function 'root_garnir_result' is invalid in C99 [-Wimplicit-function-declaration]
                        root_garnir_result(tableau,overall,root_all);
                        ^
hiccup.c:2161:4: warning: implicit declaration of function 'strip_juggle' is invalid in C99 [-Wimplicit-function-declaration]
                        strip_juggle(tableau,0,swaps&1 ? -1 : 1);
                        ^
hiccup.c:2166:3: warning: implicit declaration of function 'root_juggle' is invalid in C99 [-Wimplicit-function-declaration]
                root_juggle(tableau,0,swaps&1 ? -1 : 1);
                ^
hiccup.c:2168:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2171:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
root_juggle ( tableau,  power,  coeff)
^~~~~~~~~~~
hiccup.c:2261:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2264:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
strip_juggle (tableau, power, coeff)
^~~~~~~~~~~~
hiccup.c:2311:3: warning: implicit declaration of function 'generate_sym_tableaux_list' is invalid in C99 [-Wimplicit-function-declaration]
                generate_sym_tableaux_list(i,strip_list);
                ^
hiccup.c:2427:7: warning: '/*' within block comment [-Wcomment]
      /* Then as before */
      ^
hiccup.c:2641:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2647:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
root_garnir_result ( tableau,  mp_coeff,  acc_list)
^~~~~~~~~~~~~~~~~~
hiccup.c:2714:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2808:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
generate_sym_tableaux_list (piece, sym_list)
^~~~~~~~~~~~~~~~~~~~~~~~~~
hiccup.c:2859:2: warning: implicit declaration of function 'coset_generate' is invalid in C99 [-Wimplicit-function-declaration]
        coset_generate(strip,strip);
        ^
hiccup.c:2888:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2891:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
coset_generate (head, wag) INT head; INT wag;
^~~~~~~~~~~~~~
hiccup.c:2900:12: warning: unused variable 'p' [-Wunused-variable]
        INT k,i,j,p,s;
                  ^
hiccup.c:2951:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:2967:15: warning: unused variable 'child' [-Wunused-variable]
        OP temp,momp,child,mon,ext;
                     ^
hiccup.c:2967:21: warning: unused variable 'mon' [-Wunused-variable]
        OP temp,momp,child,mon,ext;
                           ^
hiccup.c:2967:25: warning: unused variable 'ext' [-Wunused-variable]
        OP temp,momp,child,mon,ext;
                               ^
hiccup.c:3061:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:3137:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:3256:8: warning: unused variable 'j' [-Wunused-variable]
        INT i,j,k,erm;
              ^
hiccup.c:3412:6: warning: unused variable 'i' [-Wunused-variable]
        INT i;
            ^
hiccup.c:3445:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
hiccup.c:3519:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                                                                else
                                                                ^
hiccup.c:3532:6: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                                        else
                                        ^
hiccup.c:3461:12: warning: unused variable 'l' [-Wunused-variable]
        INT i,j,k,l,erm=0,non=0;
                  ^
hiccup.c:3787:8: warning: unused variable 'j' [-Wunused-variable]
        INT i,j,k,lo_one,hi_one;
              ^
54 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE io.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
io.c:117:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ferrers");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:192:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sprint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:289:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:311:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("display");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:326:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprintln");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:350:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("print");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:364:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("println");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:603:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sscan");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:925:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectwrite");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
io.c:1140:25: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                        else
                        ^
10 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE ko.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
ko.c:30:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(inh,shape,res,kostka_number);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ko.c:92:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("kostka_number_skewpartition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:201:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("make_n_transpositionmatrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:247:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_kostka");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:427:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nspeicherkostka");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:465:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("removepartij");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:579:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("make_neu_partij_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:725:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(shape,content,c,kostka_tab);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ko.c:1201:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(umriss,cont,res,SYMMETRICA_bricknumber);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ko.c:1384:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_HM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1394:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_HE");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1404:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_HE");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1414:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_HP");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1426:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_SM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1436:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_SE");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1462:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_SP");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1474:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_MH");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1484:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_ME");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1494:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_MS");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1504:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_MP");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1516:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_EM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1526:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_EH");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1536:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_ES");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1546:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_EP");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1557:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_PM");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1567:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_PE");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1577:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_PS");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ko.c:1587:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("SYMMETRICA_PH");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
28 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE list.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
list.c:127:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprint_list");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:476:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_sn_l");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:492:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_l");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:507:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_e");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:522:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_s");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:537:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_ps");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:552:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_h");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:567:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_mon");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:582:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_sn_po");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:647:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("filter_list");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:662:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("transform_apply_list");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:701:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("transformlist");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:726:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("transformlist");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:770:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_list_co");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
list.c:937:9: warning: unused variable 'i' [-Wunused-variable]
    INT i,erg=OK;
        ^
15 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE lo.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
lo.c:33:59: warning: control reaches end of non-void function [-Wreturn-type]
INT set_lo_nopoint(para) INT para; { nofolgezeichen=para; }
                                                          ^
lo.c:559:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("bit_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1035:37: warning: expression result unused [-Wunused-value]
            cy = LOCADD(alocx,alocy,cy);
                 ~~~~~~~~~~~~~~~~~~~^~~
lo.c:149:70: note: expanded from macro 'LOCADD'
    hh=(ly)->w2+cy+(lx)->w2, (lx)->w2=(hh&BMINUSEINS), cy = hh >>EXP,cy
                                                                     ^
lo.c:1049:47: warning: expression result unused [-Wunused-value]
                xl++; cy = LOCADD(alocx,alocy,cy);
                           ~~~~~~~~~~~~~~~~~~~^~~
lo.c:149:70: note: expanded from macro 'LOCADD'
    hh=(ly)->w2+cy+(lx)->w2, (lx)->w2=(hh&BMINUSEINS), cy = hh >>EXP,cy
                                                                     ^
lo.c:1123:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzadd");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1461:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzquores");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1620:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("retteziffer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1710:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mem_size_longint"); 
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1825:34: warning: expression result unused [-Wunused-value]
            cy = LOCADD(&lo,&ov, cy);
                 ~~~~~~~~~~~~~~~~^~~
lo.c:149:70: note: expanded from macro 'LOCADD'
    hh=(ly)->w2+cy+(lx)->w2, (lx)->w2=(hh&BMINUSEINS), cy = hh >>EXP,cy
                                                                     ^
lo.c:1826:45: warning: expression result unused [-Wunused-value]
            ov = hi; cya = LOCADD(aloca,&lo,cya);
                           ~~~~~~~~~~~~~~~~~^~~~
lo.c:149:70: note: expanded from macro 'LOCADD'
    hh=(ly)->w2+cy+(lx)->w2, (lx)->w2=(hh&BMINUSEINS), cy = hh >>EXP,cy
                                                                     ^
lo.c:1848:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzmul");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1888:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzsmul");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:1988:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzsadd");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2129:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal function:ganzkopiere");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2228:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_longint_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2243:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("lochole");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2265:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("intenal function:loclisterette");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2279:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal function:locrette");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2333:13: warning: add explicit braces to avoid dangling else [-Wdangling-else]
            MULT_APPLY_INTEGER(a,b);
            ^
./macro.h:1603:5: note: expanded from macro 'MULT_APPLY_INTEGER'
    else if (S_O_K(b) == LONGINT) erg += mult_apply_integer_longint(a,b);\
    ^
lo.c:2358:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("longint_ende");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2371:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDTYP("calloclongint",struct longint *);
    ^
./macro.h:807:21: note: expanded from macro 'ENDTYP'
#define ENDTYP(a,t) endr_ende: if (erg != OK) EDC(a); return (t) NULL;
                    ^
lo.c:2473:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("init_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2488:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sprint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2499:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("fprint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2518:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("tex_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2534:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2546:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2567:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("freeself_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2582:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_longint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2648:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2751:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2766:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_longint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2800:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:2822:22: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        if (NEGP(c)) ADDINVERS_APPLY(c);
                     ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
lo.c:2828:22: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        if (NEGP(c)) ADDINVERS_APPLY(c);
                     ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
lo.c:2874:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ggt_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3094:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mod_longint_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3121:13: warning: add explicit braces to avoid dangling else [-Wdangling-else]
            else 
            ^
lo.c:3204:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzdiv_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3203:1: warning: unused label 'ee' [-Wunused-label]
ee:
^~~
lo.c:3287:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3306:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("invers_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3339:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3356:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_longint_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3445:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3477:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_longint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3547:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_integer_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3565:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_longint_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3586:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_longint_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3598:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("dec_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3612:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("inc_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3767:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq_longint_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3804:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3842:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("half_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3855:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("psr_apply_i_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3880:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("psl_apply_i_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:3954:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("psl_apply_i_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4117:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("oddify_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4127:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("psl_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4137:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("double_apply_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4190:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        else if (negp(e))
        ^
lo.c:4196:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("quores_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4260:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nullp_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4287:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectread_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4312:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectwrite_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
lo.c:4413:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sscan_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
66 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE ma.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
ma.c:29:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal function:transform_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:78:19: warning: unused variable 'j' [-Wunused-variable]
    INT erg = 0,i,j;
                  ^
ma.c:107:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mod_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:164:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nullp_integermatrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:198:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("einsp_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:413:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_ilih_nm");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:431:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_lh_nm");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:448:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_lh_nm");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:478:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_lh_m");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:509:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_lh_m");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:532:9: warning: unused variable 'i' [-Wunused-variable]
    INT i,j;
        ^
ma.c:532:11: warning: unused variable 'j' [-Wunused-variable]
    INT i,j;
          ^
ma.c:549:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hash_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:576:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:624:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_ilih_m");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:657:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal routine:det050995");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:784:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(mat,part,res,immanente_matrix);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ma.c:1055:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("transpose_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1138:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_integermatrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1307:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_matrix_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1323:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_integermatrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1380:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1430:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("freeself_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1732:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("tex_matrix_co");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1767:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_scalar_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:1782:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_matrix_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:2007:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("trace_matrix");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:2039:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("spalten_summe");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:2125:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("zeilen_summe");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:2152:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,kronecker_product);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ma.c:2320:9: warning: unused variable 'i' [-Wunused-variable]
    INT i,erg=OK;
        ^
ma.c:2384:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("bideterminant");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
ma.c:2426:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,operate_perm_spaltenmatrix);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ma.c:2444:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,operate_perm_bideterminant);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ma.c:2441:8: warning: unused variable 'z' [-Wunused-variable]
    OP z,m; 
       ^
ma.c:2441:10: warning: unused variable 'm' [-Wunused-variable]
    OP z,m; 
         ^
ma.c:2474:2: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,append_behind_matrix_matrix);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
ma.c:2496:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,append_below_matrix_matrix);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
38 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mee.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mee.c:28:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mee_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mee.c:38:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mee_partition_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mee.c:139:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mee_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mee.c:195:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_elmsym_elmsym");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
4 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mem.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mem.c:106:22: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                     MULT_APPLY(f,S_MO_K(mo));
                     ^
./macro.h:1626:51: note: expanded from macro 'MULT_APPLY'
if (S_O_K(a) == INTEGER)  MULT_APPLY_INTEGER(a,b);\
                                                  ^
mem.c:171:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mem_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mem.c:258:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,mult_elmsym_monomial);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mes.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mes.c:67:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mes_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mes.c:195:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_elmsym_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mes.c:224:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        else 
        ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mhe.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mhe.c:20:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhe_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhe.c:154:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhe_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhe.c:213:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_homsym_elmsym");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mhh.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mhh.c:26:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhh_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhh.c:40:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhh_partition_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhh.c:151:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhh_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhh.c:208:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_homsym_homsym");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
4 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mhm.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mhm.c:39:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhm_null__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhm.c:65:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhm_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhm.c:232:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhm_integer_partition_hashtable");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhm.c:290:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_homsym_monomial");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhm.c:396:6: warning: unused label 'endr_ende' [-Wunused-label]
     ENDR("next_part_EXPONENT_apply_limit");
     ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhm.c:478:17: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                MULT_APPLY(faktor,S_MO_K(m));
                ^
./macro.h:1626:51: note: expanded from macro 'MULT_APPLY'
if (S_O_K(a) == INTEGER)  MULT_APPLY_INTEGER(a,b);\
                                                  ^
6 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mhp.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mhp.c:28:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhp_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhp.c:202:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_homsym_powsym");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
2 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mhs.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mhs.c:161:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_homsym_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mhs.c:185:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        else 
        ^
mhs.c:210:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mhs_next_pieri_limit_apply");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mmm.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mmm.c:26:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mmm_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mmm.c:138:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mmm_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mmm.c:172:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mmm_null_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mmm.c:334:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal to mult_monomial_monomial");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mmm.c:361:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_monomial_monomial");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mmm.c:388:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mmm___");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
6 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mms.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mms.c:17:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mms_null");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mms.c:28:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mms_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mms.c:155:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mms_partition_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mms.c:232:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mms___");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mms.c:253:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_monomial_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
5 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mod_dg_sbd.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mod_dg_sbd.c:23:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static init_zero_one(OP part);
~~~~~~ ^
mod_dg_sbd.c:24:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static close_zero_one();
~~~~~~ ^
mod_dg_sbd.c:35:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,operate_perm_spaltenmatrix);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mod_dg_sbd.c:63:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mod_dg_sbd.c:146:12: warning: unused variable 'leading_term' [-Wunused-variable]
        OP leading_term;
           ^
mod_dg_sbd.c:262:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("specht_basis_mod_p");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mod_dg_sbd.c:271:14: warning: unused variable 'aa' [-Wunused-variable]
    OP bb,cc,aa,z,dd;
             ^
mod_dg_sbd.c:347:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(prim,part,e,basis_mod_dg);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mod_dg_sbd.c:373:13: warning: unused variable 'erg' [-Wunused-variable]
    INT i,j,erg =OK;
            ^
mod_dg_sbd.c:390:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mod_dg_sbd.c:430:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("get_symm_specht_poly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mod_dg_sbd.c:433:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static init_zero_one(part) OP part;
~~~~~~ ^
mod_dg_sbd.c:449:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static close_zero_one()
~~~~~~ ^
mod_dg_sbd.c:453:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("internal:close_zero_one");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mod_dg_sbd.c:487:20: warning: unused variable 'j' [-Wunused-variable]
    INT erg = OK,i,j,k;
                   ^
mod_dg_sbd.c:487:22: warning: unused variable 'k' [-Wunused-variable]
    INT erg = OK,i,j,k;
                     ^
mod_dg_sbd.c:543:20: warning: unused variable 'j' [-Wunused-variable]
    INT erg = OK,i,j,k;
                   ^
mod_dg_sbd.c:543:22: warning: unused variable 'k' [-Wunused-variable]
    INT erg = OK,i,j,k;
                     ^
mod_dg_sbd.c:600:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(prim,part,f,basis_mod_dg);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mod_dg_sbd.c:624:62: warning: incompatible pointer types passing 'INT ()' to parameter of type '__compar_fn_t' (aka 'int (*)(const void *, const void *)') [-Wincompatible-pointer-types]
    qsort(S_M_S(e),S_M_HI(e),sizeof(struct object)*S_M_LI(e),mycmp);
                                                             ^~~~~
/usr/include/stdlib.h:762:20: note: passing argument to parameter '__compar' here
                   __compar_fn_t __compar) __nonnull ((1, 4));
                                 ^
mod_dg_sbd.c:678:8: warning: unused variable 'a' [-Wunused-variable]
    OP a,b,c,d,e;
       ^
mod_dg_sbd.c:678:12: warning: unused variable 'c' [-Wunused-variable]
    OP a,b,c,d,e;
           ^
mod_dg_sbd.c:678:14: warning: unused variable 'd' [-Wunused-variable]
    OP a,b,c,d,e;
             ^
mod_dg_sbd.c:47:12: warning: unused function 'println_bid' [-Wunused-function]
static INT println_bid(a) OP a;
           ^
24 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mo.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mo.c:17:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static close_mat();
~~~~~~ ^
mo.c:18:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static init_mat();
~~~~~~ ^
mo.c:1298:12: warning: unused variable 'z' [-Wunused-variable]
        TL_BYTE  *z;
                  ^
mo.c:1326:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1328:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static ak_rewind(a) struct ak *a;
~~~~~~ ^
mo.c:1334:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static ak_fread(buf,size,numb,a) char **buf; 
~~~~~~ ^
mo.c:1351:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static ak_fwrite(buf,size,numb,a) char *buf; 
~~~~~~ ^
mo.c:1377:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static ak_fclose(a) struct ak *a;
~~~~~~ ^
mo.c:1380:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1399:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1403:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1407:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1417:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static init_mat()
~~~~~~ ^
mo.c:1442:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1444:8: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
static close_mat()
~~~~~~ ^
mo.c:1456:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1506:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
mo.c:1557:7: warning: unused variable 'gefunden' [-Wunused-variable]
        INT  gefunden, i,erg;
             ^
mo.c:1558:11: warning: unused variable 'schnittmat' [-Wunused-variable]
        TL_BYTE *schnittmat  ,*z_eins,*z_zwei ,rr ;
                 ^
mo.c:1558:25: warning: unused variable 'z_eins' [-Wunused-variable]
        TL_BYTE *schnittmat  ,*z_eins,*z_zwei ,rr ;
                               ^
mo.c:1558:33: warning: unused variable 'z_zwei' [-Wunused-variable]
        TL_BYTE *schnittmat  ,*z_eins,*z_zwei ,rr ;
                                       ^
mo.c:1558:41: warning: unused variable 'rr' [-Wunused-variable]
        TL_BYTE *schnittmat  ,*z_eins,*z_zwei ,rr ;
                                               ^
mo.c:1560:11: warning: unused variable 'ak_buffer' [-Wunused-variable]
        TL_BYTE *ak_buffer; /* AK 060392 */
                 ^
mo.c:2106:10: warning: unused variable 'mu' [-Wunused-variable]
        TL_BYTE mu;
                ^
mo.c:2486:19: warning: unused variable 'k' [-Wunused-variable]
        INT i,dm,omaxdim,k;
                         ^
mo.c:2867:29: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        fprintf(stderr,"\n dm = %d : %d \n",dm,dim[i]);
                                                ~^          ~~
                                                %ld
mo.c:2867:34: warning: format specifies type 'int' but the argument has type 'INT' (aka 'long') [-Wformat]
                        fprintf(stderr,"\n dm = %d : %d \n",dm,dim[i]);
                                                     ~^        ~~~~~~
                                                     %ld
mo.c:2957:16: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                fscanf(dfp,"%d",&info[0]);
                            ~^  ~~~~~~~~
                            %ld
mo.c:2958:16: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                fscanf(dfp,"%d",&info[1]);
                            ~^  ~~~~~~~~
                            %ld
mo.c:2959:16: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                fscanf(dfp,"%d",&info[2]);
                            ~^  ~~~~~~~~
                            %ld
mo.c:2960:16: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                fscanf(dfp,"%d",&info[3]);
                            ~^  ~~~~~~~~
                            %ld
mo.c:2969:18: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                                fscanf(dfp,"%d",&end);  
                                            ~^  ~~~~
                                            %ld
mo.c:2988:25: warning: format specifies type 'int *' but the argument has type 'INT *' (aka 'long *') [-Wformat]
                                end = (fscanf(dfp,"%d",&k) > 0) ;
                                                   ~^  ~~
                                                   %ld
mo.c:2948:11: warning: unused variable 'd' [-Wunused-variable]
        TL_BYTE *d;
                 ^
mo.c:3558:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("brauer_char");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mo.c:4511:45: warning: unused variable 'z' [-Wunused-variable]
        TL_BYTE *dar,*_hz,*vi,*vj,*z_eins,*z_zwei,*z;
                                                   ^
mo.c:4513:8: warning: unused variable 'klam' [-Wunused-variable]
        INT q,klam;
              ^
mo.c:4907:2: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(part,prim,res,schnitt_mat);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mo.c:4450:12: warning: unused function 'zykel' [-Wunused-function]
static INT zykel(liste,zyk) TL_BYTE *liste, *zyk;
           ^
mo.c:1315:20: warning: unused function 'ak_tmpfile' [-Wunused-function]
static struct ak * ak_tmpfile()
                   ^
mo.c:1328:8: warning: unused function 'ak_rewind' [-Wunused-function]
static ak_rewind(a) struct ak *a;
       ^
mo.c:1334:8: warning: unused function 'ak_fread' [-Wunused-function]
static ak_fread(buf,size,numb,a) char **buf; 
       ^
mo.c:1351:8: warning: unused function 'ak_fwrite' [-Wunused-function]
static ak_fwrite(buf,size,numb,a) char *buf; 
       ^
mo.c:1377:8: warning: unused function 'ak_fclose' [-Wunused-function]
static ak_fclose(a) struct ak *a;
       ^
44 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mpp.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mpp.c:37:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mpp_integer__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mpp.c:47:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mpp_partition_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mpp.c:255:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mpp_integer_partition_");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mpp.c:309:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_powsym_powsym");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mpp.c:335:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mpp___");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
5 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mps.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mps.c:34:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mps_null");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mps.c:161:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mps___");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mps.c:194:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_powsym_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
3 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mse.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE msh.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE msm.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE mss.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
mss.c:438:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("newtrans_eins");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:453:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("newtrans");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:506:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("newtrans_maxpart");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:517:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("newtrans_limit_limitfunction");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:529:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("newtrans_limitfunction");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:751:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mss_hashtable__");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:774:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mss_hashtable__maxpart_maxlength");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:820:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mss___maxpart_maxlength");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:846:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_schur_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:877:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_schur_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:904:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_part_part_perm");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:941:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_perm_schur");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:960:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("outerproduct_schur_limit_limitfunction");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:978:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("outerproduct_schur_limitfunction");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
mss.c:1075:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,schur_part_skewschur);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mss.c:1075:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,schur_part_skewschur);
        ^
./macro.h:832:5: note: expanded from macro 'CE3'
    else if (a==c)\
    ^
mss.c:1126:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,part_part_skewschur);
        ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
mss.c:1126:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        CE3(a,b,c,part_part_skewschur);
        ^
./macro.h:832:5: note: expanded from macro 'CE3'
    else if (a==c)\
    ^
mss.c:25:12: warning: unused function 'newtrans_printstack' [-Wunused-function]
static INT newtrans_printstack();
           ^
19 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE muir.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
muir.c:628:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("plet.c:internal");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
1 warning generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE na.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE nb.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
nb.c:183:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        ADDINVERS_APPLY(b);
        ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:170:10: warning: unused variable 'ten' [-Wunused-variable]
    OP b,ten;
         ^
nb.c:193:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("number_of_bits");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:318:21: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                    FREESELF(S_L_S(ptr_zwei));
                    ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nb.c:817:19: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        if (flag) INC(f);
                  ^
./macro.h:1461:41: note: expanded from macro 'INC'
if (S_O_K(a) == INTEGER) INC_INTEGER(a);\
                                        ^
nb.c:1021:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("square_free_part_0");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:1083:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("square_free_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:1105:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,jacobi);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nb.c:1122:18: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    if (NEGP(y)) ADDINVERS_APPLY(y);
                 ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:1162:13: warning: add explicit braces to avoid dangling else [-Wdangling-else]
            ADDINVERS_APPLY(z);
            ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:1208:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        ADDINVERS_APPLY(b_eins);
        ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:1242:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        ADDINVERS_APPLY(c);
        ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:1361:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("init_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:1374:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("init_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:1811:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,eval_monopoly);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nb.c:1862:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_skn_mp");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:1926:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2097:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_scalar_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2112:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_scalar_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2148:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_scalar_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2171:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_monopoly_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2464:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2555:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2567:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2612:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_apply_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2637:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nullp_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2649:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2671:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("raise_power_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2756:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_iindex_monopoly");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:2958:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("make_monopoly_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3020:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_scalar_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3171:21: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                    ADDINVERS_APPLY(temp_eins); /* AK 259492 */
                    ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:3202:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_sqrad_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3241:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3254:26: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    if (S_O_K(c)!=EMPTY) FREESELF(c);
                         ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nb.c:3473:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("nullp_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3490:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("einsp_sqrad");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:3509:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("einsp_cyclotomic");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:4093:16: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    if (ff==0) ADDINVERS_APPLY(b);
               ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nb.c:4300:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("make_index_coeff_power_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:4359:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_apply_scalar_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:4441:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_cyclo_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:4572:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:4583:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("addinvers_cyclo");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nb.c:5241:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("invers_monopoly");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
45 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE nc.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
nc.c:173:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_gl_nc");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:546:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_gl_chartafel");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:586:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_vec_grad_nc_hyp");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:627:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("reduce_nc_kranz");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:641:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mult_nc_kranz");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:659:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("grouporder_kranz");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:689:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_nc_kranz");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:880:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_gl_cyclic");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:893:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_gl_alt");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:1856:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("wert");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:1908:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hook_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:2041:1: warning: control reaches end of non-void function [-Wreturn-type]
}
^
nc.c:2046:12: warning: unused variable 'y' [-Wunused-variable]
    OP d,z,y;INT i,j;
           ^
nc.c:2046:20: warning: unused variable 'j' [-Wunused-variable]
    OP d,z,y;INT i,j;
                   ^
nc.c:2093:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("class_label_glnq");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:2098:26: warning: unused variable 'k' [-Wunused-variable]
        OP pa,cm;INT i,erg=OK,j,k;
                                ^
nc.c:2186:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("class_rep");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:2216:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("compute_gl_charvalue");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:2235:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("compute_gl_il_dimension");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nc.c:2254:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("compute_gl_cl_classorder");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
20 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE nu.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
nu.c:258:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,sub);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:378:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,d,add);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:878:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("binom_small");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:1195:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,div);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:1339:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,mod);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:1407:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,ganzdiv);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:1435:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzdiv_longint");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:1446:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ganzdiv_integer_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:1487:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("mod_apply_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:1680:9: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        FREESELF(d);
        ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:1811:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ggt_integer_integer");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:1892:22: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        if (NEGP(c)) ADDINVERS_APPLY(c);
                     ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nu.c:1898:22: warning: add explicit braces to avoid dangling else [-Wdangling-else]
        if (NEGP(c)) ADDINVERS_APPLY(c);
                     ^
./macro.h:1054:53: note: expanded from macro 'ADDINVERS_APPLY'
if (S_O_K(a) == INTEGER) ADDINVERS_APPLY_INTEGER(a);\
                                                    ^
nu.c:1940:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,ggt);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:1935:8: warning: unused variable 'i' [-Wunused-variable]
    OP i,j;
       ^
nu.c:1935:10: warning: unused variable 'j' [-Wunused-variable]
    OP i,j;
         ^
nu.c:1936:16: warning: unused variable 'comperg' [-Wunused-variable]
    INT erg=OK,comperg;
               ^
nu.c:2012:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,hoch);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:2042:27: warning: add explicit braces to avoid dangling else [-Wdangling-else]
            if (bit(N,f)) MULT_APPLY(z,c);
                          ^
./macro.h:1626:51: note: expanded from macro 'MULT_APPLY'
if (S_O_K(a) == INTEGER)  MULT_APPLY_INTEGER(a,b);\
                                                  ^
nu.c:2036:17: warning: unused variable 'i' [-Wunused-variable]
            INT i;
                ^
nu.c:2229:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("multadd_apply");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
nu.c:2240:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,d,mult);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:2432:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,scalarproduct);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
nu.c:2635:16: warning: implicit declaration of function 'invers_apply_ff' is invalid in C99 [-Wimplicit-function-declaration]
        erg += invers_apply_ff(a);
               ^
nu.c:3107:1: warning: unused label 'ende' [-Wunused-label]
ende:
^~~~~
nu.c:3187:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,multinom);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
26 warnings generated.
gcc -c -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall  -DFAST -DALLTRUE part.c
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
part.c:62:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hookp");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:71:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("inc_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:167:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("strictp");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:184:2: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("oddpartsp");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:199:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,sub_part_part);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:242:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,add_part_part);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:538:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("add_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:549:9: warning: unused variable 'i' [-Wunused-variable]
    INT i,erg=OK,wp,ww;
        ^
part.c:557:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("first_composition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:574:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(n,k,c,first_subset);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:649:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("next_composition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:908:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(n,m,res,gupta_nm);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:974:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("gupta_tafel");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1208:17: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                MULT_APPLY_INTEGER(zw,nenner);
                ^
./macro.h:1603:5: note: expanded from macro 'MULT_APPLY_INTEGER'
    else if (S_O_K(b) == LONGINT) erg += mult_apply_integer_longint(a,b);\
    ^
part.c:1283:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("first_part_EXPONENT");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1339:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("first_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1477:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("next_part_VECTOR");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1529:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("next_part_EXPONENT");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1734:38: warning: unused variable 'i' [-Wunused-variable]
         INT ai=S_I_I(a),bi=S_I_I(b),i;
                                     ^
part.c:1740:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("numberofparts_exact_parts");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1770:15: error: non-void function 'rec01' should return a value [-Wreturn-type]
    if (ni<0) return;
              ^
part.c:1771:36: error: non-void function 'rec01' should return a value [-Wreturn-type]
    if (not EMPTYP(S_V_I(vec,ni))) return;
                                   ^
part.c:1873:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ordcen");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1899:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_tableaux_polynom");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:1932:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(umriss,alph,res,m_umriss_tableaux);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:2071:17: warning: add explicit braces to avoid dangling else [-Wdangling-else]
                else if (S_T_IJI(tab,i,j) < S_I_I(alph))
                ^
part.c:2112:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_augpart_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2165:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq_partition_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2176:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("eq_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2281:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("comp_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2293:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("part_anfang");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2332:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("freepartition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2391:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("copy_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2413:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("tex_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2431:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDTYP("callocpartition", struct partition * ); 
    ^
./macro.h:807:21: note: expanded from macro 'ENDTYP'
#define ENDTYP(a,t) endr_ende: if (erg != OK) EDC(a); return (t) NULL;
                    ^
part.c:2580:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("ordcon_char");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2671:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_int_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2694:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_i_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2746:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_ks_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2772:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_ks_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2785:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_kl_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2800:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("b_kl_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2860:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("lastof_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2893:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("length_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2959:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_exponentpartition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:2982:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("scan_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3053:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("s_pa_ii");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3063:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDO("s_pa_l");
    ^
./macro.h:806:17: note: expanded from macro 'ENDO'
#define ENDO(a) endr_ende: if (erg != OK) EDC(a); return (OP) NULL;
                ^
part.c:3072:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("s_pa_li");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3124:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectread_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3138:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("objectwrite_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3151:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("m_il_pa");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3223:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_EXPONENT_VECTOR_apply");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3258:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_EXPONENT_VECTOR");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3325:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("weight_augpart");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3354:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("length_comp_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3374:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("maxpart_comp_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3416:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sub_comp_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3750:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("t_PARTITION_AUGPART");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:3978:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sscan_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4024:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("sscan_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4047:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("cast_apply_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4212:5: warning: add explicit braces to avoid dangling else [-Wdangling-else]
    CE3(a,b,c,p_hook_diagramm);
    ^
./macro.h:853:13: note: expanded from macro 'CE3'
            FREESELF(c);\
            ^
./macro.h:1343:5: note: expanded from macro 'FREESELF'
    else if (S_O_K(a) == INTEGER) C_O_K(a,EMPTY);\
    ^
part.c:4284:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("odd_to_strict_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4323:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("strict_to_odd_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4348:9: warning: unused label 'endr_ende' [-Wunused-label]
        ENDR("nachfolger_young");
        ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4675:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("multiplicity_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4685:15: warning: unused variable 'j' [-Wunused-variable]
        INT i,j;
              ^
part.c:4693:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("durfee_size_part");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
part.c:4727:5: warning: unused label 'endr_ende' [-Wunused-label]
    ENDR("hook_partition");
    ^
./macro.h:805:17: note: expanded from macro 'ENDR'
#define ENDR(a) endr_ende: if (erg != OK) EDC(a); return erg;
                ^
68 warnings and 2 errors generated.
make[1]: *** [part.o] Error 1
make[1]: Leaving directory `/«PKGBUILDDIR»'
make: *** [debian/stamp-makefile-build] Error 2
dpkg-buildpackage: error: debian/rules build-arch gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20120623-1611

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Architecture: amd64
Build-Space: 24240
Build-Time: 154
Distribution: unstable
Fail-Stage: build
Install-Time: 7
Job: symmetrica_2.0-1
Package: symmetrica
Package-Time: 185
Source-Version: 2.0-1
Space: 24240
Status: attempted
Version: 2.0-1
────────────────────────────────────────────────────────────────────────────────
Finished at 20120623-1611
Build needed 00:03:05, 24240k disc space
DC-Status: Failed 186.043293s
DC-Time-Estimation: 186.043293 versus expected 1318 (r/m: 6.08437256053084 ; m: 186.043293)
