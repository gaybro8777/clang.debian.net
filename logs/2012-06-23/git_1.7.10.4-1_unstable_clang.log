DC-Build-Header: git 1:1.7.10.4-1 / Sat Jun 23 00:38:08 +0000 2012
DC-Task: logfile:/tmp/git_1.7.10.4-1_unstable_clang.log version:1:1.7.10.4-1 chroot:unstable modes:binary-only:clang source:git architecture:any esttime:5121
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang git_1:1.7.10.4-1'
sbuild (Debian sbuild) 0.62.5 (13 Jul 2011) on ip-10-28-89-17.ec2.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ git 1:1.7.10.4-1 (amd64)                                   23 Jun 2012 00:38 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: git
Version: 1:1.7.10.4-1
Source Version: 1:1.7.10.4-1
Distribution: unstable
Architecture: amd64

I: NOTICE: Log filtering will replace 'build/git-koiWsj/git-1.7.10.4' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/git-koiWsj' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-617e56af-feae-432b-8534-86ec44127c66' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Ign http://localhost unstable InRelease
Get:1 http://localhost unstable Release.gpg [836 B]
Get:2 http://localhost unstable Release [233 kB]
Get:3 http://localhost unstable/main Sources/DiffIndex [7876 B]
Get:4 http://localhost unstable/main amd64 Packages/DiffIndex [7876 B]
Get:5 http://localhost unstable/main Translation-en/DiffIndex [7876 B]
Get:6 http://localhost unstable/main 2012-06-22-1416.06.pdiff [15.9 kB]
Get:7 http://localhost unstable/main amd64 2012-06-22-1416.06.pdiff [23.9 kB]
Get:8 http://localhost unstable/main 2012-06-22-1416.06.pdiff [15.9 kB]
Get:9 http://localhost unstable/main 2012-06-22-1416.06.pdiff [1537 B]
Get:10 http://localhost unstable/main amd64 2012-06-22-1416.06.pdiff [23.9 kB]
Get:11 http://localhost unstable/main 2012-06-22-2014.37.pdiff [14.8 kB]
Get:12 http://localhost unstable/main 2012-06-22-1416.06.pdiff [1537 B]
Get:13 http://localhost unstable/main amd64 2012-06-22-2014.37.pdiff [12.8 kB]
Get:14 http://localhost unstable/main 2012-06-22-2014.37.pdiff [14.8 kB]
Get:15 http://localhost unstable/main 2012-06-22-2014.37.pdiff [234 B]
Get:16 http://localhost unstable/main amd64 2012-06-22-2014.37.pdiff [12.8 kB]
Get:17 http://localhost unstable/main 2012-06-22-2014.37.pdiff [234 B]
Fetched 327 kB in 5s (59.6 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be upgraded:
  base-passwd zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 128 kB of archives.
After this operation, 11.3 kB disk space will be freed.
Get:1 http://localhost/debian/ unstable/main base-passwd amd64 3.5.25 [40.9 kB]
Get:2 http://localhost/debian/ unstable/main zlib1g amd64 1:1.2.7.dfsg-13 [87.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 128 kB in 0s (9073 kB/s)
(Reading database ... 11730 files and directories currently installed.)
Preparing to replace base-passwd 3.5.24 (using .../base-passwd_3.5.25_amd64.deb) ...
Unpacking replacement base-passwd ...
Setting up base-passwd (3.5.25) ...
(Reading database ... 11730 files and directories currently installed.)
Preparing to replace zlib1g:amd64 1:1.2.7.dfsg-12 (using .../zlib1g_1%3a1.2.7.dfsg-13_amd64.deb) ...
Unpacking replacement zlib1g:amd64 ...
Setting up zlib1g:amd64 (1:1.2.7.dfsg-13) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
NOTICE: 'git' packaging is maintained in the 'Git' version control system at:
http://smarden.org/git/git.git/
Need to get 4314 kB of source archives.
Get:1 http://localhost/debian/ unstable/main git 1:1.7.10.4-1 (dsc) [1964 B]
Get:2 http://localhost/debian/ unstable/main git 1:1.7.10.4-1 (tar) [3813 kB]
Get:3 http://localhost/debian/ unstable/main git 1:1.7.10.4-1 (diff) [499 kB]
Fetched 4314 kB in 0s (38.2 MB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ echo 'Install of clang'
Install of clang
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends clang -t unstable
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-dev libffi5 libllvm3.1
Recommended packages:
  llvm-3.1-dev python
The following NEW packages will be installed:
  clang libclang-common-dev libffi5 libllvm3.1
0 upgraded, 4 newly installed, 0 to remove and 0 not upgraded.
Need to get 13.1 MB of archives.
After this operation, 35.6 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libffi5 amd64 3.0.10-3 [24.8 kB]
Get:2 http://localhost/debian/ unstable/main libllvm3.1 amd64 3.1-1 [7276 kB]
Get:3 http://localhost/debian/ unstable/main libclang-common-dev amd64 3.1-6 [84.0 kB]
Get:4 http://localhost/debian/ unstable/main clang amd64 3.1-6 [5755 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 13.1 MB in 0s (40.2 MB/s)
Selecting previously unselected package libffi5:amd64.
(Reading database ... 11730 files and directories currently installed.)
Unpacking libffi5:amd64 (from .../libffi5_3.0.10-3_amd64.deb) ...
Selecting previously unselected package libllvm3.1:amd64.
Unpacking libllvm3.1:amd64 (from .../libllvm3.1_3.1-1_amd64.deb) ...
Selecting previously unselected package libclang-common-dev.
Unpacking libclang-common-dev (from .../libclang-common-dev_3.1-6_amd64.deb) ...
Selecting previously unselected package clang.
Unpacking clang (from .../archives/clang_3.1-6_amd64.deb) ...
Setting up libffi5:amd64 (3.0.10-3) ...
Setting up libllvm3.1:amd64 (3.1-1) ...
Setting up libclang-common-dev (3.1-6) ...
Setting up clang (3.1-6) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSION=4.7
+ cd /usr/bin
+ rm g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-cqzAth/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/706 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 11810 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), libz-dev, libcurl4-gnutls-dev | libcurl3-gnutls-dev, libexpat1-dev, subversion, libsvn-perl | libsvn-core-perl, tcl8.5, gettext, cvs, cvsps, libdbd-sqlite3-perl, unzip, libio-pty-perl, dpkg-dev (>= 1.15.7~)
Filtered Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), libz-dev, libcurl4-gnutls-dev, libexpat1-dev, subversion, libsvn-perl, tcl8.5, gettext, cvs, cvsps, libdbd-sqlite3-perl, unzip, libio-pty-perl, dpkg-dev (>= 1.15.7~)
dpkg-deb: building package `sbuild-build-depends-git-dummy' in `/«BUILDDIR»/resolver-oh1Rdd/apt_archive/sbuild-build-depends-git-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install git build dependencies (apt-based resolver)                          │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  adduser comerr-dev cvs cvsps gettext gettext-base krb5-multidev libapr1
  libaprutil1 libasprintf0c2 libbsd0 libcroco3 libcurl3-gnutls
  libcurl4-gnutls-dev libdbd-sqlite3-perl libdbi-perl libexpat1 libexpat1-dev
  libgcrypt11 libgcrypt11-dev libgettextpo0 libglib2.0-0 libgnutls-dev
  libgnutls-openssl27 libgnutls26 libgnutlsxx27 libgpg-error-dev libgpg-error0
  libgssapi-krb5-2 libgssrpc4 libidn11 libidn11-dev libio-pty-perl
  libk5crypto3 libkadm5clnt-mit8 libkadm5srv-mit8 libkdb5-6 libkeyutils1
  libkrb5-3 libkrb5-dev libkrb5support0 libldap-2.4-2 libldap2-dev
  libneon27-gnutls libnet-daemon-perl libp11-kit-dev libp11-kit0 libpcre3
  libplrpc-perl libpopt0 librtmp-dev librtmp0 libsasl2-2 libserf1 libsqlite3-0
  libssh2-1 libssh2-1-dev libssl1.0.0 libsvn-perl libsvn1 libtasn1-3
  libtasn1-3-dev libunistring0 libxml2 pkg-config subversion tcl8.5 unzip
  zlib1g-dev
Suggested packages:
  doc-base mksh rcs gettext-doc krb5-doc libcurl3-dbg rng-tools
  libgcrypt11-doc gnutls-doc krb5-user subversion-tools db5.1-util
  tcl-tclreadline zip
Recommended packages:
  openssh-client curl wget lynx-cur autopoint ca-certificates libglib2.0-data
  shared-mime-info krb5-locales libsasl2-modules xml-core
The following NEW packages will be installed:
  adduser comerr-dev cvs cvsps gettext gettext-base krb5-multidev libapr1
  libaprutil1 libasprintf0c2 libbsd0 libcroco3 libcurl3-gnutls
  libcurl4-gnutls-dev libdbd-sqlite3-perl libdbi-perl libexpat1 libexpat1-dev
  libgcrypt11 libgcrypt11-dev libgettextpo0 libglib2.0-0 libgnutls-dev
  libgnutls-openssl27 libgnutls26 libgnutlsxx27 libgpg-error-dev libgpg-error0
  libgssapi-krb5-2 libgssrpc4 libidn11 libidn11-dev libio-pty-perl
  libk5crypto3 libkadm5clnt-mit8 libkadm5srv-mit8 libkdb5-6 libkeyutils1
  libkrb5-3 libkrb5-dev libkrb5support0 libldap-2.4-2 libldap2-dev
  libneon27-gnutls libnet-daemon-perl libp11-kit-dev libp11-kit0 libpcre3
  libplrpc-perl libpopt0 librtmp-dev librtmp0 libsasl2-2 libserf1 libsqlite3-0
  libssh2-1 libssh2-1-dev libssl1.0.0 libsvn-perl libsvn1 libtasn1-3
  libtasn1-3-dev libunistring0 libxml2 pkg-config
  sbuild-build-depends-git-dummy subversion tcl8.5 unzip zlib1g-dev
0 upgraded, 70 newly installed, 0 to remove and 0 not upgraded.
Need to get 26.9 MB/26.9 MB of archives.
After this operation, 65.5 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libpopt0 amd64 1.16-7 [56.4 kB]
Get:2 http://localhost/debian/ unstable/main libssl1.0.0 amd64 1.0.1c-3 [1211 kB]
Get:3 http://localhost/debian/ unstable/main libasprintf0c2 amd64 0.18.1.1-9 [26.8 kB]
Get:4 http://localhost/debian/ unstable/main libgpg-error0 amd64 1.10-3 [66.8 kB]
Get:5 http://localhost/debian/ unstable/main libgcrypt11 amd64 1.5.0-3 [298 kB]
Get:6 http://localhost/debian/ unstable/main libp11-kit0 amd64 0.12-3 [52.8 kB]
Get:7 http://localhost/debian/ unstable/main libtasn1-3 amd64 2.13-2 [67.7 kB]
Get:8 http://localhost/debian/ unstable/main libgnutls26 amd64 2.12.20-1 [616 kB]
Get:9 http://localhost/debian/ unstable/main libgnutls-openssl27 amd64 2.12.20-1 [220 kB]
Get:10 http://localhost/debian/ unstable/main libkeyutils1 amd64 1.5.5-2 [9300 B]
Get:11 http://localhost/debian/ unstable/main libkrb5support0 amd64 1.10.1+dfsg-1 [49.0 kB]
Get:12 http://localhost/debian/ unstable/main libk5crypto3 amd64 1.10.1+dfsg-1 [112 kB]
Get:13 http://localhost/debian/ unstable/main libkrb5-3 amd64 1.10.1+dfsg-1 [393 kB]
Get:14 http://localhost/debian/ unstable/main libgssapi-krb5-2 amd64 1.10.1+dfsg-1 [147 kB]
Get:15 http://localhost/debian/ unstable/main libgssrpc4 amd64 1.10.1+dfsg-1 [87.3 kB]
Get:16 http://localhost/debian/ unstable/main libidn11 amd64 1.25-2 [178 kB]
Get:17 http://localhost/debian/ unstable/main libkadm5clnt-mit8 amd64 1.10.1+dfsg-1 [67.4 kB]
Get:18 http://localhost/debian/ unstable/main libkdb5-6 amd64 1.10.1+dfsg-1 [66.2 kB]
Get:19 http://localhost/debian/ unstable/main libkadm5srv-mit8 amd64 1.10.1+dfsg-1 [84.4 kB]
Get:20 http://localhost/debian/ unstable/main libsasl2-2 amd64 2.1.25.dfsg1-4+b1 [120 kB]
Get:21 http://localhost/debian/ unstable/main libldap-2.4-2 amd64 2.4.28-1.3 [240 kB]
Get:22 http://localhost/debian/ unstable/main libpcre3 amd64 1:8.30-5 [242 kB]
Get:23 http://localhost/debian/ unstable/main libsqlite3-0 amd64 3.7.13-1 [455 kB]
Get:24 http://localhost/debian/ unstable/main libxml2 amd64 2.8.0+dfsg1-4 [903 kB]
Get:25 http://localhost/debian/ unstable/main libbsd0 amd64 0.4.0-1 [54.7 kB]
Get:26 http://localhost/debian/ unstable/main libglib2.0-0 amd64 2.32.3-1 [2081 kB]
Get:27 http://localhost/debian/ unstable/main libcroco3 amd64 0.6.5-1 [151 kB]
Get:28 http://localhost/debian/ unstable/main librtmp0 amd64 2.4+20111222.git4e06e21-1 [62.3 kB]
Get:29 http://localhost/debian/ unstable/main libssh2-1 amd64 1.4.2-1 [79.0 kB]
Get:30 http://localhost/debian/ unstable/main libcurl3-gnutls amd64 7.26.0-1 [321 kB]
Get:31 http://localhost/debian/ unstable/main libexpat1 amd64 2.1.0-1 [141 kB]
Get:32 http://localhost/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:33 http://localhost/debian/ unstable/main libgettextpo0 amd64 0.18.1.1-9 [145 kB]
Get:34 http://localhost/debian/ unstable/main libapr1 amd64 1.4.6-3 [99.6 kB]
Get:35 http://localhost/debian/ unstable/main libaprutil1 amd64 1.4.1-2 [89.7 kB]
Get:36 http://localhost/debian/ unstable/main libserf1 amd64 1.1.0-2 [46.8 kB]
Get:37 http://localhost/debian/ unstable/main libneon27-gnutls amd64 0.29.6-3 [142 kB]
Get:38 http://localhost/debian/ unstable/main libsvn1 amd64 1.7.5-1 [1195 kB]
Get:39 http://localhost/debian/ unstable/main libsvn-perl amd64 1.7.5-1 [1282 kB]
Get:40 http://localhost/debian/ unstable/main libgnutlsxx27 amd64 2.12.20-1 [224 kB]
Get:41 http://localhost/debian/ unstable/main adduser all 3.113+nmu3 [264 kB]
Get:42 http://localhost/debian/ unstable/main gettext-base amd64 0.18.1.1-9 [154 kB]
Get:43 http://localhost/debian/ unstable/main cvs amd64 2:1.12.13+real-9 [2755 kB]
Get:44 http://localhost/debian/ unstable/main cvsps amd64 2.1-6 [50.9 kB]
Get:45 http://localhost/debian/ unstable/main gettext amd64 0.18.1.1-9 [1975 kB]
Get:46 http://localhost/debian/ unstable/main comerr-dev amd64 2.1-1.42.4-3 [42.8 kB]
Get:47 http://localhost/debian/ unstable/main krb5-multidev amd64 1.10.1+dfsg-1 [153 kB]
Get:48 http://localhost/debian/ unstable/main libgpg-error-dev amd64 1.10-3 [42.5 kB]
Get:49 http://localhost/debian/ unstable/main libgcrypt11-dev amd64 1.5.0-3 [402 kB]
Get:50 http://localhost/debian/ unstable/main zlib1g-dev amd64 1:1.2.7.dfsg-13 [215 kB]
Get:51 http://localhost/debian/ unstable/main libtasn1-3-dev amd64 2.13-2 [389 kB]
Get:52 http://localhost/debian/ unstable/main libp11-kit-dev amd64 0.12-3 [67.8 kB]
Get:53 http://localhost/debian/ unstable/main libgnutls-dev amd64 2.12.20-1 [751 kB]
Get:54 http://localhost/debian/ unstable/main pkg-config amd64 0.26-1 [59.5 kB]
Get:55 http://localhost/debian/ unstable/main libidn11-dev amd64 1.25-2 [664 kB]
Get:56 http://localhost/debian/ unstable/main libkrb5-dev amd64 1.10.1+dfsg-1 [39.4 kB]
Get:57 http://localhost/debian/ unstable/main libldap2-dev amd64 2.4.28-1.3 [535 kB]
Get:58 http://localhost/debian/ unstable/main librtmp-dev amd64 2.4+20111222.git4e06e21-1 [72.8 kB]
Get:59 http://localhost/debian/ unstable/main libssh2-1-dev amd64 1.4.2-1 [257 kB]
Get:60 http://localhost/debian/ unstable/main libcurl4-gnutls-dev amd64 7.26.0-1 [1257 kB]
Get:61 http://localhost/debian/ unstable/main libnet-daemon-perl all 0.48-1 [46.2 kB]
Get:62 http://localhost/debian/ unstable/main libplrpc-perl all 0.2020-2 [36.0 kB]
Get:63 http://localhost/debian/ unstable/main libdbi-perl amd64 1.622-1 [898 kB]
Get:64 http://localhost/debian/ unstable/main libdbd-sqlite3-perl amd64 1.37-1 [113 kB]
Get:65 http://localhost/debian/ unstable/main libexpat1-dev amd64 2.1.0-1 [229 kB]
Get:66 http://localhost/debian/ unstable/main libio-pty-perl amd64 1:1.08-1+b2 [40.0 kB]
Get:67 http://localhost/debian/ unstable/main subversion amd64 1.7.5-1 [1295 kB]
Get:68 http://localhost/debian/ unstable/main tcl8.5 amd64 8.5.11-2 [1627 kB]
Get:69 http://localhost/debian/ unstable/main unzip amd64 6.0-6 [194 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 26.9 MB in 0s (31.5 MB/s)
Selecting previously unselected package libpopt0:amd64.
(Reading database ... 11810 files and directories currently installed.)
Unpacking libpopt0:amd64 (from .../libpopt0_1.16-7_amd64.deb) ...
Selecting previously unselected package libssl1.0.0:amd64.
Unpacking libssl1.0.0:amd64 (from .../libssl1.0.0_1.0.1c-3_amd64.deb) ...
Selecting previously unselected package libasprintf0c2:amd64.
Unpacking libasprintf0c2:amd64 (from .../libasprintf0c2_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package libgpg-error0:amd64.
Unpacking libgpg-error0:amd64 (from .../libgpg-error0_1.10-3_amd64.deb) ...
Selecting previously unselected package libgcrypt11:amd64.
Unpacking libgcrypt11:amd64 (from .../libgcrypt11_1.5.0-3_amd64.deb) ...
Selecting previously unselected package libp11-kit0:amd64.
Unpacking libp11-kit0:amd64 (from .../libp11-kit0_0.12-3_amd64.deb) ...
Selecting previously unselected package libtasn1-3:amd64.
Unpacking libtasn1-3:amd64 (from .../libtasn1-3_2.13-2_amd64.deb) ...
Selecting previously unselected package libgnutls26:amd64.
Unpacking libgnutls26:amd64 (from .../libgnutls26_2.12.20-1_amd64.deb) ...
Selecting previously unselected package libgnutls-openssl27:amd64.
Unpacking libgnutls-openssl27:amd64 (from .../libgnutls-openssl27_2.12.20-1_amd64.deb) ...
Selecting previously unselected package libkeyutils1:amd64.
Unpacking libkeyutils1:amd64 (from .../libkeyutils1_1.5.5-2_amd64.deb) ...
Selecting previously unselected package libkrb5support0:amd64.
Unpacking libkrb5support0:amd64 (from .../libkrb5support0_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libk5crypto3:amd64.
Unpacking libk5crypto3:amd64 (from .../libk5crypto3_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libkrb5-3:amd64.
Unpacking libkrb5-3:amd64 (from .../libkrb5-3_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libgssapi-krb5-2:amd64.
Unpacking libgssapi-krb5-2:amd64 (from .../libgssapi-krb5-2_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libgssrpc4:amd64.
Unpacking libgssrpc4:amd64 (from .../libgssrpc4_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libidn11:amd64.
Unpacking libidn11:amd64 (from .../libidn11_1.25-2_amd64.deb) ...
Selecting previously unselected package libkadm5clnt-mit8:amd64.
Unpacking libkadm5clnt-mit8:amd64 (from .../libkadm5clnt-mit8_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libkdb5-6:amd64.
Unpacking libkdb5-6:amd64 (from .../libkdb5-6_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libkadm5srv-mit8:amd64.
Unpacking libkadm5srv-mit8:amd64 (from .../libkadm5srv-mit8_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libsasl2-2:amd64.
Unpacking libsasl2-2:amd64 (from .../libsasl2-2_2.1.25.dfsg1-4+b1_amd64.deb) ...
Selecting previously unselected package libldap-2.4-2:amd64.
Unpacking libldap-2.4-2:amd64 (from .../libldap-2.4-2_2.4.28-1.3_amd64.deb) ...
Selecting previously unselected package libpcre3:amd64.
Unpacking libpcre3:amd64 (from .../libpcre3_1%3a8.30-5_amd64.deb) ...
Selecting previously unselected package libsqlite3-0:amd64.
Unpacking libsqlite3-0:amd64 (from .../libsqlite3-0_3.7.13-1_amd64.deb) ...
Selecting previously unselected package libxml2:amd64.
Unpacking libxml2:amd64 (from .../libxml2_2.8.0+dfsg1-4_amd64.deb) ...
Selecting previously unselected package libbsd0:amd64.
Unpacking libbsd0:amd64 (from .../libbsd0_0.4.0-1_amd64.deb) ...
Selecting previously unselected package libglib2.0-0:amd64.
Unpacking libglib2.0-0:amd64 (from .../libglib2.0-0_2.32.3-1_amd64.deb) ...
Selecting previously unselected package libcroco3:amd64.
Unpacking libcroco3:amd64 (from .../libcroco3_0.6.5-1_amd64.deb) ...
Selecting previously unselected package librtmp0:amd64.
Unpacking librtmp0:amd64 (from .../librtmp0_2.4+20111222.git4e06e21-1_amd64.deb) ...
Selecting previously unselected package libssh2-1:amd64.
Unpacking libssh2-1:amd64 (from .../libssh2-1_1.4.2-1_amd64.deb) ...
Selecting previously unselected package libcurl3-gnutls:amd64.
Unpacking libcurl3-gnutls:amd64 (from .../libcurl3-gnutls_7.26.0-1_amd64.deb) ...
Selecting previously unselected package libexpat1:amd64.
Unpacking libexpat1:amd64 (from .../libexpat1_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libunistring0:amd64.
Unpacking libunistring0:amd64 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package libgettextpo0:amd64.
Unpacking libgettextpo0:amd64 (from .../libgettextpo0_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package libapr1.
Unpacking libapr1 (from .../libapr1_1.4.6-3_amd64.deb) ...
Selecting previously unselected package libaprutil1.
Unpacking libaprutil1 (from .../libaprutil1_1.4.1-2_amd64.deb) ...
Selecting previously unselected package libserf1:amd64.
Unpacking libserf1:amd64 (from .../libserf1_1.1.0-2_amd64.deb) ...
Selecting previously unselected package libneon27-gnutls.
Unpacking libneon27-gnutls (from .../libneon27-gnutls_0.29.6-3_amd64.deb) ...
Selecting previously unselected package libsvn1:amd64.
Unpacking libsvn1:amd64 (from .../libsvn1_1.7.5-1_amd64.deb) ...
Selecting previously unselected package libsvn-perl.
Unpacking libsvn-perl (from .../libsvn-perl_1.7.5-1_amd64.deb) ...
Selecting previously unselected package libgnutlsxx27:amd64.
Unpacking libgnutlsxx27:amd64 (from .../libgnutlsxx27_2.12.20-1_amd64.deb) ...
Selecting previously unselected package adduser.
Unpacking adduser (from .../adduser_3.113+nmu3_all.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package cvs.
Unpacking cvs (from .../cvs_2%3a1.12.13+real-9_amd64.deb) ...
Selecting previously unselected package cvsps.
Unpacking cvsps (from .../archives/cvsps_2.1-6_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package comerr-dev.
Unpacking comerr-dev (from .../comerr-dev_2.1-1.42.4-3_amd64.deb) ...
Selecting previously unselected package krb5-multidev.
Unpacking krb5-multidev (from .../krb5-multidev_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libgpg-error-dev.
Unpacking libgpg-error-dev (from .../libgpg-error-dev_1.10-3_amd64.deb) ...
Selecting previously unselected package libgcrypt11-dev.
Unpacking libgcrypt11-dev (from .../libgcrypt11-dev_1.5.0-3_amd64.deb) ...
Selecting previously unselected package zlib1g-dev:amd64.
Unpacking zlib1g-dev:amd64 (from .../zlib1g-dev_1%3a1.2.7.dfsg-13_amd64.deb) ...
Selecting previously unselected package libtasn1-3-dev.
Unpacking libtasn1-3-dev (from .../libtasn1-3-dev_2.13-2_amd64.deb) ...
Selecting previously unselected package libp11-kit-dev.
Unpacking libp11-kit-dev (from .../libp11-kit-dev_0.12-3_amd64.deb) ...
Selecting previously unselected package libgnutls-dev.
Unpacking libgnutls-dev (from .../libgnutls-dev_2.12.20-1_amd64.deb) ...
Selecting previously unselected package pkg-config.
Unpacking pkg-config (from .../pkg-config_0.26-1_amd64.deb) ...
Selecting previously unselected package libidn11-dev.
Unpacking libidn11-dev (from .../libidn11-dev_1.25-2_amd64.deb) ...
Selecting previously unselected package libkrb5-dev.
Unpacking libkrb5-dev (from .../libkrb5-dev_1.10.1+dfsg-1_amd64.deb) ...
Selecting previously unselected package libldap2-dev:amd64.
Unpacking libldap2-dev:amd64 (from .../libldap2-dev_2.4.28-1.3_amd64.deb) ...
Selecting previously unselected package librtmp-dev.
Unpacking librtmp-dev (from .../librtmp-dev_2.4+20111222.git4e06e21-1_amd64.deb) ...
Selecting previously unselected package libssh2-1-dev.
Unpacking libssh2-1-dev (from .../libssh2-1-dev_1.4.2-1_amd64.deb) ...
Selecting previously unselected package libcurl4-gnutls-dev.
Unpacking libcurl4-gnutls-dev (from .../libcurl4-gnutls-dev_7.26.0-1_amd64.deb) ...
Selecting previously unselected package libnet-daemon-perl.
Unpacking libnet-daemon-perl (from .../libnet-daemon-perl_0.48-1_all.deb) ...
Selecting previously unselected package libplrpc-perl.
Unpacking libplrpc-perl (from .../libplrpc-perl_0.2020-2_all.deb) ...
Selecting previously unselected package libdbi-perl.
Unpacking libdbi-perl (from .../libdbi-perl_1.622-1_amd64.deb) ...
Selecting previously unselected package libdbd-sqlite3-perl.
Unpacking libdbd-sqlite3-perl (from .../libdbd-sqlite3-perl_1.37-1_amd64.deb) ...
Selecting previously unselected package libexpat1-dev.
Unpacking libexpat1-dev (from .../libexpat1-dev_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libio-pty-perl.
Unpacking libio-pty-perl (from .../libio-pty-perl_1%3a1.08-1+b2_amd64.deb) ...
Selecting previously unselected package subversion.
Unpacking subversion (from .../subversion_1.7.5-1_amd64.deb) ...
Selecting previously unselected package tcl8.5.
Unpacking tcl8.5 (from .../tcl8.5_8.5.11-2_amd64.deb) ...
Selecting previously unselected package unzip.
Unpacking unzip (from .../archives/unzip_6.0-6_amd64.deb) ...
Selecting previously unselected package sbuild-build-depends-git-dummy.
Unpacking sbuild-build-depends-git-dummy (from .../sbuild-build-depends-git-dummy.deb) ...
Setting up libpopt0:amd64 (1.16-7) ...
Setting up libssl1.0.0:amd64 (1.0.1c-3) ...
Setting up libasprintf0c2:amd64 (0.18.1.1-9) ...
Setting up libgpg-error0:amd64 (1.10-3) ...
Setting up libgcrypt11:amd64 (1.5.0-3) ...
Setting up libp11-kit0:amd64 (0.12-3) ...
Setting up libtasn1-3:amd64 (2.13-2) ...
Setting up libgnutls26:amd64 (2.12.20-1) ...
Setting up libgnutls-openssl27:amd64 (2.12.20-1) ...
Setting up libkeyutils1:amd64 (1.5.5-2) ...
Setting up libkrb5support0:amd64 (1.10.1+dfsg-1) ...
Setting up libk5crypto3:amd64 (1.10.1+dfsg-1) ...
Setting up libkrb5-3:amd64 (1.10.1+dfsg-1) ...
Setting up libgssapi-krb5-2:amd64 (1.10.1+dfsg-1) ...
Setting up libgssrpc4:amd64 (1.10.1+dfsg-1) ...
Setting up libidn11:amd64 (1.25-2) ...
Setting up libkadm5clnt-mit8:amd64 (1.10.1+dfsg-1) ...
Setting up libkdb5-6:amd64 (1.10.1+dfsg-1) ...
Setting up libkadm5srv-mit8:amd64 (1.10.1+dfsg-1) ...
Setting up libsasl2-2:amd64 (2.1.25.dfsg1-4+b1) ...
Setting up libldap-2.4-2:amd64 (2.4.28-1.3) ...
Setting up libpcre3:amd64 (1:8.30-5) ...
Setting up libsqlite3-0:amd64 (3.7.13-1) ...
Setting up libxml2:amd64 (2.8.0+dfsg1-4) ...
Setting up libbsd0:amd64 (0.4.0-1) ...
Setting up libglib2.0-0:amd64 (2.32.3-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.5-1) ...
Setting up librtmp0:amd64 (2.4+20111222.git4e06e21-1) ...
Setting up libssh2-1:amd64 (1.4.2-1) ...
Setting up libcurl3-gnutls:amd64 (7.26.0-1) ...
Setting up libexpat1:amd64 (2.1.0-1) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up libgettextpo0:amd64 (0.18.1.1-9) ...
Setting up libapr1 (1.4.6-3) ...
Setting up libaprutil1 (1.4.1-2) ...
Setting up libserf1:amd64 (1.1.0-2) ...
Setting up libneon27-gnutls (0.29.6-3) ...
Setting up libsvn1:amd64 (1.7.5-1) ...
Setting up libsvn-perl (1.7.5-1) ...
Setting up libgnutlsxx27:amd64 (2.12.20-1) ...
Setting up adduser (3.113+nmu3) ...
Setting up gettext-base (0.18.1.1-9) ...
Setting up cvs (2:1.12.13+real-9) ...
Allowing use of questionable username.
Adding group `_cvsadmin' (GID 110) ...
Done.
Setting up cvsps (2.1-6) ...
Setting up gettext (0.18.1.1-9) ...
Setting up comerr-dev (2.1-1.42.4-3) ...
Setting up krb5-multidev (1.10.1+dfsg-1) ...
Setting up libgpg-error-dev (1.10-3) ...
Setting up libgcrypt11-dev (1.5.0-3) ...
Setting up zlib1g-dev:amd64 (1:1.2.7.dfsg-13) ...
Setting up libtasn1-3-dev (2.13-2) ...
Setting up libp11-kit-dev (0.12-3) ...
Setting up libgnutls-dev (2.12.20-1) ...
Setting up pkg-config (0.26-1) ...
Setting up libidn11-dev (1.25-2) ...
Setting up libkrb5-dev (1.10.1+dfsg-1) ...
Setting up libldap2-dev:amd64 (2.4.28-1.3) ...
Setting up librtmp-dev (2.4+20111222.git4e06e21-1) ...
Setting up libssh2-1-dev (1.4.2-1) ...
Setting up libcurl4-gnutls-dev (7.26.0-1) ...
Setting up libnet-daemon-perl (0.48-1) ...
Setting up libplrpc-perl (0.2020-2) ...
Setting up libdbi-perl (1.622-1) ...
Setting up libdbd-sqlite3-perl (1.37-1) ...
Setting up libexpat1-dev (2.1.0-1) ...
Setting up libio-pty-perl (1:1.08-1+b2) ...
Setting up subversion (1.7.5-1) ...
Setting up tcl8.5 (8.5.11-2) ...
update-alternatives: using /usr/bin/tclsh8.5 to provide /usr/bin/tclsh (tclsh) in auto mode.
Setting up unzip (6.0-6) ...
Setting up sbuild-build-depends-git-dummy (0.invalid.0) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.22-6.1 dpkg-dev_1.16.4.3 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 gcc-4.6_4.6.3-7 gcc-4.7_4.7.1-1 libc6-dev_2.13-33 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 linux-libc-dev_3.2.20-1
Package versions: adduser_3.113+nmu3 apt_0.9.7 base-files_6.11 base-passwd_3.5.25 bash_4.2-2 binutils_2.22-6.1 bsdutils_1:2.20.1-5 build-essential_11.5 bzip2_1.0.6-3 clang_3.1-6 comerr-dev_2.1-1.42.4-3 coreutils_8.13-3.2 cpp_4:4.7.0-6 cpp-4.6_4.6.3-7 cpp-4.7_4.7.1-1 cvs_2:1.12.13+real-9 cvsps_2.1-6 dash_0.5.7-3 debconf_1.5.44 debconf-i18n_1.5.44 debfoster_2.7-1.1 debian-archive-keyring_2012.4 debianutils_4.3.1 diffutils_1:3.2-6 dpkg_1.16.4.3 dpkg-dev_1.16.4.3 e2fslibs_1.42.4-3 e2fsprogs_1.42.4-3 fakeroot_1.18.4-2 findutils_4.4.2-4 g++_4:4.7.0-6 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 gcc_4:4.7.0-6 gcc-4.4-base_4.4.7-1 gcc-4.5-base_4.5.3-12 gcc-4.6_4.6.3-7 gcc-4.6-base_4.6.3-7 gcc-4.7_4.7.1-1 gcc-4.7-base_4.7.1-1 gettext_0.18.1.1-9 gettext-base_0.18.1.1-9 gnupg_1.4.12-4 gpgv_1.4.12-4 grep_2.12-2 gzip_1.5-1.1 hostname_3.11 initscripts_2.88dsf-27 insserv_1.14.0-3 krb5-multidev_1.10.1+dfsg-1 libacl1_2.2.51-8 libapr1_1.4.6-3 libaprutil1_1.4.1-2 libapt-pkg4.12_0.9.7 libasprintf0c2_0.18.1.1-9 libattr1_1:2.4.46-8 libblkid1_2.20.1-5 libbsd0_0.4.0-1 libbz2-1.0_1.0.6-3 libc-bin_2.13-33 libc-dev-bin_2.13-33 libc6_2.13-33 libc6-dev_2.13-33 libclang-common-dev_3.1-6 libclass-isa-perl_0.36-3 libcomerr2_1.42.4-3 libcroco3_0.6.5-1 libcurl3-gnutls_7.26.0-1 libcurl4-gnutls-dev_7.26.0-1 libdb5.1_5.1.29-4 libdbd-sqlite3-perl_1.37-1 libdbi-perl_1.622-1 libdpkg-perl_1.16.4.3 libexpat1_2.1.0-1 libexpat1-dev_2.1.0-1 libffi5_3.0.10-3 libfile-fcntllock-perl_0.14-2 libgc1c2_1:7.1-8 libgcc1_1:4.7.1-1 libgcrypt11_1.5.0-3 libgcrypt11-dev_1.5.0-3 libgdbm3_1.8.3-11 libgettextpo0_0.18.1.1-9 libglib2.0-0_2.32.3-1 libgmp10_2:5.0.5+dfsg-2 libgnutls-dev_2.12.20-1 libgnutls-openssl27_2.12.20-1 libgnutls26_2.12.20-1 libgnutlsxx27_2.12.20-1 libgomp1_4.7.1-1 libgpg-error-dev_1.10-3 libgpg-error0_1.10-3 libgssapi-krb5-2_1.10.1+dfsg-1 libgssrpc4_1.10.1+dfsg-1 libidn11_1.25-2 libidn11-dev_1.25-2 libio-pty-perl_1:1.08-1+b2 libitm1_4.7.1-1 libk5crypto3_1.10.1+dfsg-1 libkadm5clnt-mit8_1.10.1+dfsg-1 libkadm5srv-mit8_1.10.1+dfsg-1 libkdb5-6_1.10.1+dfsg-1 libkeyutils1_1.5.5-2 libkrb5-3_1.10.1+dfsg-1 libkrb5-dev_1.10.1+dfsg-1 libkrb5support0_1.10.1+dfsg-1 libldap-2.4-2_2.4.28-1.3 libldap2-dev_2.4.28-1.3 libllvm3.1_3.1-1 liblocale-gettext-perl_1.05-7+b1 liblzma5_5.1.1alpha+20120614-1 libmount1_2.20.1-5 libmpc2_0.9-4 libmpfr4_3.1.0-5 libncurses5_5.9-9 libneon27-gnutls_0.29.6-3 libnet-daemon-perl_0.48-1 libp11-kit-dev_0.12-3 libp11-kit0_0.12-3 libpam-modules_1.1.3-7.1 libpam-modules-bin_1.1.3-7.1 libpam-runtime_1.1.3-7.1 libpam0g_1.1.3-7.1 libpcre3_1:8.30-5 libplrpc-perl_0.2020-2 libpopt0_1.16-7 libquadmath0_4.7.1-1 libreadline6_6.2-8 librtmp-dev_2.4+20111222.git4e06e21-1 librtmp0_2.4+20111222.git4e06e21-1 libsasl2-2_2.1.25.dfsg1-4+b1 libselinux1_2.1.9-5 libsemanage-common_2.1.6-6 libsemanage1_2.1.6-6 libsepol1_2.1.4-3 libserf1_1.1.0-2 libslang2_2.2.4-13 libsqlite3-0_3.7.13-1 libss2_1.42.4-3 libssh2-1_1.4.2-1 libssh2-1-dev_1.4.2-1 libssl1.0.0_1.0.1c-3 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 libsvn-perl_1.7.5-1 libsvn1_1.7.5-1 libswitch-perl_2.16-2 libtasn1-3_2.13-2 libtasn1-3-dev_2.13-2 libtext-charwidth-perl_0.04-7+b1 libtext-iconv-perl_1.7-5 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_1.2000-1 libtinfo5_5.9-9 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5 libxml2_2.8.0+dfsg1-4 linux-libc-dev_3.2.20-1 login_1:4.1.5.1-1 lsb-base_4.1+Debian7 make_3.81-8.2 mawk_1.3.3-17 mount_2.20.1-5 multiarch-support_2.13-33 ncurses-base_5.9-9 ncurses-bin_5.9-9 passwd_1:4.1.5.1-1 patch_2.6.1-3 perl_5.14.2-12 perl-base_5.14.2-12 perl-modules_5.14.2-12 pkg-config_0.26-1 readline-common_6.2-8 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-git-dummy_0.invalid.0 sed_4.2.1-10 sensible-utils_0.0.7 subversion_1.7.5-1 sysv-rc_2.88dsf-27 sysvinit_2.88dsf-27 sysvinit-utils_2.88dsf-27 tar_1.26-4 tcl8.5_8.5.11-2 tzdata_2012c-1 ucf_3.0025+nmu3 unzip_6.0-6 util-linux_2.20.1-5 xz-utils_5.1.1alpha+20120614-1 zlib1g_1:1.2.7.dfsg-13 zlib1g-dev_1:1.2.7.dfsg-13

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Fri Jun  8 11:52:28 2012 UTC using DSA key ID BC70A6FF
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./git_1.7.10.4-1.dsc
dpkg-source: info: extracting git in git-1.7.10.4
dpkg-source: info: unpacking git_1.7.10.4.orig.tar.gz
dpkg-source: info: applying git_1.7.10.4-1.diff.gz

Check disc space
────────────────

Sufficient free space for build

User Environment
────────────────

HOME=/sbuild-nonexistent
LOGNAME=root
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=0
SCHROOT_GROUP=root
SCHROOT_SESSION_ID=unstable-amd64-sbuild-617e56af-feae-432b-8534-86ec44127c66
SCHROOT_UID=0
SCHROOT_USER=root
SHELL=/bin/sh
USER=root

dpkg-buildpackage
─────────────────

dpkg-buildpackage: warning: using a gain-root-command while being root
dpkg-buildpackage: source package git
dpkg-buildpackage: source version 1:1.7.10.4-1
dpkg-buildpackage: source changed by Gerrit Pape <pape@smarden.org>
 dpkg-source --before-build git-1.7.10.4
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
/usr/bin/make clean NO_OPENSSL=1 prefix=/usr gitexecdir=/usr/lib/git-core mandir=/usr/share/man htmldir=/usr/share/doc/git/html INSTALLDIRS=vendor NO_PYTHON=1 USE_SRV_RR=1 THREADED_DELTA_SEARCH=1 NO_CROSS_DIRECTORY_HARDLINKS=1 NO_HARDLINKS=1 DEFAULT_PAGER=pager DEFAULT_EDITOR=editor CC='gcc' CFLAGS='-Wall -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' LDFLAGS='-Wl,-z,relro'
make[1]: Entering directory `/«PKGBUILDDIR»'
GIT_VERSION = 1.7.10.4
make[1]: Leaving directory `/«PKGBUILDDIR»'
make[1]: Entering directory `/«PKGBUILDDIR»'
rm -f /«PKGBUILDDIR»/./*.gcda /«PKGBUILDDIR»/block-sha1/*.gcda /«PKGBUILDDIR»/builtin/*.gcda /«PKGBUILDDIR»/compat/*.gcda /«PKGBUILDDIR»/vcs-svn/*.gcda /«PKGBUILDDIR»/xdiff/*.gcda
rm -f /«PKGBUILDDIR»/./*.gcno /«PKGBUILDDIR»/block-sha1/*.gcno /«PKGBUILDDIR»/builtin/*.gcno /«PKGBUILDDIR»/compat/*.gcno /«PKGBUILDDIR»/vcs-svn/*.gcno /«PKGBUILDDIR»/xdiff/*.gcno
rm -f *.o block-sha1/*.o ppc/*.o compat/*.o compat/*/*.o xdiff/*.o vcs-svn/*.o \
		builtin/*.o libgit.a xdiff/lib.a vcs-svn/lib.a
rm -f   git-daemon git-fast-import git-imap-send git-shell git-show-index git-upload-pack git-http-backend git-sh-i18n--envsubst git-credential-store git-http-fetch git-http-push git-credential-cache git-credential-cache--daemon git-remote-http git-remote-https git-remote-ftp git-remote-ftps git-am git-bisect git-difftool--helper git-filter-branch git-lost-found git-merge-octopus git-merge-one-file git-merge-resolve git-mergetool git-pull git-quiltimport git-rebase git-repack git-request-pull git-stash git-submodule git-web--browse git-add--interactive git-difftool git-archimport git-cvsexportcommit git-cvsimport git-cvsserver git-relink git-send-email git-svn git-remote-testgit git-instaweb  git-mergetool--lib git-parse-remote git-rebase--am git-rebase--interactive git-rebase--merge git-sh-setup git-sh-i18n  git-add git-annotate git-apply git-archive git-bisect--helper git-blame git-branch git-bundle git-cat-file git-check-attr git-check-ref-format git-checkout-index git-checkout git-clean git-clone git-commit-tree git-commit git-config git-count-objects git-describe git-diff-files git-diff-index git-diff-tree git-diff git-fast-export git-fetch-pack git-fetch git-fmt-merge-msg git-for-each-ref git-fsck git-gc git-grep git-hash-object git-help git-index-pack git-init-db git-log git-ls-files git-ls-remote git-ls-tree git-mailinfo git-mailsplit git-merge git-merge-base git-merge-file git-merge-index git-merge-ours git-merge-recursive git-merge-tree git-mktag git-mktree git-mv git-name-rev git-notes git-pack-objects git-pack-redundant git-pack-refs git-patch-id git-prune-packed git-prune git-push git-read-tree git-receive-pack git-reflog git-remote git-remote-ext git-remote-fd git-replace git-rerere git-reset git-rev-list git-rev-parse git-revert git-rm git-send-pack git-shortlog git-show-branch git-show-ref git-stripspace git-symbolic-ref git-tag git-tar-tree git-unpack-file git-unpack-objects git-update-index git-update-ref git-update-server-info git-upload-archive git-var git-verify-pack git-verify-tag git-write-tree git-cherry git-cherry-pick git-format-patch git-fsck-objects git-get-tar-commit-id git-init git-merge-subtree git-peek-remote git-repo-config git-show git-stage git-status git-whatchanged git
rm -f test-chmtime test-credential test-ctype test-date test-delta test-dump-cache-tree test-scrap-cache-tree test-genrandom test-index-version test-line-buffer test-match-trees test-mktemp test-parse-options test-path-utils test-run-command test-sha1 test-sigchain test-subprocess test-svn-fe
rm -f -r bin-wrappers
rm -f -r 
rm -f -r po/build/
rm -f *.spec *.pyc *.pyo */*.pyc */*.pyo common-cmds.h TAGS tags cscope*
rm -f -r autom4te.cache
rm -f config.log config.mak.autogen config.mak.append config.status config.cache
rm -f -r git-1.7.10.4 .doc-tmp-dir
rm -f git-1.7.10.4.tar.gz git-core_1.7.10.4-*.tar.gz
rm -f git-htmldocs-1.7.10.4.tar.gz git-manpages-1.7.10.4.tar.gz
/usr/bin/make -C Documentation/ clean
make[2]: Entering directory `/«PKGBUILDDIR»/Documentation'
    GEN doc.dep
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[2]: Leaving directory `/«PKGBUILDDIR»/Documentation'
make[2]: Entering directory `/«PKGBUILDDIR»/Documentation'
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
rm -f *.xml *.xml+ *.html *.html+ *.1 *.5 *.7
rm -f *.texi *.texi+ *.texi++ git.info gitman.info
rm -f *.pdf
rm -f howto-index.txt howto/*.html doc.dep
rm -f technical/api-*.html technical/api-index.txt
rm -f cmds-ancillaryinterrogators.txt cmds-ancillarymanipulators.txt cmds-mainporcelain.txt cmds-plumbinginterrogators.txt cmds-plumbingmanipulators.txt cmds-synchingrepositories.txt cmds-synchelpers.txt cmds-purehelpers.txt cmds-foreignscminterface.txt *.made
rm -f manpage-base-url.xsl
make[2]: Leaving directory `/«PKGBUILDDIR»/Documentation'
/usr/bin/make -C gitweb clean
make[2]: Entering directory `/«PKGBUILDDIR»/gitweb'
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
rm -f gitweb.cgi static/gitweb.js \
		static/gitweb.min.js static/gitweb.min.css \
		GITWEB-BUILD-OPTIONS
make[2]: Leaving directory `/«PKGBUILDDIR»/gitweb'
/usr/bin/make -C perl clean
make[2]: Entering directory `/«PKGBUILDDIR»/perl'
rm -f ppport.h
rm -f perl.mak
rm -f perl.mak.old
make[2]: Leaving directory `/«PKGBUILDDIR»/perl'
/usr/bin/make -C templates/ clean
make[2]: Entering directory `/«PKGBUILDDIR»/templates'
rm -f -r blt boilerplates.made
make[2]: Leaving directory `/«PKGBUILDDIR»/templates'
/usr/bin/make -C t/ clean
make[2]: Entering directory `/«PKGBUILDDIR»/t'
rm -f -r 'trash directory'.* test-results
rm -f -r valgrind/bin
rm -f .prove
make[2]: Leaving directory `/«PKGBUILDDIR»/t'
/usr/bin/make -C gitk-git clean
make[2]: Entering directory `/«PKGBUILDDIR»/gitk-git'
rm -f gitk-wish po/*.msg
make[2]: Leaving directory `/«PKGBUILDDIR»/gitk-git'
/usr/bin/make -C git-gui clean
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
GITGUI_VERSION = 0.16.0
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
rm -rf git-gui lib/tclIndex po/*.msg
rm -rf GIT-VERSION-FILE GIT-GUI-VARS
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
rm -f GIT-VERSION-FILE GIT-CFLAGS GIT-LDFLAGS GIT-GUI-VARS GIT-BUILD-OPTIONS
make[1]: Leaving directory `/«PKGBUILDDIR»'
! test -e patch-stamp || \
	  for i in `ls -1r debian/diff/*.diff debian/diff/*.patch \
	      2>/dev/null || :`; do \
	    patch -p1 -NR -r- <$i || test $? = 1 || exit 1; \
	  done
rm -rf '/«PKGBUILDDIR»/tmp'
rm -f patch-stamp build-arch-stamp build-indep-stamp
rm -rf '/«PKGBUILDDIR»/debian/git' '/«PKGBUILDDIR»/debian/git'-doc '/«PKGBUILDDIR»/debian/git'-arch '/«PKGBUILDDIR»/debian/git'-cvs
rm -rf '/«PKGBUILDDIR»/debian/git'-svn '/«PKGBUILDDIR»/debian/git'-email '/«PKGBUILDDIR»/debian/git'-el
rm -rf '/«PKGBUILDDIR»/debian/git'-daemon-run '/«PKGBUILDDIR»/debian/git'-daemon-sysvinit '/«PKGBUILDDIR»/debian/git'-gui
rm -rf '/«PKGBUILDDIR»/debian/git'k '/«PKGBUILDDIR»/debian/git'web '/«PKGBUILDDIR»/debian/git'-all '/«PKGBUILDDIR»/debian/git'-man '/«PKGBUILDDIR»/debian/git'-core
rm -f debian/files debian/substvars changelog
 debian/rules build-arch
for i in `ls -1 debian/diff/*.diff debian/diff/*.patch \
	    2>/dev/null || :`; do \
	  patch -p1 -N -r- <$i || test $? = 1 || exit 1; \
	done
patching file contrib/hooks/post-receive-email
patching file contrib/hooks/post-receive-email
patching file git-mergetool--lib.sh
patching file git-parse-remote.sh
patching file git-rebase--am.sh
patching file git-rebase--interactive.sh
patching file git-rebase--merge.sh
patching file git-sh-i18n.sh
patching file git-sh-setup.sh
patching file t/test-lib.sh
patching file templates/hooks--pre-rebase.sample
patching file Makefile
patching file connect.c
patching file tcp.c
patching file tcp.h
patching file daemon.c
patching file Makefile
patching file daemon.c
patching file tcp.c
patching file tcp.h
patching file Makefile
patching file dns-ipv4.c
patching file dns-ipv4.h
patching file dns-ipv6.c
patching file dns-ipv6.h
patching file tcp.c
patching file dns-ipv4.h
patching file dns-ipv6.c
patching file tcp.c
patching file Makefile
patching file srv.c
patching file srv.h
patching file tcp.c
patching file srv.c
patching file Makefile
touch patch-stamp
gcc -v
Debian clang version 3.1-6 (branches/release_31) (based on LLVM 3.1)
Target: x86_64-pc-linux-gnu
Thread model: posix
DESTDIR='/«PKGBUILDDIR»/debian/git' /usr/bin/make all NO_OPENSSL=1 prefix=/usr gitexecdir=/usr/lib/git-core mandir=/usr/share/man htmldir=/usr/share/doc/git/html INSTALLDIRS=vendor NO_PYTHON=1 USE_SRV_RR=1 THREADED_DELTA_SEARCH=1 NO_CROSS_DIRECTORY_HARDLINKS=1 NO_HARDLINKS=1 DEFAULT_PAGER=pager DEFAULT_EDITOR=editor CC='gcc' CFLAGS='-Wall -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' LDFLAGS='-Wl,-z,relro'
make[1]: Entering directory `/«PKGBUILDDIR»'
GIT_VERSION = 1.7.10.4
make[1]: Leaving directory `/«PKGBUILDDIR»'
make[1]: Entering directory `/«PKGBUILDDIR»'
    * new build flags or prefix
    CC daemon.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    * new link flags
    CC abspath.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC advice.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC alias.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC alloc.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC archive.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC archive-tar.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC archive-zip.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC argv-array.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC attr.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC base85.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC bisect.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC blob.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC branch.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC bulk-checkin.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC bundle.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC cache-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC color.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC combine-diff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
combine-diff.c:1006:19: warning: adding 'int' to a string does not append to the string [-Wstring-plus-int]
                prefix = COLONS + offset;
                         ~~~~~~~^~~~~~~~
combine-diff.c:1006:19: note: use array indexing to silence this warning
                prefix = COLONS + offset;
                                ^
                         &      [       ]
1 warning generated.
    CC commit.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC compat/obstack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC compat/terminal.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC config.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC connect.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC connected.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC convert.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC copy.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC credential.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC csum-file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC ctype.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC date.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC decorate.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diffcore-break.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diffcore-delta.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diffcore-order.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diffcore-pickaxe.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diffcore-rename.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diff-delta.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diff-lib.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diff-no-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC diff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC dir.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC editor.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC entry.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC environment.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC exec_cmd.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC fsck.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC gpg-interface.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC gettext.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC graph.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC grep.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
grep.c:364:16: warning: comparison of unsigned enum expression < 0 is always false [-Wtautological-compare]
                if (p->field < 0 || GREP_HEADER_FIELD_MAX <= p->field)
                    ~~~~~~~~ ^ ~
1 warning generated.
    CC hash.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    GEN common-cmds.h
    CC help.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC hex.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC ident.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC kwset.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC levenshtein.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC list-objects.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC ll-merge.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC lockfile.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC log-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC mailmap.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC match-trees.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC merge-file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC merge-recursive.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC name-hash.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC notes.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC notes-cache.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC notes-merge.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC object.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pack-check.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pack-refs.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pack-revindex.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pack-write.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pager.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC parse-options.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC parse-options-cb.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC patch-delta.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC patch-ids.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC path.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pkt-line.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC preload-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC pretty.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC progress.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC prompt.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC quote.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC reachable.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC read-cache.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC reflog-walk.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC refs.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC remote.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC replace_object.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC rerere.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC resolve-undo.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC revision.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC run-command.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC server-info.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC setup.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sequencer.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sha1-array.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sha1-lookup.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sha1_file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sha1_name.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC shallow.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sideband.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sigchain.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC strbuf.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC streaming.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC string-list.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC submodule.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC symlinks.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC tag.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC tcp.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC trace.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC transport.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC transport-helper.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC tree-diff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC tree-walk.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC unpack-trees.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC url.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC usage.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC userdiff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC utf8.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC walker.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC wrapper.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC write_or_die.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC ws.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC wt-status.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff-interface.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC zlib.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC srv.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC dns-ipv6.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC unix-socket.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC block-sha1/sha1.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC thread-utils.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC compat/strlcpy.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    AR libgit.a
    CC xdiff/xdiffi.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xprepare.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xutils.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xemit.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xmerge.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xpatience.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC xdiff/xhistogram.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    AR xdiff/lib.a
    LINK git-daemon
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC fast-import.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-fast-import
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC imap-send.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-imap-send
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC shell.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-shell
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC show-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-show-index
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC upload-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-upload-pack
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC http-backend.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-http-backend
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC sh-i18n--envsubst.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-sh-i18n--envsubst
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC credential-store.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-credential-store
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC http.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC http-walker.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC http-fetch.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-http-fetch
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC http-push.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-http-push
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC credential-cache.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-credential-cache
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC credential-cache--daemon.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-credential-cache--daemon
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC remote-curl.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git-remote-http
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LN/CP git-remote-https
    LN/CP git-remote-ftp
    LN/CP git-remote-ftps
    GEN git-am
    GEN git-bisect
    GEN git-difftool--helper
    GEN git-filter-branch
    GEN git-lost-found
    GEN git-merge-octopus
    GEN git-merge-one-file
    GEN git-merge-resolve
    GEN git-mergetool
    GEN git-pull
    GEN git-quiltimport
    GEN git-rebase
    GEN git-repack
    GEN git-request-pull
    GEN git-stash
    GEN git-submodule
    GEN git-web--browse
make[2]: Entering directory `/«PKGBUILDDIR»/perl'
/usr/bin/perl Makefile.PL PREFIX='/usr' INSTALL_BASE='' --localedir='/usr/share/locale'
Writing perl.mak for Git
Writing MYMETA.yml
make[2]: Leaving directory `/«PKGBUILDDIR»/perl'
    GEN git-add--interactive
    GEN git-difftool
    GEN git-archimport
    GEN git-cvsexportcommit
    GEN git-cvsimport
    GEN git-cvsserver
    GEN git-relink
    GEN git-send-email
    GEN git-svn
    GEN git-remote-testgit
make[2]: Entering directory `/«PKGBUILDDIR»/gitweb'
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
    GEN gitweb.cgi
    GEN static/gitweb.js
make[2]: Leaving directory `/«PKGBUILDDIR»/gitweb'
    GEN git-instaweb
    GEN git-mergetool--lib
    GEN git-parse-remote
    GEN git-rebase--am
    GEN git-rebase--interactive
    GEN git-rebase--merge
    GEN git-sh-setup
    GEN git-sh-i18n
    CC git.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/add.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/annotate.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/apply.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/archive.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/bisect--helper.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/blame.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/branch.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/bundle.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/cat-file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/check-attr.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/check-ref-format.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/checkout-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/checkout.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/clean.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/clone.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/commit-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/commit.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/config.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/count-objects.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/describe.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/diff-files.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/diff-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/diff-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/diff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/fast-export.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/fetch-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/fetch.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/fmt-merge-msg.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/for-each-ref.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/fsck.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/gc.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/grep.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/hash-object.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/help.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/index-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/init-db.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/log.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/ls-files.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/ls-remote.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/ls-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/mailinfo.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/mailsplit.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-base.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-ours.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-recursive.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/merge-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/mktag.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/mktree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/mv.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/name-rev.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/notes.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/pack-objects.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/pack-redundant.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/pack-refs.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/patch-id.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/prune-packed.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/prune.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/push.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/read-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/receive-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/reflog.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/remote.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/remote-ext.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/remote-fd.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/replace.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/rerere.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/reset.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/rev-list.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/rev-parse.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/revert.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/rm.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/send-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/shortlog.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/show-branch.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/show-ref.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/stripspace.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/symbolic-ref.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/tag.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/tar-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/unpack-file.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/unpack-objects.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/update-index.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/update-ref.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/update-server-info.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/upload-archive.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/var.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/verify-pack.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/verify-tag.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC builtin/write-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK git
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    BUILTIN git-add
    BUILTIN git-annotate
    BUILTIN git-apply
    BUILTIN git-archive
    BUILTIN git-bisect--helper
    BUILTIN git-blame
    BUILTIN git-branch
    BUILTIN git-bundle
    BUILTIN git-cat-file
    BUILTIN git-check-attr
    BUILTIN git-check-ref-format
    BUILTIN git-checkout-index
    BUILTIN git-checkout
    BUILTIN git-clean
    BUILTIN git-clone
    BUILTIN git-commit-tree
    BUILTIN git-commit
    BUILTIN git-config
    BUILTIN git-count-objects
    BUILTIN git-describe
    BUILTIN git-diff-files
    BUILTIN git-diff-index
    BUILTIN git-diff-tree
    BUILTIN git-diff
    BUILTIN git-fast-export
    BUILTIN git-fetch-pack
    BUILTIN git-fetch
    BUILTIN git-fmt-merge-msg
    BUILTIN git-for-each-ref
    BUILTIN git-fsck
    BUILTIN git-gc
    BUILTIN git-grep
    BUILTIN git-hash-object
    BUILTIN git-help
    BUILTIN git-index-pack
    BUILTIN git-init-db
    BUILTIN git-log
    BUILTIN git-ls-files
    BUILTIN git-ls-remote
    BUILTIN git-ls-tree
    BUILTIN git-mailinfo
    BUILTIN git-mailsplit
    BUILTIN git-merge
    BUILTIN git-merge-base
    BUILTIN git-merge-file
    BUILTIN git-merge-index
    BUILTIN git-merge-ours
    BUILTIN git-merge-recursive
    BUILTIN git-merge-tree
    BUILTIN git-mktag
    BUILTIN git-mktree
    BUILTIN git-mv
    BUILTIN git-name-rev
    BUILTIN git-notes
    BUILTIN git-pack-objects
    BUILTIN git-pack-redundant
    BUILTIN git-pack-refs
    BUILTIN git-patch-id
    BUILTIN git-prune-packed
    BUILTIN git-prune
    BUILTIN git-push
    BUILTIN git-read-tree
    BUILTIN git-receive-pack
    BUILTIN git-reflog
    BUILTIN git-remote
    BUILTIN git-remote-ext
    BUILTIN git-remote-fd
    BUILTIN git-replace
    BUILTIN git-rerere
    BUILTIN git-reset
    BUILTIN git-rev-list
    BUILTIN git-rev-parse
    BUILTIN git-revert
    BUILTIN git-rm
    BUILTIN git-send-pack
    BUILTIN git-shortlog
    BUILTIN git-show-branch
    BUILTIN git-show-ref
    BUILTIN git-stripspace
    BUILTIN git-symbolic-ref
    BUILTIN git-tag
    BUILTIN git-tar-tree
    BUILTIN git-unpack-file
    BUILTIN git-unpack-objects
    BUILTIN git-update-index
    BUILTIN git-update-ref
    BUILTIN git-update-server-info
    BUILTIN git-upload-archive
    BUILTIN git-var
    BUILTIN git-verify-pack
    BUILTIN git-verify-tag
    BUILTIN git-write-tree
    BUILTIN git-cherry
    BUILTIN git-cherry-pick
    BUILTIN git-format-patch
    BUILTIN git-fsck-objects
    BUILTIN git-get-tar-commit-id
    BUILTIN git-init
    BUILTIN git-merge-subtree
    BUILTIN git-peek-remote
    BUILTIN git-repo-config
    BUILTIN git-show
    BUILTIN git-stage
    BUILTIN git-status
    BUILTIN git-whatchanged
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
GITGUI_VERSION = 0.16.0
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
    * new locations or Tcl/Tk interpreter
    GEN git-gui
    INDEX lib/
    MSGFMT    po/de.msg 520 translated.
    MSGFMT    po/el.msg 381 translated, 4 fuzzy, 6 untranslated.
    MSGFMT    po/fr.msg 520 translated.
    MSGFMT    po/hu.msg 514 translated.
    MSGFMT    po/it.msg 519 translated, 1 untranslated.
    MSGFMT    po/ja.msg 520 translated.
    MSGFMT    po/nb.msg 474 translated, 39 untranslated.
    MSGFMT po/pt_br.msg 520 translated.
    MSGFMT    po/ru.msg 516 translated, 4 untranslated.
    MSGFMT    po/sv.msg 521 translated.
    MSGFMT po/zh_cn.msg 366 translated, 7 fuzzy, 17 untranslated.
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
make[2]: Entering directory `/«PKGBUILDDIR»/gitk-git'
    GEN gitk-wish
Generating catalog po/de.msg
msgfmt --statistics --tcl po/de.po -l de -d po/
289 translated messages.
Generating catalog po/es.msg
msgfmt --statistics --tcl po/es.po -l es -d po/
200 translated messages, 7 untranslated messages.
Generating catalog po/fr.msg
msgfmt --statistics --tcl po/fr.po -l fr -d po/
276 translated messages, 4 fuzzy translations.
Generating catalog po/hu.msg
msgfmt --statistics --tcl po/hu.po -l hu -d po/
288 translated messages.
Generating catalog po/it.msg
msgfmt --statistics --tcl po/it.po -l it -d po/
283 translated messages, 6 untranslated messages.
Generating catalog po/ja.msg
msgfmt --statistics --tcl po/ja.po -l ja -d po/
284 translated messages.
Generating catalog po/pt_br.msg
msgfmt --statistics --tcl po/pt_br.po -l pt_br -d po/
290 translated messages.
Generating catalog po/ru.msg
msgfmt --statistics --tcl po/ru.po -l ru -d po/
245 translated messages.
Generating catalog po/sv.msg
msgfmt --statistics --tcl po/sv.po -l sv -d po/
290 translated messages.
make[2]: Leaving directory `/«PKGBUILDDIR»/gitk-git'
make[2]: Entering directory `/«PKGBUILDDIR»/perl'
make[3]: Entering directory `/«PKGBUILDDIR»/perl'
/usr/bin/perl -pe "s<\Q++LOCALEDIR++\E></usr/share/locale>" <Git/I18N.pm >blib/lib/Git/I18N.pm
/usr/bin/perl -pe "s<\Q++LOCALEDIR++\E></usr/share/locale>" <private-Error.pm >blib/lib/Error.pm
/usr/bin/perl -pe "s<\Q++LOCALEDIR++\E></usr/share/locale>" <Git.pm >blib/lib/Git.pm
Manifying blib/man3/private-Error.3pm
Manifying blib/man3/Git::I18N.3pm
Manifying blib/man3/Git.3pm
make[3]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Entering directory `/«PKGBUILDDIR»/templates'
make[2]: Leaving directory `/«PKGBUILDDIR»/templates'
    MSGFMT po/build/locale/da/LC_MESSAGES/git.mo
0 translated messages, 724 untranslated messages.
    MSGFMT po/build/locale/de/LC_MESSAGES/git.mo
728 translated messages.
    MSGFMT po/build/locale/is/LC_MESSAGES/git.mo
14 translated messages.
    MSGFMT po/build/locale/nl/LC_MESSAGES/git.mo
0 translated messages, 722 untranslated messages.
    MSGFMT po/build/locale/pt_PT/LC_MESSAGES/git.mo
218 translated messages, 506 untranslated messages.
    MSGFMT po/build/locale/sv/LC_MESSAGES/git.mo
728 translated messages.
    MSGFMT po/build/locale/zh_CN/LC_MESSAGES/git.mo
728 translated messages.
    CC test-chmtime.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-chmtime
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-credential.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-credential
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-ctype.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-ctype
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-date.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-date
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-delta.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-delta
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-dump-cache-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-dump-cache-tree
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-scrap-cache-tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-scrap-cache-tree
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-genrandom.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-genrandom
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-index-version.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-index-version
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-line-buffer.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/line_buffer.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/sliding_window.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/repo_tree.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/fast_export.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/svndiff.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC vcs-svn/svndump.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    AR vcs-svn/lib.a
    LINK test-line-buffer
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-match-trees.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-match-trees
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-mktemp.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-mktemp
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-parse-options.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-parse-options
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-path-utils.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-path-utils
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-run-command.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-run-command
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-sha1.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-sha1
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-sigchain.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-sigchain
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-subprocess.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-subprocess
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    CC test-svn-fe.o
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    LINK test-svn-fe
clang: warning: argument unused during compilation: '--param ssp-buffer-size=4'
    GEN bin-wrappers/git
    GEN bin-wrappers/git-upload-pack
    GEN bin-wrappers/git-receive-pack
    GEN bin-wrappers/git-upload-archive
    GEN bin-wrappers/git-shell
    GEN bin-wrappers/git-cvsserver
    GEN bin-wrappers/test-chmtime
    GEN bin-wrappers/test-credential
    GEN bin-wrappers/test-ctype
    GEN bin-wrappers/test-date
    GEN bin-wrappers/test-delta
    GEN bin-wrappers/test-dump-cache-tree
    GEN bin-wrappers/test-scrap-cache-tree
    GEN bin-wrappers/test-genrandom
    GEN bin-wrappers/test-index-version
    GEN bin-wrappers/test-line-buffer
    GEN bin-wrappers/test-match-trees
    GEN bin-wrappers/test-mktemp
    GEN bin-wrappers/test-parse-options
    GEN bin-wrappers/test-path-utils
    GEN bin-wrappers/test-run-command
    GEN bin-wrappers/test-sha1
    GEN bin-wrappers/test-sigchain
    GEN bin-wrappers/test-subprocess
    GEN bin-wrappers/test-svn-fe
make[1]: Leaving directory `/«PKGBUILDDIR»'
test -z 'test' || \
	  DESTDIR='/«PKGBUILDDIR»/debian/git' /usr/bin/make test NO_OPENSSL=1 prefix=/usr gitexecdir=/usr/lib/git-core mandir=/usr/share/man htmldir=/usr/share/doc/git/html INSTALLDIRS=vendor NO_PYTHON=1 USE_SRV_RR=1 THREADED_DELTA_SEARCH=1 NO_CROSS_DIRECTORY_HARDLINKS=1 NO_HARDLINKS=1 DEFAULT_PAGER=pager DEFAULT_EDITOR=editor CC='gcc' CFLAGS='-Wall -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' LDFLAGS='-Wl,-z,relro' || \
	  GIT_TEST_OPTS=--verbose DESTDIR='/«PKGBUILDDIR»/debian/git' /usr/bin/make test NO_OPENSSL=1 prefix=/usr gitexecdir=/usr/lib/git-core mandir=/usr/share/man htmldir=/usr/share/doc/git/html INSTALLDIRS=vendor NO_PYTHON=1 USE_SRV_RR=1 THREADED_DELTA_SEARCH=1 NO_CROSS_DIRECTORY_HARDLINKS=1 NO_HARDLINKS=1 DEFAULT_PAGER=pager DEFAULT_EDITOR=editor CC='gcc' CFLAGS='-Wall -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' LDFLAGS='-Wl,-z,relro'
make[1]: Entering directory `/«PKGBUILDDIR»'
make[2]: Entering directory `/«PKGBUILDDIR»/gitweb'
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[2]: Leaving directory `/«PKGBUILDDIR»/gitweb'
    GEN git-instaweb
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
make[2]: Entering directory `/«PKGBUILDDIR»/gitk-git'
make[2]: Nothing to be done for `all'.
make[2]: Leaving directory `/«PKGBUILDDIR»/gitk-git'
make[2]: Entering directory `/«PKGBUILDDIR»/perl'
make[3]: Entering directory `/«PKGBUILDDIR»/perl'
make[3]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Entering directory `/«PKGBUILDDIR»/templates'
make[2]: Leaving directory `/«PKGBUILDDIR»/templates'
/usr/bin/make -C t/ all
make[2]: Entering directory `/«PKGBUILDDIR»/t'
rm -f -r test-results
/usr/bin/make aggregate-results-and-cleanup
make[3]: Entering directory `/«PKGBUILDDIR»/t'
*** t0000-basic.sh ***
ok 1 - .git/objects should be empty after git init in an empty repo
ok 2 - .git/objects should have 3 subdirectories
ok 3 - success is reported like this
not ok 4 - pretend we have a known breakage # TODO known breakage
ok 5 - pretend we have fixed a known breakage (run in sub test-lib)
ok 6 - test runs if prerequisite is satisfied
ok 7 # skip unmet prerequisite causes test to be skipped (missing DONTHAVEIT)
ok 8 - test runs if prerequisites are satisfied
ok 9 # skip unmet prerequisites causes test to be skipped (missing DONTHAVEIT of HAVEIT,DONTHAVEIT)
ok 10 # skip unmet prerequisites causes test to be skipped (missing DONTHAVEIT of DONTHAVEIT,HAVEIT)
ok 11 - tests clean up after themselves
ok 12 - tests clean up even on failures
ok 13 - git update-index without --add should fail adding
ok 14 - git update-index with --add should succeed
ok 15 - writing tree out with git write-tree
ok 16 - validate object ID of a known tree
ok 17 - git update-index without --remove should fail removing
ok 18 - git update-index with --remove should be able to remove
ok 19 - git write-tree should be able to write an empty tree
ok 20 - validate object ID of a known tree
ok 21 - adding various types of objects with git update-index --add
ok 22 - showing stage with git ls-files --stage
ok 23 - validate git ls-files output for a known tree
ok 24 - writing tree out with git write-tree
ok 25 - validate object ID for a known tree
ok 26 - showing tree with git ls-tree
ok 27 - git ls-tree output for a known tree
ok 28 - showing tree with git ls-tree -r
ok 29 - git ls-tree -r output for a known tree
ok 30 - showing tree with git ls-tree -r -t
ok 31 - git ls-tree -r output for a known tree
ok 32 - writing partial tree out with git write-tree --prefix
ok 33 - validate object ID for a known tree
ok 34 - writing partial tree out with git write-tree --prefix
ok 35 - validate object ID for a known tree
ok 36 - put invalid objects into the index
ok 37 - writing this tree without --missing-ok
ok 38 - writing this tree with --missing-ok
ok 39 - git read-tree followed by write-tree should be idempotent
ok 40 - validate git diff-files output for a know cache/work tree state
ok 41 - git update-index --refresh should succeed
ok 42 - no diff after checkout and git update-index --refresh
ok 43 - git commit-tree records the correct tree in a commit
ok 44 - git commit-tree records the correct parent in a commit
ok 45 - git commit-tree omits duplicated parent in a commit
ok 46 - update-index D/F conflict
ok 47 - real path works as expected
ok 48 - very long name in the index handled sanely
# still have 1 known breakage(s)
# passed all remaining 47 test(s)
1..48
*** t0001-init.sh ***
ok 1 - plain
ok 2 - plain nested in bare
ok 3 - plain through aliased command, outside any git repo
not ok 4 - plain nested through aliased command # TODO known breakage
not ok 5 - plain nested in bare through aliased command # TODO known breakage
ok 6 - plain with GIT_WORK_TREE
ok 7 - plain bare
ok 8 - plain bare with GIT_WORK_TREE
ok 9 - GIT_DIR bare
ok 10 - init --bare
ok 11 - GIT_DIR non-bare
ok 12 - GIT_DIR & GIT_WORK_TREE (1)
ok 13 - GIT_DIR & GIT_WORK_TREE (2)
ok 14 - reinit
ok 15 - init with --template
ok 16 - init with --template (blank)
ok 17 - init with init.templatedir set
ok 18 - init --bare/--shared overrides system/global config
ok 19 - init honors global core.sharedRepository
ok 20 - init rejects insanely long --template
ok 21 - init creates a new directory
ok 22 - init creates a new bare directory
ok 23 - init recreates a directory
ok 24 - init recreates a new bare directory
ok 25 - init creates a new deep directory
ok 26 - init creates a new deep directory (umask vs. shared)
ok 27 - init notices EEXIST (1)
ok 28 - init notices EEXIST (2)
ok 29 # skip init notices EPERM (missing SANITY of POSIXPERM,SANITY)
ok 30 - init creates a new bare directory with global --bare
ok 31 - init prefers command line to GIT_DIR
ok 32 - init with separate gitdir
ok 33 - re-init to update git link
ok 34 - re-init to move gitdir
ok 35 - re-init to move gitdir symlink
# still have 2 known breakage(s)
# passed all remaining 33 test(s)
1..35
*** t0002-gitfile.sh ***
ok 1 - initial setup
ok 2 - bad setup: invalid .git file format
ok 3 - bad setup: invalid .git file path
ok 4 - final setup + check rev-parse --git-dir
ok 5 - check hash-object
ok 6 - check cat-file
ok 7 - check update-index
ok 8 - check write-tree
ok 9 - check commit-tree
ok 10 - check rev-list
# passed all 10 test(s)
1..10
*** t0003-attributes.sh ***
ok 1 - setup
ok 2 - command line checks
ok 3 - attribute test
ok 4 - attribute matching is case sensitive when core.ignorecase=0
ok 5 - attribute matching is case insensitive when core.ignorecase=1
ok 6 - check whether FS is case-insensitive
ok 7 # skip additional case insensitivity tests (missing CASE_INSENSITIVE_FS)
ok 8 - unnormalized paths
ok 9 - relative paths
ok 10 - prefixes are not confused with leading directories
ok 11 - core.attributesfile
ok 12 - attribute test: read paths from stdin
ok 13 - attribute test: --all option
ok 14 - attribute test: --cached option
ok 15 - root subdir attribute test
ok 16 - setup bare
ok 17 - bare repository: check that .gitattribute is ignored
ok 18 - bare repository: check that --cached honors index
ok 19 - bare repository: test info/attributes
# passed all 19 test(s)
1..19
*** t0004-unwritable.sh ***
ok 1 - setup
ok 2 # skip write-tree should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)
ok 3 # skip commit should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)
ok 4 # skip update-index should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)
ok 5 # skip add should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)
# passed all 5 test(s)
1..5
*** t0005-signals.sh ***
ok 1 - sigchain works
# passed all 1 test(s)
1..1
*** t0006-date.sh ***
ok 1 - relative date (5 seconds ago)
ok 2 - relative date (5 minutes ago)
ok 3 - relative date (5 hours ago)
ok 4 - relative date (5 days ago)
ok 5 - relative date (3 weeks ago)
ok 6 - relative date (5 months ago)
ok 7 - relative date (1 year, 2 months ago)
ok 8 - relative date (1 year, 9 months ago)
ok 9 - relative date (20 years ago)
ok 10 - relative date (12 months ago)
ok 11 - relative date (2 years ago)
ok 12 - parse date (2008)
ok 13 - parse date (2008-02)
ok 14 - parse date (2008-02-14)
ok 15 - parse date (2008-02-14 20:30:45)
ok 16 - parse date (2008-02-14 20:30:45 -0500)
ok 17 - parse date (2008-02-14 20:30:45 -0015)
ok 18 - parse date (2008-02-14 20:30:45 -5)
ok 19 - parse date (2008-02-14 20:30:45 -5:)
ok 20 - parse date (2008-02-14 20:30:45 -05)
ok 21 - parse date (2008-02-14 20:30:45 -:30)
ok 22 - parse date (2008-02-14 20:30:45 -05:00)
ok 23 - parse date (2008-02-14 20:30:45 TZ=EST5)
ok 24 - parse approxidate (now)
ok 25 - parse approxidate (5 seconds ago)
ok 26 - parse approxidate (5.seconds.ago)
ok 27 - parse approxidate (10.minutes.ago)
ok 28 - parse approxidate (yesterday)
ok 29 - parse approxidate (3.days.ago)
ok 30 - parse approxidate (3.weeks.ago)
ok 31 - parse approxidate (3.months.ago)
ok 32 - parse approxidate (2.years.3.months.ago)
ok 33 - parse approxidate (6am yesterday)
ok 34 - parse approxidate (6pm yesterday)
ok 35 - parse approxidate (3:00)
ok 36 - parse approxidate (15:00)
ok 37 - parse approxidate (noon today)
ok 38 - parse approxidate (noon yesterday)
ok 39 - parse approxidate (last tuesday)
ok 40 - parse approxidate (July 5th)
ok 41 - parse approxidate (06/05/2009)
ok 42 - parse approxidate (06.05.2009)
ok 43 - parse approxidate (Jun 6, 5AM)
ok 44 - parse approxidate (5AM Jun 6)
ok 45 - parse approxidate (6AM, June 7, 2009)
# passed all 45 test(s)
1..45
*** t0010-racy-git.sh ***
ok 1 - Racy GIT trial #0 part A
ok 2 - Racy GIT trial #0 part B
ok 3 - Racy GIT trial #1 part A
ok 4 - Racy GIT trial #1 part B
ok 5 - Racy GIT trial #2 part A
ok 6 - Racy GIT trial #2 part B
ok 7 - Racy GIT trial #3 part A
ok 8 - Racy GIT trial #3 part B
ok 9 - Racy GIT trial #4 part A
ok 10 - Racy GIT trial #4 part B
# passed all 10 test(s)
1..10
*** t0020-crlf.sh ***
ok 1 - setup
ok 2 - safecrlf: autocrlf=input, all CRLF
ok 3 - safecrlf: autocrlf=input, mixed LF/CRLF
ok 4 - safecrlf: autocrlf=true, all LF
ok 5 - safecrlf: autocrlf=true mixed LF/CRLF
ok 6 - safecrlf: print warning only once
ok 7 - switch off autocrlf, safecrlf, reset HEAD
ok 8 - update with autocrlf=input
ok 9 - update with autocrlf=true
ok 10 - checkout with autocrlf=true
ok 11 - checkout with autocrlf=input
ok 12 - apply patch (autocrlf=input)
ok 13 - apply patch --cached (autocrlf=input)
ok 14 - apply patch --index (autocrlf=input)
ok 15 - apply patch (autocrlf=true)
ok 16 - apply patch --cached (autocrlf=true)
ok 17 - apply patch --index (autocrlf=true)
ok 18 - .gitattributes says two is binary
ok 19 - .gitattributes says two is input
ok 20 - .gitattributes says two and three are text
ok 21 - in-tree .gitattributes (1)
ok 22 - in-tree .gitattributes (2)
ok 23 - in-tree .gitattributes (3)
ok 24 - in-tree .gitattributes (4)
ok 25 - checkout with existing .gitattributes
ok 26 - checkout when deleting .gitattributes
ok 27 - invalid .gitattributes (must not crash)
ok 28 - setting up for new autocrlf tests
ok 29 - report no change after setting autocrlf
ok 30 - files are clean after checkout
ok 31 - LF only file gets CRLF with autocrlf
ok 32 - Mixed file is still mixed with autocrlf
ok 33 - CRLF only file has CRLF with autocrlf
ok 34 - New CRLF file gets LF in repo
# passed all 34 test(s)
1..34
*** t0021-conversion.sh ***
ok 1 - setup
ok 2 - check
ok 3 - expanded_in_repo
ok 4 - filter shell-escaped filenames
ok 5 - required filter success
ok 6 - required filter smudge failure
ok 7 - required filter clean failure
# passed all 7 test(s)
1..7
*** t0022-crlf-rename.sh ***
ok 1 - setup
ok 2 - diff -M
# passed all 2 test(s)
1..2
*** t0023-crlf-am.sh ***
ok 1 - setup
ok 2 - am
# passed all 2 test(s)
1..2
*** t0024-crlf-archive.sh ***
ok 1 - setup
ok 2 - tar archive
ok 3 - zip archive
# passed all 3 test(s)
1..3
*** t0025-crlf-auto.sh ***
ok 1 - setup
ok 2 - default settings cause no changes
ok 3 - crlf=true causes a CRLF file to be normalized
ok 4 - text=true causes a CRLF file to be normalized
ok 5 - eol=crlf gives a normalized file CRLFs with autocrlf=false
ok 6 - eol=crlf gives a normalized file CRLFs with autocrlf=input
ok 7 - eol=lf gives a normalized file LFs with autocrlf=true
ok 8 - autocrlf=true does not normalize CRLF files
ok 9 - text=auto, autocrlf=true _does_ normalize CRLF files
ok 10 - text=auto, autocrlf=true does not normalize binary files
ok 11 - eol=crlf _does_ normalize binary files
# passed all 11 test(s)
1..11
*** t0026-eol-config.sh ***
ok 1 - setup
ok 2 - eol=lf puts LFs in normalized file
ok 3 - eol=crlf puts CRLFs in normalized file
ok 4 - autocrlf=true overrides eol=lf
ok 5 - autocrlf=true overrides unset eol
# passed all 5 test(s)
1..5
*** t0030-stripspace.sh ***
ok 1 - long lines without spaces should be unchanged
ok 2 - lines with spaces at the beginning should be unchanged
ok 3 - lines with intermediate spaces should be unchanged
ok 4 - consecutive blank lines should be unified
ok 5 - only consecutive blank lines should be completely removed
ok 6 - consecutive blank lines at the beginning should be removed
ok 7 - consecutive blank lines at the end should be removed
ok 8 - text without newline at end should end with newline
ok 9 - text plus spaces without newline at end should end with newline
ok 10 - text plus spaces without newline at end should not show spaces
ok 11 - text plus spaces without newline should show the correct lines
ok 12 - text plus spaces at end should not show spaces
ok 13 - text plus spaces at end should be cleaned and newline must remain
ok 14 - spaces with newline at end should be replaced with empty string
ok 15 - spaces without newline at end should not show spaces
ok 16 - spaces without newline at end should be replaced with empty string
ok 17 - consecutive text lines should be unchanged
ok 18 - strip comments, too
# passed all 18 test(s)
1..18
*** t0040-parse-options.sh ***
ok 1 - test help
ok 2 - OPT_BOOL() #1
ok 3 - OPT_BOOL() #2
ok 4 - OPT_BOOL() #3
ok 5 - OPT_BOOL() #4
ok 6 - OPT_BOOL() #5
ok 7 - OPT_BOOL() is idempotent #1
ok 8 - OPT_BOOL() is idempotent #2
ok 9 - OPT_BOOL() negation #1
ok 10 - OPT_BOOL() negation #2
ok 11 - OPT_BOOL() no negation #1
ok 12 - OPT_BOOL() no negation #2
ok 13 - OPT_BOOL() positivation
ok 14 - short options
ok 15 - long options
ok 16 - missing required value
ok 17 - intermingled arguments
ok 18 - unambiguously abbreviated option
ok 19 - unambiguously abbreviated option with "="
ok 20 - ambiguously abbreviated option
ok 21 - non ambiguous option (after two options it abbreviates)
ok 22 - detect possible typos
ok 23 - detect possible typos
ok 24 - keep some options as arguments
ok 25 - OPT_DATE() and OPT_SET_PTR() work
ok 26 - OPT_CALLBACK() and OPT_BIT() work
ok 27 - OPT_CALLBACK() and callback errors work
ok 28 - OPT_BIT() and OPT_SET_INT() work
ok 29 - OPT_NEGBIT() and OPT_SET_INT() work
ok 30 - OPT_BIT() works
ok 31 - OPT_NEGBIT() works
ok 32 - OPT_COUNTUP() with PARSE_OPT_NODASH works
ok 33 - OPT_NUMBER_CALLBACK() works
ok 34 - negation of OPT_NONEG flags is not ambiguous
ok 35 - --list keeps list of strings
ok 36 - --no-list resets list
# passed all 36 test(s)
1..36
*** t0050-filesystem.sh ***
ok 1 - see what we expect
ok 2 - detection of case insensitive filesystem during repo init
ok 3 - detection of filesystem w/o symlink support during repo init
ok 4 - setup case tests
ok 5 - rename (case change)
ok 6 - merge (case change)
not ok 7 - add (with different case) # TODO known breakage
ok 8 - setup unicode normalization tests
ok 9 - rename (silent unicode normalization)
ok 10 - merge (silent unicode normalization)
# still have 1 known breakage(s)
# passed all remaining 9 test(s)
1..10
*** t0055-beyond-symlinks.sh ***
ok 1 - setup
ok 2 - update-index --add beyond symlinks
ok 3 - add beyond symlinks
# passed all 3 test(s)
1..3
*** t0060-path-utils.sh ***
ok 1 - normalize path:  => 
ok 2 - normalize path: . => 
ok 3 - normalize path: ./ => 
ok 4 - normalize path: ./. => 
ok 5 - normalize path: ./.. => ++failed++
ok 6 - normalize path: ../. => ++failed++
ok 7 - normalize path: ./../.// => ++failed++
ok 8 - normalize path: dir/.. => 
ok 9 - normalize path: dir/sub/../.. => 
ok 10 - normalize path: dir/sub/../../.. => ++failed++
ok 11 - normalize path: dir => dir
ok 12 - normalize path: dir// => dir/
ok 13 - normalize path: ./dir => dir
ok 14 - normalize path: dir/. => dir/
ok 15 - normalize path: dir///./ => dir/
ok 16 - normalize path: dir//sub/.. => dir/
ok 17 - normalize path: dir/sub/../ => dir/
ok 18 - normalize path: dir/sub/../. => dir/
ok 19 - normalize path: dir/s1/../s2/ => dir/s2/
ok 20 - normalize path: d1/s1///s2/..//../s3/ => d1/s3/
ok 21 - normalize path: d1/s1//../s2/../../d2 => d2
ok 22 - normalize path: d1/.../d2 => d1/.../d2
ok 23 - normalize path: d1/..././../d2 => d1/d2
ok 24 - normalize path: / => /
ok 25 - normalize path: // => /
ok 26 - normalize path: /// => /
ok 27 - normalize path: /. => /
ok 28 - normalize path: /./ => /
ok 29 - normalize path: /./.. => ++failed++
ok 30 - normalize path: /../. => ++failed++
ok 31 - normalize path: /./../.// => ++failed++
ok 32 - normalize path: /dir/.. => /
ok 33 - normalize path: /dir/sub/../.. => /
ok 34 - normalize path: /dir/sub/../../.. => ++failed++
ok 35 - normalize path: /dir => /dir
ok 36 - normalize path: /dir// => /dir/
ok 37 - normalize path: /./dir => /dir
ok 38 - normalize path: /dir/. => /dir/
ok 39 - normalize path: /dir///./ => /dir/
ok 40 - normalize path: /dir//sub/.. => /dir/
ok 41 - normalize path: /dir/sub/../ => /dir/
ok 42 - normalize path: //dir/sub/../. => /dir/
ok 43 - normalize path: /dir/s1/../s2/ => /dir/s2/
ok 44 - normalize path: /d1/s1///s2/..//../s3/ => /d1/s3/
ok 45 - normalize path: /d1/s1//../s2/../../d2 => /d2
ok 46 - normalize path: /d1/.../d2 => /d1/.../d2
ok 47 - normalize path: /d1/..././../d2 => /d1/d2
ok 48 - longest ancestor: /  => -1
ok 49 - longest ancestor: / / => -1
ok 50 - longest ancestor: /foo  => -1
ok 51 - longest ancestor: /foo : => -1
ok 52 - longest ancestor: /foo ::. => -1
ok 53 - longest ancestor: /foo ::..:: => -1
ok 54 - longest ancestor: /foo / => 0
ok 55 - longest ancestor: /foo /fo => -1
ok 56 - longest ancestor: /foo /foo => -1
ok 57 - longest ancestor: /foo /foo/ => -1
ok 58 - longest ancestor: /foo /bar => -1
ok 59 - longest ancestor: /foo /bar/ => -1
ok 60 - longest ancestor: /foo /foo/bar => -1
ok 61 - longest ancestor: /foo /foo:/bar/ => -1
ok 62 - longest ancestor: /foo /foo/:/bar/ => -1
ok 63 - longest ancestor: /foo /foo::/bar/ => -1
ok 64 - longest ancestor: /foo /:/foo:/bar/ => 0
ok 65 - longest ancestor: /foo /foo:/:/bar/ => 0
ok 66 - longest ancestor: /foo /:/bar/:/foo => 0
ok 67 - longest ancestor: /foo/bar  => -1
ok 68 - longest ancestor: /foo/bar / => 0
ok 69 - longest ancestor: /foo/bar /fo => -1
ok 70 - longest ancestor: /foo/bar foo => -1
ok 71 - longest ancestor: /foo/bar /foo => 4
ok 72 - longest ancestor: /foo/bar /foo/ => 4
ok 73 - longest ancestor: /foo/bar /foo/ba => -1
ok 74 - longest ancestor: /foo/bar /:/fo => 0
ok 75 - longest ancestor: /foo/bar /foo:/foo/ba => 4
ok 76 - longest ancestor: /foo/bar /bar => -1
ok 77 - longest ancestor: /foo/bar /bar/ => -1
ok 78 - longest ancestor: /foo/bar /fo: => -1
ok 79 - longest ancestor: /foo/bar :/fo => -1
ok 80 - longest ancestor: /foo/bar /foo:/bar/ => 4
ok 81 - longest ancestor: /foo/bar /:/foo:/bar/ => 4
ok 82 - longest ancestor: /foo/bar /foo:/:/bar/ => 4
ok 83 - longest ancestor: /foo/bar /:/bar/:/fo => 0
ok 84 - longest ancestor: /foo/bar /:/bar/ => 0
ok 85 - longest ancestor: /foo/bar .:/foo/. => 4
ok 86 - longest ancestor: /foo/bar .:/foo/.:.: => 4
ok 87 - longest ancestor: /foo/bar /foo/./:.:/bar => 4
ok 88 - longest ancestor: /foo/bar .:/bar => -1
ok 89 - strip_path_suffix
# passed all 89 test(s)
1..89
*** t0061-run-command.sh ***
ok 1 - start_command reports ENOENT
ok 2 - run_command can run a command
ok 3 - run_command reports EACCES
ok 4 - unreadable directory in PATH
# passed all 4 test(s)
1..4
*** t0070-fundamental.sh ***
ok 1 - character classes (isspace, isalpha etc.)
ok 2 - mktemp to nonexistent directory prints filename
not ok - 3 mktemp to unwritable directory prints filename
#	
#		mkdir cannotwrite &&
#		chmod -w cannotwrite &&
#		test_when_finished "chmod +w cannotwrite" &&
#		test_must_fail test-mktemp cannotwrite/testXXXXXX 2>err &&
#		grep "cannotwrite/test" err
#	
# failed 1 among 3 test(s)
1..3
make[3]: *** [t0070-fundamental.sh] Error 1
make[2]: *** [test] Error 2
make[3]: Leaving directory `/«PKGBUILDDIR»/t'
make[2]: Leaving directory `/«PKGBUILDDIR»/t'
make[1]: *** [test] Error 2
make[1]: Leaving directory `/«PKGBUILDDIR»'
make[1]: Entering directory `/«PKGBUILDDIR»'
make[2]: Entering directory `/«PKGBUILDDIR»/gitweb'
make[3]: Entering directory `/«PKGBUILDDIR»'
make[3]: `GIT-VERSION-FILE' is up to date.
make[3]: Leaving directory `/«PKGBUILDDIR»'
make[2]: Leaving directory `/«PKGBUILDDIR»/gitweb'
    GEN git-instaweb
make[2]: Entering directory `/«PKGBUILDDIR»/git-gui'
make[2]: Leaving directory `/«PKGBUILDDIR»/git-gui'
make[2]: Entering directory `/«PKGBUILDDIR»/gitk-git'
make[2]: Nothing to be done for `all'.
make[2]: Leaving directory `/«PKGBUILDDIR»/gitk-git'
make[2]: Entering directory `/«PKGBUILDDIR»/perl'
make[3]: Entering directory `/«PKGBUILDDIR»/perl'
make[3]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Leaving directory `/«PKGBUILDDIR»/perl'
make[2]: Entering directory `/«PKGBUILDDIR»/templates'
make[2]: Leaving directory `/«PKGBUILDDIR»/templates'
/usr/bin/make -C t/ all
make[2]: Entering directory `/«PKGBUILDDIR»/t'
rm -f -r test-results
/usr/bin/make aggregate-results-and-cleanup
make[3]: Entering directory `/«PKGBUILDDIR»/t'
*** t0000-basic.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0000-basic/.git/
expecting success: 
	find .git/objects -type f -print >should-be-empty &&
	test_line_count = 0 should-be-empty

ok 1 - .git/objects should be empty after git init in an empty repo

expecting success: 
	find .git/objects -type d -print >full-of-directories &&
	test_line_count = 3 full-of-directories

ok 2 - .git/objects should have 3 subdirectories

expecting success: 
	:

ok 3 - success is reported like this

checking known breakage: 
	false

not ok 4 - pretend we have a known breakage # TODO known breakage

expecting success: 
	mkdir passing-todo &&
	(cd passing-todo &&
	cat >passing-todo.sh <<-EOF &&
	#!/bin/sh

	test_description='A passing TODO test

	This is run in a sub test-lib so that we do not get incorrect
	passing metrics
	'

	# Point to the t/test-lib.sh, which isn't in ../ as usual
	TEST_DIRECTORY="/«PKGBUILDDIR»/t"
	. "$TEST_DIRECTORY"/test-lib.sh

	test_expect_failure 'pretend we have fixed a known breakage' '
		:
	'

	test_done
	EOF
	chmod +x passing-todo.sh &&
	./passing-todo.sh >out 2>err &&
	! test -s err &&
	sed -e 's/^> //' >expect <<-\EOF &&
	> ok 1 - pretend we have fixed a known breakage # TODO known breakage
	> # fixed 1 known breakage(s)
	> # passed all 1 test(s)
	> 1..1
	EOF
	test_cmp expect out)

ok 5 - pretend we have fixed a known breakage (run in sub test-lib)

expecting success: 
	test_have_prereq HAVEIT &&
	haveit=yes

ok 6 - test runs if prerequisite is satisfied

skipping test: unmet prerequisite causes test to be skipped 
	donthaveit=no

ok 7 # skip unmet prerequisite causes test to be skipped (missing DONTHAVEIT)

expecting success: 
	test_have_prereq HAVEIT &&
	test_have_prereq HAVETHIS &&
	haveit=yes

ok 8 - test runs if prerequisites are satisfied

skipping test: unmet prerequisites causes test to be skipped 
	donthaveit=no

ok 9 # skip unmet prerequisites causes test to be skipped (missing DONTHAVEIT of HAVEIT,DONTHAVEIT)

skipping test: unmet prerequisites causes test to be skipped 
	donthaveiteither=no

ok 10 # skip unmet prerequisites causes test to be skipped (missing DONTHAVEIT of DONTHAVEIT,HAVEIT)

expecting success: 
	test_when_finished clean=yes

ok 11 - tests clean up after themselves

expecting success: 
	mkdir failing-cleanup &&
	(
	cd failing-cleanup &&

	cat >failing-cleanup.sh <<-EOF &&
	#!/bin/sh

	test_description='Failing tests with cleanup commands'

	# Point to the t/test-lib.sh, which isn't in ../ as usual
	TEST_DIRECTORY="/«PKGBUILDDIR»/t"
	. "$TEST_DIRECTORY"/test-lib.sh

	test_expect_success 'tests clean up even after a failure' '
		touch clean-after-failure &&
		test_when_finished rm clean-after-failure &&
		(exit 1)
	'
	test_expect_success 'failure to clean up causes the test to fail' '
		test_when_finished "(exit 2)"
	'
	test_done

	EOF

	chmod +x failing-cleanup.sh &&
	test_must_fail ./failing-cleanup.sh >out 2>err &&
	! test -s err &&
	! test -f "trash directory.failing-cleanup/clean-after-failure" &&
	sed -e 's/Z$//' -e 's/^> //' >expect <<-\EOF &&
	> not ok - 1 tests clean up even after a failure
	> #	Z
	> #	touch clean-after-failure &&
	> #	test_when_finished rm clean-after-failure &&
	> #	(exit 1)
	> #	Z
	> not ok - 2 failure to clean up causes the test to fail
	> #	Z
	> #	test_when_finished "(exit 2)"
	> #	Z
	> # failed 2 among 2 test(s)
	> 1..2
	EOF
	test_cmp expect out
	)

ok 12 - tests clean up even on failures

expecting success: 
	test_must_fail git update-index should-be-empty

error: should-be-empty: cannot add to the index - missing --add option?
fatal: Unable to process path should-be-empty
ok 13 - git update-index without --add should fail adding

expecting success: 
	git update-index --add should-be-empty

ok 14 - git update-index with --add should succeed

expecting success: 
	tree=$(git write-tree)

ok 15 - writing tree out with git write-tree

expecting success: 
	test "$tree" = 7bb943559a305bdd6bdee2cef6e5df2413c3d30a
    
ok 16 - validate object ID of a known tree

expecting success: 
	rm -f should-be-empty full-of-directories &&
	test_must_fail git update-index should-be-empty

error: should-be-empty: does not exist and --remove not passed
fatal: Unable to process path should-be-empty
ok 17 - git update-index without --remove should fail removing

expecting success: 
	git update-index --remove should-be-empty

ok 18 - git update-index with --remove should be able to remove

expecting success: 
	tree=$(git write-tree)

ok 19 - git write-tree should be able to write an empty tree

expecting success: 
	test "$tree" = 4b825dc642cb6eb9a060e54bf8d69288fbee4904

ok 20 - validate object ID of a known tree

expecting success: 
	mkdir path2 path3 path3/subp3 &&
	paths="path0 path2/file2 path3/file3 path3/subp3/file3" &&
	(
		for p in $paths
		do
			echo "hello $p" >$p || exit 1
			if test_have_prereq SYMLINKS
			then
				ln -s "hello $p" ${p}sym || exit 1
			fi
		done
	) &&
	find path* ! -type d -print | xargs git update-index --add

ok 21 - adding various types of objects with git update-index --add

expecting success: 
	git ls-files --stage >current

ok 22 - showing stage with git ls-files --stage

expecting success: 
	$expectfilter >expected <<-\EOF &&
	100644 f87290f8eb2cbbea7857214459a0739927eab154 0	path0
	120000 15a98433ae33114b085f3eb3bb03b832b3180a01 0	path0sym
	100644 3feff949ed00a62d9f7af97c15cd8a30595e7ac7 0	path2/file2
	120000 d8ce161addc5173867a3c3c730924388daedbc38 0	path2/file2sym
	100644 0aa34cae68d0878578ad119c86ca2b5ed5b28376 0	path3/file3
	120000 8599103969b43aff7e430efea79ca4636466794f 0	path3/file3sym
	100644 00fb5908cb97c2564a9783c0c64087333b3b464f 0	path3/subp3/file3
	120000 6649a1ebe9e9f1c553b66f5a6e74136a07ccc57c 0	path3/subp3/file3sym
	EOF
	test_cmp expected current

ok 23 - validate git ls-files output for a known tree

expecting success: 
	tree=$(git write-tree)

ok 24 - writing tree out with git write-tree

expecting success: 
	test "$tree" = "$expectedtree"

ok 25 - validate object ID for a known tree

expecting success: 
    git ls-tree $tree >current

ok 26 - showing tree with git ls-tree

expecting success: 
	cat >expected <<-\EOF &&
	100644 blob f87290f8eb2cbbea7857214459a0739927eab154	path0
	120000 blob 15a98433ae33114b085f3eb3bb03b832b3180a01	path0sym
	040000 tree 58a09c23e2ca152193f2786e06986b7b6712bdbe	path2
	040000 tree 21ae8269cacbe57ae09138dcc3a2887f904d02b3	path3
	EOF
	test_cmp expected current

ok 27 - git ls-tree output for a known tree

expecting success: 
	git ls-tree -r $tree >current

ok 28 - showing tree with git ls-tree -r

expecting success: 
	$expectfilter >expected <<-\EOF &&
	100644 blob f87290f8eb2cbbea7857214459a0739927eab154	path0
	120000 blob 15a98433ae33114b085f3eb3bb03b832b3180a01	path0sym
	100644 blob 3feff949ed00a62d9f7af97c15cd8a30595e7ac7	path2/file2
	120000 blob d8ce161addc5173867a3c3c730924388daedbc38	path2/file2sym
	100644 blob 0aa34cae68d0878578ad119c86ca2b5ed5b28376	path3/file3
	120000 blob 8599103969b43aff7e430efea79ca4636466794f	path3/file3sym
	100644 blob 00fb5908cb97c2564a9783c0c64087333b3b464f	path3/subp3/file3
	120000 blob 6649a1ebe9e9f1c553b66f5a6e74136a07ccc57c	path3/subp3/file3sym
	EOF
	test_cmp expected current

ok 29 - git ls-tree -r output for a known tree

expecting success: 
	git ls-tree -r -t $tree >current

ok 30 - showing tree with git ls-tree -r -t

expecting success: 
	cat >expected <<-\EOF &&
	100644 blob f87290f8eb2cbbea7857214459a0739927eab154	path0
	120000 blob 15a98433ae33114b085f3eb3bb03b832b3180a01	path0sym
	040000 tree 58a09c23e2ca152193f2786e06986b7b6712bdbe	path2
	100644 blob 3feff949ed00a62d9f7af97c15cd8a30595e7ac7	path2/file2
	120000 blob d8ce161addc5173867a3c3c730924388daedbc38	path2/file2sym
	040000 tree 21ae8269cacbe57ae09138dcc3a2887f904d02b3	path3
	100644 blob 0aa34cae68d0878578ad119c86ca2b5ed5b28376	path3/file3
	120000 blob 8599103969b43aff7e430efea79ca4636466794f	path3/file3sym
	040000 tree 3c5e5399f3a333eddecce7a9b9465b63f65f51e2	path3/subp3
	100644 blob 00fb5908cb97c2564a9783c0c64087333b3b464f	path3/subp3/file3
	120000 blob 6649a1ebe9e9f1c553b66f5a6e74136a07ccc57c	path3/subp3/file3sym
	EOF
	test_cmp expected current

ok 31 - git ls-tree -r output for a known tree

expecting success: 
	ptree=$(git write-tree --prefix=path3)

ok 32 - writing partial tree out with git write-tree --prefix

expecting success: 
	test "$ptree" = "$expectedptree1"

ok 33 - validate object ID for a known tree

expecting success: 
	ptree=$(git write-tree --prefix=path3/subp3)

ok 34 - writing partial tree out with git write-tree --prefix

expecting success: 
	test "$ptree" = "$expectedptree2"

ok 35 - validate object ID for a known tree

expecting success: 
	rm -f .git/index &&
	cat >badobjects <<-\EOF &&
	100644 blob 1000000000000000000000000000000000000000	dir/file1
	100644 blob 2000000000000000000000000000000000000000	dir/file2
	100644 blob 3000000000000000000000000000000000000000	dir/file3
	100644 blob 4000000000000000000000000000000000000000	dir/file4
	100644 blob 5000000000000000000000000000000000000000	dir/file5
	EOF
	git update-index --index-info <badobjects

ok 36 - put invalid objects into the index

expecting success: 
	test_must_fail git write-tree

error: invalid object 100644 1000000000000000000000000000000000000000 for 'dir/file1'
fatal: git-write-tree: error building trees
ok 37 - writing this tree without --missing-ok

expecting success: 
	git write-tree --missing-ok

851a367613bb6e1f0b2b518323eafed530b5b4c4
ok 38 - writing this tree with --missing-ok

expecting success: 
	rm -f .git/index
	git read-tree $tree &&
	test -f .git/index &&
	newtree=$(git write-tree) &&
	test "$newtree" = "$tree"

ok 39 - git read-tree followed by write-tree should be idempotent

expecting success: 
	$expectfilter >expected <<\EOF &&
:100644 100644 f87290f8eb2cbbea7857214459a0739927eab154 0000000000000000000000000000000000000000 M	path0
:120000 120000 15a98433ae33114b085f3eb3bb03b832b3180a01 0000000000000000000000000000000000000000 M	path0sym
:100644 100644 3feff949ed00a62d9f7af97c15cd8a30595e7ac7 0000000000000000000000000000000000000000 M	path2/file2
:120000 120000 d8ce161addc5173867a3c3c730924388daedbc38 0000000000000000000000000000000000000000 M	path2/file2sym
:100644 100644 0aa34cae68d0878578ad119c86ca2b5ed5b28376 0000000000000000000000000000000000000000 M	path3/file3
:120000 120000 8599103969b43aff7e430efea79ca4636466794f 0000000000000000000000000000000000000000 M	path3/file3sym
:100644 100644 00fb5908cb97c2564a9783c0c64087333b3b464f 0000000000000000000000000000000000000000 M	path3/subp3/file3
:120000 120000 6649a1ebe9e9f1c553b66f5a6e74136a07ccc57c 0000000000000000000000000000000000000000 M	path3/subp3/file3sym
EOF
	git diff-files >current &&
	test_cmp current expected

ok 40 - validate git diff-files output for a know cache/work tree state

expecting success: 
	git update-index --refresh

ok 41 - git update-index --refresh should succeed

expecting success: 
	git diff-files >current &&
	cmp -s current /dev/null

ok 42 - no diff after checkout and git update-index --refresh

expecting success: 
	commit0=$(echo NO | git commit-tree $P) &&
	tree=$(git show --pretty=raw $commit0 |
		 sed -n -e "s/^tree //p" -e "/^author /q") &&
	test "z$tree" = "z$P"

ok 43 - git commit-tree records the correct tree in a commit

expecting success: 
	commit1=$(echo NO | git commit-tree $P -p $commit0) &&
	parent=$(git show --pretty=raw $commit1 |
		sed -n -e "s/^parent //p" -e "/^author /q") &&
	test "z$commit0" = "z$parent"

ok 44 - git commit-tree records the correct parent in a commit

expecting success: 
	commit2=$(echo NO | git commit-tree $P -p $commit0 -p $commit0) &&
	     parent=$(git show --pretty=raw $commit2 |
		sed -n -e "s/^parent //p" -e "/^author /q" |
		sort -u) &&
	test "z$commit0" = "z$parent" &&
	numparent=$(git show --pretty=raw $commit2 |
		sed -n -e "s/^parent //p" -e "/^author /q" |
		wc -l) &&
	test $numparent = 1

error: duplicate parent 9c5335dc8296e2508eacb9a35ae31bed573c1f75 ignored
ok 45 - git commit-tree omits duplicated parent in a commit

expecting success: 
	mv path0 tmp &&
	mv path2 path0 &&
	mv tmp path2 &&
	git update-index --add --replace path2 path0/file2 &&
	numpath0=$(git ls-files path0 | wc -l) &&
	test $numpath0 = 1

ok 46 - update-index D/F conflict

expecting success: 
	mkdir first &&
	ln -s ../.git first/.git &&
	mkdir second &&
	ln -s ../first second/other &&
	mkdir third &&
	dir="$(cd .git; pwd -P)" &&
	dir2=third/../second/other/.git &&
	test "$dir" = "$(test-path-utils real_path $dir2)" &&
	file="$dir"/index &&
	test "$file" = "$(test-path-utils real_path $dir2/index)" &&
	basename=blub &&
	test "$dir/$basename" = "$(cd .git && test-path-utils real_path "$basename")" &&
	ln -s ../first/file .git/syml &&
	sym="$(cd first; pwd -P)"/file &&
	test "$sym" = "$(test-path-utils real_path "$dir2/syml")"

ok 47 - real path works as expected

expecting success: 

	a=a && # 1
	a=$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a && # 16
	a=$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a && # 256
	a=$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a$a && # 4096
	a=${a}q &&

	>path4 &&
	git update-index --add path4 &&
	(
		git ls-files -s path4 |
		sed -e "s/	.*/	/" |
		tr -d "
"
		echo "$a"
	) | git update-index --index-info &&
	len=$(git ls-files "a*" | wc -c) &&
	test $len = 4098

ok 48 - very long name in the index handled sanely

# still have 1 known breakage(s)
# passed all remaining 47 test(s)
1..48
*** t0001-init.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/.git/
expecting success: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE &&
		mkdir plain &&
		cd plain &&
		git init
	) &&
	check_config plain/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/plain/.git/
ok 1 - plain

expecting success: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE &&
		git init --bare bare-ancestor.git &&
		cd bare-ancestor.git &&
		mkdir plain-nested &&
		cd plain-nested &&
		git init
	) &&
	check_config bare-ancestor.git/plain-nested/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/bare-ancestor.git/
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/bare-ancestor.git/plain-nested/.git/
ok 2 - plain nested in bare

expecting success: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE &&
		HOME=$(pwd)/alias-config &&
		export HOME &&
		mkdir alias-config &&
		echo "[alias] aliasedinit = init" >alias-config/.gitconfig &&

		GIT_CEILING_DIRECTORIES=$(pwd) &&
		export GIT_CEILING_DIRECTORIES &&

		mkdir plain-aliased &&
		cd plain-aliased &&
		git aliasedinit
	) &&
	check_config plain-aliased/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/plain-aliased/.git/
ok 3 - plain through aliased command, outside any git repo

checking known breakage: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE &&
		git init plain-ancestor-aliased &&
		cd plain-ancestor-aliased &&
		echo "[alias] aliasedinit = init" >>.git/config &&
		mkdir plain-nested &&
		cd plain-nested &&
		git aliasedinit
	) &&
	check_config plain-ancestor-aliased/plain-nested/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/plain-ancestor-aliased/.git/
fatal: internal error: work tree has already been set
Current worktree: /«PKGBUILDDIR»/t/trash directory.t0001-init/plain-ancestor-aliased
New worktree: /«PKGBUILDDIR»/t/trash directory.t0001-init/plain-ancestor-aliased/plain-nested
not ok 4 - plain nested through aliased command # TODO known breakage

checking known breakage: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE &&
		git init --bare bare-ancestor-aliased.git &&
		cd bare-ancestor-aliased.git &&
		echo "[alias] aliasedinit = init" >>config &&
		mkdir plain-nested &&
		cd plain-nested &&
		git aliasedinit
	) &&
	check_config bare-ancestor-aliased.git/plain-nested/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/bare-ancestor-aliased.git/
Reinitialized existing Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/bare-ancestor-aliased.git/
expected a directory bare-ancestor-aliased.git/plain-nested/.git, a file bare-ancestor-aliased.git/plain-nested/.git/config and bare-ancestor-aliased.git/plain-nested/.git/refs
not ok 5 - plain nested in bare through aliased command # TODO known breakage

expecting success: 
	if (
		sane_unset GIT_DIR &&
		mkdir plain-wt &&
		cd plain-wt &&
		GIT_WORK_TREE=$(pwd) git init
	)
	then
		echo Should have failed -- GIT_WORK_TREE should not be used
		false
	fi

fatal: GIT_WORK_TREE (or --work-tree=<directory>) not allowed without specifying GIT_DIR (or --git-dir=<directory>)
ok 6 - plain with GIT_WORK_TREE

expecting success: 
	(
		sane_unset GIT_DIR GIT_WORK_TREE GIT_CONFIG &&
		mkdir plain-bare-1 &&
		cd plain-bare-1 &&
		git --bare init
	) &&
	check_config plain-bare-1 true unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/plain-bare-1/
ok 7 - plain bare

expecting success: 
	if (
		sane_unset GIT_DIR GIT_CONFIG &&
		mkdir plain-bare-2 &&
		cd plain-bare-2 &&
		GIT_WORK_TREE=$(pwd) git --bare init
	)
	then
		echo Should have failed -- GIT_WORK_TREE should not be used
		false
	fi

fatal: GIT_WORK_TREE (or --work-tree=<directory>) not allowed without specifying GIT_DIR (or --git-dir=<directory>)
ok 8 - plain bare with GIT_WORK_TREE

expecting success: 

	(
		sane_unset GIT_CONFIG &&
		mkdir git-dir-bare.git &&
		GIT_DIR=git-dir-bare.git git init
	) &&
	check_config git-dir-bare.git true unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/git-dir-bare.git/
ok 9 - GIT_DIR bare

expecting success: 

	(
		sane_unset GIT_DIR GIT_WORK_TREE GIT_CONFIG &&
		mkdir init-bare.git &&
		cd init-bare.git &&
		git init --bare
	) &&
	check_config init-bare.git true unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/init-bare.git/
ok 10 - init --bare

expecting success: 

	(
		sane_unset GIT_CONFIG &&
		mkdir non-bare &&
		cd non-bare &&
		GIT_DIR=.git git init
	) &&
	check_config non-bare/.git false unset

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/non-bare/.git/
ok 11 - GIT_DIR non-bare

expecting success: 

	(
		sane_unset GIT_CONFIG &&
		mkdir git-dir-wt-1.git &&
		GIT_WORK_TREE=$(pwd) GIT_DIR=git-dir-wt-1.git git init
	) &&
	check_config git-dir-wt-1.git false "$(pwd)"

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/git-dir-wt-1.git/
ok 12 - GIT_DIR & GIT_WORK_TREE (1)

expecting success: 

	if (
		sane_unset GIT_CONFIG &&
		mkdir git-dir-wt-2.git &&
		GIT_WORK_TREE=$(pwd) GIT_DIR=git-dir-wt-2.git git --bare init
	)
	then
		echo Should have failed -- --bare should not be used
		false
	fi

fatal: GIT_WORK_TREE (or --work-tree=<directory>) not allowed without specifying GIT_DIR (or --git-dir=<directory>)
ok 13 - GIT_DIR & GIT_WORK_TREE (2)

expecting success: 

	(
		sane_unset GIT_CONFIG GIT_WORK_TREE GIT_CONFIG &&

		mkdir again &&
		cd again &&
		git init >out1 2>err1 &&
		git init >out2 2>err2
	) &&
	test_i18ngrep "Initialized empty" again/out1 &&
	test_i18ngrep "Reinitialized existing" again/out2 &&
	>again/empty &&
	test_i18ncmp again/empty again/err1 &&
	test_i18ncmp again/empty again/err2

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/again/.git/
Reinitialized existing Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/again/.git/
ok 14 - reinit

expecting success: 
	mkdir template-source &&
	echo content >template-source/file &&
	(
		mkdir template-custom &&
		cd template-custom &&
		git init --template=../template-source
	) &&
	test_cmp template-source/file template-custom/.git/file

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/template-custom/.git/
ok 15 - init with --template

expecting success: 
	(
		mkdir template-plain &&
		cd template-plain &&
		git init
	) &&
	test -f template-plain/.git/info/exclude &&
	(
		mkdir template-blank &&
		cd template-blank &&
		git init --template=
	) &&
	! test -f template-blank/.git/info/exclude

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/template-plain/.git/
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/template-blank/.git/
ok 16 - init with --template (blank)

expecting success: 
	mkdir templatedir-source &&
	echo Content >templatedir-source/file &&
	(
		test_config="${HOME}/.gitconfig" &&
		git config -f "$test_config"  init.templatedir "${HOME}/templatedir-source" &&
		mkdir templatedir-set &&
		cd templatedir-set &&
		sane_unset GIT_TEMPLATE_DIR &&
		NO_SET_GIT_TEMPLATE_DIR=t &&
		export NO_SET_GIT_TEMPLATE_DIR &&
		git init
	) &&
	test_cmp templatedir-source/file templatedir-set/.git/file

Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/templatedir-set/.git/
ok 17 - init with init.templatedir set

expecting success: 
	(
		test_config="$HOME"/.gitconfig &&
		git config -f "$test_config" core.bare false &&
		git config -f "$test_config" core.sharedRepository 0640 &&
		mkdir init-bare-shared-override &&
		cd init-bare-shared-override &&
		git init --bare --shared=0666
	) &&
	check_config init-bare-shared-override true unset &&
	test x0666 = \
	x`git config -f init-bare-shared-override/config core.sharedRepository`

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/init-bare-shared-override/
ok 18 - init --bare/--shared overrides system/global config

expecting success: 
	(
		test_config="$HOME"/.gitconfig &&
		git config -f "$test_config" core.sharedRepository 0666 &&
		mkdir shared-honor-global &&
		cd shared-honor-global &&
		git init
	) &&
	test x0666 = \
	x`git config -f shared-honor-global/.git/config core.sharedRepository`

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/shared-honor-global/.git/
ok 19 - init honors global core.sharedRepository

expecting success: 
	(
		insane=$(printf "x%09999dx" 1) &&
		mkdir test &&
		cd test &&
		test_must_fail git init --template=$insane
	)

fatal: insanely long template path x
ok 20 - init rejects insanely long --template

expecting success: 
	rm -fr newdir &&
	(
		git init newdir &&
		test -d newdir/.git/refs
	)

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/.git/
ok 21 - init creates a new directory

expecting success: 
	rm -fr newdir &&
	(
		git init --bare newdir &&
		test -d newdir/refs
	)

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/
ok 22 - init creates a new bare directory

expecting success: 
	rm -fr newdir &&
	(
		mkdir newdir &&
		git init newdir &&
		test -d newdir/.git/refs
	)

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/.git/
ok 23 - init recreates a directory

expecting success: 
	rm -fr newdir &&
	(
		mkdir newdir &&
		git init --bare newdir &&
		test -d newdir/refs
	)

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/
ok 24 - init recreates a new bare directory

expecting success: 
	rm -fr newdir &&
	git init newdir/a/b/c &&
	test -d newdir/a/b/c/.git/refs

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/a/b/c/.git/
ok 25 - init creates a new deep directory

expecting success: 
	rm -fr newdir &&
	(
		# Leading directories should honor umask while
		# the repository itself should follow "shared"
		umask 002 &&
		git init --bare --shared=0660 newdir/a/b/c &&
		test -d newdir/a/b/c/refs &&
		ls -ld newdir/a newdir/a/b > lsab.out &&
		! grep -v "^drwxrw[sx]r-x" lsab.out &&
		ls -ld newdir/a/b/c > lsc.out &&
		! grep -v "^drwxrw[sx]---" lsc.out
	)

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/a/b/c/
ok 26 - init creates a new deep directory (umask vs. shared)

expecting success: 
	rm -fr newdir &&
	(
		>newdir &&
		test_must_fail git init newdir &&
		test -f newdir
	)

fatal: cannot mkdir newdir: File exists
ok 27 - init notices EEXIST (1)

expecting success: 
	rm -fr newdir &&
	(
		mkdir newdir &&
		>newdir/a
		test_must_fail git init newdir/a/b &&
		test -f newdir/a
	)

fatal: cannot mkdir newdir/a/b: File exists
ok 28 - init notices EEXIST (2)

skipping test: init notices EPERM 
	rm -fr newdir &&
	(
		mkdir newdir &&
		chmod -w newdir &&
		test_must_fail git init newdir/a/b
	)

ok 29 # skip init notices EPERM (missing SANITY of POSIXPERM,SANITY)

expecting success: 
	rm -rf newdir &&
	git --bare init newdir &&
	test -d newdir/refs

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/
ok 30 - init creates a new bare directory with global --bare

expecting success: 
	rm -rf newdir &&
	mkdir otherdir &&
	GIT_DIR=otherdir git --bare init newdir &&
	test -d newdir/refs &&
	! test -d otherdir/refs

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/
ok 31 - init prefers command line to GIT_DIR

expecting success: 
	rm -rf newdir &&
	git init --separate-git-dir realgitdir newdir &&
	echo "gitdir: `pwd`/realgitdir" >expected &&
	test_cmp expected newdir/.git &&
	test -d realgitdir/refs

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/realgitdir/
ok 32 - init with separate gitdir

expecting success: 
	(
	cd newdir &&
	git init --separate-git-dir ../surrealgitdir
	) &&
	echo "gitdir: `pwd`/surrealgitdir" >expected &&
	test_cmp expected newdir/.git &&
	test -d surrealgitdir/refs &&
	! test -d realgitdir/refs

Reinitialized existing shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/surrealgitdir/
ok 33 - re-init to update git link

expecting success: 
	rm -rf newdir realgitdir surrealgitdir &&
	git init newdir &&
	(
	cd newdir &&
	git init --separate-git-dir ../realgitdir
	) &&
	echo "gitdir: `pwd`/realgitdir" >expected &&
	test_cmp expected newdir/.git &&
	test -d realgitdir/refs

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/.git/
Reinitialized existing shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/realgitdir/
ok 34 - re-init to move gitdir

expecting success: 
	rm -rf newdir realgitdir &&
	git init newdir &&
	(
	cd newdir &&
	mv .git here &&
	ln -s here .git &&
	git init --separate-git-dir ../realgitdir
	) &&
	echo "gitdir: `pwd`/realgitdir" >expected &&
	test_cmp expected newdir/.git &&
	test -d realgitdir/refs &&
	! test -d newdir/here

Initialized empty shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/newdir/.git/
Reinitialized existing shared Git repository in /«PKGBUILDDIR»/t/trash directory.t0001-init/realgitdir/
ok 35 - re-init to move gitdir symlink

# still have 2 known breakage(s)
# passed all remaining 33 test(s)
1..35
*** t0002-gitfile.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0002-gitfile/.git/
expecting success: 
	REAL="$(pwd)/.real" &&
	mv .git "$REAL"

ok 1 - initial setup

expecting success: 
	echo "gitdir $REAL" >.git &&
	if git rev-parse 2>.err
	then
		echo "git rev-parse accepted an invalid .git file"
		false
	fi &&
	if ! grep "Invalid gitfile format" .err
	then
		echo "git rev-parse returned wrong error"
		false
	fi

fatal: Invalid gitfile format: .git
ok 2 - bad setup: invalid .git file format

expecting success: 
	echo "gitdir: $REAL.not" >.git &&
	if git rev-parse 2>.err
	then
		echo "git rev-parse accepted an invalid .git file path"
		false
	fi &&
	if ! grep "Not a git repository" .err
	then
		echo "git rev-parse returned wrong error"
		false
	fi

fatal: Not a git repository: /«PKGBUILDDIR»/t/trash directory.t0002-gitfile/.real.not
ok 3 - bad setup: invalid .git file path

expecting success: 
	echo "gitdir: $REAL" >.git &&
	test "$REAL" = "$(git rev-parse --git-dir)"

ok 4 - final setup + check rev-parse --git-dir

expecting success: 
	echo "foo" >bar &&
	SHA=$(cat bar | git hash-object -w --stdin) &&
	objck $SHA

ok 5 - check hash-object

expecting success: 
	git cat-file blob $SHA >actual &&
	test_cmp bar actual

ok 6 - check cat-file

expecting success: 
	if test -f "$REAL/index"
	then
		echo "Hmm, $REAL/index exists?"
		false
	fi &&
	rm -f "$REAL/objects/$(objpath $SHA)" &&
	git update-index --add bar &&
	if ! test -f "$REAL/index"
	then
		echo "$REAL/index not found"
		false
	fi &&
	objck $SHA

ok 7 - check update-index

expecting success: 
	SHA=$(git write-tree) &&
	objck $SHA

ok 8 - check write-tree

expecting success: 
	SHA=$(echo "commit bar" | git commit-tree $SHA) &&
	objck $SHA

ok 9 - check commit-tree

expecting success: 
	echo $SHA >"$REAL/HEAD" &&
	test "$SHA" = "$(git rev-list HEAD)"

ok 10 - check rev-list

# passed all 10 test(s)
1..10
*** t0003-attributes.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0003-attributes/.git/
expecting success: 
	mkdir -p a/b/d a/c b &&
	(
		echo "[attr]notest !test"
		echo "f	test=f"
		echo "a/i test=a/i"
		echo "onoff test -test"
		echo "offon -test test"
		echo "no notest"
		echo "A/e/F test=A/e/F"
	) >.gitattributes &&
	(
		echo "g test=a/g" &&
		echo "b/g test=a/b/g"
	) >a/.gitattributes &&
	(
		echo "h test=a/b/h" &&
		echo "d/* test=a/b/d/*"
		echo "d/yes notest"
	) >a/b/.gitattributes &&
	(
		echo "global test=global"
	) >"$HOME"/global-gitattributes &&
	cat <<-EOF >expect-all
	f: test: f
	a/f: test: f
	a/c/f: test: f
	a/g: test: a/g
	a/b/g: test: a/b/g
	b/g: test: unspecified
	a/b/h: test: a/b/h
	a/b/d/g: test: a/b/d/*
	onoff: test: unset
	offon: test: set
	no: notest: set
	no: test: unspecified
	a/b/d/no: notest: set
	a/b/d/no: test: a/b/d/*
	a/b/d/yes: notest: set
	a/b/d/yes: test: unspecified
	EOF

ok 1 - setup

expecting success: 
	test_must_fail git check-attr &&
	test_must_fail git check-attr -- &&
	test_must_fail git check-attr test &&
	test_must_fail git check-attr test -- &&
	test_must_fail git check-attr -- f &&
	echo "f" | test_must_fail git check-attr --stdin &&
	echo "f" | test_must_fail git check-attr --stdin -- f &&
	echo "f" | test_must_fail git check-attr --stdin test -- f &&
	test_must_fail git check-attr "" -- f

error: No attribute specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No attribute specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No file specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No file specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No attribute specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No attribute specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: No attribute specified
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: Can't specify files with --stdin
usage: git check-attr [-a | --all | attr...] [--] pathname...
   or: git check-attr --stdin [-a | --all | attr...] < <list-of-paths>

    -a, --all             report all attributes set on file
    --cached              use .gitattributes only from the index
    --stdin               read file names from stdin
    -z                    input paths are terminated by a null character

error: : not a valid attribute name
ok 2 - command line checks

expecting success: 
	attr_check f f &&
	attr_check a/f f &&
	attr_check a/c/f f &&
	attr_check a/g a/g &&
	attr_check a/b/g a/b/g &&
	attr_check b/g unspecified &&
	attr_check a/b/h a/b/h &&
	attr_check a/b/d/g "a/b/d/*" &&
	attr_check onoff unset &&
	attr_check offon set &&
	attr_check no unspecified &&
	attr_check a/b/d/no "a/b/d/*" &&
	attr_check a/b/d/yes unspecified

ok 3 - attribute test

expecting success: 

	test_must_fail attr_check F f "-c core.ignorecase=0" &&
	test_must_fail attr_check a/F f "-c core.ignorecase=0" &&
	test_must_fail attr_check a/c/F f "-c core.ignorecase=0" &&
	test_must_fail attr_check a/G a/g "-c core.ignorecase=0" &&
	test_must_fail attr_check a/B/g a/b/g "-c core.ignorecase=0" &&
	test_must_fail attr_check a/b/G a/b/g "-c core.ignorecase=0" &&
	test_must_fail attr_check a/b/H a/b/h "-c core.ignorecase=0" &&
	test_must_fail attr_check a/b/D/g "a/b/d/*" "-c core.ignorecase=0" &&
	test_must_fail attr_check oNoFf unset "-c core.ignorecase=0" &&
	test_must_fail attr_check oFfOn set "-c core.ignorecase=0" &&
	attr_check NO unspecified "-c core.ignorecase=0" &&
	test_must_fail attr_check a/b/D/NO "a/b/d/*" "-c core.ignorecase=0" &&
	attr_check a/b/d/YES a/b/d/* "-c core.ignorecase=0" &&
	test_must_fail attr_check a/E/f "A/e/F" "-c core.ignorecase=0"


--- expect	2012-06-23 00:39:46.368127191 +0000
+++ actual	2012-06-23 00:39:46.368127191 +0000
@@ -1 +1 @@
-F: test: f
+F: test: unspecified
--- expect	2012-06-23 00:39:46.376128986 +0000
+++ actual	2012-06-23 00:39:46.376128986 +0000
@@ -1 +1 @@
-a/F: test: f
+a/F: test: unspecified
--- expect	2012-06-23 00:39:46.380127608 +0000
+++ actual	2012-06-23 00:39:46.380127608 +0000
@@ -1 +1 @@
-a/c/F: test: f
+a/c/F: test: unspecified
--- expect	2012-06-23 00:39:46.384133158 +0000
+++ actual	2012-06-23 00:39:46.384133158 +0000
@@ -1 +1 @@
-a/G: test: a/g
+a/G: test: unspecified
--- expect	2012-06-23 00:39:46.392129392 +0000
+++ actual	2012-06-23 00:39:46.392129392 +0000
@@ -1 +1 @@
-a/B/g: test: a/b/g
+a/B/g: test: a/g
--- expect	2012-06-23 00:39:46.396128687 +0000
+++ actual	2012-06-23 00:39:46.396128687 +0000
@@ -1 +1 @@
-a/b/G: test: a/b/g
+a/b/G: test: unspecified
--- expect	2012-06-23 00:39:46.400127084 +0000
+++ actual	2012-06-23 00:39:46.400127084 +0000
@@ -1 +1 @@
-a/b/H: test: a/b/h
+a/b/H: test: unspecified
--- expect	2012-06-23 00:39:46.408130176 +0000
+++ actual	2012-06-23 00:39:46.408130176 +0000
@@ -1 +1 @@
-a/b/D/g: test: a/b/d/*
+a/b/D/g: test: a/g
--- expect	2012-06-23 00:39:46.412127090 +0000
+++ actual	2012-06-23 00:39:46.412127090 +0000
@@ -1 +1 @@
-oNoFf: test: unset
+oNoFf: test: unspecified
--- expect	2012-06-23 00:39:46.420132135 +0000
+++ actual	2012-06-23 00:39:46.420132135 +0000
@@ -1 +1 @@
-oFfOn: test: set
+oFfOn: test: unspecified
--- expect	2012-06-23 00:39:46.432129814 +0000
+++ actual	2012-06-23 00:39:46.432129814 +0000
@@ -1 +1 @@
-a/b/D/NO: test: a/b/d/*
+a/b/D/NO: test: unspecified
--- expect	2012-06-23 00:39:46.444125913 +0000
+++ actual	2012-06-23 00:39:46.440128232 +0000
@@ -1 +1 @@
-a/E/f: test: A/e/F
+a/E/f: test: f
ok 4 - attribute matching is case sensitive when core.ignorecase=0

expecting success: 

	attr_check F f "-c core.ignorecase=1" &&
	attr_check a/F f "-c core.ignorecase=1" &&
	attr_check a/c/F f "-c core.ignorecase=1" &&
	attr_check a/G a/g "-c core.ignorecase=1" &&
	attr_check a/B/g a/b/g "-c core.ignorecase=1" &&
	attr_check a/b/G a/b/g "-c core.ignorecase=1" &&
	attr_check a/b/H a/b/h "-c core.ignorecase=1" &&
	attr_check a/b/D/g "a/b/d/*" "-c core.ignorecase=1" &&
	attr_check oNoFf unset "-c core.ignorecase=1" &&
	attr_check oFfOn set "-c core.ignorecase=1" &&
	attr_check NO unspecified "-c core.ignorecase=1" &&
	attr_check a/b/D/NO "a/b/d/*" "-c core.ignorecase=1" &&
	attr_check a/b/d/YES unspecified "-c core.ignorecase=1" &&
	attr_check a/E/f "A/e/F" "-c core.ignorecase=1"


ok 5 - attribute matching is case insensitive when core.ignorecase=1

expecting success: 
	mkdir junk &&
	echo good >junk/CamelCase &&
	echo bad >junk/camelcase &&
	if test "$(cat junk/CamelCase)" != good
	then
		test_set_prereq CASE_INSENSITIVE_FS
	fi

ok 6 - check whether FS is case-insensitive

skipping test: additional case insensitivity tests 
	test_must_fail attr_check a/B/D/g "a/b/d/*" "-c core.ignorecase=0" &&
	test_must_fail attr_check A/B/D/NO "a/b/d/*" "-c core.ignorecase=0" &&
	attr_check A/b/h a/b/h "-c core.ignorecase=1" &&
	attr_check a/B/D/g "a/b/d/*" "-c core.ignorecase=1" &&
	attr_check A/B/D/NO "a/b/d/*" "-c core.ignorecase=1"

ok 7 # skip additional case insensitivity tests (missing CASE_INSENSITIVE_FS)

expecting success: 
	attr_check ./f f &&
	attr_check ./a/g a/g &&
	attr_check a/./g a/g &&
	attr_check a/c/../b/g a/b/g

ok 8 - unnormalized paths

expecting success: 
	(cd a && attr_check ../f f) &&
	(cd a && attr_check f f) &&
	(cd a && attr_check i a/i) &&
	(cd a && attr_check g a/g) &&
	(cd a && attr_check b/g a/b/g) &&
	(cd b && attr_check ../a/f f) &&
	(cd b && attr_check ../a/g a/g) &&
	(cd b && attr_check ../a/b/g a/b/g)

ok 9 - relative paths

expecting success: 
	attr_check a_plus/g unspecified &&
	cat >expect <<-\EOF &&
	a/g: test: a/g
	a_plus/g: test: unspecified
	EOF
	git check-attr test a/g a_plus/g >actual &&
	test_cmp expect actual

ok 10 - prefixes are not confused with leading directories

expecting success: 
	attr_check global unspecified &&
	git config core.attributesfile "$HOME/global-gitattributes" &&
	attr_check global global &&
	git config core.attributesfile "~/global-gitattributes" &&
	attr_check global global &&
	echo "global test=precedence" >>.gitattributes &&
	attr_check global precedence

ok 11 - core.attributesfile

expecting success: 
	grep -v notest <expect-all >expect &&
	sed -e "s/:.*//" <expect | git check-attr --stdin test >actual &&
	test_cmp expect actual

ok 12 - attribute test: read paths from stdin

expecting success: 
	grep -v unspecified <expect-all | sort >specified-all &&
	sed -e "s/:.*//" <expect-all | uniq >stdin-all &&
	git check-attr --stdin --all <stdin-all | sort >actual &&
	test_cmp specified-all actual

ok 13 - attribute test: --all option

expecting success: 
	: >empty &&
	git check-attr --cached --stdin --all <stdin-all | sort >actual &&
	test_cmp empty actual &&
	git add .gitattributes a/.gitattributes a/b/.gitattributes &&
	git check-attr --cached --stdin --all <stdin-all | sort >actual &&
	test_cmp specified-all actual

ok 14 - attribute test: --cached option

expecting success: 
	attr_check a/i a/i &&
	attr_check subdir/a/i unspecified

ok 15 - root subdir attribute test

expecting success: 
	git clone --bare . bare.git &&
	cd bare.git

Cloning into bare repository 'bare.git'...
warning: You appear to have cloned an empty repository.
done.
ok 16 - setup bare

expecting success: 
	(
		echo "f	test=f"
		echo "a/i test=a/i"
	) >.gitattributes &&
	attr_check f unspecified &&
	attr_check a/f unspecified &&
	attr_check a/c/f unspecified &&
	attr_check a/i unspecified &&
	attr_check subdir/a/i unspecified

ok 17 - bare repository: check that .gitattribute is ignored

expecting success: 
	GIT_INDEX_FILE=../.git/index \
	git check-attr --cached --stdin --all <../stdin-all |
	sort >actual &&
	test_cmp ../specified-all actual

ok 18 - bare repository: check that --cached honors index

expecting success: 
	(
		echo "f	test=f"
		echo "a/i test=a/i"
	) >info/attributes &&
	attr_check f f &&
	attr_check a/f f &&
	attr_check a/c/f f &&
	attr_check a/i a/i &&
	attr_check subdir/a/i unspecified

ok 19 - bare repository: test info/attributes

# passed all 19 test(s)
1..19
*** t0004-unwritable.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0004-unwritable/.git/
expecting success: 

	>file &&
	git add file &&
	test_tick &&
	git commit -m initial &&
	echo >file &&
	git add file


[master (root-commit) 1bd44cb] initial
 Author: A U Thor <author@example.com>
 0 files changed
 create mode 100644 file
ok 1 - setup

skipping test: write-tree should notice unwritable repository 
	test_when_finished "chmod 775 .git/objects .git/objects/??" &&
	chmod a-w .git/objects .git/objects/?? &&
	test_must_fail git write-tree

ok 2 # skip write-tree should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)

skipping test: commit should notice unwritable repository 
	test_when_finished "chmod 775 .git/objects .git/objects/??" &&
	chmod a-w .git/objects .git/objects/?? &&
	test_must_fail git commit -m second

ok 3 # skip commit should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)

skipping test: update-index should notice unwritable repository 
	test_when_finished "chmod 775 .git/objects .git/objects/??" &&
	echo 6O >file &&
	chmod a-w .git/objects .git/objects/?? &&
	test_must_fail git update-index file

ok 4 # skip update-index should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)

skipping test: add should notice unwritable repository 
	test_when_finished "chmod 775 .git/objects .git/objects/??" &&
	echo b >file &&
	chmod a-w .git/objects .git/objects/?? &&
	test_must_fail git add file

ok 5 # skip add should notice unwritable repository (missing SANITY of POSIXPERM,SANITY)

# passed all 5 test(s)
1..5
*** t0005-signals.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0005-signals/.git/
expecting success: 
	test-sigchain >actual
	case "$?" in
	143) true ;; # POSIX w/ SIGTERM=15
	271) true ;; # ksh w/ SIGTERM=15
	  3) true ;; # Windows
	  *) false ;;
	esac &&
	test_cmp expect actual

Terminated
ok 1 - sigchain works

# passed all 1 test(s)
1..1
*** t0006-date.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0006-date/.git/
expecting success: 
	test-date show 1251659995 >actual &&
	test_cmp expect actual
	
ok 1 - relative date (5 seconds ago)

expecting success: 
	test-date show 1251659700 >actual &&
	test_cmp expect actual
	
ok 2 - relative date (5 minutes ago)

expecting success: 
	test-date show 1251642000 >actual &&
	test_cmp expect actual
	
ok 3 - relative date (5 hours ago)

expecting success: 
	test-date show 1251228000 >actual &&
	test_cmp expect actual
	
ok 4 - relative date (5 days ago)

expecting success: 
	test-date show 1249932000 >actual &&
	test_cmp expect actual
	
ok 5 - relative date (3 weeks ago)

expecting success: 
	test-date show 1238660000 >actual &&
	test_cmp expect actual
	
ok 6 - relative date (5 months ago)

expecting success: 
	test-date show 1214160000 >actual &&
	test_cmp expect actual
	
ok 7 - relative date (1 year, 2 months ago)

expecting success: 
	test-date show 1196472000 >actual &&
	test_cmp expect actual
	
ok 8 - relative date (1 year, 9 months ago)

expecting success: 
	test-date show 621660000 >actual &&
	test_cmp expect actual
	
ok 9 - relative date (20 years ago)

expecting success: 
	test-date show 1220210400 >actual &&
	test_cmp expect actual
	
ok 10 - relative date (12 months ago)

expecting success: 
	test-date show 1188674400 >actual &&
	test_cmp expect actual
	
ok 11 - relative date (2 years ago)

expecting success: 
	TZ=UTC test-date parse '2008' >actual &&
	test_cmp expect actual
	
ok 12 - parse date (2008)

expecting success: 
	TZ=UTC test-date parse '2008-02' >actual &&
	test_cmp expect actual
	
ok 13 - parse date (2008-02)

expecting success: 
	TZ=UTC test-date parse '2008-02-14' >actual &&
	test_cmp expect actual
	
ok 14 - parse date (2008-02-14)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45' >actual &&
	test_cmp expect actual
	
ok 15 - parse date (2008-02-14 20:30:45)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -0500' >actual &&
	test_cmp expect actual
	
ok 16 - parse date (2008-02-14 20:30:45 -0500)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -0015' >actual &&
	test_cmp expect actual
	
ok 17 - parse date (2008-02-14 20:30:45 -0015)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -5' >actual &&
	test_cmp expect actual
	
ok 18 - parse date (2008-02-14 20:30:45 -5)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -5:' >actual &&
	test_cmp expect actual
	
ok 19 - parse date (2008-02-14 20:30:45 -5:)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -05' >actual &&
	test_cmp expect actual
	
ok 20 - parse date (2008-02-14 20:30:45 -05)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -:30' >actual &&
	test_cmp expect actual
	
ok 21 - parse date (2008-02-14 20:30:45 -:30)

expecting success: 
	TZ=UTC test-date parse '2008-02-14 20:30:45 -05:00' >actual &&
	test_cmp expect actual
	
ok 22 - parse date (2008-02-14 20:30:45 -05:00)

expecting success: 
	TZ=EST5 test-date parse '2008-02-14 20:30:45' >actual &&
	test_cmp expect actual
	
ok 23 - parse date (2008-02-14 20:30:45 TZ=EST5)

expecting success: 
	test-date approxidate 'now' >actual &&
	test_cmp expect actual
	
ok 24 - parse approxidate (now)

expecting success: 
	test-date approxidate '5 seconds ago' >actual &&
	test_cmp expect actual
	
ok 25 - parse approxidate (5 seconds ago)

expecting success: 
	test-date approxidate '5.seconds.ago' >actual &&
	test_cmp expect actual
	
ok 26 - parse approxidate (5.seconds.ago)

expecting success: 
	test-date approxidate '10.minutes.ago' >actual &&
	test_cmp expect actual
	
ok 27 - parse approxidate (10.minutes.ago)

expecting success: 
	test-date approxidate 'yesterday' >actual &&
	test_cmp expect actual
	
ok 28 - parse approxidate (yesterday)

expecting success: 
	test-date approxidate '3.days.ago' >actual &&
	test_cmp expect actual
	
ok 29 - parse approxidate (3.days.ago)

expecting success: 
	test-date approxidate '3.weeks.ago' >actual &&
	test_cmp expect actual
	
ok 30 - parse approxidate (3.weeks.ago)

expecting success: 
	test-date approxidate '3.months.ago' >actual &&
	test_cmp expect actual
	
ok 31 - parse approxidate (3.months.ago)

expecting success: 
	test-date approxidate '2.years.3.months.ago' >actual &&
	test_cmp expect actual
	
ok 32 - parse approxidate (2.years.3.months.ago)

expecting success: 
	test-date approxidate '6am yesterday' >actual &&
	test_cmp expect actual
	
ok 33 - parse approxidate (6am yesterday)

expecting success: 
	test-date approxidate '6pm yesterday' >actual &&
	test_cmp expect actual
	
ok 34 - parse approxidate (6pm yesterday)

expecting success: 
	test-date approxidate '3:00' >actual &&
	test_cmp expect actual
	
ok 35 - parse approxidate (3:00)

expecting success: 
	test-date approxidate '15:00' >actual &&
	test_cmp expect actual
	
ok 36 - parse approxidate (15:00)

expecting success: 
	test-date approxidate 'noon today' >actual &&
	test_cmp expect actual
	
ok 37 - parse approxidate (noon today)

expecting success: 
	test-date approxidate 'noon yesterday' >actual &&
	test_cmp expect actual
	
ok 38 - parse approxidate (noon yesterday)

expecting success: 
	test-date approxidate 'last tuesday' >actual &&
	test_cmp expect actual
	
ok 39 - parse approxidate (last tuesday)

expecting success: 
	test-date approxidate 'July 5th' >actual &&
	test_cmp expect actual
	
ok 40 - parse approxidate (July 5th)

expecting success: 
	test-date approxidate '06/05/2009' >actual &&
	test_cmp expect actual
	
ok 41 - parse approxidate (06/05/2009)

expecting success: 
	test-date approxidate '06.05.2009' >actual &&
	test_cmp expect actual
	
ok 42 - parse approxidate (06.05.2009)

expecting success: 
	test-date approxidate 'Jun 6, 5AM' >actual &&
	test_cmp expect actual
	
ok 43 - parse approxidate (Jun 6, 5AM)

expecting success: 
	test-date approxidate '5AM Jun 6' >actual &&
	test_cmp expect actual
	
ok 44 - parse approxidate (5AM Jun 6)

expecting success: 
	test-date approxidate '6AM, June 7, 2009' >actual &&
	test_cmp expect actual
	
ok 45 - parse approxidate (6AM, June 7, 2009)

# passed all 45 test(s)
1..45
*** t0010-racy-git.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0010-racy-git/.git/
expecting success: test "" != "$files"
ok 1 - Racy GIT trial #0 part A

expecting success: test "" != "$files"
ok 2 - Racy GIT trial #0 part B

expecting success: test "" != "$files"
ok 3 - Racy GIT trial #1 part A

expecting success: test "" != "$files"
ok 4 - Racy GIT trial #1 part B

expecting success: test "" != "$files"
ok 5 - Racy GIT trial #2 part A

expecting success: test "" != "$files"
ok 6 - Racy GIT trial #2 part B

expecting success: test "" != "$files"
ok 7 - Racy GIT trial #3 part A

expecting success: test "" != "$files"
ok 8 - Racy GIT trial #3 part B

expecting success: test "" != "$files"
ok 9 - Racy GIT trial #4 part A

expecting success: test "" != "$files"
ok 10 - Racy GIT trial #4 part B

# passed all 10 test(s)
1..10
*** t0020-crlf.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0020-crlf/.git/
expecting success: 

	git config core.autocrlf false &&

	for w in Hello world how are you; do echo $w; done >one &&
	mkdir dir &&
	for w in I am very very fine thank you; do echo $w; done >dir/two &&
	for w in Oh here is NULQin text here; do echo $w; done | q_to_nul >three &&
	git add . &&

	git commit -m initial &&

	one=`git rev-parse HEAD:one` &&
	dir=`git rev-parse HEAD:dir` &&
	two=`git rev-parse HEAD:dir/two` &&
	three=`git rev-parse HEAD:three` &&

	for w in Some extra lines here; do echo $w; done >>one &&
	git diff >patch.file &&
	patched=`git hash-object --stdin <one` &&
	git read-tree --reset -u HEAD &&

	echo happy.

[master (root-commit) fc249c5] initial
 Author: A U Thor <author@example.com>
 3 files changed, 12 insertions(+)
 create mode 100644 dir/two
 create mode 100644 one
 create mode 100644 three
happy.
ok 1 - setup

expecting success: 

	git config core.autocrlf input &&
	git config core.safecrlf true &&

	for w in I am all CRLF; do echo $w; done | append_cr >allcrlf &&
	test_must_fail git add allcrlf

fatal: CRLF would be replaced by LF in allcrlf.
ok 2 - safecrlf: autocrlf=input, all CRLF

expecting success: 

	git config core.autocrlf input &&
	git config core.safecrlf true &&

	for w in Oh here is CRLFQ in text; do echo $w; done | q_to_cr >mixed &&
	test_must_fail git add mixed

fatal: CRLF would be replaced by LF in mixed.
ok 3 - safecrlf: autocrlf=input, mixed LF/CRLF

expecting success: 

	git config core.autocrlf true &&
	git config core.safecrlf true &&

	for w in I am all LF; do echo $w; done >alllf &&
	test_must_fail git add alllf

fatal: LF would be replaced by CRLF in alllf
ok 4 - safecrlf: autocrlf=true, all LF

expecting success: 

	git config core.autocrlf true &&
	git config core.safecrlf true &&

	for w in Oh here is CRLFQ in text; do echo $w; done | q_to_cr >mixed &&
	test_must_fail git add mixed

fatal: LF would be replaced by CRLF in mixed
ok 5 - safecrlf: autocrlf=true mixed LF/CRLF

expecting success: 

	git config core.autocrlf input &&
	git config core.safecrlf warn &&

	for w in I am all LF; do echo $w; done >doublewarn &&
	git add doublewarn &&
	git commit -m "nowarn" &&
	for w in Oh here is CRLFQ in text; do echo $w; done | q_to_cr >doublewarn &&
	test $(git add doublewarn 2>&1 | grep "CRLF will be replaced by LF" | wc -l) = 1

[master 335623c] nowarn
 Author: A U Thor <author@example.com>
 1 file changed, 4 insertions(+)
 create mode 100644 doublewarn
ok 6 - safecrlf: print warning only once

expecting success: 
	git config core.autocrlf false &&
	git config core.safecrlf false &&
	git reset --hard HEAD^

HEAD is now at fc249c5 initial
ok 7 - switch off autocrlf, safecrlf, reset HEAD

expecting success: 

	rm -f tmp one dir/two three &&
	git read-tree --reset -u HEAD &&
	git config core.autocrlf input &&

	for f in one dir/two
	do
		append_cr <$f >tmp && mv -f tmp $f &&
		git update-index -- $f || {
			echo Oops
			false
			break
		}
	done &&

	differs=`git diff-index --cached HEAD` &&
	test -z "$differs" || {
		echo Oops "$differs"
		false
	}


ok 8 - update with autocrlf=input

expecting success: 

	rm -f tmp one dir/two three &&
	git read-tree --reset -u HEAD &&
	git config core.autocrlf true &&

	for f in one dir/two
	do
		append_cr <$f >tmp && mv -f tmp $f &&
		git update-index -- $f || {
			echo "Oops $f"
			false
			break
		}
	done &&

	differs=`git diff-index --cached HEAD` &&
	test -z "$differs" || {
		echo Oops "$differs"
		false
	}


ok 9 - update with autocrlf=true

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	for f in one dir/two
	do
		remove_cr <"$f" >tmp && mv -f tmp $f &&
		git update-index -- $f || {
			echo "Eh? $f"
			false
			break
		}
	done &&
	test "$one" = `git hash-object --stdin <one` &&
	test "$two" = `git hash-object --stdin <dir/two` &&
	differs=`git diff-index --cached HEAD` &&
	test -z "$differs" || {
		echo Oops "$differs"
		false
	}

ok 10 - checkout with autocrlf=true

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf input &&
	git read-tree --reset -u HEAD &&

	for f in one dir/two
	do
		if has_cr "$f"
		then
			echo "Eh? $f"
			false
			break
		else
			git update-index -- $f
		fi
	done &&
	test "$one" = `git hash-object --stdin <one` &&
	test "$two" = `git hash-object --stdin <dir/two` &&
	differs=`git diff-index --cached HEAD` &&
	test -z "$differs" || {
		echo Oops "$differs"
		false
	}

ok 11 - checkout with autocrlf=input

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf input &&
	git read-tree --reset -u HEAD &&

	git apply patch.file &&
	test "$patched" = "`git hash-object --stdin <one`" || {
		echo "Eh?  apply without index"
		false
	}

ok 12 - apply patch (autocrlf=input)

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf input &&
	git read-tree --reset -u HEAD &&

	git apply --cached patch.file &&
	test "$patched" = `git rev-parse :one` || {
		echo "Eh?  apply with --cached"
		false
	}

ok 13 - apply patch --cached (autocrlf=input)

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf input &&
	git read-tree --reset -u HEAD &&

	git apply --index patch.file &&
	test "$patched" = `git rev-parse :one` &&
	test "$patched" = `git hash-object --stdin <one` || {
		echo "Eh?  apply with --index"
		false
	}

ok 14 - apply patch --index (autocrlf=input)

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	git apply patch.file &&
	test "$patched" = "`remove_cr <one | git hash-object --stdin`" || {
		echo "Eh?  apply without index"
		false
	}

ok 15 - apply patch (autocrlf=true)

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	git apply --cached patch.file &&
	test "$patched" = `git rev-parse :one` || {
		echo "Eh?  apply without index"
		false
	}

ok 16 - apply patch --cached (autocrlf=true)

expecting success: 

	rm -f tmp one dir/two three &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	git apply --index patch.file &&
	test "$patched" = `git rev-parse :one` &&
	test "$patched" = "`remove_cr <one | git hash-object --stdin`" || {
		echo "Eh?  apply with --index"
		false
	}

ok 17 - apply patch --index (autocrlf=true)

expecting success: 

	rm -f tmp one dir/two three &&
	echo "two -crlf" >.gitattributes &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	if has_cr dir/two
	then
		echo "Huh?"
		false
	else
		: happy
	fi &&

	if has_cr one
	then
		: happy
	else
		echo "Huh?"
		false
	fi &&

	if has_cr three
	then
		echo "Huh?"
		false
	else
		: happy
	fi

ok 18 - .gitattributes says two is binary

expecting success: 

	rm -f tmp one dir/two three &&
	echo "two crlf=input" >.gitattributes &&
	git read-tree --reset -u HEAD &&

	if has_cr dir/two
	then
		echo "Huh?"
		false
	else
		: happy
	fi

ok 19 - .gitattributes says two is input

expecting success: 

	rm -f tmp one dir/two three &&
	echo "t* crlf" >.gitattributes &&
	git read-tree --reset -u HEAD &&

	if has_cr dir/two
	then
		: happy
	else
		echo "Huh?"
		false
	fi &&

	if has_cr three
	then
		: happy
	else
		echo "Huh?"
		false
	fi

ok 20 - .gitattributes says two and three are text

expecting success: 

	echo "one -crlf" >>.gitattributes &&
	git add .gitattributes &&
	git commit -m "Add .gitattributes" &&

	rm -rf tmp one dir .gitattributes patch.file three &&
	git read-tree --reset -u HEAD &&

	if has_cr one
	then
		echo "Eh? one should not have CRLF"
		false
	else
		: happy
	fi &&
	has_cr three || {
		echo "Eh? three should still have CRLF"
		false
	}

[master e7bee85] Add .gitattributes
 Author: A U Thor <author@example.com>
 1 file changed, 2 insertions(+)
 create mode 100644 .gitattributes
ok 21 - in-tree .gitattributes (1)

expecting success: 

	rm -rf tmp one dir .gitattributes patch.file three &&
	git read-tree --reset HEAD &&
	git checkout-index -f -q -u -a &&

	if has_cr one
	then
		echo "Eh? one should not have CRLF"
		false
	else
		: happy
	fi &&
	has_cr three || {
		echo "Eh? three should still have CRLF"
		false
	}

ok 22 - in-tree .gitattributes (2)

expecting success: 

	rm -rf tmp one dir .gitattributes patch.file three &&
	git read-tree --reset HEAD &&
	git checkout-index -u .gitattributes &&
	git checkout-index -u one dir/two three &&

	if has_cr one
	then
		echo "Eh? one should not have CRLF"
		false
	else
		: happy
	fi &&
	has_cr three || {
		echo "Eh? three should still have CRLF"
		false
	}

ok 23 - in-tree .gitattributes (3)

expecting success: 

	rm -rf tmp one dir .gitattributes patch.file three &&
	git read-tree --reset HEAD &&
	git checkout-index -u one dir/two three &&
	git checkout-index -u .gitattributes &&

	if has_cr one
	then
		echo "Eh? one should not have CRLF"
		false
	else
		: happy
	fi &&
	has_cr three || {
		echo "Eh? three should still have CRLF"
		false
	}

ok 24 - in-tree .gitattributes (4)

expecting success: 

	git config core.autocrlf true &&
	git config --unset core.safecrlf &&
	echo ".file2 -crlfQ" | q_to_cr >> .gitattributes &&
	git add .gitattributes &&
	git commit -m initial &&
	echo ".file -crlfQ" | q_to_cr >> .gitattributes &&
	echo "contents" > .file &&
	git add .gitattributes .file &&
	git commit -m second &&

	git checkout master~1 &&
	git checkout master &&
	test "$(git diff-files --raw)" = ""


[master 08e10bb] initial
 Author: A U Thor <author@example.com>
 1 file changed, 1 insertion(+)
[master de41727] second
 Author: A U Thor <author@example.com>
 2 files changed, 2 insertions(+)
 create mode 100644 .file
Note: checking out 'master~1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 08e10bb... initial
Previous HEAD position was 08e10bb... initial
Switched to branch 'master'
ok 25 - checkout with existing .gitattributes

expecting success: 

	git rm .gitattributes &&
	echo "contentsQ" | q_to_cr > .file2 &&
	git add .file2 &&
	git commit -m third &&

	git checkout master~1 &&
	git checkout master &&
	has_cr .file2


rm '.gitattributes'
[master d34ef55] third
 Author: A U Thor <author@example.com>
 2 files changed, 1 insertion(+), 4 deletions(-)
 create mode 100644 .file2
 delete mode 100644 .gitattributes
Note: checking out 'master~1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de41727... second
M	three
Previous HEAD position was de41727... second
Switched to branch 'master'
ok 26 - checkout when deleting .gitattributes

expecting success: 

	echo "three +crlf" >>.gitattributes &&
	git diff


+crlf is not a valid attribute name: .gitattributes:1
diff --git a/three b/three
index 98efc5e..c5c386a 100644
Binary files a/three and b/three differ
ok 27 - invalid .gitattributes (must not crash)

expecting success: 
	git config core.autocrlf false &&
	git config core.safecrlf false &&
	rm -rf .????* * &&
	for w in I am all LF; do echo $w; done >alllf &&
	for w in Oh here is CRLFQ in text; do echo $w; done | q_to_cr >mixed &&
	for w in I am all CRLF; do echo $w; done | append_cr >allcrlf &&
	git add -A . &&
	git commit -m "alllf, allcrlf and mixed only" &&
	git tag -a -m "message" autocrlf-checkpoint

[master 1889ffe] alllf, allcrlf and mixed only
 Author: A U Thor <author@example.com>
 7 files changed, 8 insertions(+), 14 deletions(-)
 delete mode 100644 .file
 delete mode 100644 .file2
 create mode 100644 allcrlf
 create mode 100644 alllf
 delete mode 100644 dir/two
 rename three => mixed (57%)
 delete mode 100644 one
ok 28 - setting up for new autocrlf tests

expecting success: 
	git config core.autocrlf true &&
	touch * &&
	git diff --exit-code

ok 29 - report no change after setting autocrlf

expecting success: 
	rm * &&
	git checkout -f &&
	git diff --exit-code

ok 30 - files are clean after checkout

expecting success: 
	test "$(cr_to_Q_no_NL < alllf)" = "IQamQallQLFQ"

ok 31 - LF only file gets CRLF with autocrlf

expecting success: 
	test "$(cr_to_Q_no_NL < mixed)" = "OhhereisCRLFQintext"

ok 32 - Mixed file is still mixed with autocrlf

expecting success: 
	test "$(cr_to_Q_no_NL < allcrlf)" = "IQamQallQCRLFQ"

ok 33 - CRLF only file has CRLF with autocrlf

expecting success: 
	tr -d "" < alllf | append_cr > alllf2 &&
	git add alllf2 &&
	git commit -m "alllf2 added" &&
	git config core.autocrlf false &&
	rm * &&
	git checkout -f &&
	test_cmp alllf alllf2

[master ce6c29f] alllf2 added
 Author: A U Thor <author@example.com>
 1 file changed, 4 insertions(+)
 create mode 100644 alllf2
ok 34 - New CRLF file gets LF in repo

# passed all 34 test(s)
1..34
*** t0021-conversion.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0021-conversion/.git/
expecting success: 
	git config filter.rot13.smudge ./rot13.sh &&
	git config filter.rot13.clean ./rot13.sh &&

	{
	    echo "*.t filter=rot13"
	    echo "*.i ident"
	} >.gitattributes &&

	{
	    echo a b c d e f g h i j k l m
	    echo n o p q r s t u v w x y z
	    echo '$Id$'
	} >test &&
	cat test >test.t &&
	cat test >test.o &&
	cat test >test.i &&
	git add test test.t test.i &&
	rm -f test test.t test.i &&
	git checkout -- test test.t test.i

ok 1 - setup

expecting success: 

	cmp test.o test &&
	cmp test.o test.t &&

	# ident should be stripped in the repository
	git diff --raw --exit-code :test :test.i &&
	id=$(git rev-parse --verify :test) &&
	embedded=$(sed -ne "$script" test.i) &&
	test "z$id" = "z$embedded" &&

	git cat-file blob :test.t > test.r &&

	./rot13.sh < test.o > test.t &&
	cmp test.r test.t

ok 2 - check

expecting success: 
	{
		echo "File with expanded keywords"
		echo "\$Id\$"
		echo "\$Id:\$"
		echo "\$Id: 0000000000000000000000000000000000000000 \$"
		echo "\$Id: NoSpaceAtEnd\$"
		echo "\$Id:NoSpaceAtFront \$"
		echo "\$Id:NoSpaceAtEitherEnd\$"
		echo "\$Id: NoTerminatingSymbol"
		echo "\$Id: Foreign Commit With Spaces \$"
	} >expanded-keywords.0 &&

	{
		cat expanded-keywords.0 &&
		printf "\$Id: NoTerminatingSymbolAtEOF"
	} >expanded-keywords &&
	cat expanded-keywords >expanded-keywords-crlf &&
	git add expanded-keywords expanded-keywords-crlf &&
	git commit -m "File with keywords expanded" &&
	id=$(git rev-parse --verify :expanded-keywords) &&

	{
		echo "File with expanded keywords"
		echo "\$Id: $id \$"
		echo "\$Id: $id \$"
		echo "\$Id: $id \$"
		echo "\$Id: $id \$"
		echo "\$Id: $id \$"
		echo "\$Id: $id \$"
		echo "\$Id: NoTerminatingSymbol"
		echo "\$Id: Foreign Commit With Spaces \$"
	} >expected-output.0 &&
	{
		cat expected-output.0 &&
		printf "\$Id: NoTerminatingSymbolAtEOF"
	} >expected-output &&
	{
		append_cr <expected-output.0 &&
		printf "\$Id: NoTerminatingSymbolAtEOF"
	} >expected-output-crlf &&
	{
		echo "expanded-keywords ident"
		echo "expanded-keywords-crlf ident text eol=crlf"
	} >>.gitattributes &&

	rm -f expanded-keywords expanded-keywords-crlf &&

	git checkout -- expanded-keywords &&
	test_cmp expanded-keywords expected-output &&

	git checkout -- expanded-keywords-crlf &&
	test_cmp expanded-keywords-crlf expected-output-crlf

[master (root-commit) a415d63] File with keywords expanded
 Author: A U Thor <author@example.com>
 5 files changed, 29 insertions(+)
 create mode 100644 expanded-keywords
 create mode 100644 expanded-keywords-crlf
 create mode 100644 test
 create mode 100644 test.i
 create mode 100644 test.t
ok 3 - expanded_in_repo

expecting success: 
	cat >argc.sh <<-EOF &&
	#!$SHELL_PATH
	cat >/dev/null
	echo argc: \$# "\$@"
	EOF
	normal=name-no-magic &&
	special="name  with 'sq' and \$x" &&
	echo some test text >"$normal" &&
	echo some test text >"$special" &&
	git add "$normal" "$special" &&
	git commit -q -m "add files" &&
	echo "name* filter=argc" >.gitattributes &&

	# delete the files and check them out again, using a smudge filter
	# that will count the args and echo the command-line back to us
	git config filter.argc.smudge "sh ./argc.sh %f" &&
	rm "$normal" "$special" &&
	git checkout -- "$normal" "$special" &&

	# make sure argc.sh counted the right number of args
	echo "argc: 1 $normal" >expect &&
	test_cmp expect "$normal" &&
	echo "argc: 1 $special" >expect &&
	test_cmp expect "$special" &&

	# do the same thing, but with more args in the filter expression
	git config filter.argc.smudge "sh ./argc.sh %f --my-extra-arg" &&
	rm "$normal" "$special" &&
	git checkout -- "$normal" "$special" &&

	# make sure argc.sh counted the right number of args
	echo "argc: 2 $normal --my-extra-arg" >expect &&
	test_cmp expect "$normal" &&
	echo "argc: 2 $special --my-extra-arg" >expect &&
	test_cmp expect "$special" &&
	:

ok 4 - filter shell-escaped filenames

expecting success: 
	git config filter.required.smudge cat &&
	git config filter.required.clean cat &&
	git config filter.required.required true &&

	echo "*.r filter=required" >.gitattributes &&

	echo test >test.r &&
	git add test.r &&
	rm -f test.r &&
	git checkout -- test.r

ok 5 - required filter success

expecting success: 
	git config filter.failsmudge.smudge false &&
	git config filter.failsmudge.clean cat &&
	git config filter.failsmudge.required true &&

	echo "*.fs filter=failsmudge" >.gitattributes &&

	echo test >test.fs &&
	git add test.fs &&
	rm -f test.fs &&
	test_must_fail git checkout -- test.fs

error: cannot feed the input to external filter false
error: external filter false failed 1
error: external filter false failed
fatal: test.fs: smudge filter failsmudge failed
ok 6 - required filter smudge failure

expecting success: 
	git config filter.failclean.smudge cat &&
	git config filter.failclean.clean false &&
	git config filter.failclean.required true &&

	echo "*.fc filter=failclean" >.gitattributes &&

	echo test >test.fc &&
	test_must_fail git add test.fc

error: cannot feed the input to external filter false
error: external filter false failed 1
error: external filter false failed
fatal: test.fc: clean filter 'failclean' failed
ok 7 - required filter clean failure

# passed all 7 test(s)
1..7
*** t0022-crlf-rename.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0022-crlf-rename/.git/
expecting success: 

	cat "$TEST_DIRECTORY"/t0022-crlf-rename.sh >sample &&
	git add sample &&

	test_tick &&
	git commit -m Initial &&

	append_cr <"$TEST_DIRECTORY"/t0022-crlf-rename.sh >elpmas &&
	git add elpmas &&
	rm -f sample &&

	test_tick &&
	git commit -a -m Second


[master (root-commit) 6ee20c2] Initial
 Author: A U Thor <author@example.com>
 1 file changed, 33 insertions(+)
 create mode 100644 sample
[master d248b45] Second
 Author: A U Thor <author@example.com>
 1 file changed, 33 insertions(+), 33 deletions(-)
 rename sample => elpmas (94%)
ok 1 - setup

expecting success: 

	git diff-tree -M -r --name-status HEAD^ HEAD |
	sed -e "s/R[0-9]*/RNUM/" >actual &&
	echo "RNUM	sample	elpmas" >expect &&
	test_cmp expect actual


ok 2 - diff -M

# passed all 2 test(s)
1..2
*** t0023-crlf-am.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0023-crlf-am/.git/
expecting success: 

	git config core.autocrlf true &&
	echo foo >bar &&
	git add bar &&
	test_tick &&
	git commit -m initial


warning: LF will be replaced by CRLF in bar.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in bar.
The file will have its original line endings in your working directory.
[master (root-commit) 1adb513] initial
 Author: A U Thor <author@example.com>
 1 file changed, 1 insertion(+)
 create mode 100644 bar
ok 1 - setup

expecting success: 

	git am -3 <patchfile &&
	git diff-files --name-status --exit-code


Applying: test1
ok 2 - am

# passed all 2 test(s)
1..2
*** t0024-crlf-archive.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0024-crlf-archive/.git/
expecting success: 

	git config core.autocrlf true &&

	printf "CRLF line ending
And another
" > sample &&
	git add sample &&

	test_tick &&
	git commit -m Initial


[master (root-commit) 4f7f1aa] Initial
 Author: A U Thor <author@example.com>
 1 file changed, 2 insertions(+)
 create mode 100644 sample
ok 1 - setup

expecting success: 

	git archive --format=tar HEAD |
	( mkdir untarred && cd untarred && "$TAR" -xf - ) &&

	test_cmp sample untarred/sample


ok 2 - tar archive

expecting success: 

	git archive --format=zip HEAD >test.zip &&

	( mkdir unzipped && cd unzipped && unzip ../test.zip ) &&

	test_cmp sample unzipped/sample


Archive:  ../test.zip
4f7f1aaec1ee996d8f5e13c2cfbd43a378578e1f
 extracting: sample                  
ok 3 - zip archive

# passed all 3 test(s)
1..3
*** t0025-crlf-auto.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0025-crlf-auto/.git/
expecting success: 

	git config core.autocrlf false &&

	for w in Hello world how are you; do echo $w; done >one &&
	for w in I am very very fine thank you; do echo ${w}Q; done | q_to_cr >two &&
	for w in Oh here is a QNUL byte how alarming; do echo ${w}; done | q_to_nul >three &&
	git add . &&

	git commit -m initial &&

	one=`git rev-parse HEAD:one` &&
	two=`git rev-parse HEAD:two` &&
	three=`git rev-parse HEAD:three` &&

	echo happy.

[master (root-commit) e664732] initial
 Author: A U Thor <author@example.com>
 3 files changed, 12 insertions(+)
 create mode 100644 one
 create mode 100644 three
 create mode 100644 two
happy.
ok 1 - setup

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git read-tree --reset -u HEAD &&

	! has_cr one &&
	has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	threediff=`git diff three` &&
	test -z "$onediff" -a -z "$twodiff" -a -z "$threediff"

ok 2 - default settings cause no changes

expecting success: 

	# Backwards compatibility check
	rm -f .gitattributes tmp one two three &&
	echo "two crlf" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	# Note, "normalized" means that git will normalize it if added
	has_cr two &&
	twodiff=`git diff two` &&
	test -n "$twodiff"

warning: CRLF will be replaced by LF in two.
The file will have its original line endings in your working directory.
ok 3 - crlf=true causes a CRLF file to be normalized

expecting success: 

	rm -f .gitattributes tmp one two three &&
	echo "two text" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	# Note, "normalized" means that git will normalize it if added
	has_cr two &&
	twodiff=`git diff two` &&
	test -n "$twodiff"

warning: CRLF will be replaced by LF in two.
The file will have its original line endings in your working directory.
ok 4 - text=true causes a CRLF file to be normalized

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf false &&
	echo "one eol=crlf" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	onediff=`git diff one` &&
	test -z "$onediff"

ok 5 - eol=crlf gives a normalized file CRLFs with autocrlf=false

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf input &&
	echo "one eol=crlf" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	onediff=`git diff one` &&
	test -z "$onediff"

ok 6 - eol=crlf gives a normalized file CRLFs with autocrlf=input

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf true &&
	echo "one eol=lf" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	! has_cr one &&
	onediff=`git diff one` &&
	test -z "$onediff"

ok 7 - eol=lf gives a normalized file LFs with autocrlf=true

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	threediff=`git diff three` &&
	test -z "$onediff" -a -z "$twodiff" -a -z "$threediff"

ok 8 - autocrlf=true does not normalize CRLF files

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf true &&
	echo "* text=auto" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	threediff=`git diff three` &&
	test -z "$onediff" -a -n "$twodiff" -a -z "$threediff"

ok 9 - text=auto, autocrlf=true _does_ normalize CRLF files

expecting success: 

	rm -f .gitattributes tmp one two three &&
	git config core.autocrlf true &&
	echo "* text=auto" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	! has_cr three &&
	threediff=`git diff three` &&
	test -z "$threediff"

ok 10 - text=auto, autocrlf=true does not normalize binary files

expecting success: 

	rm -f .gitattributes tmp one two three &&
	echo "three eol=crlf" > .gitattributes &&
	git read-tree --reset -u HEAD &&

	has_cr three &&
	threediff=`git diff three` &&
	test -z "$threediff"

ok 11 - eol=crlf _does_ normalize binary files

# passed all 11 test(s)
1..11
*** t0026-eol-config.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0026-eol-config/.git/
expecting success: 

	git config core.autocrlf false &&

	echo "one text" > .gitattributes &&

	for w in Hello world how are you; do echo $w; done >one &&
	for w in I am very very fine thank you; do echo $w; done >two &&
	git add . &&

	git commit -m initial &&

	one=`git rev-parse HEAD:one` &&
	two=`git rev-parse HEAD:two` &&

	echo happy.

[master (root-commit) 191ba5b] initial
 Author: A U Thor <author@example.com>
 3 files changed, 13 insertions(+)
 create mode 100644 .gitattributes
 create mode 100644 one
 create mode 100644 two
happy.
ok 1 - setup

expecting success: 

	rm -f .gitattributes tmp one two &&
	git config core.eol lf &&
	git read-tree --reset -u HEAD &&

	! has_cr one &&
	! has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	test -z "$onediff" -a -z "$twodiff"

ok 2 - eol=lf puts LFs in normalized file

expecting success: 

	rm -f .gitattributes tmp one two &&
	git config core.eol crlf &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	! has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	test -z "$onediff" -a -z "$twodiff"

ok 3 - eol=crlf puts CRLFs in normalized file

expecting success: 

	rm -f .gitattributes tmp one two &&
	git config core.eol lf &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	test -z "$onediff" -a -z "$twodiff"

ok 4 - autocrlf=true overrides eol=lf

expecting success: 

	rm -f .gitattributes tmp one two &&
	git config --unset-all core.eol &&
	git config core.autocrlf true &&
	git read-tree --reset -u HEAD &&

	has_cr one &&
	has_cr two &&
	onediff=`git diff one` &&
	twodiff=`git diff two` &&
	test -z "$onediff" -a -z "$twodiff"

ok 5 - autocrlf=true overrides unset eol

# passed all 5 test(s)
1..5
*** t0030-stripspace.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0030-stripspace/.git/
expecting success: 
    echo "$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt$ttt$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual

ok 1 - long lines without spaces should be unchanged

expecting success: 
    echo "$sss$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$sss$sss$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$sss$sss$sss$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual

ok 2 - lines with spaces at the beginning should be unchanged

expecting success: 
    echo "$ttt$sss$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual &&

    echo "$ttt$sss$sss$ttt" >expect &&
    git stripspace <expect >actual &&
    test_cmp expect actual

ok 3 - lines with intermediate spaces should be unchanged

expecting success: 
    printf "$ttt

$ttt
" > expect &&
    printf "$ttt




$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt

$ttt
" > expect &&
    printf "$ttt$ttt




$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt

$ttt
" > expect &&
    printf "$ttt$ttt$ttt




$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt
" > expect &&
    printf "$ttt




$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt$ttt
" > expect &&
    printf "$ttt




$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt$ttt$ttt
" > expect &&
    printf "$ttt




$ttt$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt
" > expect &&
    printf "$ttt
	
 

  		
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt

$ttt
" > expect &&
    printf "$ttt$ttt
	
 

  		
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt

$ttt
" > expect &&
    printf "$ttt$ttt$ttt
	
 

  		
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt
" > expect &&
    printf "$ttt
	
 

  		
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt$ttt
" > expect &&
    printf "$ttt
	
 

  		
$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$ttt$ttt$ttt
" > expect &&
    printf "$ttt
	
 

  		
$ttt$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual

ok 4 - consecutive blank lines should be unified

expecting success: 
    > expect &&

    printf "
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "


" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss
$sss
$sss
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss
$sss

" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "
$sss
$sss$sss
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss$sss$sss


" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "
$sss$sss$sss$sss

" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "

$sss$sss$sss$sss
" | git stripspace >actual &&
    test_cmp expect actual

ok 5 - only consecutive blank lines should be completely removed

expecting success: 
    printf "$ttt
" > expect &&
    printf "
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" > expect &&
    printf "


$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt
" > expect &&
    printf "


$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt
" > expect &&
    printf "


$ttt$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt$ttt
" > expect &&
    printf "


$ttt$ttt$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" > expect &&

    printf "$sss
$sss
$sss
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "
$sss
$sss$sss
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss
$sss

$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss$sss


$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "
$sss$sss$sss

$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "

$sss$sss$sss
$ttt
" | git stripspace >actual &&
    test_cmp expect actual

ok 6 - consecutive blank lines at the beginning should be removed

expecting success: 
    printf "$ttt
" > expect &&
    printf "$ttt

" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" > expect &&
    printf "$ttt



" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt
" > expect &&
    printf "$ttt$ttt



" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt
" > expect &&
    printf "$ttt$ttt$ttt



" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt$ttt
" > expect &&
    printf "$ttt$ttt$ttt$ttt



" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" > expect &&

    printf "$ttt
$sss
$sss
$sss
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$sss
$sss$sss
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$sss$sss
$sss

" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$sss$sss$sss


" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt

$sss$sss$sss

" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt


$sss$sss$sss
" | git stripspace >actual &&
    test_cmp expect actual

ok 7 - consecutive blank lines at the end should be removed

expecting success: 
    test `printf "$ttt" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt$ttt" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt$ttt$ttt" | git stripspace | wc -l` -gt 0

ok 8 - text without newline at end should end with newline

expecting success: 
    test `printf "$ttt$sss" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt$sss" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt$ttt$sss" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$sss$sss" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$ttt$sss$sss" | git stripspace | wc -l` -gt 0 &&
    test `printf "$ttt$sss$sss$sss" | git stripspace | wc -l` -gt 0

ok 9 - text plus spaces without newline at end should end with newline

expecting success: 
    ! (printf "$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (printf "$ttt$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (printf "$ttt$ttt$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (printf "$ttt$sss$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (printf "$ttt$ttt$sss$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (printf "$ttt$sss$sss$sss" | git stripspace | grep "  " >/dev/null)

ok 10 - text plus spaces without newline at end should not show spaces

expecting success: 
    printf "$ttt
" >expect &&
    printf "$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" >expect &&
    printf "$ttt$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
" >expect &&
    printf "$ttt$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt
" >expect &&
    printf "$ttt$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt
" >expect &&
    printf "$ttt$ttt$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt$ttt
" >expect &&
    printf "$ttt$ttt$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual

ok 11 - text plus spaces without newline should show the correct lines

expecting success: 
    ! (echo "$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (echo "$ttt$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (echo "$ttt$ttt$ttt$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (echo "$ttt$sss$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (echo "$ttt$ttt$sss$sss" | git stripspace | grep "  " >/dev/null) &&
    ! (echo "$ttt$sss$sss$sss" | git stripspace | grep "  " >/dev/null)

ok 12 - text plus spaces at end should not show spaces

expecting success: 
    echo "$ttt" >expect &&
    echo "$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$ttt" >expect &&
    echo "$ttt$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$ttt" >expect &&
    echo "$ttt$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt" >expect &&
    echo "$ttt$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt" >expect &&
    echo "$ttt$ttt$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$ttt$ttt$ttt" >expect &&
    echo "$ttt$ttt$ttt$sss" | git stripspace >actual &&
    test_cmp expect actual

ok 13 - text plus spaces at end should be cleaned and newline must remain

expecting success: 
    printf "" >expect &&

    echo | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    echo "$sss$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual

ok 14 - spaces with newline at end should be replaced with empty string

expecting success: 
    ! (printf "" | git stripspace | grep " " >/dev/null) &&
    ! (printf "$sss" | git stripspace | grep " " >/dev/null) &&
    ! (printf "$sss$sss" | git stripspace | grep " " >/dev/null) &&
    ! (printf "$sss$sss$sss" | git stripspace | grep " " >/dev/null) &&
    ! (printf "$sss$sss$sss$sss" | git stripspace | grep " " >/dev/null)

ok 15 - spaces without newline at end should not show spaces

expecting success: 
    printf "" >expect &&

    printf "" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$sss$sss$sss$sss" | git stripspace >actual &&
    test_cmp expect actual

ok 16 - spaces without newline at end should be replaced with empty string

expecting success: 
    printf "$ttt$ttt
$ttt
" >expect &&
    printf "$ttt$ttt
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$ttt$ttt
$ttt
" >expect &&
    printf "$ttt
$ttt$ttt
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$ttt
$ttt
$ttt$ttt
" >expect &&
    printf "$ttt
$ttt
$ttt
$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$ttt

$ttt$ttt
$ttt
" >expect &&
    printf "$ttt
$ttt

$ttt$ttt
$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt$ttt

$ttt
$ttt$ttt
" >expect &&
    printf "$ttt$ttt

$ttt
$ttt$ttt
" | git stripspace >actual &&
    test_cmp expect actual &&

    printf "$ttt
$ttt$ttt

$ttt
" >expect &&
    printf "$ttt
$ttt$ttt

$ttt
" | git stripspace >actual &&
    test_cmp expect actual

ok 17 - consecutive text lines should be unchanged

expecting success: 
	test ! -z "$(echo "# comment" | git stripspace)" &&
	test -z "$(echo "# comment" | git stripspace -s)"

ok 18 - strip comments, too

# passed all 18 test(s)
1..18
*** t0040-parse-options.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0040-parse-options/.git/
expecting success: 
	test_must_fail test-parse-options -h > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 1 - test help

expecting success: check boolean: 1 --yes
ok 2 - OPT_BOOL() #1

expecting success: check boolean: 1 --no-doubt
ok 3 - OPT_BOOL() #2

expecting success: check boolean: 1 -D
ok 4 - OPT_BOOL() #3

expecting success: check boolean: 1 --no-fear
ok 5 - OPT_BOOL() #4

expecting success: check boolean: 1 -B
ok 6 - OPT_BOOL() #5

expecting success: check boolean: 1 --yes --yes
ok 7 - OPT_BOOL() is idempotent #1

expecting success: check boolean: 1 -DB
ok 8 - OPT_BOOL() is idempotent #2

expecting success: check boolean: 0 -D --no-yes
ok 9 - OPT_BOOL() negation #1

expecting success: check boolean: 0 -D --no-no-doubt
ok 10 - OPT_BOOL() negation #2

expecting success: check_unknown --fear
ok 11 - OPT_BOOL() no negation #1

expecting success: check_unknown --no-no-fear
ok 12 - OPT_BOOL() no negation #2

expecting success: check boolean: 0 -D --doubt
ok 13 - OPT_BOOL() positivation

expecting success: 
	test-parse-options -s123 -b -i 1729 -b -vv -n -F my.file \
	> output 2> output.err &&
	test_cmp expect output &&
	test ! -s output.err

ok 14 - short options

expecting success: 
	test-parse-options --boolean --integer 1729 --boolean --string2=321 \
		--verbose --verbose --no-dry-run --abbrev=10 --file fi.le\
		--obsolete > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 15 - long options

expecting success: 
	test-parse-options -s;
	test $? = 129 &&
	test-parse-options --string;
	test $? = 129 &&
	test-parse-options --file;
	test $? = 129

error: switch `s' requires a value
usage: test-parse-options <options>

    --yes                 get a boolean
    -D, --no-doubt        begins with 'no-'
    -B, --no-fear         be brave
    -b, --boolean         increment by one
    -4, --or4             bitwise-or boolean with ...0100
    --neg-or4             same as --no-or4

    -i, --integer <n>     get a integer
    -j <n>                get a integer, too
    --set23               set integer to 23
    -t <time>             get timestamp of <time>
    -L, --length <str>    get length of <str>
    -F, --file <file>     set file to <file>

String options
    -s, --string <string>
                          get a string
    --string2 <str>       get another string
    --st <st>             get another string (pervert ordering)
    -o <str>              get another string
    --default-string      set string to default
    --list <str>          add str to list

Magic arguments
    --quux                means --quux
    -NUM                  set integer to NUM
    +                     same as -b
    --ambiguous           positive ambiguity
    --no-ambiguous        negative ambiguity

Standard options
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -q, --quiet           be quiet

error: option `string' requires a value
usage: test-parse-options <options>

    --yes                 get a boolean
    -D, --no-doubt        begins with 'no-'
    -B, --no-fear         be brave
    -b, --boolean         increment by one
    -4, --or4             bitwise-or boolean with ...0100
    --neg-or4             same as --no-or4

    -i, --integer <n>     get a integer
    -j <n>                get a integer, too
    --set23               set integer to 23
    -t <time>             get timestamp of <time>
    -L, --length <str>    get length of <str>
    -F, --file <file>     set file to <file>

String options
    -s, --string <string>
                          get a string
    --string2 <str>       get another string
    --st <st>             get another string (pervert ordering)
    -o <str>              get another string
    --default-string      set string to default
    --list <str>          add str to list

Magic arguments
    --quux                means --quux
    -NUM                  set integer to NUM
    +                     same as -b
    --ambiguous           positive ambiguity
    --no-ambiguous        negative ambiguity

Standard options
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -q, --quiet           be quiet

error: option `file' requires a value
usage: test-parse-options <options>

    --yes                 get a boolean
    -D, --no-doubt        begins with 'no-'
    -B, --no-fear         be brave
    -b, --boolean         increment by one
    -4, --or4             bitwise-or boolean with ...0100
    --neg-or4             same as --no-or4

    -i, --integer <n>     get a integer
    -j <n>                get a integer, too
    --set23               set integer to 23
    -t <time>             get timestamp of <time>
    -L, --length <str>    get length of <str>
    -F, --file <file>     set file to <file>

String options
    -s, --string <string>
                          get a string
    --string2 <str>       get another string
    --st <st>             get another string (pervert ordering)
    -o <str>              get another string
    --default-string      set string to default
    --list <str>          add str to list

Magic arguments
    --quux                means --quux
    -NUM                  set integer to NUM
    +                     same as -b
    --ambiguous           positive ambiguity
    --no-ambiguous        negative ambiguity

Standard options
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -q, --quiet           be quiet

ok 16 - missing required value

expecting success: 
	test-parse-options a1 --string 123 b1 --boolean -j 13 -- --boolean \
		> output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 17 - intermingled arguments

expecting success: 
	test-parse-options --int 2 --boolean --no-bo > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 18 - unambiguously abbreviated option

expecting success: 
	test-parse-options --int=2 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 19 - unambiguously abbreviated option with "="

expecting success: 
	test-parse-options --strin 123;
	test $? = 129

error: Ambiguous option: strin (could be --string or --string2)
usage: test-parse-options <options>

    --yes                 get a boolean
    -D, --no-doubt        begins with 'no-'
    -B, --no-fear         be brave
    -b, --boolean         increment by one
    -4, --or4             bitwise-or boolean with ...0100
    --neg-or4             same as --no-or4

    -i, --integer <n>     get a integer
    -j <n>                get a integer, too
    --set23               set integer to 23
    -t <time>             get timestamp of <time>
    -L, --length <str>    get length of <str>
    -F, --file <file>     set file to <file>

String options
    -s, --string <string>
                          get a string
    --string2 <str>       get another string
    --st <st>             get another string (pervert ordering)
    -o <str>              get another string
    --default-string      set string to default
    --list <str>          add str to list

Magic arguments
    --quux                means --quux
    -NUM                  set integer to NUM
    +                     same as -b
    --ambiguous           positive ambiguity
    --no-ambiguous        negative ambiguity

Standard options
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -q, --quiet           be quiet

ok 20 - ambiguously abbreviated option

expecting success: 
	test-parse-options --st 123 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 21 - non ambiguous option (after two options it abbreviates)

expecting success: 
	test_must_fail test-parse-options -boolean > output 2> output.err &&
	test ! -s output &&
	test_cmp typo.err output.err

ok 22 - detect possible typos

expecting success: 
	test_must_fail test-parse-options -ambiguous > output 2> output.err &&
	test ! -s output &&
	test_cmp typo.err output.err

ok 23 - detect possible typos

expecting success: 
	test-parse-options --quux > output 2> output.err &&
        test ! -s output.err &&
        test_cmp expect output

ok 24 - keep some options as arguments

expecting success: 
	test-parse-options -t "1970-01-01 00:00:01 +0000" --default-string \
		foo -q > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 25 - OPT_DATE() and OPT_SET_PTR() work

expecting success: 
	test-parse-options --length=four -b -4 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 26 - OPT_CALLBACK() and OPT_BIT() work

expecting success: 
	test_must_fail test-parse-options --no-length > output 2> output.err &&
	test_cmp expect output &&
	test_cmp expect.err output.err

ok 27 - OPT_CALLBACK() and callback errors work

expecting success: 
	test-parse-options --set23 -bbbbb --no-or4 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 28 - OPT_BIT() and OPT_SET_INT() work

expecting success: 
	test-parse-options --set23 -bbbbb --neg-or4 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 29 - OPT_NEGBIT() and OPT_SET_INT() work

expecting success: 
	test-parse-options -bb --or4 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 30 - OPT_BIT() works

expecting success: 
	test-parse-options -bb --no-neg-or4 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 31 - OPT_NEGBIT() works

expecting success: 
	test-parse-options + + + + + + > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 32 - OPT_COUNTUP() with PARSE_OPT_NODASH works

expecting success: 
	test-parse-options -12345 > output 2> output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 33 - OPT_NUMBER_CALLBACK() works

expecting success: 
	test-parse-options --no-ambig >output 2>output.err &&
	test ! -s output.err &&
	test_cmp expect output

ok 34 - negation of OPT_NONEG flags is not ambiguous

expecting success: 
	test-parse-options --list foo --list=bar --list=baz >output &&
	test_cmp expect output

ok 35 - --list keeps list of strings

expecting success: 
	test-parse-options --list=other --list=irrelevant --list=options \
		--no-list --list=foo --list=bar --list=baz >output &&
	test_cmp expect output

ok 36 - --no-list resets list

# passed all 36 test(s)
1..36
*** t0050-filesystem.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0050-filesystem/.git/
expecting success: 

	test_case=test_expect_success &&
	test_unicode=test_expect_success &&
	mkdir junk &&
	echo good >junk/CamelCase &&
	echo bad >junk/camelcase &&
	if test "$(cat junk/CamelCase)" != good
	then
		test_case=test_expect_failure &&
		case_insensitive=t
	fi &&
	rm -fr junk &&
	mkdir junk &&
	>junk/"$auml" &&
	case "$(cd junk && echo *)" in
	"$aumlcdiar")
		test_unicode=test_expect_failure &&
		unibad=t
		;;
	*)	;;
	esac &&
	rm -fr junk &&
	{
		ln -s x y 2> /dev/null &&
		test -h y 2> /dev/null ||
		no_symlinks=1 &&
		rm -f y
	}

ok 1 - see what we expect

expecting success: 

	test_must_fail git config --bool core.ignorecase >/dev/null ||
	test $(git config --bool core.ignorecase) = false

ok 2 - detection of case insensitive filesystem during repo init

expecting success: 

	test_must_fail git config --bool core.symlinks ||
	test "$(git config --bool core.symlinks)" = true

ok 3 - detection of filesystem w/o symlink support during repo init

expecting success: 

	git config core.ignorecase true &&
	touch camelcase &&
	git add camelcase &&
	git commit -m "initial" &&
	git tag initial &&
	git checkout -b topic &&
	git mv camelcase tmp &&
	git mv tmp CamelCase &&
	git commit -m "rename" &&
	git checkout -f master


[master (root-commit) 6e19616] initial
 Author: A U Thor <author@example.com>
 0 files changed
 create mode 100644 camelcase
Switched to a new branch 'topic'
[topic 60d649a] rename
 Author: A U Thor <author@example.com>
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename camelcase => CamelCase (100%)
Switched to branch 'master'
ok 4 - setup case tests

expecting success: 

	git mv camelcase CamelCase &&
	git commit -m "rename"


[master 60d649a] rename
 Author: A U Thor <author@example.com>
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename camelcase => CamelCase (100%)
ok 5 - rename (case change)

expecting success: 

	rm -f CamelCase &&
	rm -f camelcase &&
	git reset --hard initial &&
	git merge topic


HEAD is now at 6e19616 initial
Updating 6e19616..60d649a
Fast-forward
 camelcase => CamelCase |    0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename camelcase => CamelCase (100%)
ok 6 - merge (case change)

checking known breakage: 

	git reset --hard initial &&
	rm camelcase &&
	echo 1 >CamelCase &&
	git add CamelCase &&
	camel=$(git ls-files | grep -i camelcase) &&
	test $(echo "$camel" | wc -l) = 1 &&
	test "z$(git cat-file blob :$camel)" = z1


HEAD is now at 6e19616 initial
not ok 7 - add (with different case) # TODO known breakage

expecting success: 

  test_create_repo unicode &&
  cd unicode &&
  touch "$aumlcdiar" &&
  git add "$aumlcdiar" &&
  git commit -m initial &&
  git tag initial &&
  git checkout -b topic &&
  git mv $aumlcdiar tmp &&
  git mv tmp "$auml" &&
  git commit -m rename &&
  git checkout -f master


Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0050-filesystem/unicode/.git/
[master (root-commit) ab2c1a0] initial
 Author: A U Thor <author@example.com>
 0 files changed
 create mode 100644 "a\314\210"
Switched to a new branch 'topic'
[topic 33e07a2] rename
 Author: A U Thor <author@example.com>
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename "a\314\210" => "\303\244" (100%)
Switched to branch 'master'
ok 8 - setup unicode normalization tests

expecting success: 

 git mv "$aumlcdiar" "$auml" &&
 git commit -m rename


[master 33e07a2] rename
 Author: A U Thor <author@example.com>
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename "a\314\210" => "\303\244" (100%)
ok 9 - rename (silent unicode normalization)

expecting success: 

 git reset --hard initial &&
 git merge topic


HEAD is now at ab2c1a0 initial
Updating ab2c1a0..33e07a2
Fast-forward
 "a\314\210" => "\303\244" |    0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename "a\314\210" => "\303\244" (100%)
ok 10 - merge (silent unicode normalization)

# still have 1 known breakage(s)
# passed all remaining 9 test(s)
1..10
*** t0055-beyond-symlinks.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0055-beyond-symlinks/.git/
expecting success: 
	>a &&
	mkdir b &&
	ln -s b c &&
	>c/d &&
	git update-index --add a b/d

ok 1 - setup

expecting success: 
	test_must_fail git update-index --add c/d &&
	! ( git ls-files | grep c/d )

error: 'c/d' is beyond a symbolic link
fatal: Unable to process path c/d
ok 2 - update-index --add beyond symlinks

expecting success: 
	test_must_fail git add c/d &&
	! ( git ls-files | grep c/d )

fatal: 'c/d' is beyond a symbolic link
ok 3 - add beyond symlinks

# passed all 3 test(s)
1..3
*** t0060-path-utils.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0060-path-utils/.git/
expecting success: test "$(test-path-utils normalize_path_copy '')" = ''
ok 1 - normalize path:  => 

expecting success: test "$(test-path-utils normalize_path_copy '.')" = ''
ok 2 - normalize path: . => 

expecting success: test "$(test-path-utils normalize_path_copy './')" = ''
ok 3 - normalize path: ./ => 

expecting success: test "$(test-path-utils normalize_path_copy './.')" = ''
ok 4 - normalize path: ./. => 

expecting success: test "$(test-path-utils normalize_path_copy './..')" = '++failed++'
ok 5 - normalize path: ./.. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy '../.')" = '++failed++'
ok 6 - normalize path: ../. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy './.././/')" = '++failed++'
ok 7 - normalize path: ./../.// => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy 'dir/..')" = ''
ok 8 - normalize path: dir/.. => 

expecting success: test "$(test-path-utils normalize_path_copy 'dir/sub/../..')" = ''
ok 9 - normalize path: dir/sub/../.. => 

expecting success: test "$(test-path-utils normalize_path_copy 'dir/sub/../../..')" = '++failed++'
ok 10 - normalize path: dir/sub/../../.. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy 'dir')" = 'dir'
ok 11 - normalize path: dir => dir

expecting success: test "$(test-path-utils normalize_path_copy 'dir//')" = 'dir/'
ok 12 - normalize path: dir// => dir/

expecting success: test "$(test-path-utils normalize_path_copy './dir')" = 'dir'
ok 13 - normalize path: ./dir => dir

expecting success: test "$(test-path-utils normalize_path_copy 'dir/.')" = 'dir/'
ok 14 - normalize path: dir/. => dir/

expecting success: test "$(test-path-utils normalize_path_copy 'dir///./')" = 'dir/'
ok 15 - normalize path: dir///./ => dir/

expecting success: test "$(test-path-utils normalize_path_copy 'dir//sub/..')" = 'dir/'
ok 16 - normalize path: dir//sub/.. => dir/

expecting success: test "$(test-path-utils normalize_path_copy 'dir/sub/../')" = 'dir/'
ok 17 - normalize path: dir/sub/../ => dir/

expecting success: test "$(test-path-utils normalize_path_copy 'dir/sub/../.')" = 'dir/'
ok 18 - normalize path: dir/sub/../. => dir/

expecting success: test "$(test-path-utils normalize_path_copy 'dir/s1/../s2/')" = 'dir/s2/'
ok 19 - normalize path: dir/s1/../s2/ => dir/s2/

expecting success: test "$(test-path-utils normalize_path_copy 'd1/s1///s2/..//../s3/')" = 'd1/s3/'
ok 20 - normalize path: d1/s1///s2/..//../s3/ => d1/s3/

expecting success: test "$(test-path-utils normalize_path_copy 'd1/s1//../s2/../../d2')" = 'd2'
ok 21 - normalize path: d1/s1//../s2/../../d2 => d2

expecting success: test "$(test-path-utils normalize_path_copy 'd1/.../d2')" = 'd1/.../d2'
ok 22 - normalize path: d1/.../d2 => d1/.../d2

expecting success: test "$(test-path-utils normalize_path_copy 'd1/..././../d2')" = 'd1/d2'
ok 23 - normalize path: d1/..././../d2 => d1/d2

expecting success: test "$(test-path-utils normalize_path_copy '/')" = '/'
ok 24 - normalize path: / => /

expecting success: test "$(test-path-utils normalize_path_copy '//')" = '/'
ok 25 - normalize path: // => /

expecting success: test "$(test-path-utils normalize_path_copy '///')" = '/'
ok 26 - normalize path: /// => /

expecting success: test "$(test-path-utils normalize_path_copy '/.')" = '/'
ok 27 - normalize path: /. => /

expecting success: test "$(test-path-utils normalize_path_copy '/./')" = '/'
ok 28 - normalize path: /./ => /

expecting success: test "$(test-path-utils normalize_path_copy '/./..')" = '++failed++'
ok 29 - normalize path: /./.. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy '/../.')" = '++failed++'
ok 30 - normalize path: /../. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy '/./.././/')" = '++failed++'
ok 31 - normalize path: /./../.// => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy '/dir/..')" = '/'
ok 32 - normalize path: /dir/.. => /

expecting success: test "$(test-path-utils normalize_path_copy '/dir/sub/../..')" = '/'
ok 33 - normalize path: /dir/sub/../.. => /

expecting success: test "$(test-path-utils normalize_path_copy '/dir/sub/../../..')" = '++failed++'
ok 34 - normalize path: /dir/sub/../../.. => ++failed++

expecting success: test "$(test-path-utils normalize_path_copy '/dir')" = '/dir'
ok 35 - normalize path: /dir => /dir

expecting success: test "$(test-path-utils normalize_path_copy '/dir//')" = '/dir/'
ok 36 - normalize path: /dir// => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '/./dir')" = '/dir'
ok 37 - normalize path: /./dir => /dir

expecting success: test "$(test-path-utils normalize_path_copy '/dir/.')" = '/dir/'
ok 38 - normalize path: /dir/. => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '/dir///./')" = '/dir/'
ok 39 - normalize path: /dir///./ => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '/dir//sub/..')" = '/dir/'
ok 40 - normalize path: /dir//sub/.. => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '/dir/sub/../')" = '/dir/'
ok 41 - normalize path: /dir/sub/../ => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '//dir/sub/../.')" = '/dir/'
ok 42 - normalize path: //dir/sub/../. => /dir/

expecting success: test "$(test-path-utils normalize_path_copy '/dir/s1/../s2/')" = '/dir/s2/'
ok 43 - normalize path: /dir/s1/../s2/ => /dir/s2/

expecting success: test "$(test-path-utils normalize_path_copy '/d1/s1///s2/..//../s3/')" = '/d1/s3/'
ok 44 - normalize path: /d1/s1///s2/..//../s3/ => /d1/s3/

expecting success: test "$(test-path-utils normalize_path_copy '/d1/s1//../s2/../../d2')" = '/d2'
ok 45 - normalize path: /d1/s1//../s2/../../d2 => /d2

expecting success: test "$(test-path-utils normalize_path_copy '/d1/.../d2')" = '/d1/.../d2'
ok 46 - normalize path: /d1/.../d2 => /d1/.../d2

expecting success: test "$(test-path-utils normalize_path_copy '/d1/..././../d2')" = '/d1/d2'
ok 47 - normalize path: /d1/..././../d2 => /d1/d2

expecting success: actual=$(test-path-utils longest_ancestor_length '/' '') &&
	 test "$actual" = '-1'
ok 48 - longest ancestor: /  => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/' '/') &&
	 test "$actual" = '-1'
ok 49 - longest ancestor: / / => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '') &&
	 test "$actual" = '-1'
ok 50 - longest ancestor: /foo  => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' ':') &&
	 test "$actual" = '-1'
ok 51 - longest ancestor: /foo : => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '::.') &&
	 test "$actual" = '-1'
ok 52 - longest ancestor: /foo ::. => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '::..::') &&
	 test "$actual" = '-1'
ok 53 - longest ancestor: /foo ::..:: => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/') &&
	 test "$actual" = '0'
ok 54 - longest ancestor: /foo / => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/fo') &&
	 test "$actual" = '-1'
ok 55 - longest ancestor: /foo /fo => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo') &&
	 test "$actual" = '-1'
ok 56 - longest ancestor: /foo /foo => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo/') &&
	 test "$actual" = '-1'
ok 57 - longest ancestor: /foo /foo/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/bar') &&
	 test "$actual" = '-1'
ok 58 - longest ancestor: /foo /bar => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/bar/') &&
	 test "$actual" = '-1'
ok 59 - longest ancestor: /foo /bar/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo/bar') &&
	 test "$actual" = '-1'
ok 60 - longest ancestor: /foo /foo/bar => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo:/bar/') &&
	 test "$actual" = '-1'
ok 61 - longest ancestor: /foo /foo:/bar/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo/:/bar/') &&
	 test "$actual" = '-1'
ok 62 - longest ancestor: /foo /foo/:/bar/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo::/bar/') &&
	 test "$actual" = '-1'
ok 63 - longest ancestor: /foo /foo::/bar/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/:/foo:/bar/') &&
	 test "$actual" = '0'
ok 64 - longest ancestor: /foo /:/foo:/bar/ => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/foo:/:/bar/') &&
	 test "$actual" = '0'
ok 65 - longest ancestor: /foo /foo:/:/bar/ => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo' '/:/bar/:/foo') &&
	 test "$actual" = '0'
ok 66 - longest ancestor: /foo /:/bar/:/foo => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '') &&
	 test "$actual" = '-1'
ok 67 - longest ancestor: /foo/bar  => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/') &&
	 test "$actual" = '0'
ok 68 - longest ancestor: /foo/bar / => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/fo') &&
	 test "$actual" = '-1'
ok 69 - longest ancestor: /foo/bar /fo => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' 'foo') &&
	 test "$actual" = '-1'
ok 70 - longest ancestor: /foo/bar foo => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo') &&
	 test "$actual" = '4'
ok 71 - longest ancestor: /foo/bar /foo => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo/') &&
	 test "$actual" = '4'
ok 72 - longest ancestor: /foo/bar /foo/ => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo/ba') &&
	 test "$actual" = '-1'
ok 73 - longest ancestor: /foo/bar /foo/ba => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/:/fo') &&
	 test "$actual" = '0'
ok 74 - longest ancestor: /foo/bar /:/fo => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo:/foo/ba') &&
	 test "$actual" = '4'
ok 75 - longest ancestor: /foo/bar /foo:/foo/ba => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/bar') &&
	 test "$actual" = '-1'
ok 76 - longest ancestor: /foo/bar /bar => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/bar/') &&
	 test "$actual" = '-1'
ok 77 - longest ancestor: /foo/bar /bar/ => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/fo:') &&
	 test "$actual" = '-1'
ok 78 - longest ancestor: /foo/bar /fo: => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' ':/fo') &&
	 test "$actual" = '-1'
ok 79 - longest ancestor: /foo/bar :/fo => -1

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo:/bar/') &&
	 test "$actual" = '4'
ok 80 - longest ancestor: /foo/bar /foo:/bar/ => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/:/foo:/bar/') &&
	 test "$actual" = '4'
ok 81 - longest ancestor: /foo/bar /:/foo:/bar/ => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo:/:/bar/') &&
	 test "$actual" = '4'
ok 82 - longest ancestor: /foo/bar /foo:/:/bar/ => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/:/bar/:/fo') &&
	 test "$actual" = '0'
ok 83 - longest ancestor: /foo/bar /:/bar/:/fo => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/:/bar/') &&
	 test "$actual" = '0'
ok 84 - longest ancestor: /foo/bar /:/bar/ => 0

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '.:/foo/.') &&
	 test "$actual" = '4'
ok 85 - longest ancestor: /foo/bar .:/foo/. => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '.:/foo/.:.:') &&
	 test "$actual" = '4'
ok 86 - longest ancestor: /foo/bar .:/foo/.:.: => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '/foo/./:.:/bar') &&
	 test "$actual" = '4'
ok 87 - longest ancestor: /foo/bar /foo/./:.:/bar => 4

expecting success: actual=$(test-path-utils longest_ancestor_length '/foo/bar' '.:/bar') &&
	 test "$actual" = '-1'
ok 88 - longest ancestor: /foo/bar .:/bar => -1

expecting success: 
	test c:/msysgit = $(test-path-utils strip_path_suffix \
		c:/msysgit/libexec//git-core libexec/git-core)

ok 89 - strip_path_suffix

# passed all 89 test(s)
1..89
*** t0061-run-command.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0061-run-command/.git/
expecting success: 
	test-run-command start-command-ENOENT ./does-not-exist

error: cannot run ./does-not-exist: No such file or directory
ok 1 - start_command reports ENOENT

expecting success: 
	cat hello-script >hello.sh &&
	chmod +x hello.sh &&
	test-run-command run-command ./hello.sh >actual 2>err &&

	test_cmp hello-script actual &&
	test_cmp empty err

ok 2 - run_command can run a command

expecting success: 
	cat hello-script >hello.sh &&
	chmod -x hello.sh &&
	test_must_fail test-run-command run-command ./hello.sh 2>err &&

	grep "fatal: cannot exec.*hello.sh" err

fatal: cannot exec './hello.sh': Permission denied
ok 3 - run_command reports EACCES

expecting success: 
	mkdir local-command &&
	test_when_finished "chmod u+rwx local-command && rm -fr local-command" &&
	git config alias.nitfol "!echo frotz" &&
	chmod a-rx local-command &&
	(
		PATH=./local-command:$PATH &&
		git nitfol >actual
	) &&
	echo frotz >expect &&
	test_cmp expect actual

ok 4 - unreadable directory in PATH

# passed all 4 test(s)
1..4
*** t0070-fundamental.sh ***
Initialized empty Git repository in /«PKGBUILDDIR»/t/trash directory.t0070-fundamental/.git/
expecting success: 
	test-ctype

ok 1 - character classes (isspace, isalpha etc.)

expecting success: 
	test_must_fail test-mktemp doesnotexist/testXXXXXX 2>err &&
	grep "doesnotexist/test" err

fatal: Unable to create temporary file '/«PKGBUILDDIR»/t/trash directory.t0070-fundamental/doesnotexist/testLMkp7X': No such file or directory
ok 2 - mktemp to nonexistent directory prints filename

expecting success: 
	mkdir cannotwrite &&
	chmod -w cannotwrite &&
	test_when_finished "chmod +w cannotwrite" &&
	test_must_fail test-mktemp cannotwrite/testXXXXXX 2>err &&
	grep "cannotwrite/test" err

not ok - 3 mktemp to unwritable directory prints filename
#	
#		mkdir cannotwrite &&
#		chmod -w cannotwrite &&
#		test_when_finished "chmod +w cannotwrite" &&
#		test_must_fail test-mktemp cannotwrite/testXXXXXX 2>err &&
#		grep "cannotwrite/test" err
#	

# failed 1 among 3 test(s)
1..3
make[3]: *** [t0070-fundamental.sh] Error 1
make[3]: Leaving directory `/«PKGBUILDDIR»/t'
make[2]: *** [test] Error 2
make[2]: Leaving directory `/«PKGBUILDDIR»/t'
make[1]: *** [test] Error 2
make[1]: Leaving directory `/«PKGBUILDDIR»'
make: *** [build-arch-stamp] Error 2
dpkg-buildpackage: error: debian/rules build-arch gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20120623-0039

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Architecture: amd64
Build-Space: 97128
Build-Time: 78
Distribution: unstable
Fail-Stage: build
Install-Time: 9
Job: git_1:1.7.10.4-1
Package: git
Package-Time: 107
Source-Version: 1:1.7.10.4-1
Space: 97128
Status: attempted
Version: 1:1.7.10.4-1
────────────────────────────────────────────────────────────────────────────────
Finished at 20120623-0039
Build needed 00:01:47, 97128k disc space
DC-Status: Failed 107.404916s
DC-Time-Estimation: 107.404916 versus expected 5121 (r/m: 46.6793818264333 ; m: 107.404916)
